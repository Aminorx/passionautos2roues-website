import { supabaseServer } from '../server/supabase.ts';

async function setupStorage() {
  try {
    console.log('üöÄ Configuration du stockage Supabase...');
    
    // Cr√©er le bucket pour les images de v√©hicules s'il n'existe pas
    const { data: buckets, error: listError } = await supabaseServer.storage.listBuckets();
    
    if (listError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration des buckets:', listError);
      return;
    }
    
    console.log('üì¶ Buckets existants:', buckets.map(b => b.name));
    
    const vehicleImagesBucket = buckets.find(bucket => bucket.name === 'vehicle-images');
    
    if (!vehicleImagesBucket) {
      console.log('üî® Cr√©ation du bucket "vehicle-images"...');
      
      const { data, error } = await supabaseServer.storage.createBucket('vehicle-images', {
        public: true,
        allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp'],
        fileSizeLimit: 5 * 1024 * 1024, // 5MB
      });
      
      if (error) {
        console.error('‚ùå Erreur lors de la cr√©ation du bucket:', error);
        return;
      }
      
      console.log('‚úÖ Bucket "vehicle-images" cr√©√© avec succ√®s:', data);
    } else {
      console.log('‚úÖ Bucket "vehicle-images" existe d√©j√†');
    }
    
    // Configurer les politiques RLS (Row Level Security)
    console.log('üîê Configuration des politiques de s√©curit√©...');
    
    // Note: Les politiques RLS doivent √™tre configur√©es dans le dashboard Supabase
    // ou via SQL direct pour des raisons de s√©curit√©
    console.log('‚ÑπÔ∏è  Politiques de s√©curit√© √† configurer manuellement dans le dashboard Supabase:');
    console.log('   1. Permettre lecture publique (SELECT sur vehicle-images)');
    console.log('   2. Permettre upload authentifi√© (INSERT sur vehicle-images)');
    console.log('   3. Permettre suppression par propri√©taire (DELETE sur vehicle-images)');
    
    console.log('üéâ Configuration du stockage termin√©e !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration du stockage:', error);
  }
}

// Ex√©cuter si appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  setupStorage();
}

export { setupStorage };