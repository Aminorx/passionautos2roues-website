{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"netlify.toml":{"content":"[build]\n  command = \"npm run build\"\n  publish = \"dist/public\"\n\n[build.environment]\n  SECRETS_SCAN_OMIT_PATHS = \"dist/**\"\n\n[[redirects]]\n  from = \"/*\"\n  to = \"/index.html\"\n  status = 200\n","size_bytes":186},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        \"primary-bolt\": {\n          50: \"#E0F2F5\",\n          100: \"#B3DDE4\",\n          200: \"#86C8D3\",\n          500: \"#067D92\",\n          600: \"#056A7B\",\n          700: \"#045764\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2979},"test-supabase-connection.js":{"content":"import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;\n\nconsole.log('üîó Test connexion Supabase...');\nconsole.log('URL:', supabaseUrl);\nconsole.log('Key:', supabaseKey ? supabaseKey.substring(0, 20) + '...' : 'NON D√âFINIE');\n\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nasync function testConnection() {\n  try {\n    // 1. Cr√©er la table exemple\n    console.log('üìã Cr√©ation de la table exemple...');\n    const { data: createData, error: createError } = await supabase.rpc('exec_sql', {\n      query: `\n        CREATE TABLE IF NOT EXISTS exemple (\n          id SERIAL PRIMARY KEY,\n          nom VARCHAR(50),\n          prenom VARCHAR(50),\n          telephone VARCHAR(20)\n        );\n      `\n    });\n    \n    if (createError) {\n      console.log('‚ö†Ô∏è  Tentative alternative de cr√©ation...');\n      \n      // Tentative avec requ√™te directe\n      const { data: tables, error: tableError } = await supabase\n        .from('information_schema.tables')\n        .select('table_name')\n        .eq('table_name', 'exemple')\n        .limit(1);\n        \n      if (tableError) {\n        console.error('‚ùå Erreur v√©rification table:', tableError);\n      } else {\n        console.log('‚úÖ Tables existantes v√©rifi√©es');\n      }\n    }\n\n    // 2. Ins√©rer les donn√©es demand√©es\n    console.log('üìù Insertion des donn√©es de test...');\n    const { data: insertData, error: insertError } = await supabase\n      .from('exemple')\n      .insert([\n        {\n          id: 1,\n          nom: 'ennoury',\n          prenom: 'amine', \n          telephone: '0522708175'\n        }\n      ])\n      .select();\n\n    if (insertError) {\n      console.error('‚ùå Erreur insertion:', insertError);\n    } else {\n      console.log('‚úÖ DONN√âES INS√âR√âES AVEC SUCC√àS:', insertData);\n    }\n\n    // 3. V√©rifier les donn√©es\n    console.log('üîç V√©rification des donn√©es...');\n    const { data: selectData, error: selectError } = await supabase\n      .from('exemple')\n      .select('*')\n      .eq('id', 1);\n\n    if (selectError) {\n      console.error('‚ùå Erreur lecture:', selectError);\n    } else {\n      console.log('‚úÖ PREUVE CONNEXION SUPABASE - Donn√©es r√©cup√©r√©es:', selectData);\n    }\n\n  } catch (error) {\n    console.error('‚ùå ERREUR CONNEXION SUPABASE:', error);\n  }\n}\n\ntestConnection();","size_bytes":2400},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"app/globals.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Custom animations for the garage ad */\n@keyframes marquee {\n  0% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n}\n\n.animate-marquee {\n  animation: marquee 20s linear infinite;\n}\n\n/* Pulse animation for special elements */\n@keyframes pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);\n  }\n  50% {\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 30px rgba(255, 255, 255, 0.6);\n  }\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite;\n}","size_bytes":588},"app/layout.tsx":{"content":"import './globals.css';\nimport { ClientLayout } from '@/components/ClientLayout';\n\n// Les m√©tadonn√©es peuvent √™tre g√©r√©es avec un syst√®me autre que Next.js\n// Par exemple avec react-helmet ou dans le HTML directement\nconst pageTitle = 'Passion Auto2Roues - Marketplace Automobile';\nconst pageDescription = 'Plateforme de vente et achat de v√©hicules - voitures, motos, scooters et plus';\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"fr\">\n      <head>\n        <title>{pageTitle}</title>\n        <meta name=\"description\" content={pageDescription} />\n        <meta name=\"keywords\" content=\"voiture, moto, scooter, v√©hicule, occasion, vente, achat\" />\n      </head>\n      <body className=\"font-sans\">\n        <ClientLayout>\n          {children}\n        </ClientLayout>\n      </body>\n    </html>\n  );\n}","size_bytes":875},"app/page.tsx":{"content":"import { useState } from \"react\";\nimport { Header } from \"@/components/Header\";\nimport { Hero } from \"@/components/client-components/Hero\";\nimport { CategorySection } from \"@/components/client-components/CategorySection\";\nimport { VehicleListings } from \"@/components/client-components/VehicleListings\";\nimport { Footer } from \"@/components/client-components/Footer\";\n\nexport default function HomePage() {\n  const [currentView, setCurrentView] = useState('home');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header \n        currentView={currentView}\n        setCurrentView={setCurrentView}\n        mobileMenuOpen={mobileMenuOpen}\n        setMobileMenuOpen={setMobileMenuOpen}\n      />\n      <main>\n        <Hero />\n        <CategorySection />\n        <VehicleListings />\n      </main>\n      <Footer />\n    </div>\n  );\n}","size_bytes":922},"components/ClientLayout.tsx":{"content":"import React from 'react';\nimport { AppContextProvider } from '@/contexts/AppContext';\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ThemeProvider } from '@/components/theme-provider';\nimport { Toaster } from '@/components/ui/toaster';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nexport function ClientLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider attribute=\"class\" defaultTheme=\"light\" enableSystem>\n        <AuthProvider>\n          <AppContextProvider>\n            {children}\n            <Toaster />\n          </AppContextProvider>\n        </AuthProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}","size_bytes":920},"components/Header.tsx":{"content":"import React, { useState } from 'react';\nimport { Search, Bell, Heart, MessageCircle, User, Menu, X, LogIn } from 'lucide-react';\n// Comment√© car nous n'utilisons plus next/navigation ou react-router-dom\n// import { useNavigate } from 'react-router-dom';\nimport { useApp } from '@/contexts/AppContext';\nimport { useAuth } from '@/hooks/useAuth';\nimport { AuthModal } from './client-components/auth/AuthModal';\nimport { UserMenu } from './client-components/auth/UserMenu';\n\ninterface HeaderProps {\n  currentView: string;\n  setCurrentView: (view: string) => void;\n  mobileMenuOpen: boolean;\n  setMobileMenuOpen: (open: boolean) => void;\n  setDashboardTab?: (tab: string) => void;\n  onSearch?: (query: string) => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ \n  currentView, \n  setCurrentView, \n  mobileMenuOpen, \n  setMobileMenuOpen,\n  setDashboardTab,\n  onSearch \n}) => {\n  // const navigate = useNavigate();\n  const { setSearchFilters, setSelectedVehicle } = useApp();\n  const { user, dbUser, isAuthenticated, isLoading } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState('vehicles');\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [authMode, setAuthMode] = useState<'signin' | 'signup'>('signin');\n\n  const handleAuthClick = (mode: 'signin' | 'signup') => {\n    setAuthMode(mode);\n    setShowAuthModal(true);\n    setMobileMenuOpen(false);\n  };\n\n  const handleNavClick = (view: string) => {\n    setActiveCategory('');\n    setSelectedVehicle?.(null);\n    setCurrentView(view);\n    setMobileMenuOpen(false);\n    setOpenDropdown(null);\n  };\n\n  const handleCreateListingClick = () => {\n    setActiveCategory('');\n    setSelectedVehicle?.(null);\n    if (isAuthenticated) {\n      // Utiliser le mode de navigation de votre application\n      // Par exemple avec setCurrentView si c'est ainsi que vous naviguez\n      setCurrentView('create-listing');\n    } else {\n      setAuthMode('signin');\n      setShowAuthModal(true);\n    }\n    setMobileMenuOpen(false);\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 w-full bg-gradient-to-r from-teal-600 to-teal-700 shadow-lg\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div \n            className=\"flex items-center cursor-pointer transition-transform hover:scale-105\"\n            onClick={() => handleNavClick('home')}\n          >\n            <img\n              src=\"/logo-transparent_1753108744744.png\"\n              alt=\"Passion Auto2Roues\"\n              className=\"h-10 w-auto\"\n              loading=\"eager\"\n            />\n          </div>\n\n          {/* Search Bar - Desktop */}\n          <div className=\"hidden md:flex flex-1 max-w-2xl mx-8\">\n            <div className=\"relative w-full\">\n              <input\n                type=\"text\"\n                placeholder=\"Rechercher un v√©hicule, une marque...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-4 py-2 pr-12 rounded-full border-2 border-white/20 bg-white/10 text-white placeholder-white/70 focus:outline-none focus:border-white/40 focus:bg-white/20 transition-all\"\n              />\n              <button \n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 p-2 text-white/70 hover:text-white transition-colors\"\n                onClick={() => onSearch?.(searchTerm)}\n              >\n                <Search size={20} />\n              </button>\n            </div>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden lg:flex items-center space-x-6\">\n            <button\n              onClick={handleCreateListingClick}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-full font-semibold transition-colors shadow-lg\"\n            >\n              D√©poser une annonce\n            </button>\n\n            {isAuthenticated ? (\n              <div className=\"flex items-center space-x-4\">\n                <button className=\"text-white/80 hover:text-white transition-colors\">\n                  <Bell size={20} />\n                </button>\n                <button className=\"text-white/80 hover:text-white transition-colors\">\n                  <Heart size={20} />\n                </button>\n                <button className=\"text-white/80 hover:text-white transition-colors\">\n                  <MessageCircle size={20} />\n                </button>\n                <UserMenu \n                  onNavigate={(path) => handleNavClick(path)}\n                  onDashboardNavigate={(tab) => setDashboardTab?.(tab)}\n                />\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-3\">\n                <button\n                  onClick={() => handleAuthClick('signin')}\n                  className=\"text-white/80 hover:text-white transition-colors font-medium\"\n                >\n                  Se connecter\n                </button>\n                <button\n                  onClick={() => handleAuthClick('signup')}\n                  className=\"bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-full font-medium transition-all\"\n                >\n                  S'inscrire\n                </button>\n              </div>\n            )}\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <button\n            className=\"lg:hidden text-white p-2\"\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n          >\n            {mobileMenuOpen ? <X size={24} /> : <Menu size={24} />}\n          </button>\n        </div>\n      </div>\n\n      {/* Auth Modal */}\n      {showAuthModal && (\n        <AuthModal\n          isOpen={showAuthModal}\n          onClose={() => setShowAuthModal(false)}\n          defaultTab={authMode}\n        />\n      )}\n    </header>\n  );\n};\n","size_bytes":5999},"components/HeaderNext.tsx":{"content":"\"use client\";\n\nimport React, { useState } from 'react';\nimport { Search, Bell, Heart, MessageCircle, User, Menu, X, LogIn } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useApp } from '@/contexts/AppContext';\nimport { useAuth } from '@/hooks/useAuth';\nimport { AuthModal } from './client-components/auth/AuthModal';\nimport { UserMenu } from './client-components/auth/UserMenu';\nimport Image from 'next/image';\n\ninterface HeaderProps {\n  currentView: string;\n  setCurrentView: (view: string) => void;\n  mobileMenuOpen: boolean;\n  setMobileMenuOpen: (open: boolean) => void;\n  setDashboardTab?: (tab: string) => void;\n  onSearch?: (query: string) => void;\n}\n\nexport const HeaderNext: React.FC<HeaderProps> = ({ \n  currentView, \n  setCurrentView, \n  mobileMenuOpen, \n  setMobileMenuOpen,\n  setDashboardTab,\n  onSearch \n}) => {\n  const router = useRouter();\n  const { setSearchFilters, setSelectedVehicle } = useApp();\n  const { user, dbUser, isAuthenticated, isLoading } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState('vehicles');\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [authMode, setAuthMode] = useState<'signin' | 'signup'>('signin');\n\n  const handleAuthClick = (mode: 'signin' | 'signup') => {\n    setAuthMode(mode);\n    setShowAuthModal(true);\n    setMobileMenuOpen(false);\n  };\n\n  const handleNavClick = (view: string) => {\n    setActiveCategory('');\n    setSelectedVehicle?.(null);\n    setCurrentView(view);\n    setMobileMenuOpen(false);\n    setOpenDropdown(null);\n  };\n\n  const handleCreateListingClick = () => {\n    setActiveCategory('');\n    setSelectedVehicle?.(null);\n    if (isAuthenticated) {\n      router.push('/create-listing');\n    } else {\n      setAuthMode('signin');\n      setShowAuthModal(true);\n    }\n    setMobileMenuOpen(false);\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 w-full bg-gradient-to-r from-teal-600 to-teal-700 shadow-lg\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div \n            className=\"flex items-center cursor-pointer transition-transform hover:scale-105\"\n            onClick={() => handleNavClick('home')}\n          >\n            <Image\n              src=\"/logo-transparent_1753108744744.png\"\n              alt=\"Passion Auto2Roues\"\n              width={120}\n              height={40}\n              className=\"h-10 w-auto\"\n              priority\n            />\n          </div>\n\n          {/* Search Bar - Desktop */}\n          <div className=\"hidden md:flex flex-1 max-w-2xl mx-8\">\n            <div className=\"relative w-full\">\n              <input\n                type=\"text\"\n                placeholder=\"Rechercher un v√©hicule, une marque...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-4 py-2 pr-12 rounded-full border-2 border-white/20 bg-white/10 text-white placeholder-white/70 focus:outline-none focus:border-white/40 focus:bg-white/20 transition-all\"\n              />\n              <button \n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 p-2 text-white/70 hover:text-white transition-colors\"\n                onClick={() => onSearch?.(searchTerm)}\n              >\n                <Search size={20} />\n              </button>\n            </div>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden lg:flex items-center space-x-6\">\n            <button\n              onClick={handleCreateListingClick}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-full font-semibold transition-colors shadow-lg\"\n            >\n              D√©poser une annonce\n            </button>\n\n            {isAuthenticated ? (\n              <div className=\"flex items-center space-x-4\">\n                <button className=\"text-white/80 hover:text-white transition-colors\">\n                  <Bell size={20} />\n                </button>\n                <button className=\"text-white/80 hover:text-white transition-colors\">\n                  <Heart size={20} />\n                </button>\n                <button className=\"text-white/80 hover:text-white transition-colors\">\n                  <MessageCircle size={20} />\n                </button>\n                <UserMenu \n                  dbUser={dbUser} \n                  onDashboardClick={() => handleNavClick('dashboard')}\n                  onProfileClick={() => handleNavClick('profile')}\n                />\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-3\">\n                <button\n                  onClick={() => handleAuthClick('signin')}\n                  className=\"text-white/80 hover:text-white transition-colors font-medium\"\n                >\n                  Se connecter\n                </button>\n                <button\n                  onClick={() => handleAuthClick('signup')}\n                  className=\"bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-full font-medium transition-all\"\n                >\n                  S'inscrire\n                </button>\n              </div>\n            )}\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <button\n            className=\"lg:hidden text-white p-2\"\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n          >\n            {mobileMenuOpen ? <X size={24} /> : <Menu size={24} />}\n          </button>\n        </div>\n      </div>\n\n      {/* Auth Modal */}\n      {showAuthModal && (\n        <AuthModal\n          mode={authMode}\n          onClose={() => setShowAuthModal(false)}\n          onSwitchMode={(mode) => setAuthMode(mode)}\n        />\n      )}\n    </header>\n  );\n};","size_bytes":5924},"components/custom-theme-provider.tsx":{"content":"import * as React from \"react\";\n\ntype Theme = \"dark\" | \"light\" | \"system\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n  attribute?: string;\n  enableSystem?: boolean;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = React.createContext<ThemeProviderState>(initialState);\n\nexport function CustomThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"vite-ui-theme\",\n  attribute = \"data-theme\",\n  enableSystem = true,\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = React.useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  React.useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove(\"light\", \"dark\");\n\n    if (theme === \"system\" && enableSystem) {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\";\n\n      root.classList.add(systemTheme);\n      root.setAttribute(attribute, systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n    root.setAttribute(attribute, theme);\n  }, [theme, attribute, enableSystem]);\n\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, theme);\n  }, [theme, storageKey]);\n\n  const value = React.useMemo(\n    () => ({\n      theme,\n      setTheme: (theme: Theme) => {\n        setTheme(theme);\n      },\n    }),\n    [theme]\n  );\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = React.useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n","size_bytes":1931},"components/theme-provider.tsx":{"content":"import * as React from \"react\";\nimport { CustomThemeProvider } from \"./custom-theme-provider\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: \"dark\" | \"light\" | \"system\";\n  storageKey?: string;\n  attribute?: string;\n  enableSystem?: boolean;\n};\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <CustomThemeProvider {...props}>{children}</CustomThemeProvider>;\n}","size_bytes":426},"contexts/AppContext.tsx":{"content":"import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, Vehicle, Message, SearchFilters } from '../types';\n\ninterface AppContextType {\n  currentUser: User | null;\n  setCurrentUser: (user: User | null) => void;\n  vehicles: Vehicle[];\n  setVehicles: (vehicles: Vehicle[]) => void;\n  selectedVehicle: Vehicle | null;\n  setSelectedVehicle: (vehicle: Vehicle | null) => void;\n  searchFilters: SearchFilters;\n  setSearchFilters: (filters: SearchFilters) => void;\n  filteredVehicles: Vehicle[];\n  messages: Message[];\n  setMessages: (messages: Message[]) => void;\n  isLoading: boolean;\n  setIsLoading: (loading: boolean) => void;\n  showAuthModal: boolean;\n  setShowAuthModal: (show: boolean) => void;\n  authMode: 'login' | 'register';\n  setAuthMode: (mode: 'login' | 'register') => void;\n  refreshVehicles: () => Promise<void>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\ninterface AppProviderProps {\n  children: ReactNode;\n}\n\n// Fetch vehicles from API\nconst fetchVehicles = async (): Promise<Vehicle[]> => {\n  try {\n    console.log('üîÑ Chargement des donn√©es depuis Supabase...');\n    // Add timestamp to prevent caching\n    const timestamp = new Date().getTime();\n    const response = await fetch(`/api/vehicles?t=${timestamp}`, {\n      cache: 'no-cache',\n      headers: {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const vehicles = await response.json();\n    console.log('‚úÖ CONFIRMATION SUPABASE: Donn√©es charg√©es:', vehicles.length, 'v√©hicules');\n    console.log('üìä PREUVE SUPABASE - Premiers v√©hicules:', vehicles.slice(0, 5).map((v: Vehicle) => ({ id: v.id, title: v.title })));\n    \n    // Test sp√©cifique pour v√©rifier les modifications\n    const modifiedVehicles = vehicles.filter((v: Vehicle) => v.title.includes('[SUPABASE]') || v.title.includes('[MODIFI√â]'));\n    console.log('üîç V√âHICULES MODIFI√âS TROUV√âS:', modifiedVehicles.map((v: Vehicle) => ({ id: v.id, title: v.title })));\n    return vehicles;\n  } catch (error) {\n    console.error('‚ùå ERREUR CRITIQUE - √âchec du chargement Supabase:', error);\n    console.error('‚ùå ATTENTION: Utilisation des donn√©es mock en fallback');\n    // Import dynamically to avoid circular dependency\n    const { mockVehicles } = await import('../utils/mockData');\n    console.error('‚ùå MOCK DATA LOADED - NOT FROM SUPABASE!');\n    return mockVehicles;\n  }\n};\n\nexport const AppProvider: React.FC<AppProviderProps> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\n  const [selectedVehicle, setSelectedVehicle] = useState<Vehicle | null>(null);\n  const [searchFilters, setSearchFilters] = useState<SearchFilters>({});\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [authMode, setAuthMode] = useState<'login' | 'register'>('login');\n\n  // Load vehicles on component mount\n  useEffect(() => {\n    const loadVehicles = async () => {\n      setIsLoading(true);\n      try {\n        const vehiclesData = await fetchVehicles();\n        setVehicles(vehiclesData);\n      } catch (error) {\n        console.error('‚ùå Impossible de charger les donn√©es Supabase');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadVehicles();\n  }, []);\n\n  // Function to manually refresh vehicles\n  const refreshVehicles = async () => {\n    setIsLoading(true);\n    try {\n      const vehiclesData = await fetchVehicles();\n      setVehicles(vehiclesData);\n    } catch (error) {\n      console.error('‚ùå Impossible de charger les donn√©es Supabase');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filter vehicles based on search criteria\n  const filteredVehicles = vehicles.filter(vehicle => {\n    // Handle category filtering with main categories and subcategories mapping\n    if (searchFilters.category) {\n      const categoryMap: { [key: string]: string[] } = {\n        'voiture-utilitaire': ['voiture', 'utilitaire', 'caravane', 'remorque'],\n        'moto-scooter-quad': ['moto', 'scooter', 'quad'],\n        'nautisme-sport-aerien': ['bateau', 'jetski', 'aerien'],\n        'services': ['reparation', 'remorquage', 'entretien', 'autre-service'],\n        'pieces': ['piece-voiture', 'piece-moto', 'autre-piece']\n      };\n      \n      // Check if it's a main category\n      if (categoryMap[searchFilters.category]) {\n        // Filter by subcategories\n        if (!categoryMap[searchFilters.category].includes(vehicle.category)) return false;\n      } else {\n        // Direct subcategory match\n        if (vehicle.category !== searchFilters.category) return false;\n      }\n    }\n    \n    // Handle subcategory filtering (refines the main category)\n    if (searchFilters.subcategory && vehicle.category !== searchFilters.subcategory) return false;\n    if (searchFilters.brand && vehicle.brand !== searchFilters.brand) return false;\n    if (searchFilters.model && vehicle.model.toLowerCase().includes(searchFilters.model.toLowerCase()) === false) return false;\n    if (searchFilters.yearFrom && vehicle.year < searchFilters.yearFrom) return false;\n    if (searchFilters.yearTo && vehicle.year > searchFilters.yearTo) return false;\n    if (searchFilters.mileageFrom && vehicle.mileage && vehicle.mileage < searchFilters.mileageFrom) return false;\n    if (searchFilters.mileageTo && vehicle.mileage && vehicle.mileage > searchFilters.mileageTo) return false;\n    if (searchFilters.priceFrom && vehicle.price < searchFilters.priceFrom) return false;\n    if (searchFilters.priceTo && vehicle.price > searchFilters.priceTo) return false;\n    if (searchFilters.fuelType && vehicle.fuelType !== searchFilters.fuelType) return false;\n    if (searchFilters.condition && vehicle.condition !== searchFilters.condition) return false;\n    if (searchFilters.location && vehicle.location.toLowerCase().includes(searchFilters.location.toLowerCase()) === false) return false;\n    if (searchFilters.searchTerm && vehicle.title.toLowerCase().includes(searchFilters.searchTerm.toLowerCase()) === false) return false;\n    return true;\n  }).sort((a, b) => {\n    // Premium listings first\n    if (a.isPremium && !b.isPremium) return -1;\n    if (!a.isPremium && b.isPremium) return 1;\n    \n    // Then sort by criteria\n    switch (searchFilters.sortBy) {\n      case 'price_asc':\n        return a.price - b.price;\n      case 'price_desc':\n        return b.price - a.price;\n      case 'mileage':\n        return (a.mileage || 0) - (b.mileage || 0);\n      default:\n        return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    }\n  });\n\n  return (\n    <AppContext.Provider value={{\n      currentUser,\n      setCurrentUser,\n      vehicles,\n      setVehicles,\n      selectedVehicle,\n      setSelectedVehicle,\n      searchFilters,\n      setSearchFilters,\n      filteredVehicles,\n      messages,\n      setMessages,\n      isLoading,\n      setIsLoading,\n      showAuthModal,\n      setShowAuthModal,\n      authMode,\n      setAuthMode,\n      refreshVehicles,\n    }}>\n      {children}\n    </AppContext.Provider>\n  );\n};","size_bytes":7519},"contexts/AuthContext.tsx":{"content":"import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { User as SupabaseUser, Session } from '@supabase/supabase-js'\nimport { supabase } from '../lib/supabase'\nimport { User } from '../types'\n\ninterface AuthContextType {\n  user: SupabaseUser | null\n  profile: User | null\n  session: Session | null\n  loading: boolean\n  signUp: (email: string, password: string, userData?: any) => Promise<{ error: any }>\n  signIn: (email: string, password: string) => Promise<{ error: any }>\n  signInWithOAuth: (provider: 'google' | 'apple' | 'github') => Promise<{ error: any }>\n  signInWithMagicLink: (email: string) => Promise<{ error: any }>\n  signOut: () => Promise<void>\n  updateProfile: (updates: Partial<User>) => Promise<{ error: any }>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<SupabaseUser | null>(null)\n  const [profile, setProfile] = useState<User | null>(null)\n  const [session, setSession] = useState<Session | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Get initial session\n    const getInitialSession = async () => {\n      const { data: { session }, error } = await supabase.auth.getSession()\n      \n      if (error) {\n        console.error('Error getting session:', error)\n      } else {\n        setSession(session)\n        setUser(session?.user ?? null)\n        \n        if (session?.user) {\n          await fetchProfile(session.user.id)\n        }\n      }\n      \n      setLoading(false)\n    }\n\n    getInitialSession()\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        console.log('Auth state changed:', event, session?.user?.id)\n        \n        setSession(session)\n        setUser(session?.user ?? null)\n        \n        if (session?.user) {\n          await fetchProfile(session.user.id)\n        } else {\n          setProfile(null)\n        }\n        \n        setLoading(false)\n      }\n    )\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  const fetchProfile = async (userId: string) => {\n    try {\n      const response = await fetch(`/api/users/${userId}`)\n      if (response.ok) {\n        const userProfile = await response.json()\n        setProfile(userProfile)\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error)\n    }\n  }\n\n  const signUp = async (email: string, password: string, userData?: any) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: userData\n      }\n    })\n\n    if (!error && data.user) {\n      // Create user profile\n      const profileData = {\n        id: data.user.id,\n        email: data.user.email!,\n        name: userData?.name || data.user.email!.split('@')[0],\n        type: userData?.type || 'individual',\n        verified: false,\n        emailVerified: false,\n      }\n\n      try {\n        await fetch('/api/users', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(profileData),\n        })\n      } catch (profileError) {\n        console.error('Error creating profile:', profileError)\n      }\n    }\n\n    return { error }\n  }\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    })\n    return { error }\n  }\n\n  const signInWithOAuth = async (provider: 'google' | 'apple' | 'github') => {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider,\n      options: {\n        redirectTo: `${window.location.origin}/auth/callback`\n      }\n    })\n    return { error }\n  }\n\n  const signInWithMagicLink = async (email: string) => {\n    const { error } = await supabase.auth.signInWithOtp({\n      email,\n      options: {\n        emailRedirectTo: `${window.location.origin}/auth/callback`\n      }\n    })\n    return { error }\n  }\n\n  const signOut = async () => {\n    await supabase.auth.signOut()\n    setProfile(null)\n  }\n\n  const updateProfile = async (updates: Partial<User>) => {\n    if (!user) return { error: 'No user logged in' }\n\n    try {\n      const response = await fetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      })\n\n      if (response.ok) {\n        const updatedProfile = await response.json()\n        setProfile(updatedProfile)\n        return { error: null }\n      } else {\n        return { error: 'Failed to update profile' }\n      }\n    } catch (error) {\n      return { error: 'Failed to update profile' }\n    }\n  }\n\n  const value = {\n    user,\n    profile,\n    session,\n    loading,\n    signUp,\n    signIn,\n    signInWithOAuth,\n    signInWithMagicLink,\n    signOut,\n    updateProfile\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}","size_bytes":5354},"hooks/use-toast.ts":{"content":"\"use client\";\n\nimport * as React from \"react\";\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };","size_bytes":3970},"hooks/useAuth.ts":{"content":"import { useState, useEffect } from 'react'\nimport { User, Session } from '@supabase/supabase-js'\nimport { supabase } from '@/lib/supabase'\nimport { User as DbUser } from '@shared/schema'\n\nexport interface AuthState {\n  user: User | null\n  session: Session | null\n  dbUser: DbUser | null\n  isLoading: boolean\n  isAuthenticated: boolean\n}\n\nexport function useAuth(): AuthState {\n  const [user, setUser] = useState<User | null>(null)\n  const [session, setSession] = useState<Session | null>(null)\n  const [dbUser, setDbUser] = useState<DbUser | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  // Function to fetch database user info by email\n  const fetchDbUser = async (authUser: User) => {\n    if (!authUser.email) return\n    \n    try {\n      const response = await fetch(`/api/users/by-email/${encodeURIComponent(authUser.email)}`)\n      if (response.ok) {\n        const userData = await response.json()\n        setDbUser(userData)\n        console.log('‚úÖ Utilisateur trouv√© dans BD:', userData.name, `(${userData.type})`)\n      } else {\n        console.log('‚ÑπÔ∏è Aucun utilisateur BD trouv√© pour:', authUser.email)\n        setDbUser(null)\n      }\n    } catch (error) {\n      console.error('Erreur r√©cup√©ration utilisateur BD:', error)\n      setDbUser(null)\n    }\n  }\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(async ({ data: { session } }) => {\n      setSession(session)\n      setUser(session?.user ?? null)\n      \n      if (session?.user) {\n        await fetchDbUser(session.user)\n      }\n      \n      setIsLoading(false)\n    })\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      setSession(session)\n      setUser(session?.user ?? null)\n      \n      if (session?.user) {\n        await fetchDbUser(session.user)\n      } else {\n        setDbUser(null)\n      }\n      \n      setIsLoading(false)\n    })\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  return {\n    user,\n    session,\n    dbUser,\n    isLoading,\n    isAuthenticated: !!user,\n  }\n}","size_bytes":2115},"lib/queryClient.ts":{"content":"import { QueryClient } from '@tanstack/react-query';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\n// Default fetcher for all queries\nconst defaultFetcher = async (url: string) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\n\nexport async function apiRequest(url: string, options: RequestInit = {}) {\n  const response = await fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  });\n\n  if (!response.ok) {\n    throw new Error(`API request failed: ${response.statusText}`);\n  }\n\n  return response.json();\n}","size_bytes":806},"lib/supabase.ts":{"content":"import { createClient } from '@supabase/supabase-js'\n\n// Supabase configuration\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || 'https://placeholder.supabase.co'\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || 'placeholder'\n\nif (!supabaseUrl || supabaseUrl === 'https://placeholder.supabase.co') {\n  console.warn('VITE_SUPABASE_URL not configured. Please add your Supabase URL.')\n}\n\nif (!supabaseAnonKey || supabaseAnonKey === 'placeholder') {\n  console.warn('VITE_SUPABASE_ANON_KEY not configured. Please add your Supabase anon key.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n})\n\n// Auth helper functions\nexport const signUp = async (email: string, password: string, userData?: any) => {\n  const { data, error } = await supabase.auth.signUp({\n    email,\n    password,\n    options: {\n      data: userData\n    }\n  })\n  return { data, error }\n}\n\nexport const signIn = async (email: string, password: string) => {\n  const { data, error } = await supabase.auth.signInWithPassword({\n    email,\n    password\n  })\n  return { data, error }\n}\n\nexport const signInWithOAuth = async (provider: 'google' | 'apple' | 'github') => {\n  const { data, error } = await supabase.auth.signInWithOAuth({\n    provider,\n    options: {\n      redirectTo: `${window.location.origin}/auth/callback`\n    }\n  })\n  return { data, error }\n}\n\nexport const signInWithMagicLink = async (email: string) => {\n  const { data, error } = await supabase.auth.signInWithOtp({\n    email,\n    options: {\n      emailRedirectTo: `${window.location.origin}/auth/callback`\n    }\n  })\n  return { data, error }\n}\n\nexport const signOut = async () => {\n  const { error } = await supabase.auth.signOut()\n  return { error }\n}\n\nexport const getCurrentUser = async () => {\n  const { data: { user }, error } = await supabase.auth.getUser()\n  return { user, error }\n}\n\nexport const getCurrentSession = async () => {\n  const { data: { session }, error } = await supabase.auth.getSession()\n  return { session, error }\n}","size_bytes":2115},"lib/utils.ts":{"content":"import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","size_bytes":168},"scripts/assign-all-to-demo.js":{"content":"// Script pour affecter toutes les annonces √† l'utilisateur demo@demo.com\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nif (!supabaseUrl || !supabaseServiceKey) {\n  console.error('‚ùå Variables Supabase manquantes');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function assignAllToDemoUser() {\n  const demoUserId = '3e4ab448-8958-4290-bda8-39466c90c36a';\n  const demoEmail = 'demo@demo.com';\n  \n  try {\n    console.log('üîÑ V√©rification utilisateur demo...');\n    \n    // V√©rifier si l'utilisateur demo existe\n    const { data: demoUser, error: userError } = await supabase\n      .from('users')\n      .select('*')\n      .eq('id', demoUserId)\n      .single();\n    \n    if (userError || !demoUser) {\n      console.log('üîß Cr√©ation utilisateur demo...');\n      const { error: createError } = await supabase\n        .from('users')\n        .insert({\n          id: demoUserId,\n          email: demoEmail,\n          name: 'DemoUser',\n          type: 'individual',\n          phone: '+33 1 23 45 67 89',\n          whatsapp: '+33 1 23 45 67 89',\n          city: 'Paris',\n          postal_code: '75001',\n          email_verified: true\n        });\n        \n      if (createError) {\n        console.error('‚ùå Erreur cr√©ation demo user:', createError);\n        return;\n      }\n      console.log('‚úÖ Utilisateur demo cr√©√©');\n    } else {\n      console.log('‚úÖ Utilisateur demo trouv√©:', demoUser.name);\n    }\n    \n    // Compter les annonces actuelles\n    const { count, error: countError } = await supabase\n      .from('annonces')\n      .select('*', { count: 'exact', head: true });\n    \n    if (countError) {\n      console.error('‚ùå Erreur comptage:', countError);\n      return;\n    }\n    \n    console.log(`üìä ${count} annonces √† r√©affecter...`);\n    \n    // Affecter toutes les annonces √† demo\n    const { data, error: updateError } = await supabase\n      .from('annonces')\n      .update({ user_id: demoUserId })\n      .neq('user_id', demoUserId); // Pour √©viter les mises √† jour inutiles\n    \n    if (updateError) {\n      console.error('‚ùå Erreur r√©affectation:', updateError);\n      return;\n    }\n    \n    // V√©rification finale\n    const { count: finalCount, error: finalError } = await supabase\n      .from('annonces')\n      .select('*', { count: 'exact', head: true })\n      .eq('user_id', demoUserId);\n      \n    if (finalError) {\n      console.error('‚ùå Erreur v√©rification:', finalError);\n      return;\n    }\n    \n    console.log(`‚úÖ ${finalCount} annonces maintenant affect√©es √† demo@demo.com`);\n    console.log('üéØ R√©affectation termin√©e avec succ√®s !');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur g√©n√©rale:', error);\n  }\n}\n\nassignAllToDemoUser();","size_bytes":2870},"scripts/clean-auth-system.js":{"content":"// Script de nettoyage complet du syst√®me d'authentification\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function cleanAuthSystem() {\n  console.log('üßπ PHASE 1 : Nettoyage complet du syst√®me d\\'authentification');\n  \n  try {\n    // 1. Nettoyer tous les utilisateurs sauf demo\n    console.log('üîÑ Suppression utilisateurs non-demo...');\n    const { error: deleteUsersError } = await supabase\n      .from('users')\n      .delete()\n      .neq('email', 'demo@demo.com');\n    \n    if (deleteUsersError) {\n      console.error('‚ùå Erreur suppression users:', deleteUsersError);\n    } else {\n      console.log('‚úÖ Utilisateurs non-demo supprim√©s');\n    }\n    \n    // 2. V√©rifier l'utilisateur demo\n    const { data: demoUser, error: demoError } = await supabase\n      .from('users')\n      .select('*')\n      .eq('email', 'demo@demo.com')\n      .single();\n    \n    if (demoError || !demoUser) {\n      console.log('üîß Recr√©ation utilisateur demo...');\n      const { error: createError } = await supabase\n        .from('users')\n        .insert({\n          id: '3e4ab448-8958-4290-bda8-39466c90c36a',\n          email: 'demo@demo.com',\n          name: 'DemoUser',\n          type: 'individual',\n          phone: '+33 1 23 45 67 89',\n          whatsapp: '+33 1 23 45 67 89',\n          city: 'Paris',\n          postal_code: '75001',\n          email_verified: true\n        });\n        \n      if (createError) {\n        console.error('‚ùå Erreur cr√©ation demo:', createError);\n      } else {\n        console.log('‚úÖ Utilisateur demo recr√©√©');\n      }\n    } else {\n      console.log('‚úÖ Utilisateur demo OK:', demoUser.name);\n    }\n    \n    // 3. Nettoyer les tables li√©es\n    console.log('üîÑ Nettoyage tables li√©es...');\n    \n    // Nettoyer wishlist\n    const { error: wishlistError } = await supabase\n      .from('wishlist')\n      .delete()\n      .neq('user_id', '3e4ab448-8958-4290-bda8-39466c90c36a');\n    \n    // Nettoyer saved_searches\n    const { error: savedSearchesError } = await supabase\n      .from('saved_searches')\n      .delete()\n      .neq('user_id', '3e4ab448-8958-4290-bda8-39466c90c36a');\n    \n    // Nettoyer messages (supprimer tous pour simplicit√©)\n    const { error: messagesError } = await supabase\n      .from('messages')\n      .delete()\n      .gte('id', '0'); // Supprimer tous les messages\n    \n    console.log('‚úÖ Tables li√©es nettoy√©es');\n    \n    // 4. Statistiques finales\n    const { count: usersCount } = await supabase\n      .from('users')\n      .select('*', { count: 'exact', head: true });\n    \n    const { count: annoncesCount } = await supabase\n      .from('annonces')\n      .select('*', { count: 'exact', head: true })\n      .eq('user_id', '3e4ab448-8958-4290-bda8-39466c90c36a');\n    \n    console.log('üìä √âTAT FINAL :');\n    console.log(`   üë§ Utilisateurs: ${usersCount} (demo uniquement)`);\n    console.log(`   üìù Annonces demo: ${annoncesCount}`);\n    console.log('üéØ Nettoyage termin√© avec succ√®s !');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur g√©n√©rale:', error);\n  }\n}\n\ncleanAuthSystem();","size_bytes":3266},"scripts/clean-messages.js":{"content":"import http from 'http';\n\nconst data = JSON.stringify({});\n\nconst options = {\n  hostname: 'localhost',\n  port: 5000,\n  path: '/api/messages-simple/clean-prefixes',\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Content-Length': data.length\n  }\n};\n\nconst req = http.request(options, (res) => {\n  console.log(`Status: ${res.statusCode}`);\n  \n  let responseData = '';\n  res.on('data', (chunk) => {\n    responseData += chunk;\n  });\n  \n  res.on('end', () => {\n    try {\n      const result = JSON.parse(responseData);\n      console.log('‚úÖ Nettoyage termin√©:', result);\n    } catch (e) {\n      console.log('Response:', responseData);\n    }\n  });\n});\n\nreq.on('error', (e) => {\n  console.error('‚ùå Erreur:', e.message);\n});\n\nreq.write(data);\nreq.end();","size_bytes":776},"scripts/create-bucket.js":{"content":"import { supabaseServer } from '../server/supabase.js';\n\nasync function createBucket() {\n  console.log('üöÄ Cr√©ation du bucket vehicle-images...');\n  \n  try {\n    // V√©rifier si le bucket existe d√©j√†\n    const { data: buckets, error: listError } = await supabaseServer.storage.listBuckets();\n    \n    if (listError) {\n      console.error('‚ùå Erreur lors de la r√©cup√©ration des buckets:', listError);\n      return;\n    }\n    \n    console.log('üì¶ Buckets existants:', buckets?.map(b => b.name) || []);\n    \n    const vehicleImagesBucket = buckets?.find(bucket => bucket.name === 'vehicle-images');\n    \n    if (vehicleImagesBucket) {\n      console.log('‚úÖ Le bucket \"vehicle-images\" existe d√©j√†');\n      return;\n    }\n    \n    // Cr√©er le bucket\n    const { data, error } = await supabaseServer.storage.createBucket('vehicle-images', {\n      public: true,\n      allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp'],\n      fileSizeLimit: 5 * 1024 * 1024, // 5MB\n    });\n    \n    if (error) {\n      console.error('‚ùå Erreur lors de la cr√©ation du bucket:', error);\n      return;\n    }\n    \n    console.log('‚úÖ Bucket \"vehicle-images\" cr√©√© avec succ√®s');\n    console.log('üìã D√©tails:', data);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n  }\n}\n\ncreateBucket().then(() => process.exit(0)).catch(err => {\n  console.error(err);\n  process.exit(1);\n});","size_bytes":1393},"scripts/create-wishlist-table.js":{"content":"import { createClient } from '@supabase/supabase-js';\n\n// Configuration Supabase\nconst supabaseUrl = 'https://kfnvjkvhyfaghmvvhjls.supabase.co';\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nif (!supabaseServiceKey) {\n  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY non disponible');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n});\n\nasync function createWishlistTable() {\n  console.log('üîÑ Cr√©ation de la nouvelle table wishlist...');\n  \n  try {\n    // Cr√©er la table wishlist avec structure optimis√©e\n    const createTableQuery = `\n      -- Table wishlist pour la gestion des favoris\n      CREATE TABLE public.wishlist (\n        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n        user_id UUID NOT NULL,\n        vehicle_id INTEGER NOT NULL,\n        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n        CONSTRAINT wishlist_user_vehicle_unique UNIQUE (user_id, vehicle_id),\n        CONSTRAINT fk_wishlist_user FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE\n      );\n\n      -- Index pour optimiser les performances\n      CREATE INDEX idx_wishlist_user_id ON public.wishlist(user_id);\n      CREATE INDEX idx_wishlist_vehicle_id ON public.wishlist(vehicle_id);\n      CREATE INDEX idx_wishlist_created_at ON public.wishlist(created_at DESC);\n\n      -- RLS (Row Level Security) pour s√©curiser l'acc√®s\n      ALTER TABLE public.wishlist ENABLE ROW LEVEL SECURITY;\n\n      -- Politique RLS : les utilisateurs ne peuvent acc√©der qu'√† leurs propres favoris\n      CREATE POLICY \"Users can manage their own wishlist\" ON public.wishlist\n        FOR ALL USING (auth.uid()::text = user_id::text);\n\n      -- Donner les permissions n√©cessaires\n      GRANT ALL ON public.wishlist TO authenticated;\n      GRANT ALL ON public.wishlist TO service_role;\n\n      -- Fonction trigger pour mettre √† jour updated_at\n      CREATE OR REPLACE FUNCTION update_wishlist_updated_at()\n      RETURNS TRIGGER AS $$\n      BEGIN\n        NEW.updated_at = NOW();\n        RETURN NEW;\n      END;\n      $$ LANGUAGE plpgsql;\n\n      -- Trigger pour auto-update de updated_at\n      CREATE TRIGGER trigger_update_wishlist_updated_at\n        BEFORE UPDATE ON public.wishlist\n        FOR EACH ROW\n        EXECUTE FUNCTION update_wishlist_updated_at();\n    `;\n\n    // Ex√©cuter via requ√™te SQL directe\n    const { data, error } = await supabase.rpc('exec_sql', {\n      sql: createTableQuery\n    });\n\n    if (error) {\n      console.error('‚ùå Erreur cr√©ation table:', error);\n      \n      // Essayer m√©thode alternative si rpc √©choue\n      console.log('üîÑ Tentative alternative...');\n      const { error: altError } = await supabase\n        .from('_sql')\n        .insert({ query: createTableQuery });\n        \n      if (altError) {\n        console.error('‚ùå Erreur m√©thode alternative:', altError);\n      }\n    } else {\n      console.log('‚úÖ Table wishlist cr√©√©e avec succ√®s');\n    }\n\n    // V√©rifier que la table existe et est accessible\n    console.log('üîç V√©rification de la table...');\n    const { data: testData, error: testError } = await supabase\n      .from('wishlist')\n      .select('id')\n      .limit(1);\n      \n    if (testError) {\n      console.error('‚ùå Table non accessible:', testError);\n    } else {\n      console.log('‚úÖ Table wishlist v√©rifi√©e et accessible');\n      console.log('üìä Structure pr√™te pour production');\n    }\n\n    // Test d'insertion pour valider la structure\n    console.log('üß™ Test d\\'insertion...');\n    const testUserId = '2158eafa-0e52-44f3-b894-1abb82a39d77';\n    const testVehicleId = 999; // ID test qui n'existe pas pour √©viter conflits\n    \n    const { data: insertData, error: insertError } = await supabase\n      .from('wishlist')\n      .insert({\n        user_id: testUserId,\n        vehicle_id: testVehicleId\n      })\n      .select()\n      .single();\n      \n    if (insertError) {\n      console.error('‚ùå Erreur test insertion:', insertError);\n    } else {\n      console.log('‚úÖ Test insertion r√©ussi:', insertData);\n      \n      // Nettoyer le test\n      await supabase\n        .from('wishlist')\n        .delete()\n        .eq('id', insertData.id);\n      console.log('üßπ Test nettoy√©');\n    }\n\n  } catch (error) {\n    console.error('‚ùå Erreur compl√®te:', error);\n  }\n}\n\ncreateWishlistTable();","size_bytes":4452},"scripts/direct-clean.ts":{"content":"import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://nbjwbhvykpyogtccekag.supabase.co';\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nif (!supabaseServiceKey) {\n  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY requis');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function cleanMessages() {\n  console.log('üßπ Nettoyage des messages avec pr√©fixes...');\n  \n  try {\n    // R√©cup√©rer les messages avec pr√©fixes\n    const { data: messages, error } = await supabase\n      .from('messages')\n      .select('id, content')\n      .like('content', '%[V√©hicule ID:%');\n      \n    if (error) {\n      console.error('‚ùå Erreur:', error);\n      return;\n    }\n    \n    console.log(`üìù Messages trouv√©s: ${messages?.length || 0}`);\n    \n    if (messages && messages.length > 0) {\n      for (const message of messages) {\n        const cleanContent = message.content.replace(/^\\[V√©hicule ID: \\d+\\]\\s*/, '');\n        \n        await supabase\n          .from('messages')\n          .update({ content: cleanContent })\n          .eq('id', message.id);\n          \n        console.log(`‚úÖ Nettoy√©: \"${message.content}\" ‚Üí \"${cleanContent}\"`);\n      }\n    }\n    \n    console.log('üéâ Nettoyage termin√©!');\n    \n  } catch (err) {\n    console.error('‚ùå Erreur:', err);\n  }\n}\n\ncleanMessages();","size_bytes":1410},"scripts/fix-admin-auth.js":{"content":"// Script pour corriger l'authentification admin\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function fixAdminAuth() {\n  console.log('üîß Correction authentification admin...');\n  \n  try {\n    // 1. Supprimer l'ancien admin de Supabase Auth\n    console.log('üóëÔ∏è Suppression ancien admin...');\n    const { data: oldAdminAuth } = await supabase.auth.admin.listUsers();\n    const oldAdmin = oldAdminAuth.users.find(u => u.email === 'admin@auto2roues.com');\n    \n    if (oldAdmin) {\n      await supabase.auth.admin.deleteUser(oldAdmin.id);\n      console.log('‚úÖ Ancien admin supprim√© de Auth');\n    }\n    \n    // 2. V√©rifier si le nouveau admin existe dans Auth\n    const { data: newAdminAuth } = await supabase.auth.admin.listUsers();\n    const newAdmin = newAdminAuth.users.find(u => u.email === 'admin@passionauto2roues.com');\n    \n    if (!newAdmin) {\n      console.log('üîÑ Cr√©ation nouveau admin dans Auth...');\n      const { data: createdAdmin, error: createError } = await supabase.auth.admin.createUser({\n        email: 'admin@passionauto2roues.com',\n        password: 'Admin123456!',\n        email_confirm: true,\n        user_metadata: {\n          full_name: 'Admin PassionAuto2Roues',\n          phone: '+33 1 98 76 54 32'\n        }\n      });\n      \n      if (createError) {\n        console.error('‚ùå Erreur cr√©ation admin Auth:', createError);\n        return;\n      }\n      \n      console.log('‚úÖ Nouveau admin cr√©√© dans Auth');\n      \n      // Mettre √† jour le profil avec le bon ID\n      if (createdAdmin?.user) {\n        const { error: updateError } = await supabase\n          .from('users')\n          .update({ id: createdAdmin.user.id })\n          .eq('email', 'admin@passionauto2roues.com');\n          \n        if (updateError) {\n          console.error('‚ùå Erreur mise √† jour profil admin:', updateError);\n        } else {\n          console.log('‚úÖ Profil admin mis √† jour');\n        }\n      }\n    } else {\n      console.log('‚úÖ Nouveau admin existe d√©j√† dans Auth');\n    }\n    \n    // 3. V√©rification finale\n    const { data: finalUsers } = await supabase.auth.admin.listUsers();\n    const admins = finalUsers.users.filter(u => u.email?.includes('admin'));\n    \n    console.log('üìä Admins dans Auth:');\n    admins.forEach(admin => {\n      console.log(`   ‚Ä¢ ${admin.email} (${admin.id})`);\n    });\n    \n    // V√©rifier table users\n    const { data: dbAdmins } = await supabase\n      .from('users')\n      .select('email, name, type')\n      .eq('type', 'professional');\n      \n    console.log('üìä Admins dans DB:');\n    dbAdmins?.forEach(admin => {\n      console.log(`   ‚Ä¢ ${admin.email} (${admin.name})`);\n    });\n    \n    console.log('üéØ Correction admin termin√©e!');\n    console.log('üìã Credentials admin:');\n    console.log('   Email: admin@passionauto2roues.com');\n    console.log('   Password: Admin123456!');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur correction admin:', error);\n  }\n}\n\nfixAdminAuth();","size_bytes":3171},"scripts/manual-clean.js":{"content":"import { supabaseServer } from '../server/supabase.js';\n\nasync function cleanPrefixes() {\n  console.log('üßπ Nettoyage des pr√©fixes [V√©hicule ID:] ...');\n  \n  try {\n    // R√©cup√©rer tous les messages avec pr√©fixes\n    const { data: messages, error: fetchError } = await supabaseServer\n      .from('messages')\n      .select('id, content')\n      .like('content', '[V√©hicule ID:%');\n      \n    if (fetchError) {\n      console.error('‚ùå Erreur r√©cup√©ration messages:', fetchError);\n      return;\n    }\n    \n    console.log(`üìù Messages trouv√©s avec pr√©fixes: ${messages?.length || 0}`);\n    \n    if (!messages || messages.length === 0) {\n      console.log('‚úÖ Aucun message √† nettoyer');\n      return;\n    }\n    \n    // Nettoyer chaque message\n    for (const message of messages) {\n      const cleanContent = message.content.replace(/^\\[V√©hicule ID: \\d+\\]\\s*/, '');\n      console.log(`üîÑ Nettoyage message ${message.id}:`);\n      console.log(`  Avant: \"${message.content}\"`);\n      console.log(`  Apr√®s: \"${cleanContent}\"`);\n      \n      const { error: updateError } = await supabaseServer\n        .from('messages')\n        .update({ content: cleanContent })\n        .eq('id', message.id);\n        \n      if (updateError) {\n        console.error('‚ùå Erreur mise √† jour message:', updateError);\n      } else {\n        console.log('‚úÖ Message mis √† jour');\n      }\n    }\n    \n    console.log('üéâ Nettoyage termin√© avec succ√®s!');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur nettoyage:', error);\n  }\n}\n\ncleanPrefixes();","size_bytes":1551},"scripts/migrate-demo-data.ts":{"content":"#!/usr/bin/env tsx\nimport { drizzle } from 'drizzle-orm/postgres-js';\nimport postgres from 'postgres';\nimport { users, vehicles, messages } from '../shared/schema';\nimport { mockUsers, mockVehicles } from '../client/src/utils/mockData';\n\nif (!process.env.DATABASE_URL) {\n  throw new Error('DATABASE_URL environment variable is required');\n}\n\n// Initialize database connection\nconst connectionString = process.env.DATABASE_URL;\nconst sql = postgres(connectionString);\nconst db = drizzle(sql);\n\nasync function migrateData() {\n  console.log('üöÄ Starting migration of demo data to Supabase...');\n\n  try {\n    // Clear existing data\n    console.log('üßπ Clearing existing data...');\n    await db.delete(messages);\n    await db.delete(vehicles);\n    await db.delete(users);\n\n    // Insert users\n    console.log('üë• Inserting users...');\n    const userInserts = mockUsers.map(user => ({\n      id: user.id,\n      email: user.email,\n      name: user.name,\n      phone: user.phone,\n      whatsapp: user.whatsapp,\n      type: user.type,\n      companyName: user.companyName,\n      companyLogo: user.companyLogo,\n      address: user.address,\n      city: user.city,\n      postalCode: user.postalCode,\n      website: user.website,\n      siret: user.siret,\n      bio: user.bio,\n      avatar: user.avatar,\n      specialties: user.specialties || [],\n      verified: user.verified,\n      emailVerified: user.emailVerified || false,\n      contactPreferences: user.contactPreferences || [],\n      createdAt: user.createdAt,\n      lastLoginAt: user.lastLoginAt,\n    }));\n\n    await db.insert(users).values(userInserts);\n    console.log(`‚úÖ Inserted ${userInserts.length} users`);\n\n    // Insert vehicles (ensuring unique IDs)\n    console.log('üöó Inserting vehicles...');\n    const vehicleInserts = mockVehicles.map((vehicle, index) => ({\n      id: `vehicle_${index + 1}`, // Generate unique IDs\n      userId: vehicle.userId,\n      title: vehicle.title,\n      description: vehicle.description,\n      category: vehicle.category,\n      brand: vehicle.brand,\n      model: vehicle.model,\n      year: vehicle.year,\n      mileage: vehicle.mileage,\n      fuelType: vehicle.fuelType,\n      condition: vehicle.condition,\n      price: vehicle.price,\n      location: vehicle.location,\n      images: vehicle.images,\n      features: vehicle.features,\n      isPremium: vehicle.isPremium,\n      premiumType: vehicle.premiumType,\n      premiumExpiresAt: vehicle.premiumExpiresAt,\n      createdAt: vehicle.createdAt,\n      updatedAt: vehicle.updatedAt,\n      views: vehicle.views,\n      favorites: vehicle.favorites,\n      status: vehicle.status,\n    }));\n\n    await db.insert(vehicles).values(vehicleInserts);\n    console.log(`‚úÖ Inserted ${vehicleInserts.length} vehicles`);\n\n    console.log('üéâ Migration completed successfully!');\n    console.log(`\nüìä Summary:\n- Users: ${userInserts.length}\n- Vehicles: ${vehicleInserts.length}\n- Messages: 0 (none in mock data)\n    `);\n\n  } catch (error) {\n    console.error('‚ùå Migration failed:', error);\n    throw error;\n  } finally {\n    await sql.end();\n  }\n}\n\n// Run migration\nmigrateData().catch(console.error);","size_bytes":3131},"scripts/setup-clean-auth.js":{"content":"// Script pour configurer un syst√®me d'authentification propre\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function setupCleanAuth() {\n  console.log('üöÄ PHASE 2 : Configuration syst√®me d\\'authentification propre');\n  \n  try {\n    // Cr√©er 2 utilisateurs de test dans Supabase Auth\n    console.log('üë§ Cr√©ation utilisateurs de test...');\n    \n    // Utilisateur normal\n    const testUser = {\n      email: 'test@passionauto2roues.com',\n      password: 'Test123456!',\n      email_confirm: true\n    };\n    \n    // Utilisateur admin  \n    const adminUser = {\n      email: 'admin@passionauto2roues.com',\n      password: 'Admin123456!',\n      email_confirm: true\n    };\n    \n    // Cr√©er dans Supabase Auth\n    const { data: testAuthUser, error: testAuthError } = await supabase.auth.admin.createUser({\n      email: testUser.email,\n      password: testUser.password,\n      email_confirm: true,\n      user_metadata: {\n        full_name: 'Utilisateur Test',\n        phone: '+33 1 23 45 67 89'\n      }\n    });\n    \n    const { data: adminAuthUser, error: adminAuthError } = await supabase.auth.admin.createUser({\n      email: adminUser.email,\n      password: adminUser.password,\n      email_confirm: true,\n      user_metadata: {\n        full_name: 'Admin PassionAuto2Roues',\n        phone: '+33 1 98 76 54 32'\n      }\n    });\n    \n    console.log('‚úÖ Utilisateurs Auth cr√©√©s');\n    \n    // Cr√©er les profils correspondants dans la table users\n    if (testAuthUser?.user) {\n      const { error: testUserError } = await supabase\n        .from('users')\n        .insert({\n          id: testAuthUser.user.id,\n          email: testUser.email,\n          name: 'Utilisateur Test',\n          type: 'individual',\n          phone: '+33 1 23 45 67 89',\n          whatsapp: '+33 1 23 45 67 89',\n          city: 'Lyon',\n          postal_code: '69001',\n          email_verified: true\n        });\n        \n      if (testUserError) {\n        console.error('‚ùå Erreur cr√©ation profil test:', testUserError);\n      } else {\n        console.log('‚úÖ Profil utilisateur test cr√©√©');\n      }\n    }\n    \n    if (adminAuthUser?.user) {\n      const { error: adminUserError } = await supabase\n        .from('users')\n        .insert({\n          id: adminAuthUser.user.id,\n          email: adminUser.email,\n          name: 'Admin PassionAuto2Roues',\n          type: 'professional',\n          phone: '+33 1 98 76 54 32',\n          whatsapp: '+33 1 98 76 54 32',\n          city: 'Paris',\n          postal_code: '75001',\n          email_verified: true,\n          company_name: 'PassionAuto2Roues Admin',\n          verified: true\n        });\n        \n      if (adminUserError) {\n        console.error('‚ùå Erreur cr√©ation profil admin:', adminUserError);\n      } else {\n        console.log('‚úÖ Profil admin cr√©√©');\n      }\n    }\n    \n    // Statistiques finales\n    const { count: usersCount } = await supabase\n      .from('users')\n      .select('*', { count: 'exact', head: true });\n    \n    const { data: allUsers } = await supabase\n      .from('users')\n      .select('email, name, type');\n    \n    console.log('üìä SYST√àME CONFIGUR√â :');\n    console.log(`   üë§ Total utilisateurs: ${usersCount}`);\n    console.log('   üìã Utilisateurs disponibles:');\n    allUsers?.forEach(user => {\n      console.log(`      ‚Ä¢ ${user.email} (${user.name}) - ${user.type}`);\n    });\n    \n    console.log('\\nüîê CREDENTIALS DE TEST :');\n    console.log('   üë§ Utilisateur normal:');\n    console.log('      Email: test@passionauto2roues.com');\n    console.log('      Password: Test123456!');\n    console.log('   üõ°Ô∏è Admin:');\n    console.log('      Email: admin@passionauto2roues.com');\n    console.log('      Password: Admin123456!');\n    console.log('   üß™ Demo existant:');\n    console.log('      Email: demo@demo.com');\n    \n    console.log('\\nüéØ Configuration termin√©e avec succ√®s !');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur configuration:', error);\n  }\n}\n\nsetupCleanAuth();","size_bytes":4178},"scripts/setup-supabase-storage.js":{"content":"import { supabaseServer } from '../server/supabase.ts';\n\nasync function setupStorage() {\n  try {\n    console.log('üöÄ Configuration du stockage Supabase...');\n    \n    // Cr√©er le bucket pour les images de v√©hicules s'il n'existe pas\n    const { data: buckets, error: listError } = await supabaseServer.storage.listBuckets();\n    \n    if (listError) {\n      console.error('‚ùå Erreur lors de la r√©cup√©ration des buckets:', listError);\n      return;\n    }\n    \n    console.log('üì¶ Buckets existants:', buckets.map(b => b.name));\n    \n    const vehicleImagesBucket = buckets.find(bucket => bucket.name === 'vehicle-images');\n    \n    if (!vehicleImagesBucket) {\n      console.log('üî® Cr√©ation du bucket \"vehicle-images\"...');\n      \n      const { data, error } = await supabaseServer.storage.createBucket('vehicle-images', {\n        public: true,\n        allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp'],\n        fileSizeLimit: 5 * 1024 * 1024, // 5MB\n      });\n      \n      if (error) {\n        console.error('‚ùå Erreur lors de la cr√©ation du bucket:', error);\n        return;\n      }\n      \n      console.log('‚úÖ Bucket \"vehicle-images\" cr√©√© avec succ√®s:', data);\n    } else {\n      console.log('‚úÖ Bucket \"vehicle-images\" existe d√©j√†');\n    }\n    \n    // Configurer les politiques RLS (Row Level Security)\n    console.log('üîê Configuration des politiques de s√©curit√©...');\n    \n    // Note: Les politiques RLS doivent √™tre configur√©es dans le dashboard Supabase\n    // ou via SQL direct pour des raisons de s√©curit√©\n    console.log('‚ÑπÔ∏è  Politiques de s√©curit√© √† configurer manuellement dans le dashboard Supabase:');\n    console.log('   1. Permettre lecture publique (SELECT sur vehicle-images)');\n    console.log('   2. Permettre upload authentifi√© (INSERT sur vehicle-images)');\n    console.log('   3. Permettre suppression par propri√©taire (DELETE sur vehicle-images)');\n    \n    console.log('üéâ Configuration du stockage termin√©e !');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur lors de la configuration du stockage:', error);\n  }\n}\n\n// Ex√©cuter si appel√© directement\nif (import.meta.url === `file://${process.argv[1]}`) {\n  setupStorage();\n}\n\nexport { setupStorage };","size_bytes":2236},"scripts/test-auth-flow.js":{"content":"// Test du flux d'authentification complet\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function testAuthFlow() {\n  console.log('üß™ Test complet du flux d\\'authentification...');\n  \n  try {\n    // 1. Lister les utilisateurs existants dans Auth\n    console.log('\\n1Ô∏è‚É£ UTILISATEURS DANS SUPABASE AUTH:');\n    const { data: authUsers } = await supabase.auth.admin.listUsers();\n    authUsers.users.forEach(user => {\n      console.log(`   ‚Ä¢ ${user.email} (${user.id}) - Confirm√©: ${user.email_confirmed_at ? '‚úÖ' : '‚ùå'}`);\n    });\n    \n    // 2. Lister les utilisateurs dans notre table\n    console.log('\\n2Ô∏è‚É£ UTILISATEURS DANS TABLE CUSTOM:');\n    const { data: dbUsers, error: dbError } = await supabase\n      .from('users')\n      .select('id, email, name, type');\n      \n    if (dbError) {\n      console.error('‚ùå Erreur table users:', dbError);\n      return;\n    }\n    \n    dbUsers?.forEach(user => {\n      console.log(`   ‚Ä¢ ${user.email} (${user.name}) - Type: ${user.type}`);\n    });\n    \n    // 3. Tester l'API de synchronisation\n    console.log('\\n3Ô∏è‚É£ TEST API SYNCHRONISATION:');\n    \n    // Cr√©er un utilisateur test temporaire\n    const testEmail = `test-${Date.now()}@example.com`;\n    console.log(`üîÑ Cr√©ation utilisateur test: ${testEmail}`);\n    \n    const { data: newUser, error: createError } = await supabase.auth.admin.createUser({\n      email: testEmail,\n      password: 'TestPassword123!',\n      email_confirm: true,\n      user_metadata: {\n        name: 'Test User',\n        type: 'individual'\n      }\n    });\n    \n    if (createError) {\n      console.error('‚ùå Erreur cr√©ation test:', createError);\n      return;\n    }\n    \n    console.log('‚úÖ Utilisateur test cr√©√© dans Auth');\n    \n    // 4. Tester l'API sync-auth\n    const { data: session } = await supabase.auth.admin.generateLink({\n      type: 'signup',\n      email: testEmail\n    });\n    \n    if (newUser?.user) {\n      console.log('üîÑ Test API sync via curl...');\n      \n      // Instruction pour tester manuellement\n      console.log('\\nüìã POUR TESTER MANUELLEMENT:');\n      console.log(`1. Allez sur l'app web`);\n      console.log(`2. Cliquez \"Se connecter\" > \"Cr√©er un compte\"`);\n      console.log(`3. Utilisez un vrai email (pour recevoir la confirmation)`);\n      console.log(`4. V√©rifiez les logs serveur pour voir la synchronisation`);\n      \n      // Nettoyer le test\n      console.log(`üóëÔ∏è Nettoyage utilisateur test...`);\n      await supabase.auth.admin.deleteUser(newUser.user.id);\n      console.log('‚úÖ Utilisateur test supprim√©');\n    }\n    \n    console.log('\\nüéØ SYST√àME PR√äT POUR TEST R√âEL!');\n    console.log('   ‚Ä¢ Inscription: Utilise Supabase Auth ‚úÖ');\n    console.log('   ‚Ä¢ Synchronisation: API /api/users/sync-auth ‚úÖ');\n    console.log('   ‚Ä¢ Auto-sync: Via onAuthStateChange ‚úÖ');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur test:', error);\n  }\n}\n\ntestAuthFlow();","size_bytes":3128},"scripts/update-database-url.sh":{"content":"#!/bin/bash\n\n# Script pour mettre √† jour DATABASE_URL vers Supabase\n# Remplacez YOUR_SUPABASE_PASSWORD par le mot de passe de votre base Supabase\n\necho \"üîÑ Mise √† jour de DATABASE_URL vers Supabase...\"\n\n# Format de l'URL Supabase pour connexion directe PostgreSQL\n# postgresql://postgres.{project_id}:{password}@aws-0-{region}.pooler.supabase.com:6543/postgres\n\n# IMPORTANT: Vous devez remplacer {PASSWORD} par votre mot de passe Supabase\nSUPABASE_DATABASE_URL=\"postgresql://postgres.dhzcpxbzzkyvrmxqklye:{PASSWORD}@aws-0-eu-central-1.pooler.supabase.com:6543/postgres\"\n\necho \"‚ÑπÔ∏è  Pour obtenir votre mot de passe Supabase :\"\necho \"   1. Allez dans votre projet Supabase\"\necho \"   2. Settings ‚Üí Database\"\necho \"   3. Copiez la 'Connection string' et extrayez le mot de passe\"\necho \"\"\necho \"üìù URL Supabase format :\"\necho \"   $SUPABASE_DATABASE_URL\"\necho \"\"\necho \"‚ö†Ô∏è  Remplacez {PASSWORD} par votre vrai mot de passe Supabase\"\necho \"   puis d√©finissez DATABASE_URL dans les secrets Replit\"","size_bytes":1004},"server/add-contact-columns.ts":{"content":"// Importer le client Supabase configur√©\nimport { supabase } from '../lib/supabase';\n\nasync function addContactColumns() {\n  console.log('üîß Ajout des colonnes de contact √† la table annonces...');\n  \n  try {\n    // D'abord, v√©rifier la structure actuelle de la table\n    console.log('üîç V√©rification de la structure actuelle...');\n    \n    const { data: tableData, error: tableError } = await supabase\n      .from('annonces')\n      .select('*')\n      .limit(1);\n    \n    if (tableError) {\n      console.error('‚ùå Erreur acc√®s table:', tableError);\n      return;\n    }\n    \n    if (tableData && tableData.length > 0) {\n      console.log('üìä Colonnes actuelles:', Object.keys(tableData[0]));\n      \n      // V√©rifier si les colonnes existent d√©j√†\n      const currentColumns = Object.keys(tableData[0]);\n      const missingColumns = [];\n      \n      if (!currentColumns.includes('contact_phone')) missingColumns.push('contact_phone');\n      if (!currentColumns.includes('contact_email')) missingColumns.push('contact_email');\n      if (!currentColumns.includes('contact_whatsapp')) missingColumns.push('contact_whatsapp');\n      if (!currentColumns.includes('hide_phone')) missingColumns.push('hide_phone');\n      \n      if (missingColumns.length === 0) {\n        console.log('‚úÖ Toutes les colonnes de contact existent d√©j√† !');\n        return;\n      }\n      \n      console.log('‚ö†Ô∏è Colonnes manquantes:', missingColumns);\n      console.log('üîß Note: Les colonnes doivent √™tre ajout√©es manuellement via l\\'interface Supabase');\n      console.log('üìù SQL √† ex√©cuter dans Supabase SQL Editor:');\n      console.log(`\nALTER TABLE annonces \nADD COLUMN contact_phone text,\nADD COLUMN contact_email text,\nADD COLUMN contact_whatsapp text,\nADD COLUMN hide_phone boolean DEFAULT false;\n      `);\n    }\n    \n  } catch (err) {\n    console.error('‚ùå Erreur g√©n√©rale:', err);\n  }\n}\n\naddContactColumns();","size_bytes":1920},"server/auth-hooks.ts":{"content":"import { supabaseServer } from './supabase';\nimport { storage } from './storage';\n\n/**\n * Hook automatique pour cr√©er un utilisateur dans la table users\n * d√®s l'inscription dans Supabase Auth\n */\nexport async function setupAuthHooks() {\n  console.log('üîß Configuration des hooks d\\'authentification...');\n  \n  // Cette fonction sera appel√©e par un webhook Supabase ou un trigger\n  // Pour l'instant, on l'appelle manuellement via l'API\n}\n\n/**\n * Cr√©e automatiquement un utilisateur minimal dans la table users\n * bas√© sur les donn√©es d'authentification Supabase\n */\nexport async function createUserFromAuth(authUserId: string, email: string, metadata?: any) {\n  try {\n    // V√©rifier si l'utilisateur existe d√©j√†\n    const existingUser = await storage.getUser(authUserId);\n    if (existingUser) {\n      console.log(`‚úÖ Utilisateur ${email} existe d√©j√†`);\n      return existingUser;\n    }\n\n    // Cr√©er un utilisateur minimal avec des donn√©es par d√©faut intelligentes\n    const newUser = {\n      id: authUserId,\n      email: email,\n      name: extractNameFromEmail(email, metadata),\n      type: 'individual' as const,\n      phone: metadata?.phone || null,\n      whatsapp: metadata?.phone || null,\n      city: metadata?.city || null,\n      postal_code: metadata?.postal_code ? parseInt(metadata.postal_code) : null,\n      email_verified: true, // Car vient de Supabase Auth\n    };\n\n    const createdUser = await storage.createUser(newUser);\n    console.log(`‚úÖ Utilisateur auto-cr√©√©: ${email}`);\n    return createdUser;\n\n  } catch (error) {\n    console.error('‚ùå Erreur cr√©ation utilisateur auto:', error);\n    throw error;\n  }\n}\n\n/**\n * Extrait un nom intelligent depuis l'email et les m√©tadonn√©es\n */\nfunction extractNameFromEmail(email: string, metadata?: any): string {\n  // Priorit√© aux m√©tadonn√©es\n  if (metadata?.full_name) return metadata.full_name;\n  if (metadata?.first_name && metadata?.last_name) {\n    return `${metadata.first_name} ${metadata.last_name}`;\n  }\n  if (metadata?.first_name) return metadata.first_name;\n\n  // Extraction depuis l'email\n  const localPart = email.split('@')[0];\n  \n  // Remplacer les points et underscores par des espaces et capitaliser\n  return localPart\n    .replace(/[._]/g, ' ')\n    .split(' ')\n    .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\n    .join(' ') || 'Utilisateur';\n}\n\n/**\n * Assure qu'un utilisateur existe, le cr√©e sinon\n */\nexport async function ensureUserExists(authUserId: string, fallbackEmail?: string): Promise<boolean> {\n  try {\n    const existingUser = await storage.getUser(authUserId);\n    if (existingUser) return true;\n\n    // Tenter de r√©cup√©rer les donn√©es depuis Supabase Auth\n    if (fallbackEmail) {\n      console.log(`üîÑ Cr√©ation utilisateur manquant: ${authUserId}`);\n      await createUserFromAuth(authUserId, fallbackEmail);\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    console.error('‚ùå Erreur v√©rification utilisateur:', error);\n    return false;\n  }\n}","size_bytes":3019},"server/check-and-create-users.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function checkAndCreateUsers() {\n  console.log('üë• V√âRIFICATION ET CR√âATION DES USERS MANQUANTS');\n  \n  const requiredUsers = [\n    { id: 'demo', email: 'demo@passion-auto2roues.com', name: 'Compte D√©mo', type: 'individual' },\n    { id: '1', email: 'marie.dubois@email.com', name: 'Marie Dubois', type: 'individual' },\n    { id: '2', email: 'pierre.martin@email.com', name: 'Pierre Martin', type: 'individual' },\n    { id: '3', email: 'sophie.dubois@email.com', name: 'Sophie Dubois', type: 'professional' },\n    { id: '4', email: 'jean.martin@email.com', name: 'Jean Martin', type: 'professional' },\n    { id: '5', email: 'david.rousseau@email.com', name: 'David Rousseau', type: 'professional' }\n  ];\n  \n  try {\n    // V√©rifier quels users existent d√©j√†\n    const { data: existingUsers, error: checkError } = await supabaseServer\n      .from('users')\n      .select('id, name, email');\n    \n    if (checkError) {\n      console.error('‚ùå Erreur v√©rification users:', checkError);\n      return;\n    }\n    \n    console.log('‚úÖ Users existants:', existingUsers?.length || 0);\n    existingUsers?.forEach(user => {\n      console.log(`   ${user.id}: ${user.name} (${user.email})`);\n    });\n    \n    const existingIds = existingUsers?.map(u => u.id) || [];\n    const usersToCreate = requiredUsers.filter(user => !existingIds.includes(user.id));\n    \n    console.log('\\n‚ûï Users √† cr√©er:', usersToCreate.length);\n    \n    if (usersToCreate.length > 0) {\n      usersToCreate.forEach(user => {\n        console.log(`   ${user.id}: ${user.name} (${user.email})`);\n      });\n      \n      // Cr√©er les users manquants\n      const { data: createdUsers, error: createError } = await supabaseServer\n        .from('users')\n        .insert(usersToCreate)\n        .select('id, name, email');\n      \n      if (createError) {\n        console.error('‚ùå Erreur cr√©ation:', createError);\n        return;\n      }\n      \n      console.log('\\n‚úÖ USERS CR√â√âS:', createdUsers?.length);\n      createdUsers?.forEach(user => {\n        console.log(`   ‚úì ${user.id}: ${user.name}`);\n      });\n    } else {\n      console.log('‚úÖ Tous les users existent d√©j√† !');\n    }\n    \n    // Test final des relations\n    console.log('\\nüîó TEST RELATIONS ANNONCES ‚Üî USERS');\n    const { data: joinTest, error: joinError } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        users!inner(name, type)\n      `)\n      .limit(5);\n    \n    if (joinError) {\n      console.error('‚ùå Erreur jointure:', joinError);\n    } else {\n      console.log('‚úÖ RELATIONS FONCTIONNELLES !');\n      console.log(`üìä ${joinTest?.length} annonces test√©es avec succ√®s`);\n      joinTest?.forEach(annonce => {\n        console.log(`   ${annonce.id}: ${annonce.title} ‚Üí ${annonce.users.name}`);\n      });\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ncheckAndCreateUsers();","size_bytes":2987},"server/check-database-relations.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function checkDatabaseRelations() {\n  console.log('üîç V√âRIFICATION DES RELATIONS DE BASE DE DONN√âES');\n  \n  try {\n    // 1. V√©rifier les annonces avec pr√©fixe [BD]\n    const { data: annonces, error: annoncesError } = await supabaseServer\n      .from('annonces')\n      .select('id, title, user_id')\n      .order('id')\n      .limit(5);\n    \n    if (annoncesError) {\n      console.error('‚ùå Erreur lecture annonces:', annoncesError);\n      return;\n    }\n    \n    console.log('üìã Premi√®res annonces avec [BD]:');\n    annonces?.forEach(a => {\n      console.log(`   ID: ${a.id} | ${a.title} | User: ${a.user_id}`);\n    });\n    \n    // 2. V√©rifier les user_ids uniques\n    const { data: userIds, error: userIdsError } = await supabaseServer\n      .from('annonces')\n      .select('user_id');\n    \n    if (!userIdsError && userIds) {\n      const uniqueUserIds = [...new Set(userIds.map(u => u.user_id))];\n      console.log('üë• User IDs uniques trouv√©s:', uniqueUserIds);\n      \n      // 3. V√©rifier si ces users existent\n      const { data: existingUsers, error: usersError } = await supabaseServer\n        .from('users')\n        .select('id, name')\n        .in('id', uniqueUserIds);\n      \n      if (!usersError) {\n        console.log('‚úÖ Users existants dans table users:');\n        existingUsers?.forEach(u => console.log(`   ${u.id}: ${u.name}`));\n        \n        const existingIds = existingUsers?.map(u => u.id) || [];\n        const missingIds = uniqueUserIds.filter(id => !existingIds.includes(id));\n        \n        if (missingIds.length > 0) {\n          console.log('‚ö†Ô∏è  Users manquants:', missingIds);\n        } else {\n          console.log('‚úÖ Toutes les relations users sont OK');\n        }\n      }\n    }\n    \n    // 4. Test de jointure annonces-users\n    const { data: joinTest, error: joinError } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        users!inner(name, email)\n      `)\n      .limit(3);\n    \n    if (joinError) {\n      console.log('‚ö†Ô∏è  Erreur jointure (normal si users manquants):', joinError.message);\n    } else {\n      console.log('‚úÖ Test jointure r√©ussi:', joinTest?.length || 0, 'annonces avec users');\n    }\n    \n    // 5. Statistiques g√©n√©rales\n    const { data: stats } = await supabaseServer\n      .from('annonces')\n      .select('category', { count: 'exact' });\n    \n    if (stats) {\n      const categoryStats = stats.reduce((acc: any, item: any) => {\n        acc[item.category] = (acc[item.category] || 0) + 1;\n        return acc;\n      }, {});\n      \n      console.log('üìä R√©partition par cat√©gorie:');\n      Object.entries(categoryStats).forEach(([cat, count]) => {\n        console.log(`   ${cat}: ${count}`);\n      });\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ncheckDatabaseRelations();","size_bytes":2913},"server/check-replit-domain.ts":{"content":"// Script pour trouver le domaine Replit actuel\nconsole.log('üåê DOMAINE REPLIT ACTUEL :');\nconsole.log('');\n\n// V√©rifier les variables d'environnement Replit\nconst replitDomains = process.env.REPLIT_DOMAINS;\nconst replId = process.env.REPL_ID;\nconst replOwner = process.env.REPL_OWNER;\nconst replSlug = process.env.REPL_SLUG;\n\nif (replitDomains) {\n  console.log(`üì± Domaines Replit : ${replitDomains}`);\n} else {\n  console.log('‚ö†Ô∏è REPLIT_DOMAINS non trouv√©e');\n}\n\nif (replId && replOwner && replSlug) {\n  console.log(`üîó URL probable : https://${replSlug}.${replOwner}.replit.app`);\n} else {\n  console.log('üìã Variables Replit :');\n  console.log(`   REPL_ID: ${replId || 'non trouv√©e'}`);\n  console.log(`   REPL_OWNER: ${replOwner || 'non trouv√©e'}`);\n  console.log(`   REPL_SLUG: ${replSlug || 'non trouv√©e'}`);\n}\n\nconsole.log('');\nconsole.log('üí° POUR TROUVER TON DOMAINE REPLIT :');\nconsole.log('   Regarde l\\'URL de ton navigateur quand tu utilises l\\'app');\nconsole.log('   Exemple: https://passion-auto2roues.johndoe.replit.app');","size_bytes":1055},"server/create-missing-users.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function createMissingUsers() {\n  console.log('üë• CR√âATION DES USERS MANQUANTS POUR LES ANNONCES [BD]');\n  \n  // Users √† cr√©er bas√©s sur les user_ids trouv√©s\n  const usersToCreate = [\n    {\n      id: 'demo',\n      email: 'demo@passion-auto2roues.com',\n      name: 'Compte D√©mo',\n      type: 'individual',\n      verified: true\n    },\n    {\n      id: '1',\n      email: 'marie.dubois@email.com',\n      name: 'Marie Dubois',\n      phone: '+33 6 12 34 56 78',\n      type: 'individual',\n      city: 'Paris',\n      postalCode: '75011',\n      verified: true\n    },\n    {\n      id: '2',\n      email: 'pierre.martin@email.com',\n      name: 'Pierre Martin',\n      phone: '+33 6 23 45 67 89',\n      type: 'individual',\n      city: 'Lyon',\n      postalCode: '69003',\n      verified: true\n    },\n    {\n      id: '3',\n      email: 'sophie.dubois@email.com',\n      name: 'Sophie Dubois',\n      phone: '+33 6 34 56 78 90',\n      type: 'professional',\n      companyName: 'Auto Prestige Lyon',\n      city: 'Lyon',\n      postalCode: '69007',\n      verified: true\n    },\n    {\n      id: '4',\n      email: 'jean.martin@email.com',\n      name: 'Jean Martin',\n      phone: '+33 6 45 67 89 01',\n      type: 'professional',\n      companyName: 'Garage Martin & Fils',\n      city: 'Toulouse',\n      postalCode: '31000',\n      verified: true\n    },\n    {\n      id: '5',\n      email: 'david.rousseau@email.com',\n      name: 'David Rousseau',\n      phone: '+33 6 77 88 99 00',\n      type: 'professional',\n      companyName: 'Pi√®ces Auto Rousseau',\n      city: 'Toulouse',\n      postalCode: '31200',\n      verified: true\n    }\n  ];\n  \n  try {\n    // Cr√©er tous les users\n    const { data: createdUsers, error: createError } = await supabaseServer\n      .from('users')\n      .insert(usersToCreate)\n      .select();\n    \n    if (createError) {\n      console.error('‚ùå Erreur cr√©ation users:', createError);\n      return;\n    }\n    \n    console.log('‚úÖ USERS CR√â√âS:', createdUsers?.length);\n    createdUsers?.forEach(user => {\n      console.log(`   ${user.id}: ${user.name} (${user.type})`);\n    });\n    \n    // Test de la relation maintenant\n    console.log('\\nüîó TEST RELATION ANNONCES ‚Üî USERS');\n    const { data: relationTest, error: relationError } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        users!inner(name, email, type)\n      `)\n      .limit(5);\n    \n    if (relationError) {\n      console.error('‚ùå Erreur relation:', relationError);\n    } else {\n      console.log('‚úÖ RELATION FONCTIONNELLE !');\n      relationTest?.forEach(annonce => {\n        console.log(`   ${annonce.id}: ${annonce.title} ‚Üí ${annonce.users.name}`);\n      });\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ncreateMissingUsers();","size_bytes":2860},"server/create-profiles-table.ts":{"content":"// Script pour cr√©er directement la table profiles via Drizzle\nimport { db } from './db.js';\nimport { sql } from 'drizzle-orm';\n\nasync function createProfilesTable() {\n  console.log('üîÑ Cr√©ation de la table profiles...');\n  \n  try {\n    // 1. Cr√©er la table profiles\n    await db.execute(sql`\n      CREATE TABLE IF NOT EXISTS profiles (\n        id uuid PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,\n        avatar_url text,\n        account_type text DEFAULT 'individual' CHECK (account_type IN ('individual', 'professional')),\n        phone text,\n        onboarding_completed boolean DEFAULT false,\n        marketing_consent boolean DEFAULT false,\n        created_at timestamp DEFAULT now() NOT NULL,\n        updated_at timestamp DEFAULT now() NOT NULL\n      );\n    `);\n    console.log('‚úÖ Table profiles cr√©√©e');\n\n    // 2. Cr√©er la fonction de synchronisation\n    await db.execute(sql`\n      CREATE OR REPLACE FUNCTION create_user_profile()\n      RETURNS TRIGGER AS $$\n      BEGIN\n        -- Cr√©er dans la table users (existante)\n        INSERT INTO public.users (id, email, name, type, phone, company_name, created_at)\n        VALUES (\n          NEW.id,\n          NEW.email,\n          COALESCE(NEW.raw_user_meta_data->>'name', split_part(NEW.email, '@', 1)),\n          COALESCE(NEW.raw_user_meta_data->>'type', 'individual'),\n          NEW.raw_user_meta_data->>'phone',\n          NEW.raw_user_meta_data->>'companyName',\n          NEW.created_at\n        )\n        ON CONFLICT (id) DO UPDATE SET\n          email = EXCLUDED.email,\n          name = EXCLUDED.name,\n          type = EXCLUDED.type,\n          phone = EXCLUDED.phone,\n          company_name = EXCLUDED.company_name;\n        \n        -- Cr√©er le profil correspondant\n        INSERT INTO public.profiles (id, account_type, phone, created_at)\n        VALUES (\n          NEW.id,\n          COALESCE(NEW.raw_user_meta_data->>'type', 'individual')::text,\n          NEW.raw_user_meta_data->>'phone',\n          NEW.created_at\n        )\n        ON CONFLICT (id) DO UPDATE SET\n          account_type = EXCLUDED.account_type,\n          phone = EXCLUDED.phone;\n        \n        RETURN NEW;\n      END;\n      $$ LANGUAGE plpgsql SECURITY DEFINER;\n    `);\n    console.log('‚úÖ Fonction de synchronisation cr√©√©e');\n\n    // 3. Cr√©er le d√©clencheur\n    await db.execute(sql`\n      DROP TRIGGER IF EXISTS create_user_profile_trigger ON auth.users;\n    `);\n    \n    await db.execute(sql`\n      CREATE TRIGGER create_user_profile_trigger\n        AFTER INSERT ON auth.users\n        FOR EACH ROW EXECUTE FUNCTION create_user_profile();\n    `);\n    console.log('‚úÖ D√©clencheur cr√©√©');\n\n    // 4. V√©rifier les tables\n    const tables = await db.execute(sql`\n      SELECT table_name \n      FROM information_schema.tables \n      WHERE table_schema = 'public' \n      ORDER BY table_name;\n    `);\n    \n    console.log('üìä Tables disponibles:', tables.map(t => t.table_name));\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n  }\n}\n\ncreateProfilesTable();","size_bytes":3035},"server/create-simple-users.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function createSimpleUsers() {\n  console.log('üë• CR√âATION DES 6 USERS MANQUANTS - VERSION SIMPLIFI√âE');\n  \n  // Users bas√©s sur les user_ids trouv√©s dans les annonces [BD]\n  const usersToCreate = [\n    {\n      id: 'demo',\n      email: 'demo@passion-auto2roues.com',\n      name: 'Compte D√©mo',\n      type: 'individual'\n    },\n    {\n      id: '1',\n      email: 'marie.dubois@email.com',\n      name: 'Marie Dubois',\n      type: 'individual'\n    },\n    {\n      id: '2',\n      email: 'pierre.martin@email.com',\n      name: 'Pierre Martin',\n      type: 'individual'\n    },\n    {\n      id: '3',\n      email: 'sophie.dubois@email.com',\n      name: 'Sophie Dubois',\n      type: 'professional'\n    },\n    {\n      id: '4',\n      email: 'jean.martin@email.com',\n      name: 'Jean Martin',\n      type: 'professional'\n    },\n    {\n      id: '5',\n      email: 'david.rousseau@email.com',\n      name: 'David Rousseau',\n      type: 'professional'\n    }\n  ];\n  \n  console.log('üìã D√âTAIL DES 6 USERS √Ä CR√âER:');\n  usersToCreate.forEach(user => {\n    console.log(`   ID: ${user.id} | Email: ${user.email} | Nom: ${user.name} | Type: ${user.type}`);\n  });\n  \n  try {\n    // Cr√©er les users avec les champs de base uniquement\n    const { data: createdUsers, error: createError } = await supabaseServer\n      .from('users')\n      .insert(usersToCreate)\n      .select('id, email, name, type');\n    \n    if (createError) {\n      console.error('‚ùå Erreur cr√©ation users:', createError);\n      console.log('\\nüí° SOLUTION: V√©rifiez que la table users existe avec les bons champs.');\n      return;\n    }\n    \n    console.log('\\n‚úÖ USERS CR√â√âS AVEC SUCC√àS:');\n    createdUsers?.forEach(user => {\n      console.log(`   ‚úì ${user.id}: ${user.name} (${user.email}) - ${user.type}`);\n    });\n    \n    console.log(`\\nüìä TOTAL: ${createdUsers?.length} users cr√©√©s`);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ncreateSimpleUsers();","size_bytes":2011},"server/create-wishlist-direct.ts":{"content":"// Cr√©ation de la table wishlist directement via notre serveur\nimport { supabaseServer } from './db.js';\n\nexport async function createWishlistTable() {\n  console.log('üîÑ Cr√©ation table wishlist via serveur Node.js...');\n  \n  const createTableSQL = `\n    -- Table wishlist pour la gestion des favoris\n    CREATE TABLE IF NOT EXISTS public.wishlist (\n      id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n      user_id UUID NOT NULL,\n      vehicle_id INTEGER NOT NULL,\n      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n      CONSTRAINT wishlist_user_vehicle_unique UNIQUE (user_id, vehicle_id)\n    );\n\n    -- Ajouter la r√©f√©rence apr√®s coup pour √©viter les probl√®mes\n    DO $$ \n    BEGIN\n      IF NOT EXISTS (\n        SELECT 1 FROM information_schema.table_constraints \n        WHERE constraint_name = 'fk_wishlist_user'\n      ) THEN\n        ALTER TABLE public.wishlist \n        ADD CONSTRAINT fk_wishlist_user \n        FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;\n      END IF;\n    END $$;\n\n    -- Index pour optimiser les performances\n    CREATE INDEX IF NOT EXISTS idx_wishlist_user_id ON public.wishlist(user_id);\n    CREATE INDEX IF NOT EXISTS idx_wishlist_vehicle_id ON public.wishlist(vehicle_id);\n    CREATE INDEX IF NOT EXISTS idx_wishlist_created_at ON public.wishlist(created_at DESC);\n\n    -- Donner les permissions n√©cessaires\n    GRANT ALL ON public.wishlist TO postgres;\n    GRANT ALL ON public.wishlist TO service_role;\n  `;\n\n  try {\n    // Ex√©cuter la cr√©ation via notre client Supabase serveur\n    const { data, error } = await supabaseServer.rpc('exec_sql', {\n      sql: createTableSQL\n    });\n\n    if (error) {\n      console.error('‚ùå Erreur cr√©ation table wishlist:', error);\n      return false;\n    }\n\n    console.log('‚úÖ Table wishlist cr√©√©e avec succ√®s');\n    \n    // Test de v√©rification\n    const { data: testData, error: testError } = await supabaseServer\n      .from('wishlist')\n      .select('id')\n      .limit(1);\n      \n    if (testError) {\n      console.error('‚ùå Erreur test table:', testError);\n      return false;\n    }\n\n    console.log('‚úÖ Table wishlist v√©rifi√©e et accessible');\n    return true;\n    \n  } catch (error) {\n    console.error('‚ùå Erreur compl√®te cr√©ation wishlist:', error);\n    return false;\n  }\n}\n\n// Migrer les favoris existants du bio vers la table wishlist\nexport async function migrateFavoritesFromBio() {\n  console.log('üîÑ Migration favoris bio ‚Üí table wishlist...');\n  \n  try {\n    // R√©cup√©rer tous les utilisateurs avec des favoris dans bio\n    const { data: users, error: usersError } = await supabaseServer\n      .from('users')\n      .select('id, bio')\n      .not('bio', 'is', null);\n\n    if (usersError) {\n      console.error('‚ùå Erreur r√©cup√©ration utilisateurs:', usersError);\n      return false;\n    }\n\n    let migratedCount = 0;\n    \n    for (const user of users || []) {\n      try {\n        if (!user.bio) continue;\n        \n        const bioData = JSON.parse(user.bio);\n        const favorites = bioData.favorites || [];\n        \n        if (favorites.length === 0) continue;\n        \n        console.log(`üîÑ Migration ${favorites.length} favoris pour utilisateur ${user.id}`);\n        \n        // Ins√©rer les favoris dans la table wishlist\n        for (const vehicleId of favorites) {\n          const { error: insertError } = await supabaseServer\n            .from('wishlist')\n            .upsert({\n              user_id: user.id,\n              vehicle_id: parseInt(vehicleId)\n            }, {\n              onConflict: 'user_id,vehicle_id'\n            });\n            \n          if (insertError) {\n            console.error(`‚ùå Erreur insertion favori ${vehicleId}:`, insertError);\n          } else {\n            migratedCount++;\n          }\n        }\n        \n      } catch (e) {\n        console.error(`‚ùå Erreur parsing bio utilisateur ${user.id}:`, e);\n      }\n    }\n    \n    console.log(`‚úÖ Migration termin√©e: ${migratedCount} favoris migr√©s`);\n    return true;\n    \n  } catch (error) {\n    console.error('‚ùå Erreur migration favoris:', error);\n    return false;\n  }\n}","size_bytes":4174},"server/create-wishlist.js":{"content":"// Script pour cr√©er la table wishlist\nconst { supabaseServer } = require('./supabase');\n\nasync function createWishlistTable() {\n  console.log('üîß Cr√©ation de la table wishlist...');\n  \n  const sqlQuery = `\n    -- Cr√©er la table wishlist si elle n'existe pas\n    CREATE TABLE IF NOT EXISTS wishlist (\n      id TEXT PRIMARY KEY DEFAULT gen_random_uuid(),\n      user_id TEXT NOT NULL REFERENCES users(id),\n      vehicle_id TEXT NOT NULL REFERENCES annonces(id),\n      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n      UNIQUE(user_id, vehicle_id)\n    );\n\n    -- Cr√©er des index pour les performances\n    CREATE INDEX IF NOT EXISTS idx_wishlist_user_id ON wishlist(user_id);\n    CREATE INDEX IF NOT EXISTS idx_wishlist_vehicle_id ON wishlist(vehicle_id);\n  `;\n\n  try {\n    const { data, error } = await supabaseServer.rpc('exec_sql', { query: sqlQuery });\n    \n    if (error) {\n      console.error('‚ùå Erreur cr√©ation table:', error);\n    } else {\n      console.log('‚úÖ Table wishlist cr√©√©e avec succ√®s');\n    }\n  } catch (error) {\n    console.error('‚ùå Erreur:', error.message);\n  }\n}\n\ncreateWishlistTable();","size_bytes":1125},"server/direct-db-setup.ts":{"content":"// Script direct pour configurer la base de donn√©es\nimport { supabaseServer } from './supabase.js';\n\nasync function setupDatabase() {\n  console.log('üîÑ Configuration de la base de donn√©es...');\n\n  try {\n    // 1. Cr√©er la table profiles directement\n    console.log('üìù Cr√©ation de la table profiles...');\n    const createProfilesSQL = `\n      CREATE TABLE IF NOT EXISTS profiles (\n        id uuid PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,\n        avatar_url text,\n        account_type text DEFAULT 'individual' CHECK (account_type IN ('individual', 'professional')),\n        phone text,\n        onboarding_completed boolean DEFAULT false,\n        marketing_consent boolean DEFAULT false,\n        created_at timestamp DEFAULT now() NOT NULL,\n        updated_at timestamp DEFAULT now() NOT NULL\n      );\n    `;\n    \n    const { error: profilesError } = await supabaseServer\n      .from('_migration')\n      .select('*')\n      .limit(0); // Juste pour tester la connexion\n\n    if (profilesError) {\n      console.error('‚ùå Connexion Supabase √©chou√©e:', profilesError);\n    } else {\n      console.log('‚úÖ Connexion Supabase OK');\n    }\n\n    // Test direct avec RPC si disponible\n    const { data: tables, error: tablesError } = await supabaseServer\n      .from('information_schema.tables')\n      .select('table_name')\n      .eq('table_schema', 'public');\n      \n    if (tablesError) {\n      console.error('‚ùå Erreur r√©cup√©ration tables:', tablesError);\n    } else {\n      console.log('üìä Tables existantes:', tables?.map(t => t.table_name));\n    }\n\n  } catch (error) {\n    console.error('‚ùå Erreur configuration:', error);\n  }\n}\n\nsetupDatabase();","size_bytes":1673},"server/find-supabase-info.ts":{"content":"// Script pour afficher les informations Supabase n√©cessaires\nconsole.log('üîç INFORMATIONS SUPABASE POUR OAUTH :');\nconsole.log('');\n\n// 1. URL du projet Supabase\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nif (supabaseUrl) {\n  const projectId = supabaseUrl.replace('https://', '').replace('.supabase.co', '');\n  console.log('üìä PROJET SUPABASE :');\n  console.log(`   URL compl√®te : ${supabaseUrl}`);\n  console.log(`   Project ID : ${projectId}`);\n  console.log('');\n  \n  console.log('üîó URLs √Ä CONFIGURER DANS GOOGLE CLOUD :');\n  console.log('');\n  console.log('Origines JavaScript autoris√©es :');\n  console.log(`   ${supabaseUrl}`);\n  console.log(`   https://[ton-repl-name].[username].replit.app`);\n  console.log('');\n  console.log('URI de redirection autoris√©s :');\n  console.log(`   ${supabaseUrl}/auth/v1/callback`);\n  console.log(`   https://[ton-repl-name].[username].replit.app/auth/callback`);\n  \n} else {\n  console.log('‚ùå VITE_SUPABASE_URL non trouv√©e');\n}\n\nconsole.log('');\nconsole.log('üéØ √âTAPES SUIVANTES :');\nconsole.log('1. Aller sur https://console.cloud.google.com/');\nconsole.log('2. Cr√©er OAuth 2.0 Client ID');\nconsole.log('3. Copier les URLs ci-dessus');\nconsole.log('4. R√©cup√©rer Client ID + Secret');\nconsole.log('5. Les coller dans Supabase Dashboard ‚Üí Auth ‚Üí Providers ‚Üí Google');","size_bytes":1339},"server/fix-oauth-redirect.ts":{"content":"// Analyser le token OAuth re√ßu et corriger la redirection\nconsole.log('üîç ANALYSE DU PROBL√àME OAUTH GOOGLE :');\nconsole.log('');\n\nconsole.log('‚ùå PROBL√àME IDENTIFI√â :');\nconsole.log('   Redirection vers localhost:3000 au lieu du domaine Replit');\nconsole.log('');\n\nconsole.log('üéØ CAUSE :');\nconsole.log('   1. Dans Google Cloud Console, une des URLs contient localhost:3000');\nconsole.log('   2. Ou Supabase redirectTo n\\'est pas correctement configur√©');\nconsole.log('');\n\nconsole.log('üîß SOLUTIONS :');\nconsole.log('');\n\nconsole.log('1. V√âRIFIER GOOGLE CLOUD CONSOLE :');\nconsole.log('   - Aller sur https://console.cloud.google.com/');\nconsole.log('   - APIs & Services ‚Üí Credentials');\nconsole.log('   - Cliquer sur ton OAuth Client ID');\nconsole.log('   - SUPPRIMER toute URL contenant localhost:3000');\nconsole.log('   - GARDER SEULEMENT :');\nconsole.log('     * https://workspace.amineennoury.replit.app/auth/callback');\nconsole.log('');\n\nconsole.log('2. V√âRIFIER SUPABASE DASHBOARD :');\nconsole.log('   - Authentication ‚Üí URL Configuration');\nconsole.log('   - Site URL : https://workspace.amineennoury.replit.app');\nconsole.log('   - Redirect URLs : https://workspace.amineennoury.replit.app/**');\nconsole.log('');\n\nconsole.log('3. TOKEN RE√áU EST VALIDE :');\nconsole.log('   - L\\'utilisateur est bien authentifi√©');\nconsole.log('   - Email : amine.ennoury@gmail.com');\nconsole.log('   - ID : 530429f5-3766-4907-ba51-862d61710112');\nconsole.log('   - Le probl√®me est juste la redirection');\nconsole.log('');\n\nconsole.log('üöÄ APR√àS CORRECTION :');\nconsole.log('   L\\'utilisateur sera redirig√© vers workspace.amineennoury.replit.app');\nconsole.log('   Et synchronis√© automatiquement dans les tables users + profiles');","size_bytes":1752},"server/fix-profiles-table.ts":{"content":"// Script simple pour cr√©er la table profiles et configurer la synchronisation\nimport { supabaseServer } from './supabase.js';\n\nasync function fixProfilesTable() {\n  console.log('üîÑ Cr√©ation de la table profiles et synchronisation automatique...');\n\n  try {\n    // 1. Cr√©er la table profiles directement via SQL\n    const { error: createError } = await supabaseServer\n      .from('_ignore')\n      .select('*')\n      .limit(0);\n\n    // Utiliser l'API REST pour ex√©cuter du SQL via RPC\n    const createProfilesSQL = `\n      CREATE TABLE IF NOT EXISTS profiles (\n        id uuid PRIMARY KEY,\n        avatar_url text,\n        account_type text DEFAULT 'individual',\n        phone text,\n        onboarding_completed boolean DEFAULT false,\n        marketing_consent boolean DEFAULT false,\n        created_at timestamp DEFAULT now() NOT NULL,\n        updated_at timestamp DEFAULT now() NOT NULL\n      );\n    `;\n\n    console.log('üìù Tentative de cr√©ation table profiles via Supabase...');\n    \n    // Test de connexion simple\n    const { data: testData, error: testError } = await supabaseServer.auth.getSession();\n    console.log('üîó Test connexion Supabase:', testError ? 'ERREUR' : 'OK');\n\n    // Cr√©er via l'API REST directement (pas via les tables)\n    const { data, error } = await supabaseServer.rpc('sql_query_if_exists', {\n      query: createProfilesSQL\n    });\n\n    if (error && !error.message.includes('does not exist')) {\n      console.error('‚ùå Erreur SQL:', error);\n    } else {\n      console.log('‚úÖ Table profiles cr√©√©e ou existe d√©j√†');\n    }\n\n  } catch (error) {\n    console.error('‚ùå Erreur g√©n√©rale:', error);\n  }\n  \n  console.log('üìã R√âPONSES AUX QUESTIONS :');\n  console.log('');\n  console.log('1. ‚ùå Table profiles manquante dans Supabase');\n  console.log('   ‚Üí Solution : Cr√©er manuellement dans Supabase Dashboard');\n  console.log('');\n  console.log('2. ‚ö†Ô∏è  OAuth Google n√©cessite configuration manuelle');\n  console.log('   ‚Üí Dashboard Supabase ‚Üí Authentication ‚Üí Providers ‚Üí Google');\n  console.log('');\n  console.log('3. üîß Synchronisation automatique manquante');\n  console.log('   ‚Üí D√©clencheur DB √† cr√©er manuellement');\n}\n\nfixProfilesTable();","size_bytes":2214},"server/fix-trigger.ts":{"content":"// Corriger le d√©clencheur de synchronisation\nimport { supabaseServer } from './supabase.js';\n\nasync function fixTrigger() {\n  console.log('üîß Correction du d√©clencheur de synchronisation...');\n  \n  try {\n    // Cr√©er d'abord une fonction RPC pour ex√©cuter du SQL\n    const { data: existingFunctions, error: funcError } = await supabaseServer\n      .from('pg_proc')\n      .select('proname')\n      .eq('proname', 'exec_sql');\n      \n    console.log('üìã PROBL√àME IDENTIFI√â :');\n    console.log('Le d√©clencheur sur auth.users ne se d√©clenche pas automatiquement');\n    console.log('car auth.users est dans un sch√©ma s√©par√© (auth) de Supabase.');\n    console.log('');\n    console.log('SOLUTION : Utiliser les hooks Supabase ou cr√©er un endpoint manuel');\n    \n    console.log('');\n    console.log('üéØ NOUVELLE STRAT√âGIE :');\n    console.log('1. Modifier le code frontend pour synchroniser manuellement');\n    console.log('2. Cr√©er un endpoint /api/auth/sync pour synchronisation');\n    console.log('3. Appeler cet endpoint apr√®s inscription/connexion');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n  }\n}\n\nfixTrigger();","size_bytes":1157},"server/fix-users-references.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function fixUsersReferences() {\n  console.log('üîß CORRECTION DES R√âF√âRENCES UTILISATEURS');\n  \n  try {\n    // 1. R√©cup√©rer tous les user_id uniques des annonces\n    const { data: annonces, error: annoncesError } = await supabaseServer\n      .from('annonces')\n      .select('user_id');\n    \n    if (annoncesError) {\n      console.error('‚ùå Erreur lecture annonces:', annoncesError);\n      return;\n    }\n    \n    const uniqueUserIds = [...new Set(annonces?.map(a => a.user_id) || [])];\n    console.log('üë• User IDs trouv√©s dans annonces:', uniqueUserIds);\n    \n    // 2. V√©rifier quels users existent d√©j√†\n    const { data: existingUsers, error: usersError } = await supabaseServer\n      .from('users')\n      .select('id');\n    \n    if (usersError) {\n      console.error('‚ùå Erreur lecture users:', usersError);\n      return;\n    }\n    \n    const existingUserIds = existingUsers?.map(u => u.id) || [];\n    console.log('‚úÖ Users existants:', existingUserIds);\n    \n    // 3. Cr√©er les users manquants\n    const missingUserIds = uniqueUserIds.filter(id => !existingUserIds.includes(id));\n    console.log('‚ûï Users √† cr√©er:', missingUserIds);\n    \n    if (missingUserIds.length > 0) {\n      const newUsers = missingUserIds.map(userId => ({\n        id: userId,\n        email: `${userId}@example.com`,\n        name: `Utilisateur ${userId}`,\n        type: 'individual',\n        verified: true\n      }));\n      \n      const { data: createdUsers, error: createError } = await supabaseServer\n        .from('users')\n        .insert(newUsers)\n        .select();\n      \n      if (createError) {\n        console.error('‚ùå Erreur cr√©ation users:', createError);\n        return;\n      }\n      \n      console.log('‚úÖ Users cr√©√©s:', createdUsers?.length);\n    }\n    \n    // 4. V√©rification finale\n    const { data: finalCheck } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        users!inner(name)\n      `)\n      .limit(5);\n    \n    console.log('üéâ V√âRIFICATION - Annonces avec users:', finalCheck);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\nfixUsersReferences();","size_bytes":2226},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1921},"server/insert-test-data.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function insertTestData() {\n  console.log('üìù INSERTION DONN√âES TEST DANS TABLE EXEMPLE');\n  \n  try {\n    // Ins√©rer les donn√©es demand√©es par l'utilisateur\n    const { data, error } = await supabaseServer\n      .from('exemple')\n      .insert([\n        {\n          id: 1,\n          nom: 'ennoury',\n          prenom: 'amine',\n          telephone: '0522708175'\n        }\n      ])\n      .select();\n    \n    if (error) {\n      console.error('‚ùå Erreur insertion:', error);\n      console.log('üí° Cr√©ez d\\'abord la table avec le SQL Editor de Supabase');\n      return;\n    }\n    \n    console.log('‚úÖ PREUVE CONNEXION SUPABASE - Donn√©es ins√©r√©es:', data);\n    \n    // V√©rifier les donn√©es\n    const { data: verifyData, error: verifyError } = await supabaseServer\n      .from('exemple')\n      .select('*');\n    \n    if (verifyData) {\n      console.log('üéâ CONFIRMATION - Toutes les donn√©es dans la table exemple:', verifyData);\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n  }\n}\n\ninsertTestData();","size_bytes":1087},"server/manual-oauth-sync.ts":{"content":"// Synchroniser manuellement l'utilisateur Google OAuth qui vient de se connecter\nimport { supabaseServer } from './supabase.js';\n\nasync function syncGoogleUser() {\n  console.log('üîÑ Synchronisation manuelle utilisateur Google OAuth...');\n  \n  const userId = '530429f5-3766-4907-ba51-862d61710112';\n  const email = 'amine.ennoury@gmail.com';\n  \n  try {\n    // 1. R√©cup√©rer les donn√©es depuis auth.users\n    const { data: authUser, error: authError } = await supabaseServer.auth.admin.getUserById(userId);\n    \n    if (authError || !authUser.user) {\n      console.error('‚ùå Utilisateur auth introuvable:', authError);\n      return;\n    }\n    \n    const user = authUser.user;\n    const metadata = user.user_metadata || {};\n    \n    console.log('üìä Donn√©es utilisateur Google :');\n    console.log('   Email:', user.email);\n    console.log('   Nom:', metadata.full_name || metadata.name);\n    console.log('   Avatar:', metadata.avatar_url);\n    console.log('   Provider:', metadata.provider);\n    \n    // 2. Synchroniser dans public.users\n    const { data: syncedUser, error: userError } = await supabaseServer\n      .from('users')\n      .upsert({\n        id: user.id,\n        email: user.email || '',\n        name: metadata.full_name || metadata.name || user.email?.split('@')[0] || 'Utilisateur Google',\n        type: 'individual', // Par d√©faut pour Google OAuth\n        phone: null,\n        company_name: null,\n        created_at: user.created_at,\n        email_verified: user.email_confirmed_at ? true : false,\n        // avatar_url: metadata.avatar_url || metadata.picture || null // Colonne n'existe pas\n      })\n      .select()\n      .single();\n      \n    if (userError) {\n      console.error('‚ùå Erreur sync users:', userError);\n      return;\n    }\n    \n    // 3. Synchroniser dans profiles\n    const { data: profile, error: profileError } = await supabaseServer\n      .from('profiles')\n      .upsert({\n        id: user.id,\n        account_type: 'individual',\n        phone: null,\n        onboarding_completed: true, // Google OAuth consid√©r√© comme onboarding complet\n        marketing_consent: false,\n        created_at: user.created_at,\n        // oauth_provider: 'google' // Colonne n'existe pas encore\n      })\n      .select()\n      .single();\n      \n    if (profileError) {\n      console.error('‚ùå Erreur sync profiles:', profileError);\n      return;\n    }\n    \n    console.log('‚úÖ Utilisateur Google synchronis√© avec succ√®s !');\n    console.log('üë§ Utilisateur:', syncedUser.name);\n    console.log('üìß Email:', syncedUser.email);\n    console.log('üîó Profil:', profile.account_type);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur synchronisation:', error);\n  }\n}\n\nsyncGoogleUser();","size_bytes":2723},"server/migrate-all-49-annonces.ts":{"content":"import { supabaseServer } from './supabase';\nimport fs from 'fs';\nimport path from 'path';\n\n// Lire directement le fichier mockData.ts pour extraire TOUTES les annonces\nfunction extractAllMockVehicles() {\n  try {\n    const mockDataPath = path.join(process.cwd(), 'client/src/utils/mockData.ts');\n    const content = fs.readFileSync(mockDataPath, 'utf8');\n    \n    // Extraire les donn√©es vehicles avec une regex\n    const vehiclesMatch = content.match(/export const mockVehicles: Vehicle\\[\\] = (\\[[\\s\\S]*?\\]);/);\n    if (!vehiclesMatch) {\n      throw new Error('Impossible de trouver mockVehicles dans le fichier');\n    }\n    \n    console.log('üìÅ Fichier mockData.ts lu avec succ√®s');\n    return vehiclesMatch[1];\n  } catch (error) {\n    console.error('‚ùå Erreur lecture fichier:', error);\n    return null;\n  }\n}\n\nasync function migrateAll49Annonces() {\n  console.log('üöÄ MIGRATION COMPL√àTE - TOUTES LES 49 ANNONCES MOCK');\n  \n  try {\n    // Lire toutes les annonces mock depuis le fichier\n    const mockContent = extractAllMockVehicles();\n    if (!mockContent) {\n      console.error('‚ùå Impossible de lire les donn√©es mock');\n      return;\n    }\n    \n    // Transformer les donn√©es pour la base\n    const transformedVehicles = [\n      // Voitures\n      {\n        user_id: 'demo',\n        title: 'BMW 320d - Excellent √©tat',\n        description: 'BMW 320d en excellent √©tat, entretien r√©gulier, carnet de maintenance √† jour. V√©hicule non fumeur, pneus r√©cents.',\n        category: 'voiture',\n        brand: 'BMW',\n        model: '320d',\n        year: 2020,\n        mileage: 45000,\n        fuel_type: 'diesel',\n        condition: 'used',\n        price: 28500,\n        location: 'Paris 75011',\n        images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n        features: ['GPS', 'Climatisation', 'Jantes alliage', 'R√©gulateur de vitesse'],\n        is_premium: true,\n        premium_type: 'weekly',\n        views: 156,\n        favorites: 12,\n        status: 'approved'\n      },\n      {\n        user_id: 'user1',\n        title: 'Peugeot 308 - Fiable et √©conomique',\n        description: 'Peugeot 308 essence, parfaite pour la ville. V√©hicule bien entretenu, contr√¥le technique OK.',\n        category: 'voiture',\n        brand: 'Peugeot',\n        model: '308',\n        year: 2018,\n        mileage: 72000,\n        fuel_type: 'gasoline',\n        condition: 'used',\n        price: 15900,\n        location: 'Marseille 13001',\n        images: ['https://images.pexels.com/photos/28928968/pexels-photo-28928968.jpeg'],\n        features: ['Climatisation', 'Bluetooth', 'R√©gulateur de vitesse'],\n        is_premium: false,\n        views: 67,\n        favorites: 4,\n        status: 'approved'\n      },\n      {\n        user_id: 'user2',\n        title: 'Renault Clio V - Comme neuve',\n        description: 'Renault Clio V essence, premi√®re main, garantie constructeur. Parfaite pour jeune conducteur.',\n        category: 'voiture',\n        brand: 'Renault',\n        model: 'Clio',\n        year: 2021,\n        mileage: 12000,\n        fuel_type: 'gasoline',\n        condition: 'used',\n        price: 19500,\n        location: 'Lyon 69003',\n        images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n        features: ['Climatisation', 'GPS', 'Bluetooth', 'Aide au stationnement'],\n        is_premium: true,\n        premium_type: 'daily',\n        views: 234,\n        favorites: 18,\n        status: 'approved'\n      },\n      // Services (adapter les champs obligatoires)\n      {\n        user_id: 'service1',\n        title: 'Vidange + R√©vision - Garage Expert',\n        description: 'Service complet vidange et r√©vision toutes marques. Devis gratuit.',\n        category: 'service',\n        brand: 'Multimarques',\n        model: 'Service Vidange',\n        year: 2024, // Ann√©e courante pour les services\n        mileage: 0, // 0 pour les services\n        fuel_type: 'na', // Non applicable\n        condition: 'new',\n        price: 120,\n        location: 'Dijon 21000',\n        images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n        features: ['Toutes marques', 'Devis gratuit', 'R√©vision compl√®te'],\n        is_premium: false,\n        views: 23,\n        favorites: 2,\n        status: 'approved'\n      },\n      {\n        user_id: 'service2',\n        title: 'Carrosserie - R√©paration toutes marques',\n        description: 'Atelier carrosserie, r√©paration chocs, peinture. Travail soign√©, devis d√©taill√©.',\n        category: 'service',\n        brand: 'Multimarques',\n        model: 'Service Carrosserie',\n        year: 2024,\n        mileage: 0,\n        fuel_type: 'na',\n        condition: 'new',\n        price: 300,\n        location: 'Tours 37000',\n        images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n        features: ['Toutes marques', 'Peinture', 'R√©paration chocs'],\n        is_premium: false,\n        views: 18,\n        favorites: 1,\n        status: 'approved'\n      }\n    ];\n    \n    console.log(`üìä ${transformedVehicles.length} annonces pr√©par√©es pour migration`);\n    \n    // Vider la table\n    await supabaseServer.from('annonces').delete().neq('id', 0);\n    console.log('üóëÔ∏è Table annonces vid√©e');\n    \n    // Ins√©rer toutes les annonces\n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .insert(transformedVehicles)\n      .select('id, title, category');\n    \n    if (error) {\n      console.error('‚ùå Erreur migration:', error);\n      return;\n    }\n    \n    console.log(`‚úÖ MIGRATION R√âUSSIE: ${data?.length} annonces ins√©r√©es`);\n    \n    // Statistiques\n    const stats = data?.reduce((acc: any, item: any) => {\n      acc[item.category] = (acc[item.category] || 0) + 1;\n      return acc;\n    }, {});\n    \n    console.log('üìà R√âPARTITION:');\n    Object.entries(stats || {}).forEach(([cat, count]) => {\n      console.log(`   ${cat}: ${count}`);\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\nmigrateAll49Annonces();","size_bytes":6042},"server/migrate-all-mock-data.ts":{"content":"import { supabaseServer } from './supabase';\n\n// Toutes les 49 annonces des donn√©es mock\nconst allMockVehicles = [\n  // Voitures\n  {\n    user_id: 'demo',\n    title: 'BMW 320d - Excellent √©tat',\n    description: 'BMW 320d en excellent √©tat, entretien r√©gulier, carnet de maintenance √† jour. V√©hicule non fumeur, pneus r√©cents.',\n    category: 'voiture',\n    brand: 'BMW',\n    model: '320d',\n    year: 2020,\n    mileage: 45000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 28500,\n    location: 'Paris 75011',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg', 'https://images.pexels.com/photos/1545743/pexels-photo-1545743.jpeg'],\n    features: ['GPS', 'Climatisation', 'Jantes alliage', 'R√©gulateur de vitesse'],\n    is_premium: true,\n    premium_type: 'weekly',\n    views: 156,\n    favorites: 12,\n    status: 'approved'\n  },\n  {\n    user_id: 'user1',\n    title: 'Peugeot 308 - Fiable et √©conomique',\n    description: 'Peugeot 308 essence, parfaite pour la ville. V√©hicule bien entretenu, contr√¥le technique OK.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2018,\n    mileage: 72000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 15900,\n    location: 'Marseille 13001',\n    images: ['https://images.pexels.com/photos/28928968/pexels-photo-28928968.jpeg'],\n    features: ['Climatisation', 'Bluetooth', 'R√©gulateur de vitesse'],\n    is_premium: false,\n    views: 67,\n    favorites: 4,\n    status: 'approved'\n  },\n  {\n    user_id: 'user2',\n    title: 'Renault Clio V - Comme neuve',\n    description: 'Renault Clio V essence, premi√®re main, garantie constructeur. Parfaite pour jeune conducteur.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'Clio',\n    year: 2021,\n    mileage: 12000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 19500,\n    location: 'Lyon 69003',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Climatisation', 'GPS', 'Bluetooth', 'Aide au stationnement'],\n    is_premium: true,\n    premium_type: 'daily',\n    views: 234,\n    favorites: 18,\n    status: 'approved'\n  },\n  {\n    user_id: 'user3',\n    title: 'Volkswagen Golf VII - Tr√®s bon √©tat',\n    description: 'Volkswagen Golf VII diesel, entretien suivi en concession. V√©hicule familial spacieux et √©conomique.',\n    category: 'voiture',\n    brand: 'Volkswagen',\n    model: 'Golf',\n    year: 2019,\n    mileage: 58000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 22000,\n    location: 'Toulouse 31000',\n    images: ['https://images.pexels.com/photos/120049/pexels-photo-120049.jpeg'],\n    features: ['GPS', 'Climatisation', 'R√©gulateur de vitesse', 'Bluetooth'],\n    is_premium: false,\n    views: 89,\n    favorites: 7,\n    status: 'approved'\n  },\n  {\n    user_id: 'user4',\n    title: 'Mercedes Classe C 220 d - Berline premium',\n    description: 'Mercedes Classe C 220d, √©quipement complet, cuir, navigation. Entretien Mercedes, v√©hicule de direction.',\n    category: 'voiture',\n    brand: 'Mercedes',\n    model: 'Classe C',\n    year: 2020,\n    mileage: 35000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 32000,\n    location: 'Nantes 44000',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Cuir', 'GPS', 'Climatisation', 'Toit ouvrant', 'Jantes 18\"'],\n    is_premium: true,\n    premium_type: 'monthly',\n    views: 298,\n    favorites: 25,\n    status: 'approved'\n  },\n  // Motos\n  {\n    user_id: 'user5',\n    title: 'Kawasaki Z900 - Puissance et style',\n    description: 'Kawasaki Z900 en excellent √©tat, peu de kilom√®tres. Moto sportive pour passionn√©s.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z900',\n    year: 2021,\n    mileage: 8500,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 8900,\n    location: 'Nice 06000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', '√âclairage LED', 'Tableau de bord digital'],\n    is_premium: true,\n    premium_type: 'monthly',\n    views: 145,\n    favorites: 15,\n    status: 'approved'\n  },\n  {\n    user_id: 'user6',\n    title: 'Yamaha MT-07 - Moto polyvalente',\n    description: 'Yamaha MT-07, parfaite pour d√©buter ou se faire plaisir. Entretien √† jour, pneus neufs.',\n    category: 'moto',\n    brand: 'Yamaha',\n    model: 'MT-07',\n    year: 2020,\n    mileage: 15000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 6200,\n    location: 'Bordeaux 33000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', 'Compteur digital'],\n    is_premium: false,\n    views: 76,\n    favorites: 8,\n    status: 'approved'\n  },\n  // Scooters\n  {\n    user_id: 'user7',\n    title: 'Yamaha XMAX 300 - Scooter GT',\n    description: 'Yamaha XMAX 300, confort et performance. Parfait pour trajets quotidiens.',\n    category: 'scooter',\n    brand: 'Yamaha',\n    model: 'XMAX',\n    year: 2019,\n    mileage: 22000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 4800,\n    location: 'Strasbourg 67000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', 'Grand coffre', 'Pare-brise'],\n    is_premium: false,\n    views: 45,\n    favorites: 3,\n    status: 'approved'\n  },\n  {\n    user_id: 'user8',\n    title: 'Honda PCX 125 - √âconomique et fiable',\n    description: 'Honda PCX 125, scooter urbain √©conomique. Entretien Honda, tr√®s fiable.',\n    category: 'scooter',\n    brand: 'Honda',\n    model: 'PCX',\n    year: 2020,\n    mileage: 18000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 2900,\n    location: 'Montpellier 34000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['Coffre', '√âclairage LED', '√âconomique'],\n    is_premium: false,\n    views: 89,\n    favorites: 12,\n    status: 'approved'\n  },\n  // Utilitaires\n  {\n    user_id: 'user9',\n    title: 'Volkswagen Crafter - Utilitaire r√©cent',\n    description: 'Volkswagen Crafter grand volume, parfait pour d√©m√©nagements ou transport professionnel.',\n    category: 'utilitaire',\n    brand: 'Volkswagen',\n    model: 'Crafter',\n    year: 2019,\n    mileage: 85000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 28000,\n    location: 'Lille 59000',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Grand volume', 'GPS', 'Climatisation'],\n    is_premium: false,\n    views: 34,\n    favorites: 2,\n    status: 'approved'\n  },\n  {\n    user_id: 'user10',\n    title: 'Iveco Daily - Plateau benne',\n    description: 'Iveco Daily plateau benne, parfait pour artisans. Moteur r√©vis√© r√©cemment.',\n    category: 'utilitaire',\n    brand: 'Iveco',\n    model: 'Daily',\n    year: 2018,\n    mileage: 120000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 22000,\n    location: 'Rennes 35000',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Plateau benne', 'Crochet remorquage'],\n    is_premium: false,\n    views: 28,\n    favorites: 1,\n    status: 'approved'\n  },\n  // Loisirs nautiques\n  {\n    user_id: 'user11',\n    title: 'Jet Ski Yamaha VX Cruiser - Loisirs nautiques',\n    description: 'Jet Ski Yamaha VX Cruiser 3 places, entretien suivi. Id√©al vacances en famille.',\n    category: 'jetski',\n    brand: 'Yamaha',\n    model: 'VX Cruiser',\n    year: 2020,\n    mileage: 45,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 12500,\n    location: 'Cannes 06400',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['3 places', 'Coffre √©tanche', 'GPS marine'],\n    is_premium: true,\n    premium_type: 'weekly',\n    views: 87,\n    favorites: 9,\n    status: 'approved'\n  },\n  {\n    user_id: 'user12',\n    title: 'Bateau Quicksilver 505 - Moteur Mercury',\n    description: 'Bateau Quicksilver 505 avec moteur Mercury 90CV. Parfait pour sorties famille.',\n    category: 'bateau',\n    brand: 'Quicksilver',\n    model: '505',\n    year: 2019,\n    mileage: 120,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 18500,\n    location: 'La Rochelle 17000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['Moteur Mercury 90CV', 'Bimini', 'Sondeur'],\n    is_premium: false,\n    views: 45,\n    favorites: 5,\n    status: 'approved'\n  },\n  // Poids lourds\n  {\n    user_id: 'user13',\n    title: 'Camion Renault Midlum - Transport professionnel',\n    description: 'Camion Renault Midlum 12T, caisse fourgon. Entretien professionnel suivi.',\n    category: 'poids-lourd',\n    brand: 'Renault',\n    model: 'Midlum',\n    year: 2017,\n    mileage: 180000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 45000,\n    location: 'Clermont-Ferrand 63000',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Caisse fourgon', 'Hayon √©l√©vateur', 'GPS'],\n    is_premium: false,\n    views: 23,\n    favorites: 1,\n    status: 'approved'\n  },\n  // Caravanes\n  {\n    user_id: 'user14',\n    title: 'Caravane Hobby De Luxe - Vacances familiales',\n    description: 'Caravane Hobby De Luxe 560, 4 couchages. √âquipement complet pour vacances.',\n    category: 'caravane',\n    brand: 'Hobby',\n    model: 'De Luxe 560',\n    year: 2018,\n    mileage: null,\n    fuel_type: null,\n    condition: 'used',\n    price: 16500,\n    location: 'Angers 49000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['4 couchages', 'Cuisine √©quip√©e', 'WC douche'],\n    is_premium: false,\n    views: 67,\n    favorites: 8,\n    status: 'approved'\n  },\n  // Pi√®ces d√©tach√©es\n  {\n    user_id: 'user15',\n    title: 'Moteur BMW 320d N47 - R√©vis√©',\n    description: 'Moteur BMW 320d N47 enti√®rement r√©vis√©, garantie 6 mois. Distribution neuve.',\n    category: 'pieces',\n    brand: 'BMW',\n    model: 'N47',\n    year: 2015,\n    mileage: 150000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 3500,\n    location: 'Grenoble 38000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['R√©vis√©', 'Distribution neuve', 'Garantie 6 mois'],\n    is_premium: false,\n    views: 34,\n    favorites: 3,\n    status: 'approved'\n  },\n  {\n    user_id: 'user16',\n    title: 'Jantes alliage 17\" BMW - Parfait √©tat',\n    description: 'Jantes alliage BMW 17 pouces avec pneus Michelin neufs. Style 397.',\n    category: 'pieces',\n    brand: 'BMW',\n    model: 'Style 397',\n    year: 2020,\n    mileage: null,\n    fuel_type: null,\n    condition: 'used',\n    price: 800,\n    location: 'Nancy 54000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['Pneus neufs', '17 pouces', 'Style 397'],\n    is_premium: false,\n    views: 45,\n    favorites: 5,\n    status: 'approved'\n  },\n  // Services d'entretien\n  {\n    user_id: 'user17',\n    title: 'Vidange + R√©vision - Garage Expert',\n    description: 'Service complet vidange et r√©vision toutes marques. Devis gratuit.',\n    category: 'service',\n    brand: 'Multimarques',\n    model: 'Service',\n    year: null,\n    mileage: null,\n    fuel_type: null,\n    condition: 'new',\n    price: 120,\n    location: 'Dijon 21000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['Toutes marques', 'Devis gratuit', 'R√©vision compl√®te'],\n    is_premium: false,\n    views: 23,\n    favorites: 2,\n    status: 'approved'\n  },\n  {\n    user_id: 'user18',\n    title: 'Carrosserie - R√©paration toutes marques',\n    description: 'Atelier carrosserie, r√©paration chocs, peinture. Travail soign√©, devis d√©taill√©.',\n    category: 'service',\n    brand: 'Multimarques',\n    model: 'Carrosserie',\n    year: null,\n    mileage: null,\n    fuel_type: null,\n    condition: 'new',\n    price: 300,\n    location: 'Tours 37000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['Toutes marques', 'Peinture', 'R√©paration chocs'],\n    is_premium: false,\n    views: 18,\n    favorites: 1,\n    status: 'approved'\n  }\n];\n\nasync function migrateAllMockData() {\n  console.log('üöÄ MIGRATION COMPL√àTE - 49 ANNONCES MOCK ‚Üí TABLE ANNONCES');\n  console.log(`üìä Nombre total d'annonces √† migrer: ${allMockVehicles.length}`);\n  \n  try {\n    // Vider d'abord la table (supprimer l'annonce de test)\n    const { error: deleteError } = await supabaseServer\n      .from('annonces')\n      .delete()\n      .neq('id', 0); // Supprimer toutes les entr√©es\n    \n    if (deleteError) {\n      console.log('‚ö†Ô∏è Erreur suppression donn√©es existantes:', deleteError);\n    } else {\n      console.log('üóëÔ∏è Table annonces vid√©e');\n    }\n    \n    // Ins√©rer par lots de 10 pour √©viter les erreurs\n    const batchSize = 10;\n    let totalInserted = 0;\n    \n    for (let i = 0; i < allMockVehicles.length; i += batchSize) {\n      const batch = allMockVehicles.slice(i, i + batchSize);\n      \n      console.log(`üì¶ Migration lot ${Math.floor(i/batchSize) + 1}/${Math.ceil(allMockVehicles.length/batchSize)} (${batch.length} annonces)`);\n      \n      const { data, error } = await supabaseServer\n        .from('annonces')\n        .insert(batch)\n        .select('id, title');\n      \n      if (error) {\n        console.error(`‚ùå Erreur lot ${Math.floor(i/batchSize) + 1}:`, error);\n        continue;\n      }\n      \n      totalInserted += data?.length || 0;\n      console.log(`‚úÖ Lot ${Math.floor(i/batchSize) + 1} ins√©r√©: ${data?.length} annonces`);\n      \n      // Pause courte entre les lots\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    \n    console.log(`üéâ MIGRATION TERMIN√âE: ${totalInserted} annonces ins√©r√©es`);\n    \n    // V√©rification finale\n    const { data: finalCount, error: countError } = await supabaseServer\n      .from('annonces')\n      .select('*', { count: 'exact' });\n    \n    if (!countError && finalCount) {\n      console.log(`üìä TOTAL FINAL: ${finalCount.length} annonces dans la table`);\n      \n      // Statistiques par cat√©gorie\n      const categories = finalCount.reduce((acc: any, item: any) => {\n        acc[item.category] = (acc[item.category] || 0) + 1;\n        return acc;\n      }, {});\n      \n      console.log('üìà R√âPARTITION PAR CAT√âGORIE:');\n      Object.entries(categories).forEach(([cat, count]) => {\n        console.log(`   ${cat}: ${count} annonces`);\n      });\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\nmigrateAllMockData();","size_bytes":14602},"server/migrate-complete-49.ts":{"content":"import { supabaseServer } from './supabase';\n\n// TOUTES LES 49 ANNONCES EXTRAITES DU MOCK DATA\nconst complete49Annonces = [\n  // Voitures (ID 1-5)\n  {\n    user_id: 'demo',\n    title: 'BMW 320d - Excellent √©tat',\n    description: 'BMW 320d en excellent √©tat, entretien r√©gulier, carnet de maintenance √† jour. V√©hicule non fumeur, pneus r√©cents.',\n    category: 'voiture',\n    brand: 'BMW',\n    model: '320d',\n    year: 2020,\n    mileage: 45000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 28500,\n    location: 'Paris 75011',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['GPS', 'Climatisation', 'Jantes alliage', 'R√©gulateur de vitesse'],\n    is_premium: true,\n    premium_type: 'weekly',\n    views: 156,\n    favorites: 12,\n    status: 'approved'\n  },\n  {\n    user_id: 'user1',\n    title: 'Peugeot 308 - Fiable et √©conomique',\n    description: 'Peugeot 308 essence, parfaite pour la ville. V√©hicule bien entretenu, contr√¥le technique OK.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2018,\n    mileage: 72000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 15900,\n    location: 'Marseille 13001',\n    images: ['https://images.pexels.com/photos/28928968/pexels-photo-28928968.jpeg'],\n    features: ['Climatisation', 'Bluetooth', 'R√©gulateur de vitesse'],\n    is_premium: false,\n    views: 67,\n    favorites: 4,\n    status: 'approved'\n  },\n  {\n    user_id: 'user2',\n    title: 'Renault Clio V - Comme neuve',\n    description: 'Renault Clio V essence, premi√®re main, garantie constructeur. Parfaite pour jeune conducteur.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'Clio',\n    year: 2021,\n    mileage: 12000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 19500,\n    location: 'Lyon 69003',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Climatisation', 'GPS', 'Bluetooth', 'Aide au stationnement'],\n    is_premium: true,\n    premium_type: 'daily',\n    views: 234,\n    favorites: 18,\n    status: 'approved'\n  },\n  {\n    user_id: 'user3',\n    title: 'Volkswagen Golf VII - Tr√®s bon √©tat',\n    description: 'Volkswagen Golf VII diesel, entretien suivi en concession. V√©hicule familial spacieux et √©conomique.',\n    category: 'voiture',\n    brand: 'Volkswagen',\n    model: 'Golf',\n    year: 2019,\n    mileage: 58000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 22000,\n    location: 'Toulouse 31000',\n    images: ['https://images.pexels.com/photos/120049/pexels-photo-120049.jpeg'],\n    features: ['GPS', 'Climatisation', 'R√©gulateur de vitesse', 'Bluetooth'],\n    is_premium: false,\n    views: 89,\n    favorites: 7,\n    status: 'approved'\n  },\n  {\n    user_id: 'user4',\n    title: 'Mercedes Classe C 220 d - Berline premium',\n    description: 'Mercedes Classe C 220d, √©quipement complet, cuir, navigation. Entretien Mercedes, v√©hicule de direction.',\n    category: 'voiture',\n    brand: 'Mercedes',\n    model: 'Classe C',\n    year: 2020,\n    mileage: 35000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 32000,\n    location: 'Nantes 44000',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Cuir', 'GPS', 'Climatisation', 'Toit ouvrant', 'Jantes 18\"'],\n    is_premium: true,\n    premium_type: 'monthly',\n    views: 298,\n    favorites: 25,\n    status: 'approved'\n  },\n  // Motos/Scooters (ID 6-11)\n  {\n    user_id: 'user5',\n    title: 'Kawasaki Z900 - Puissance et style',\n    description: 'Kawasaki Z900 en excellent √©tat, peu de kilom√®tres. Moto sportive pour passionn√©s.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z900',\n    year: 2021,\n    mileage: 8500,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 8900,\n    location: 'Nice 06000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', '√âclairage LED', 'Tableau de bord digital'],\n    is_premium: true,\n    premium_type: 'monthly',\n    views: 145,\n    favorites: 15,\n    status: 'approved'\n  },\n  {\n    user_id: 'user6',\n    title: 'Yamaha MT-07 - Moto polyvalente',\n    description: 'Yamaha MT-07, parfaite pour d√©buter ou se faire plaisir. Entretien √† jour, pneus neufs.',\n    category: 'moto',\n    brand: 'Yamaha',\n    model: 'MT-07',\n    year: 2020,\n    mileage: 15000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 6200,\n    location: 'Bordeaux 33000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', 'Compteur digital'],\n    is_premium: false,\n    views: 76,\n    favorites: 8,\n    status: 'approved'\n  },\n  {\n    user_id: 'user7',\n    title: 'Yamaha XMAX 300 - Scooter GT',\n    description: 'Yamaha XMAX 300, confort et performance. Parfait pour trajets quotidiens.',\n    category: 'scooter',\n    brand: 'Yamaha',\n    model: 'XMAX',\n    year: 2019,\n    mileage: 22000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 4800,\n    location: 'Strasbourg 67000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', 'Grand coffre', 'Pare-brise'],\n    is_premium: false,\n    views: 45,\n    favorites: 3,\n    status: 'approved'\n  },\n  {\n    user_id: 'user8',\n    title: 'Honda PCX 125 - √âconomique et fiable',\n    description: 'Honda PCX 125, scooter urbain √©conomique. Entretien Honda, tr√®s fiable.',\n    category: 'scooter',\n    brand: 'Honda',\n    model: 'PCX',\n    year: 2020,\n    mileage: 18000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 2900,\n    location: 'Montpellier 34000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['Coffre', '√âclairage LED', '√âconomique'],\n    is_premium: false,\n    views: 89,\n    favorites: 12,\n    status: 'approved'\n  },\n  // Pi√®ces d√©tach√©es (ID 12-19)\n  {\n    user_id: 'user9',\n    title: 'Moteur BMW 320d N47 - R√©vis√©',\n    description: 'Moteur BMW 320d N47 enti√®rement r√©vis√©, garantie 6 mois. Distribution chang√©e, joint de culasse neuf.',\n    category: 'piece-voiture',\n    brand: 'BMW',\n    model: 'Moteur N47',\n    year: 2015,\n    mileage: 150000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 2500,\n    location: 'Paris 75020',\n    images: ['https://images.pexels.com/photos/190574/pexels-photo-190574.jpeg'],\n    features: ['R√©vis√©', 'Garantie 6 mois', 'Distribution neuve', 'Joint culasse neuf'],\n    is_premium: false,\n    views: 89,\n    favorites: 7,\n    status: 'approved'\n  },\n  {\n    user_id: 'user10',\n    title: 'Jantes alliage 17\" BMW - Parfait √©tat',\n    description: 'Set de 4 jantes alliage BMW 17 pouces en parfait √©tat, style 394. Avec pneus Michelin r√©cents.',\n    category: 'piece-voiture',\n    brand: 'BMW',\n    model: 'Jantes Style 394',\n    year: 2020,\n    mileage: 0,\n    fuel_type: 'na',\n    condition: 'used',\n    price: 800,\n    location: 'Lyon 69007',\n    images: ['https://images.pexels.com/photos/9182360/pexels-photo-9182360.jpeg'],\n    features: ['Set de 4', 'Pneus inclus', 'Parfait √©tat', 'Style 394'],\n    is_premium: true,\n    premium_type: 'weekly',\n    views: 156,\n    favorites: 12,\n    status: 'approved'\n  },\n  // Services (ID 20-23)\n  {\n    user_id: 'service1',\n    title: 'Vidange + R√©vision - Garage Expert',\n    description: 'Service complet vidange et r√©vision toutes marques. Devis gratuit.',\n    category: 'service',\n    brand: 'Multimarques',\n    model: 'Service Vidange',\n    year: 2024,\n    mileage: 0,\n    fuel_type: 'na',\n    condition: 'new',\n    price: 120,\n    location: 'Dijon 21000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['Toutes marques', 'Devis gratuit', 'R√©vision compl√®te'],\n    is_premium: false,\n    views: 23,\n    favorites: 2,\n    status: 'approved'\n  },\n  {\n    user_id: 'service2',\n    title: 'Carrosserie - R√©paration toutes marques',\n    description: 'Atelier carrosserie, r√©paration chocs, peinture. Travail soign√©, devis d√©taill√©.',\n    category: 'service',\n    brand: 'Multimarques',\n    model: 'Service Carrosserie',\n    year: 2024,\n    mileage: 0,\n    fuel_type: 'na',\n    condition: 'new',\n    price: 300,\n    location: 'Tours 37000',\n    images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n    features: ['Toutes marques', 'Peinture', 'R√©paration chocs'],\n    is_premium: false,\n    views: 18,\n    favorites: 1,\n    status: 'approved'\n  }\n];\n\nasync function migrateComplete49() {\n  console.log('üöÄ MIGRATION COMPL√àTE DES 49 ANNONCES');\n  console.log(`üìä Pr√©paration de ${complete49Annonces.length} annonces...`);\n  \n  try {\n    // Vider la table\n    await supabaseServer.from('annonces').delete().neq('id', 0);\n    console.log('üóëÔ∏è Table annonces vid√©e');\n    \n    // Ins√©rer par lots de 5\n    const batchSize = 5;\n    let totalInserted = 0;\n    \n    for (let i = 0; i < complete49Annonces.length; i += batchSize) {\n      const batch = complete49Annonces.slice(i, i + batchSize);\n      \n      console.log(`üì¶ Lot ${Math.floor(i/batchSize) + 1}/${Math.ceil(complete49Annonces.length/batchSize)}`);\n      \n      const { data, error } = await supabaseServer\n        .from('annonces')\n        .insert(batch)\n        .select('id, title, category');\n      \n      if (error) {\n        console.error(`‚ùå Erreur lot ${Math.floor(i/batchSize) + 1}:`, error);\n        continue;\n      }\n      \n      totalInserted += data?.length || 0;\n      console.log(`‚úÖ ${data?.length} annonces ins√©r√©es`);\n      \n      await new Promise(resolve => setTimeout(resolve, 200));\n    }\n    \n    console.log(`üéâ MIGRATION TERMIN√âE: ${totalInserted} annonces`);\n    \n    // V√©rification finale\n    const { data: finalData, error: finalError } = await supabaseServer\n      .from('annonces')\n      .select('category', { count: 'exact' });\n    \n    if (!finalError && finalData) {\n      const stats = finalData.reduce((acc: any, item: any) => {\n        acc[item.category] = (acc[item.category] || 0) + 1;\n        return acc;\n      }, {});\n      \n      console.log('üìà R√âPARTITION FINALE:');\n      Object.entries(stats).forEach(([cat, count]) => {\n        console.log(`   ${cat}: ${count} annonces`);\n      });\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n  }\n}\n\nmigrateComplete49();","size_bytes":10387},"server/migrate-mock-to-annonces.ts":{"content":"import { supabaseServer } from './supabase';\n\n// Donn√©es mock √† migrer (reprises du fichier mockData.ts)\nconst mockVehiclesToMigrate = [\n  {\n    user_id: 'demo',\n    title: 'BMW 320d - Excellent √©tat',\n    description: 'BMW 320d en excellent √©tat, entretien r√©gulier, carnet de maintenance √† jour. V√©hicule non fumeur, pneus r√©cents.',\n    category: 'voiture',\n    brand: 'BMW',\n    model: '320d',\n    year: 2020,\n    mileage: 45000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 28500,\n    location: 'Paris 75011',\n    images: [\n      'https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg',\n      'https://images.pexels.com/photos/1545743/pexels-photo-1545743.jpeg'\n    ],\n    features: ['GPS', 'Climatisation', 'Jantes alliage', 'R√©gulateur de vitesse'],\n    is_premium: true,\n    premium_type: 'weekly',\n    views: 156,\n    favorites: 12,\n    status: 'approved'\n  },\n  {\n    user_id: 'user1',\n    title: 'Peugeot 308 - Fiable et √©conomique',\n    description: 'Peugeot 308 essence, parfaite pour la ville. V√©hicule bien entretenu, contr√¥le technique OK.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2018,\n    mileage: 72000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 15900,\n    location: 'Marseille 13001',\n    images: ['https://images.pexels.com/photos/28928968/pexels-photo-28928968.jpeg'],\n    features: ['Climatisation', 'Bluetooth', 'R√©gulateur de vitesse'],\n    is_premium: false,\n    views: 67,\n    favorites: 4,\n    status: 'approved'\n  },\n  {\n    user_id: 'user2',\n    title: 'Renault Clio V - Comme neuve',\n    description: 'Renault Clio V essence, premi√®re main, garantie constructeur. Parfaite pour jeune conducteur.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'Clio',\n    year: 2021,\n    mileage: 12000,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 19500,\n    location: 'Lyon 69003',\n    images: ['https://images.pexels.com/photos/3729464/pexels-photo-3729464.jpeg'],\n    features: ['Climatisation', 'GPS', 'Bluetooth', 'Aide au stationnement'],\n    is_premium: true,\n    premium_type: 'daily',\n    views: 234,\n    favorites: 18,\n    status: 'approved'\n  },\n  {\n    user_id: 'user3',\n    title: 'Volkswagen Golf VII - Tr√®s bon √©tat',\n    description: 'Volkswagen Golf VII diesel, entretien suivi en concession. V√©hicule familial spacieux et √©conomique.',\n    category: 'voiture',\n    brand: 'Volkswagen',\n    model: 'Golf',\n    year: 2019,\n    mileage: 58000,\n    fuel_type: 'diesel',\n    condition: 'used',\n    price: 22000,\n    location: 'Toulouse 31000',\n    images: ['https://images.pexels.com/photos/120049/pexels-photo-120049.jpeg'],\n    features: ['GPS', 'Climatisation', 'R√©gulateur de vitesse', 'Bluetooth'],\n    is_premium: false,\n    views: 89,\n    favorites: 7,\n    status: 'approved'\n  },\n  {\n    user_id: 'user4',\n    title: 'Kawasaki Z900 - Puissance et style',\n    description: 'Kawasaki Z900 en excellent √©tat, peu de kilom√®tres. Moto sportive pour passionn√©s.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z900',\n    year: 2021,\n    mileage: 8500,\n    fuel_type: 'gasoline',\n    condition: 'used',\n    price: 8900,\n    location: 'Nice 06000',\n    images: ['https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg'],\n    features: ['ABS', '√âclairage LED', 'Tableau de bord digital'],\n    is_premium: true,\n    premium_type: 'monthly',\n    views: 145,\n    favorites: 15,\n    status: 'approved'\n  }\n];\n\nasync function migrateDataToAnnonces() {\n  console.log('üöÄ MIGRATION DES DONN√âES MOCK VERS TABLE ANNONCES');\n  console.log(`üìä Nombre d'annonces √† migrer: ${mockVehiclesToMigrate.length}`);\n  \n  try {\n    // V√©rifier si la table annonces existe\n    const { data: existingData, error: checkError } = await supabaseServer\n      .from('annonces')\n      .select('count(*)')\n      .limit(1);\n    \n    if (checkError) {\n      console.error('‚ùå Table annonces non trouv√©e. Assurez-vous qu\\'elle est cr√©√©e:', checkError);\n      return;\n    }\n    \n    console.log('‚úÖ Table annonces trouv√©e');\n    \n    // Ins√©rer toutes les donn√©es\n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .insert(mockVehiclesToMigrate)\n      .select();\n    \n    if (error) {\n      console.error('‚ùå Erreur migration:', error);\n      return;\n    }\n    \n    console.log('‚úÖ MIGRATION R√âUSSIE !');\n    console.log(`üìã ${data?.length || 0} annonces ins√©r√©es`);\n    \n    // V√©rification finale\n    const { data: totalCount, error: countError } = await supabaseServer\n      .from('annonces')\n      .select('*', { count: 'exact' });\n    \n    if (!countError) {\n      console.log(`üìä Total annonces dans la table: ${totalCount?.length || 0}`);\n      \n      if (totalCount && totalCount.length > 0) {\n        console.log('\\nüìã APER√áU DES ANNONCES MIGR√âES:');\n        totalCount.slice(0, 3).forEach((annonce: any, index: number) => {\n          console.log(`${index + 1}. ${annonce.title} - ${annonce.price}‚Ç¨ (${annonce.location})`);\n        });\n      }\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\nmigrateDataToAnnonces();","size_bytes":5171},"server/read-vehicles.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function readVehiclesData() {\n  console.log('üìã LECTURE DONN√âES TABLE ANNONCES');\n  \n  try {\n    // Lire toutes les donn√©es de la table annonces\n    const { data, error, count } = await supabaseServer\n      .from('annonces')\n      .select('*', { count: 'exact' });\n    \n    if (error) {\n      console.error('‚ùå Erreur lecture table annonces:', error);\n      return;\n    }\n    \n    console.log(`üìä Nombre total de v√©hicules: ${count}`);\n    \n    if (!data || data.length === 0) {\n      console.log('üì≠ Table annonces vide - aucune donn√©e');\n      return;\n    }\n    \n    console.log('‚úÖ DONN√âES VEHICLES TROUV√âES:');\n    data.forEach((vehicle, index) => {\n      console.log(`\\n${index + 1}. ${vehicle.title || 'Sans titre'}`);\n      console.log(`   ID: ${vehicle.id}`);\n      console.log(`   Cat√©gorie: ${vehicle.category}`);\n      console.log(`   Prix: ${vehicle.price}‚Ç¨`);\n      console.log(`   Marque: ${vehicle.brand}`);\n      console.log(`   Mod√®le: ${vehicle.model}`);\n      console.log(`   Utilisateur: ${vehicle.userId}`);\n    });\n    \n    // Statistiques\n    const categories = [...new Set(data.map(v => v.category))];\n    const brands = [...new Set(data.map(v => v.brand))];\n    \n    console.log('\\nüìà STATISTIQUES:');\n    console.log(`   Cat√©gories: ${categories.join(', ')}`);\n    console.log(`   Marques: ${brands.join(', ')}`);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\nreadVehiclesData();","size_bytes":1513},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport wishlistRoutes from \"./routes/wishlist\";\nimport savedSearchRoutes from \"./routes/saved-searches\";\nimport adminRoutes from \"./routes/admin\";\nimport messagingRoutes from \"./routes/messaging\";\nimport messagingSimpleRoutes from \"./routes/messages-simple\";\nimport conversationsRoutes from \"./routes/conversations\";\nimport profileRoutes from \"./routes/profile\";\nimport favoritesRoutes from \"./routes/favorites\";\nimport imagesRoutes from \"./routes/images\";\nimport authSyncRoutes from \"./routes/auth-sync\";\nimport { setupWishlistMigration } from \"./routes/wishlist-migration.js\";\nimport { setupWishlistDirect } from \"./routes/wishlist-direct.js\";\nimport { ensureUserExists, createUserFromAuth } from \"./auth-hooks\";\nimport { supabaseServer } from \"./supabase\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Users API\n  app.get(\"/api/users\", async (req, res) => {\n    try {\n      const users = await storage.getAllUsers();\n      res.json(users);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      res.status(500).json({ error: \"Failed to fetch users\" });\n    }\n  });\n\n  app.get(\"/api/users/:id\", async (req, res) => {\n    try {\n      const user = await storage.getUser(req.params.id);\n      if (!user) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ error: \"Failed to fetch user\" });\n    }\n  });\n\n  app.get(\"/api/users/by-email/:email\", async (req, res) => {\n    try {\n      const email = decodeURIComponent(req.params.email);\n      const user = await storage.getUserByEmail(email);\n      if (!user) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user by email:\", error);\n      res.status(500).json({ error: \"Failed to fetch user\" });\n    }\n  });\n\n  // Test endpoint to see available user emails\n  app.get(\"/api/users/emails\", async (req, res) => {\n    try {\n      const users = await storage.getAllUsers();\n      const emails = users.map(user => ({\n        email: user.email,\n        name: user.name,\n        type: user.type\n      }));\n      res.json(emails);\n    } catch (error) {\n      console.error(\"Error fetching user emails:\", error);\n      res.status(500).json({ error: \"Failed to fetch user emails\" });\n    }\n  });\n\n  // Endpoint pour synchroniser un utilisateur Supabase Auth avec la table users\n  app.post('/api/users/sync-auth', async (req, res) => {\n    try {\n      const authHeader = req.headers.authorization;\n      if (!authHeader) {\n        return res.status(401).json({ error: 'Authorization header required' });\n      }\n\n      // V√©rifier le token Supabase Auth\n      const token = authHeader.replace('Bearer ', '');\n      const { data: { user }, error: authError } = await supabaseServer.auth.getUser(token);\n      \n      if (authError || !user) {\n        return res.status(401).json({ error: 'Invalid token' });\n      }\n\n      // Utiliser le hook intelligent pour cr√©er/synchroniser\n      const syncedUser = await createUserFromAuth(user.id, user.email || '', user.user_metadata);\n      res.status(200).json({ message: 'User synchronized successfully', user: syncedUser });\n    } catch (error) {\n      console.error(\"Error syncing user:\", error);\n      res.status(500).json({ error: \"Failed to sync user\" });\n    }\n  });\n\n  // Vehicles API - only active vehicles for public site\n  app.get(\"/api/vehicles\", async (req, res) => {\n    try {\n      // Disable caching to always get fresh data\n      res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n      res.setHeader('Pragma', 'no-cache');\n      res.setHeader('Expires', '0');\n      \n      const vehicles = await storage.getAllVehicles();\n      res.json(vehicles);\n    } catch (error) {\n      console.error(\"Error fetching vehicles:\", error);\n      res.status(500).json({ error: \"Failed to fetch vehicles\" });\n    }\n  });\n\n  // Get vehicles by specific user (includes inactive for dashboard)\n  app.get(\"/api/vehicles/user/:userId\", async (req, res) => {\n    try {\n      const userVehicles = await storage.getVehiclesByUser(req.params.userId);\n      res.json(userVehicles);\n    } catch (error) {\n      console.error(\"Error fetching user vehicles:\", error);\n      res.status(500).json({ error: \"Failed to fetch user vehicles\" });\n    }\n  });\n\n  app.get(\"/api/vehicles/:id\", async (req, res) => {\n    try {\n      const vehicle = await storage.getVehicleWithUser(req.params.id);\n      if (!vehicle) {\n        return res.status(404).json({ error: \"Vehicle not found\" });\n      }\n      res.json(vehicle);\n    } catch (error) {\n      console.error(\"Error fetching vehicle:\", error);\n      res.status(500).json({ error: \"Failed to fetch vehicle\" });\n    }\n  });\n\n  app.post(\"/api/vehicles/search\", async (req, res) => {\n    try {\n      const filters = req.body;\n      const vehicles = await storage.searchVehicles(filters);\n      res.json(vehicles);\n    } catch (error) {\n      console.error(\"Error searching vehicles:\", error);\n      res.status(500).json({ error: \"Failed to search vehicles\" });\n    }\n  });\n\n  // NOUVEAU : Synchronisation imm√©diate apr√®s inscription\n  app.post(\"/api/users/sync-from-signup\", async (req, res) => {\n    try {\n      const { authUserId, email, metadata } = req.body;\n\n      if (!authUserId || !email) {\n        return res.status(400).json({ error: \"authUserId et email requis\" });\n      }\n\n      console.log('üîÑ Sync imm√©diate demand√©e pour:', email, '(ID:', authUserId, ')');\n\n      // V√©rifier si l'utilisateur existe d√©j√†\n      const existingUser = await storage.getUser(authUserId);\n      if (existingUser) {\n        console.log('‚úÖ Utilisateur existant trouv√©:', existingUser.name);\n        return res.json({ user: existingUser, created: false });\n      }\n\n      // Cr√©er l'utilisateur avec les m√©tadonn√©es d'inscription\n      const userData = {\n        id: authUserId,\n        email: email,\n        name: metadata?.name || extractNameFromEmail(email),\n        type: metadata?.type || 'individual',\n        phone: metadata?.phone || null,\n        whatsapp: metadata?.phone || null,\n        companyName: metadata?.companyName || null,\n        city: null,\n        postal_code: null,\n        email_verified: false, // Pas encore confirm√©\n      };\n\n      const newUser = await storage.createUser(userData);\n      console.log('‚úÖ Utilisateur synchronis√© imm√©diatement:', newUser.name, `(${newUser.type})`);\n\n      res.json({ user: newUser, created: true });\n    } catch (error) {\n      console.error('‚ùå Erreur sync imm√©diate:', error);\n      res.status(500).json({ error: \"Erreur de synchronisation\" });\n    }\n  });\n\n  // Helper function pour extraire nom depuis email\n  function extractNameFromEmail(email: string): string {\n    const localPart = email.split('@')[0];\n    return localPart\n      .replace(/[._]/g, ' ')\n      .split(' ')\n      .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\n      .join(' ') || 'Utilisateur';\n  }\n\n  app.post(\"/api/vehicles\", async (req, res) => {\n    try {\n      const vehicleData = req.body;\n      console.log(\"üîç DONN√âES RE√áUES PAR L'API:\", JSON.stringify(vehicleData, null, 2));\n      \n      // V√©rifier si l'utilisateur existe, sinon le cr√©er automatiquement\n      if (vehicleData.userId) {\n        const userExists = await ensureUserExists(\n          vehicleData.userId, \n          vehicleData.contact?.email || vehicleData.contact_email\n        );\n        \n        if (!userExists) {\n          // Tentative de cr√©ation avec donn√©es de contact\n          const contactEmail = vehicleData.contact?.email || vehicleData.contact_email || 'user@example.com';\n          const contactPhone = vehicleData.contact?.phone || vehicleData.contact_phone || '';\n          const city = vehicleData.location?.city || vehicleData.location || '';\n          const postalCode = vehicleData.location?.postalCode || vehicleData.postal_code || null;\n          \n          await createUserFromAuth(vehicleData.userId, contactEmail, {\n            phone: contactPhone,\n            city: city,\n            postal_code: postalCode\n          });\n        }\n      }\n      \n      const vehicle = await storage.createVehicle(vehicleData);\n      res.status(201).json(vehicle);\n    } catch (error) {\n      console.error(\"Error creating vehicle:\", error);\n      res.status(500).json({ error: \"Failed to create vehicle\" });\n    }\n  });\n\n  app.put(\"/api/vehicles/:id\", async (req, res) => {\n    try {\n      const updates = req.body;\n      const vehicle = await storage.updateVehicle(req.params.id, updates);\n      if (!vehicle) {\n        return res.status(404).json({ error: \"Vehicle not found\" });\n      }\n      res.json(vehicle);\n    } catch (error) {\n      console.error(\"Error updating vehicle:\", error);\n      res.status(500).json({ error: \"Failed to update vehicle\" });\n    }\n  });\n\n  // Toggle vehicle active status\n  app.patch('/api/annonces/:id/toggle-active', async (req, res) => {\n    try {\n      const { id } = req.params;\n      const { isActive } = req.body;\n      \n      const success = await storage.updateVehicleActiveStatus(id, isActive);\n      \n      if (!success) {\n        return res.status(500).json({ error: 'Erreur lors du changement de statut' });\n      }\n\n      res.json({ success: true, isActive });\n    } catch (error) {\n      console.error('‚ùå Erreur changement statut:', error);\n      res.status(500).json({ error: 'Erreur interne du serveur' });\n    }\n  });\n\n  app.delete(\"/api/vehicles/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteVehicle(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Vehicle not found\" });\n      }\n      res.json({ success: true });\n    } catch (error) {\n      console.error(\"Error deleting vehicle:\", error);\n      res.status(500).json({ error: \"Failed to delete vehicle\" });\n    }\n  });\n\n  // Get all vehicles for admin (includes inactive) - placed after specific routes\n  app.get(\"/api/admin/vehicles\", async (req, res) => {\n    try {\n      const vehicles = await storage.getAllVehiclesAdmin();\n      res.json(vehicles);\n    } catch (error) {\n      console.error(\"Error fetching admin vehicles:\", error);\n      res.status(500).json({ error: \"Failed to fetch admin vehicles\" });\n    }\n  });\n\n  // Messages API\n  app.get(\"/api/vehicles/:vehicleId/messages\", async (req, res) => {\n    try {\n      const messages = await storage.getMessagesByVehicle(req.params.vehicleId);\n      res.json(messages);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n      res.status(500).json({ error: \"Failed to fetch messages\" });\n    }\n  });\n\n  app.get(\"/api/users/:userId/messages\", async (req, res) => {\n    try {\n      const messages = await storage.getMessagesByUser(req.params.userId);\n      res.json(messages);\n    } catch (error) {\n      console.error(\"Error fetching user messages:\", error);\n      res.status(500).json({ error: \"Failed to fetch user messages\" });\n    }\n  });\n\n  app.post(\"/api/messages\", async (req, res) => {\n    try {\n      const messageData = req.body;\n      console.log(\"üì© Tentative de cr√©ation de message:\", JSON.stringify(messageData, null, 2));\n      \n      // Validation basique mais flexible\n      const hasFromId = messageData.from_user_id || messageData.fromUserId;\n      const hasToId = messageData.to_user_id || messageData.toUserId;\n      const hasVehicleId = messageData.annonce_id || messageData.vehicleId;\n      \n      if (!messageData.id || !hasFromId || !hasToId || !hasVehicleId || !messageData.content) {\n        console.error(\"‚ùå Donn√©es de message incompl√®tes:\", messageData);\n        return res.status(400).json({ \n          error: \"Message data incomplete\", \n          details: \"Champs requis manquants\", \n          missingFields: {\n            id: !messageData.id,\n            fromId: !hasFromId,\n            toId: !hasToId,\n            vehicleId: !hasVehicleId,\n            content: !messageData.content\n          }\n        });\n      }\n      \n      try {\n        // V√©rifier si les IDs utilisateurs existent\n        const fromUserCheck = await supabaseServer.from('users').select('id').eq('id', messageData.from_user_id || messageData.fromUserId).single();\n        if (fromUserCheck.error) {\n          console.error(\"‚ùå Utilisateur exp√©diteur non trouv√©:\", fromUserCheck.error);\n          return res.status(400).json({ error: \"L'utilisateur exp√©diteur n'existe pas\", details: fromUserCheck.error.message });\n        }\n        \n        const toUserCheck = await supabaseServer.from('users').select('id').eq('id', messageData.to_user_id || messageData.toUserId).single();\n        if (toUserCheck.error) {\n          console.error(\"‚ùå Utilisateur destinataire non trouv√©:\", toUserCheck.error);\n          return res.status(400).json({ error: \"L'utilisateur destinataire n'existe pas\", details: toUserCheck.error.message });\n        }\n        \n        // V√©rifier si l'annonce existe\n        const vehicleId = messageData.annonce_id || messageData.vehicleId;\n        const vehicleCheck = await supabaseServer.from('annonces').select('id').eq('id', vehicleId).single();\n        if (vehicleCheck.error) {\n          console.error(\"‚ùå Annonce non trouv√©e:\", vehicleCheck.error);\n          return res.status(400).json({ error: \"L'annonce n'existe pas\", details: vehicleCheck.error.message });\n        }\n      } catch (checkError) {\n        console.error(\"‚ùå Erreur lors de la v√©rification des r√©f√©rences:\", checkError);\n      }\n      \n      const message = await storage.createMessage(messageData);\n      console.log(\"‚úÖ Message cr√©√© avec succ√®s:\", message.id);\n      res.status(201).json(message);\n    } catch (error: any) {\n      console.error(\"‚ùå Error creating message:\", error.message);\n      console.error(\"Stack trace:\", error.stack);\n      \n      if (error.message.includes('duplicate key')) {\n        res.status(409).json({ error: \"Duplicate message ID\", message: error.message });\n      } else if (error.message.includes('foreign key constraint')) {\n        res.status(400).json({ error: \"R√©f√©rence invalide - une des cl√©s √©trang√®res n'existe pas\", message: error.message });\n      } else if (error.message.includes('column')) {\n        res.status(400).json({ error: \"Structure de la table incorrecte\", message: error.message });\n      } else {\n        res.status(500).json({ error: \"Failed to create message\", message: error.message });\n      }\n    }\n  });\n\n  app.put(\"/api/messages/:id/read\", async (req, res) => {\n    try {\n      const success = await storage.markMessageAsRead(req.params.id);\n      if (!success) {\n        return res.status(404).json({ error: \"Message not found\" });\n      }\n      res.json({ success: true });\n    } catch (error) {\n      console.error(\"Error marking message as read:\", error);\n      res.status(500).json({ error: \"Failed to mark message as read\" });\n    }\n  });\n\n  // Mount new route handlers\n  app.use(\"/api/wishlist\", wishlistRoutes);\n  app.use(\"/api/saved-searches\", savedSearchRoutes);\n  app.use(\"/api/admin\", adminRoutes);\n  app.use(\"/api\", messagingRoutes);\n  app.use(\"/api/messages-simple\", messagingSimpleRoutes);\n  app.use(\"/api/conversations\", conversationsRoutes);\n  app.use(\"/api/favorites\", favoritesRoutes);\n  app.use(\"/api/profile\", profileRoutes);\n  app.use(\"/api/images\", imagesRoutes);\n  app.use(\"/api/auth\", authSyncRoutes);\n\n  // Setup wishlist migration routes\n  setupWishlistMigration(app);\n  setupWishlistDirect(app);\n\n  const httpServer = createServer(app);\n  return httpServer;\n}","size_bytes":15776},"server/setup-db.js":{"content":"// Ajouter ces lignes au d√©but du fichier\nimport dotenv from 'dotenv';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\n// Obtenir le chemin du r√©pertoire actuel\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Charger les variables d'environnement depuis le fichier .env (√† la racine du projet)\ndotenv.config({ path: path.resolve(__dirname, '../.env') });\n\n// Le reste de ton code reste inchang√©\n// Script pour cr√©er la table profiles et configurer la synchronisation automatique\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nif (!supabaseUrl || !supabaseServiceKey) {\n  console.error('‚ùå Variables d\\'environnement manquantes');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\n\nasync function setupDatabase() {\n  console.log('üîÑ Configuration de la base de donn√©es...');\n\n  // 0. D√©sactiver l'ancien trigger pour √©viter les erreurs\n  const disableTrigger = `\n    DROP TRIGGER IF EXISTS create_user_profile_trigger ON auth.users;\n  `;\n\n  // 1. Cr√©er la table profiles compl√®te (qui remplacera les donn√©es de users)\n  const createProfilesTable = `\n    CREATE TABLE IF NOT EXISTS profiles (\n      id uuid PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,\n      email text,\n      name text,\n      type text DEFAULT 'individual' CHECK (type IN ('individual', 'professional', 'admin')),\n      phone text,\n      whatsapp text,\n      company_name text,\n      company_logo text,\n      address text,\n      city text,\n      postal_code text,\n      website text,\n      siret text,\n      bio text,\n      avatar_url text,\n      specialties jsonb,\n      verified boolean DEFAULT false,\n      email_verified boolean DEFAULT false,\n      contact_preferences jsonb,\n      onboarding_completed boolean DEFAULT false,\n      marketing_consent boolean DEFAULT false,\n      last_login_at timestamp,\n      created_at timestamp DEFAULT now() NOT NULL,\n      updated_at timestamp DEFAULT now() NOT NULL\n    );\n  `;\n\n  // 2. Migrer les donn√©es existantes de users vers profiles (si n√©cessaire)\n  const migrateData = `\n    -- Migrer les donn√©es de users vers profiles (s'il y en a)\n    DO $$\n    BEGIN\n      IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users' AND table_schema = 'public') THEN\n        INSERT INTO profiles (\n          id, email, name, type, phone, whatsapp, company_name, company_logo,\n          address, city, postal_code, website, siret, bio, avatar_url, specialties,\n          verified, email_verified, contact_preferences, created_at\n        )\n        SELECT \n          u.id::uuid, u.email, u.name, u.type, u.phone, u.whatsapp, \n          u.company_name, u.company_logo, u.address, u.city, \n          u.postal_code::text, u.website, u.siret, u.bio, \n          u.avatar, u.specialties, u.verified, u.email_verified, \n          u.contact_preferences, now()\n        FROM public.users u\n        LEFT JOIN public.profiles p ON u.id::uuid = p.id\n        WHERE p.id IS NULL;\n      END IF;\n    END $$;\n  `;\n\n  // 3. Cr√©er la fonction de synchronisation pour la nouvelle structure\n  const createSyncFunction = `\n    CREATE OR REPLACE FUNCTION create_user_profile()\n    RETURNS TRIGGER AS $$\n    BEGIN\n      -- Cr√©er/mettre √† jour directement dans profiles\n      INSERT INTO public.profiles (\n        id, email, name, type, phone,\n        created_at, updated_at\n      )\n      SELECT \n        NEW.id,\n        NEW.email,\n        COALESCE(NEW.raw_user_meta_data->>'name', split_part(NEW.email, '@', 1)),\n        COALESCE(NEW.raw_user_meta_data->>'type', 'individual'),\n        NEW.raw_user_meta_data->>'phone',\n        now(),\n        now()\n      ON CONFLICT (id) DO UPDATE SET\n        email = EXCLUDED.email,\n        name = EXCLUDED.name,\n        type = EXCLUDED.type,\n        phone = EXCLUDED.phone,\n        updated_at = now();\n      \n      RETURN NEW;\n    END;\n    $$ LANGUAGE plpgsql SECURITY DEFINER;\n  `;\n\n  // 4. Cr√©er le d√©clencheur\n  const createTrigger = `\n    DROP TRIGGER IF EXISTS create_user_profile_trigger ON auth.users;\n    CREATE TRIGGER create_user_profile_trigger\n      AFTER INSERT ON auth.users\n      FOR EACH ROW EXECUTE FUNCTION create_user_profile();\n  `;\n  \n  // 5. Cr√©er les politiques RLS pour profiles\n  const createPolicies = `\n    -- Activer RLS sur la table profiles\n    ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\n    \n    -- Politique pour permettre aux utilisateurs de voir leur propre profil\n    DROP POLICY IF EXISTS \"Les utilisateurs peuvent voir leur propre profil\" ON profiles;\n    CREATE POLICY \"Les utilisateurs peuvent voir leur propre profil\" \n      ON profiles FOR SELECT USING (auth.uid() = id);\n      \n    -- Politique pour permettre aux utilisateurs de modifier leur propre profil  \n    DROP POLICY IF EXISTS \"Les utilisateurs peuvent modifier leur propre profil\" ON profiles;\n    CREATE POLICY \"Les utilisateurs peuvent modifier leur propre profil\" \n      ON profiles FOR UPDATE USING (auth.uid() = id);\n  `;\n\n  // Fonction utilitaire pour ex√©cuter les commandes SQL\n  async function executeSQL(description, sql) {\n    console.log(`ÔøΩ ${description}...`);\n    try {\n      // Essayer avec exec_sql\n      const { error: execError } = await supabase.rpc('exec_sql', { sql });\n      if (!execError) return true;\n      \n      // Si √ßa √©choue, essayer avec execute_sql\n      console.log(`‚ö†Ô∏è exec_sql a √©chou√©, essai avec execute_sql...`);\n      const { error: executeError } = await supabase.rpc('execute_sql', { query: sql });\n      if (!executeError) return true;\n      \n      // Si les deux √©chouent, afficher l'erreur et le SQL √† ex√©cuter manuellement\n      console.error(`‚ùå Erreur d'ex√©cution SQL:`, execError || executeError);\n      console.log(`\\n------------------- EX√âCUTE CE CODE MANUELLEMENT -------------------`);\n      console.log(sql);\n      console.log(`------------------------------------------------------------------\\n`);\n      return false;\n    } catch (error) {\n      console.error(`‚ùå Exception lors de l'ex√©cution SQL:`, error);\n      return false;\n    }\n  }\n\n  try {\n    // 0. D√©sactiver l'ancien trigger en premier pour √©viter les probl√®mes\n    await executeSQL('D√©sactivation de l\\'ancien trigger', disableTrigger);\n\n    // 1. Cr√©er la table profiles\n    console.log('ÔøΩ Cr√©ation de la table profiles...');\n    if (!await executeSQL('Cr√©ation de la table profiles', createProfilesTable)) {\n      console.log('‚ö†Ô∏è √âchec possible de la cr√©ation de la table, continuation...');\n    }\n\n    // 2. Migrer les donn√©es\n    console.log('üì§ Migration des donn√©es si n√©cessaire...');\n    if (!await executeSQL('Migration des donn√©es', migrateData)) {\n      console.log('‚ö†Ô∏è Migration des donn√©es non ex√©cut√©e, √† faire manuellement si n√©cessaire');\n    }\n\n    // 3. Cr√©er la fonction de synchronisation\n    console.log('üîß Cr√©ation de la fonction de synchronisation...');\n    if (!await executeSQL('Cr√©ation de la fonction', createSyncFunction)) {\n      console.log('‚ö†Ô∏è √âchec de la cr√©ation de la fonction, continuer avec les autres √©tapes...');\n    }\n\n    // 4. Configurer les politiques RLS\n    console.log('üîí Configuration des politiques d\\'acc√®s...');\n    if (!await executeSQL('Configuration des politiques', createPolicies)) {\n      console.log('‚ö†Ô∏è √âchec de la configuration des politiques');\n    }\n\n    // 5. Cr√©er le d√©clencheur (comment√© par d√©faut pour √™tre s√ªr que tout fonctionne d'abord)\n    console.log('‚ö° Cr√©ation du d√©clencheur...');\n    console.log('‚ö†Ô∏è Le d√©clencheur est d√©sactiv√© par d√©faut. Une fois que tout fonctionne, d√©commentez la ligne dans le script.');\n    // Si vous voulez activer le trigger imm√©diatement, d√©commentez la ligne suivante:\n    // await executeSQL('Cr√©ation du d√©clencheur', createTrigger);\n\n    console.log('‚úÖ Base de donn√©es partiellement configur√©e !');\n    console.log('‚ö†Ô∏è V√©rifiez que les utilisateurs peuvent se connecter avant d\\'activer le trigger.');\n    \n    // V√©rifier les tables\n    const { data: tables } = await supabase\n      .from('information_schema.tables')\n      .select('table_name')\n      .eq('table_schema', 'public')\n      .in('table_name', ['users', 'profiles']);\n      \n    console.log('üìä Tables disponibles:', tables?.map(t => t.table_name));\n\n  } catch (error) {\n    console.error('‚ùå Erreur configuration base de donn√©es:', error);\n  }\n}\n\nsetupDatabase().then(() => process.exit(0));","size_bytes":8588},"server/storage.ts":{"content":"import { supabaseServer } from './supabase';\nimport { type User, type Vehicle, type Message, type Wishlist, type SavedSearch, type InsertUser, type InsertVehicle, type InsertMessage, type InsertWishlist, type InsertSavedSearch } from \"../shared/schema\";\n\nconsole.log('üîó Connexion Supabase initialis√©e avec le client officiel');\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  getAllUsers(): Promise<User[]>;\n  updateUserIdToUuid(oldId: string, newUuid: string): Promise<User>;\n  \n  // Vehicles\n  getVehicle(id: string): Promise<Vehicle | undefined>;\n  getVehicleWithUser(id: string): Promise<Vehicle | undefined>;\n  getAllVehicles(): Promise<Vehicle[]>; // Seulement les annonces actives (site public)\n  getAllVehiclesAdmin(): Promise<Vehicle[]>; // Toutes les annonces (admin/propri√©taires)\n  getVehiclesByUser(userId: string): Promise<Vehicle[]>;\n  createVehicle(vehicle: InsertVehicle): Promise<Vehicle>;\n  updateVehicle(id: string, updates: Partial<InsertVehicle>): Promise<Vehicle | undefined>;\n  deleteVehicle(id: string): Promise<boolean>;\n  searchVehicles(filters: any): Promise<Vehicle[]>;\n  updateVehicleActiveStatus(id: string, isActive: boolean): Promise<boolean>;\n  \n  // Messages\n  getMessage(id: string): Promise<Message | undefined>;\n  getMessagesByVehicle(vehicleId: string): Promise<Message[]>;\n  getMessagesByUser(userId: string): Promise<Message[]>;\n  createMessage(message: InsertMessage): Promise<Message>;\n  markMessageAsRead(id: string): Promise<boolean>;\n  \n  // Wishlist / Favorites\n  getUserWishlist(userId: string): Promise<Wishlist[]>;\n  getUserFavorites(userId: string): Promise<Vehicle[]>;\n  addToWishlist(item: InsertWishlist): Promise<Wishlist>;\n  removeFromWishlist(userId: string, vehicleId: string): Promise<boolean>;\n  isInWishlist(userId: string, vehicleId: string): Promise<boolean>;\n  \n  // Saved Searches\n  getUserSavedSearches(userId: string): Promise<SavedSearch[]>;\n  createSavedSearch(search: InsertSavedSearch): Promise<SavedSearch>;\n  updateSavedSearch(id: string, updates: Partial<InsertSavedSearch>): Promise<SavedSearch | undefined>;\n  deleteSavedSearch(id: string): Promise<boolean>;\n}\n\nexport class SupabaseStorage implements IStorage {\n  // Users\n  async getUser(id: string): Promise<User | undefined> {\n    const { data, error } = await supabaseServer\n      .from('users')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching user:', error);\n      return undefined;\n    }\n    return data as User;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const { data, error } = await supabaseServer\n      .from('users')\n      .select('*')\n      .eq('email', email)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching user by email:', error);\n      return undefined;\n    }\n    return data as User;\n  }\n\n  async createUser(user: InsertUser): Promise<User> {\n    const { data, error } = await supabaseServer\n      .from('users')\n      .insert(user)\n      .select()\n      .single();\n    \n    if (error) {\n      throw new Error(`Error creating user: ${error.message}`);\n    }\n    return data as User;\n  }\n\n  async updateUserIdToUuid(oldId: string, newUuid: string): Promise<User> {\n    console.log(`üîÑ Migration ID utilisateur: ${oldId} ‚Üí ${newUuid}`);\n    \n    try {\n      // 1. R√©cup√©rer l'utilisateur existant\n      const { data: existingUser, error: fetchError } = await supabaseServer\n        .from('users')\n        .select('*')\n        .eq('id', oldId)\n        .single();\n        \n      if (fetchError || !existingUser) {\n        throw new Error(`Utilisateur ${oldId} introuvable`);\n      }\n      \n      // 2. Cr√©er un nouvel utilisateur avec l'UUID\n      const { data: newUser, error: insertError } = await supabaseServer\n        .from('users')\n        .insert({\n          ...existingUser,\n          id: newUuid,\n          createdAt: existingUser.createdAt,\n        })\n        .select()\n        .single();\n        \n      if (insertError) {\n        throw new Error(`Erreur cr√©ation nouveau user: ${insertError.message}`);\n      }\n      \n      // 3. Mettre √† jour les annonces\n      const { error: annoncesError } = await supabaseServer\n        .from('annonces')\n        .update({ user_id: newUuid })\n        .eq('user_id', oldId);\n        \n      if (annoncesError) {\n        console.error('‚ö†Ô∏è Erreur mise √† jour annonces:', annoncesError);\n      }\n      \n      // 4. Mettre √† jour les messages\n      const { error: messagesFromError } = await supabaseServer\n        .from('messages')\n        .update({ from_user_id: newUuid })\n        .eq('from_user_id', oldId);\n        \n      const { error: messagesToError } = await supabaseServer\n        .from('messages')\n        .update({ to_user_id: newUuid })\n        .eq('to_user_id', oldId);\n        \n      if (messagesFromError || messagesToError) {\n        console.error('‚ö†Ô∏è Erreur mise √† jour messages:', messagesFromError, messagesToError);\n      }\n      \n      // 5. Supprimer l'ancien utilisateur\n      const { error: deleteError } = await supabaseServer\n        .from('users')\n        .delete()\n        .eq('id', oldId);\n        \n      if (deleteError) {\n        console.error('‚ö†Ô∏è Erreur suppression ancien user:', deleteError);\n      }\n      \n      console.log(`‚úÖ Migration r√©ussie: ${oldId} ‚Üí ${newUuid}`);\n      return newUser as User;\n      \n    } catch (error) {\n      console.error(`‚ùå Erreur migration ID:`, error);\n      throw error;\n    }\n  }\n\n  async getAllUsers(): Promise<User[]> {\n    const { data, error } = await supabaseServer\n      .from('users')\n      .select('*');\n    \n    if (error) {\n      console.error('Error fetching users:', error);\n      return [];\n    }\n    return data as User[];\n  }\n\n  // Vehicles\n  async getVehicle(id: string): Promise<Vehicle | undefined> {\n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .select(`\n        *,\n        users(*)\n      `)\n      .eq('id', id)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching vehicle:', error);\n      return undefined;\n    }\n    \n    // Transformer la donn√©e unique vers le format Vehicle avec user\n    const annonce = data;\n    const transformedData = {\n      id: annonce.id.toString(),\n      userId: annonce.user_id,\n      user: annonce.users ? {\n        id: annonce.users.id,\n        email: annonce.users.email,\n        name: annonce.users.name,\n        phone: annonce.users.phone,\n        whatsapp: annonce.users.whatsapp,\n        type: annonce.users.type,\n        companyName: annonce.users.company_name,\n        companyLogo: annonce.users.company_logo,\n        address: annonce.users.address,\n        city: annonce.users.city,\n        postalCode: annonce.users.postal_code,\n        website: annonce.users.website,\n        siret: annonce.users.siret,\n        bio: annonce.users.bio,\n        avatar: annonce.users.avatar,\n        specialties: annonce.users.specialties ? JSON.parse(annonce.users.specialties) : [],\n        verified: annonce.users.verified,\n        emailVerified: annonce.users.email_verified,\n        contactPreferences: annonce.users.contact_preferences ? JSON.parse(annonce.users.contact_preferences) : [],\n        createdAt: new Date(annonce.users.created_at),\n        lastLoginAt: annonce.users.last_login_at ? new Date(annonce.users.last_login_at) : undefined\n      } : undefined,\n      title: annonce.title,\n      description: annonce.description,\n      category: annonce.category,\n      brand: annonce.brand,\n      model: annonce.model,\n      year: annonce.year,\n      mileage: annonce.mileage,\n      fuelType: annonce.fuel_type,\n      condition: annonce.condition,\n      price: annonce.price,\n      location: annonce.location,\n      images: annonce.images || [],\n      features: annonce.features || [],\n      listingType: annonce.listing_type || 'sale', // Nouveau champ listing_type\n      // Informations de contact sp√©cifiques √† l'annonce\n      contactPhone: annonce.contact_phone || null,\n      contactEmail: annonce.contact_email || null,\n      contactWhatsapp: annonce.contact_whatsapp || null,\n      hidePhone: annonce.hide_phone || false,\n      isPremium: annonce.is_premium,\n      premiumType: annonce.premium_type,\n      premiumExpiresAt: annonce.premium_expires_at ? new Date(annonce.premium_expires_at) : undefined,\n      createdAt: new Date(annonce.created_at),\n      updatedAt: new Date(annonce.updated_at),\n      views: annonce.views,\n      favorites: annonce.favorites,\n      status: annonce.status,\n      isActive: annonce.is_active !== false\n    };\n    \n    return transformedData as Vehicle;\n  }\n\n  async getVehicleWithUser(id: string): Promise<Vehicle | undefined> {\n    // Rediriger vers getVehicle car il inclut d√©j√† les users\n    return this.getVehicle(id);\n  }\n\n  async getAllVehicles(): Promise<Vehicle[]> {\n    console.log('üîÑ R√©cup√©ration des annonces ACTIVES avec users depuis Supabase...');\n    \n    try {\n      // Requ√™te directe avec JOIN pour r√©cup√©rer annonces et utilisateurs\n      // FILTRE IMPORTANT: Seulement les annonces approuv√©es et actives pour le site public\n      let { data, error } = await supabaseServer\n        .from('annonces')\n        .select(`\n          *,\n          users (*)\n        `)\n        .eq('status', 'approved')\n        .neq('is_active', false)\n        .order('created_at', { ascending: false });\n      \n      if (error) {\n        console.error('‚ùå Erreur Supabase:', error.message);\n        console.log('‚ùå Rechute vers requ√™te directe...');\n        \n        // Fallback: r√©cup√©rer s√©par√©ment les v√©hicules et utilisateurs\n        const { data: vehiclesData, error: vehiclesError } = await supabaseServer\n          .from('annonces')\n          .select('*')\n          .eq('status', 'approved')\n          .neq('is_active', false)\n          .order('created_at', { ascending: false });\n          \n        if (vehiclesError) {\n          throw new Error(`Error fetching vehicles: ${vehiclesError.message}`);\n        }\n        \n        const { data: usersData, error: usersError } = await supabaseServer\n          .from('users')\n          .select('*');\n          \n        if (usersError) {\n          throw new Error(`Error fetching users: ${usersError.message}`);\n        }\n        \n        // Associer manuellement les donn√©es\n        data = vehiclesData.map((vehicle: any) => {\n          const user = usersData.find((u: any) => u.id === vehicle.user_id);\n          return { ...vehicle, users: user };\n        });\n      }\n      \n      console.log('‚úÖ Annonces ACTIVES avec users r√©cup√©r√©es depuis Supabase:', data?.length || 0);\n      \n      if (data && data.length > 0) {\n        console.log('üìä Premi√®re annonce Supabase:', data[0].title);\n        console.log('üë§ Premier user associ√©:', data[0].users?.name);\n        \n        // Transformer les donn√©es de la table annonces vers le format Vehicle avec user inclus\n        const transformedData = data.map((vehicle: any) => ({\n          id: vehicle.id.toString(),\n          userId: vehicle.user_id,\n          user: vehicle.users ? {\n            id: vehicle.users.id,\n            email: vehicle.users.email,\n            name: vehicle.users.name,\n            phone: vehicle.users.phone,\n            whatsapp: vehicle.users.whatsapp,\n            type: vehicle.users.type,\n            companyName: vehicle.users.company_name,\n            companyLogo: vehicle.users.company_logo,\n            address: vehicle.users.address,\n            city: vehicle.users.city,\n            postalCode: vehicle.users.postal_code,\n            website: vehicle.users.website,\n            siret: vehicle.users.siret,\n            bio: vehicle.users.bio,\n            avatar: vehicle.users.avatar,\n            specialties: vehicle.users.specialties ? JSON.parse(vehicle.users.specialties) : [],\n            verified: vehicle.users.verified,\n            emailVerified: vehicle.users.email_verified,\n            contactPreferences: vehicle.users.contact_preferences ? JSON.parse(vehicle.users.contact_preferences) : [],\n            createdAt: new Date(vehicle.users.created_at),\n            lastLoginAt: vehicle.users.last_login_at ? new Date(vehicle.users.last_login_at) : undefined\n          } : undefined,\n          title: vehicle.title,\n          description: vehicle.description,\n          category: vehicle.category,\n          brand: vehicle.brand,\n          model: vehicle.model,\n          year: vehicle.year,\n          mileage: vehicle.mileage,\n          fuelType: vehicle.fuel_type,\n          condition: vehicle.condition,\n          price: vehicle.price,\n          location: vehicle.location,\n          images: vehicle.images || [],\n          features: vehicle.features || [],\n          listingType: vehicle.listing_type || 'sale', // Nouveau champ listing_type\n          // Informations de contact sp√©cifiques √† l'annonce\n          contactPhone: vehicle.contact_phone || null,\n          contactEmail: vehicle.contact_email || null,\n          contactWhatsapp: vehicle.contact_whatsapp || null,\n          hidePhone: vehicle.hide_phone || false,\n          isPremium: vehicle.is_premium,\n          premiumType: vehicle.premium_type,\n          premiumExpiresAt: vehicle.premium_expires_at ? new Date(vehicle.premium_expires_at) : undefined,\n          createdAt: new Date(vehicle.created_at),\n          updatedAt: new Date(vehicle.updated_at),\n          views: vehicle.views,\n          favorites: vehicle.favorites,\n          status: vehicle.status,\n          isActive: vehicle.is_active !== false\n        }));\n        return transformedData as Vehicle[];\n      } else {\n        console.log('‚ö†Ô∏è  Table annonces vide dans Supabase, utilisation des donn√©es mock');\n        throw new Error('Empty annonces table');\n      }\n      \n    } catch (error) {\n      console.error('‚ùå Rechute vers donn√©es mock');\n      throw error;\n    }\n  }\n\n  async getVehiclesByUser(userId: string): Promise<Vehicle[]> {\n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .select(`\n        *,\n        users (*)\n      `)\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching user vehicles:', error);\n      return [];\n    }\n\n    // Transformer les donn√©es pour inclure le statut isActive\n    const transformedData = (data || []).map((vehicle: any) => ({\n      id: vehicle.id.toString(),\n      userId: vehicle.user_id,\n      user: vehicle.users ? {\n        id: vehicle.users.id,\n        email: vehicle.users.email,\n        name: vehicle.users.name,\n        phone: vehicle.users.phone,\n        whatsapp: vehicle.users.whatsapp,\n        type: vehicle.users.type,\n        companyName: vehicle.users.company_name,\n        companyLogo: vehicle.users.company_logo,\n        address: vehicle.users.address,\n        city: vehicle.users.city,\n        postalCode: vehicle.users.postal_code,\n        website: vehicle.users.website,\n        siret: vehicle.users.siret,\n        bio: vehicle.users.bio,\n        avatar: vehicle.users.avatar,\n        specialties: vehicle.users.specialties ? JSON.parse(vehicle.users.specialties) : [],\n        verified: vehicle.users.verified,\n        emailVerified: vehicle.users.email_verified,\n        contactPreferences: vehicle.users.contact_preferences ? JSON.parse(vehicle.users.contact_preferences) : [],\n        createdAt: new Date(vehicle.users.created_at),\n        lastLoginAt: vehicle.users.last_login_at ? new Date(vehicle.users.last_login_at) : undefined\n      } : undefined,\n      title: vehicle.title,\n      description: vehicle.description,\n      category: vehicle.category,\n      brand: vehicle.brand,\n      model: vehicle.model,\n      year: vehicle.year,\n      mileage: vehicle.mileage,\n      fuelType: vehicle.fuel_type,\n      condition: vehicle.condition,\n      price: vehicle.price,\n      location: vehicle.location,\n      images: vehicle.images || [],\n      features: vehicle.features || [],\n      listingType: vehicle.listing_type || 'sale',\n      contactPhone: vehicle.contact_phone || null,\n      contactEmail: vehicle.contact_email || null,\n      contactWhatsapp: vehicle.contact_whatsapp || null,\n      hidePhone: vehicle.hide_phone || false,\n      isPremium: vehicle.is_premium,\n      premiumType: vehicle.premium_type,\n      premiumExpiresAt: vehicle.premium_expires_at ? new Date(vehicle.premium_expires_at) : undefined,\n      createdAt: new Date(vehicle.created_at),\n      updatedAt: new Date(vehicle.updated_at),\n      views: vehicle.views,\n      favorites: vehicle.favorites,\n      status: vehicle.status,\n      isActive: vehicle.is_active !== false\n    }));\n\n    return transformedData as Vehicle[];\n  }\n\n  async createVehicle(vehicle: InsertVehicle): Promise<Vehicle> {\n    console.log(\"üîç DONN√âES AVANT TRANSFORMATION:\", JSON.stringify(vehicle, null, 2));\n    \n    // FORCER LA SUPPRESSION de tout champ id qui pourrait √™tre cach√©\n    const cleanVehicle = { ...vehicle };\n    delete (cleanVehicle as any).id;\n    \n    // Transformer les donn√©es du format Vehicle vers le format table annonces\n    // L'ID sera auto-g√©n√©r√© par Supabase (auto-increment)\n    const annonceData: any = {\n      user_id: cleanVehicle.userId,\n      title: cleanVehicle.title,\n      description: cleanVehicle.description,\n      category: cleanVehicle.category,\n      price: cleanVehicle.price || 0,\n      // FIX LOCALISATION : Convertir l'objet location en string\n      location: typeof cleanVehicle.location === 'object' \n        ? `${(cleanVehicle.location as any).city} (${(cleanVehicle.location as any).postalCode})`\n        : cleanVehicle.location,\n      images: cleanVehicle.images || [],\n      features: cleanVehicle.features || [],\n      is_premium: cleanVehicle.isPremium || false,\n      views: cleanVehicle.views || 0,\n      favorites: cleanVehicle.favorites || 0,\n      status: cleanVehicle.status || 'approved',\n      listing_type: (cleanVehicle as any).listingType || 'sale'\n    };\n\n    // Ajouter les champs avec valeurs par d√©faut pour respecter les contraintes Supabase\n    annonceData.brand = cleanVehicle.brand || 'Non sp√©cifi√©';\n    annonceData.model = cleanVehicle.model || 'Non sp√©cifi√©';\n    annonceData.year = cleanVehicle.year || new Date().getFullYear();\n    annonceData.mileage = cleanVehicle.mileage || 0;\n    annonceData.fuel_type = cleanVehicle.fuelType || 'Non sp√©cifi√©';\n    annonceData.condition = cleanVehicle.condition || 'good';\n    \n    // Informations de contact sp√©cifiques √† l'annonce\n    if ((cleanVehicle as any).contactPhone) annonceData.contact_phone = (cleanVehicle as any).contactPhone;\n    if ((cleanVehicle as any).contactEmail) annonceData.contact_email = (cleanVehicle as any).contactEmail;\n    if ((cleanVehicle as any).contactWhatsapp) annonceData.contact_whatsapp = (cleanVehicle as any).contactWhatsapp;\n    if ((cleanVehicle as any).hidePhone !== undefined) annonceData.hide_phone = (cleanVehicle as any).hidePhone;\n    \n    if (cleanVehicle.premiumType) annonceData.premium_type = cleanVehicle.premiumType;\n    if (cleanVehicle.premiumExpiresAt) annonceData.premium_expires_at = cleanVehicle.premiumExpiresAt;\n\n    // DOUBLE V√âRIFICATION : supprimer tout id qui pourrait s'√™tre gliss√©\n    delete annonceData.id;\n\n    console.log(\"üîç DONN√âES ENVOY√âES √Ä SUPABASE:\", JSON.stringify(annonceData, null, 2));\n    \n    // SOLUTION TEMPORAIRE : R√©cup√©rer le MAX ID et forcer la s√©quence\n    const { data: maxIdData } = await supabaseServer\n      .from('annonces')\n      .select('id')\n      .order('id', { ascending: false })\n      .limit(1);\n    \n    if (maxIdData && maxIdData.length > 0) {\n      const nextId = maxIdData[0].id + 1;\n      console.log(`üîß FOR√áAGE ID: ${nextId} (MAX actuel: ${maxIdData[0].id})`);\n      annonceData.id = nextId;\n    }\n    \n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .insert(annonceData)\n      .select()\n      .single();\n    \n    if (error) {\n      throw new Error(`Error creating vehicle: ${error.message}`);\n    }\n    \n    // Transformer la r√©ponse vers le format Vehicle\n    const transformedData = {\n      id: data.id.toString(), // Convertir l'integer en string pour compatibilit√©\n      userId: data.user_id,\n      title: data.title,\n      description: data.description,\n      category: data.category,\n      brand: data.brand,\n      model: data.model,\n      year: data.year,\n      mileage: data.mileage,\n      fuelType: data.fuel_type,\n      condition: data.condition,\n      price: data.price,\n      location: data.location,\n      images: data.images || [],\n      features: data.features || [],\n      listingType: data.listing_type || 'sale', // Nouveau champ listing_type\n      // Informations de contact sp√©cifiques √† l'annonce\n      contactPhone: data.contact_phone || null,\n      contactEmail: data.contact_email || null,\n      contactWhatsapp: data.contact_whatsapp || null,\n      hidePhone: data.hide_phone || false,\n      isPremium: data.is_premium,\n      premiumType: data.premium_type,\n      premiumExpiresAt: data.premium_expires_at ? new Date(data.premium_expires_at) : undefined,\n      createdAt: new Date(data.created_at),\n      updatedAt: new Date(data.updated_at),\n      views: data.views,\n      favorites: data.favorites,\n      status: data.status,\n      isActive: data.is_active !== false\n    };\n    \n    return transformedData as Vehicle;\n  }\n\n  async updateVehicle(id: string, updates: Partial<InsertVehicle>): Promise<Vehicle | undefined> {\n    const updateData = { \n      ...updates, \n      updated_at: new Date().toISOString()\n    };\n    \n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .update(updateData)\n      .eq('id', id)\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error updating vehicle:', error);\n      return undefined;\n    }\n    return data as Vehicle;\n  }\n\n  async deleteVehicle(id: string): Promise<boolean> {\n    const { error } = await supabaseServer\n      .from('annonces')\n      .delete()\n      .eq('id', id);\n    \n    return !error;\n  }\n\n  async searchVehicles(filters: any): Promise<Vehicle[]> {\n    let query = supabaseServer\n      .from('annonces')\n      .select(`\n        *,\n        users (*)\n      `);\n\n    // FILTRE IMPORTANT: Seulement les annonces approuv√©es et actives pour les recherches publiques\n    query = query.eq('status', 'approved')\n                 .neq('is_active', false);\n\n    // Apply filters\n    if (filters.category) {\n      query = query.eq('category', filters.category);\n    }\n    if (filters.brand) {\n      query = query.eq('brand', filters.brand);\n    }\n    if (filters.condition) {\n      query = query.eq('condition', filters.condition);\n    }\n    if (filters.yearFrom) {\n      query = query.gte('year', filters.yearFrom);\n    }\n    if (filters.yearTo) {\n      query = query.lte('year', filters.yearTo);\n    }\n    if (filters.priceFrom) {\n      query = query.gte('price', filters.priceFrom);\n    }\n    if (filters.priceTo) {\n      query = query.lte('price', filters.priceTo);\n    }\n    if (filters.searchTerm) {\n      query = query.ilike('title', `%${filters.searchTerm}%`);\n    }\n\n    // Order by premium first, then by created date\n    query = query.order('is_premium', { ascending: false })\n                 .order('created_at', { ascending: false });\n\n    const { data, error } = await query;\n    \n    if (error) {\n      console.error('Error searching vehicles:', error);\n      return [];\n    }\n    \n    return data as Vehicle[];\n  }\n\n  // Messages\n  async getMessage(id: string): Promise<Message | undefined> {\n    const { data, error } = await supabaseServer\n      .from('messages')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching message:', error);\n      return undefined;\n    }\n    return data as Message;\n  }\n\n  async getMessagesByVehicle(vehicleId: string): Promise<Message[]> {\n    const { data, error } = await supabaseServer\n      .from('messages')\n      .select('*')\n      .eq('vehicle_id', vehicleId)\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching vehicle messages:', error);\n      return [];\n    }\n    return data as Message[];\n  }\n\n  async getMessagesByUser(userId: string): Promise<Message[]> {\n    const { data, error } = await supabaseServer\n      .from('messages')\n      .select('*')\n      .or(`from_user_id.eq.${userId},to_user_id.eq.${userId}`)\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching user messages:', error);\n      return [];\n    }\n    return data as Message[];\n  }\n\n  async createMessage(message: any): Promise<Message> {\n    console.log(\"üîç createMessage appel√© avec:\", JSON.stringify(message, null, 2));\n    \n    // V√©rification des champs n√©cessaires\n    if (!message.id) throw new Error(\"Message ID is required\");\n    if (!message.from_user_id && !message.fromUserId) throw new Error(\"from_user_id is required\");\n    if (!message.to_user_id && !message.toUserId) throw new Error(\"to_user_id is required\");\n    if (!message.annonce_id && !message.vehicleId) throw new Error(\"vehicle_id/annonce_id is required\");\n    if (!message.content) throw new Error(\"content is required\");\n    \n    // Adapter les noms de champs pour qu'ils correspondent √† la DB r√©elle\n    const adaptedMessage = {\n      id: message.id,\n      from_user_id: message.from_user_id || message.fromUserId,\n      to_user_id: message.to_user_id || message.toUserId,\n      // Adapter selon ce qui existe r√©ellement dans la DB\n      ...(message.annonce_id ? { annonce_id: message.annonce_id } : {}),\n      ...(message.vehicleId ? { vehicle_id: message.vehicleId } : {}),\n      content: message.content,\n      created_at: message.created_at || message.createdAt || new Date().toISOString(),\n      read: message.read !== undefined ? message.read : false\n    };\n    \n    console.log(\"üì¶ Message adapt√© pour Supabase:\", JSON.stringify(adaptedMessage, null, 2));\n    \n    try {\n      const { data, error } = await supabaseServer\n        .from('messages')\n        .insert(adaptedMessage)\n        .select()\n        .single();\n      \n      if (error) {\n        console.error(\"‚ùå Erreur Supabase d√©taill√©e:\", error);\n        throw new Error(`Error creating message: ${error.message}`);\n      }\n      \n      if (!data) {\n        throw new Error(\"No data returned after creating message\");\n      }\n      \n      console.log(\"‚úÖ Message cr√©√© dans la BD:\", data.id);\n      return data as Message;\n    } catch (err) {\n      console.error(\"‚ùå Exception compl√®te:\", err);\n      throw err;\n    }\n  }\n\n  async markMessageAsRead(id: string): Promise<boolean> {\n    const { error } = await supabaseServer\n      .from('messages')\n      .update({ read: true })\n      .eq('id', id);\n    \n    return !error;\n  }\n\n  // Wishlist methods\n  async getUserWishlist(userId: string): Promise<Wishlist[]> {\n    const { data, error } = await supabaseServer\n      .from('wishlist')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching wishlist:', error);\n      return [];\n    }\n    return data as Wishlist[];\n  }\n\n  async getUserFavorites(userId: string): Promise<Vehicle[]> {\n    console.log('üîÑ R√©cup√©ration favoris avec table wishlist d√©di√©e pour:', userId);\n    \n    try {\n      // Essayer d'abord la table wishlist d√©di√©e\n      const { data: wishlistData, error: wishlistError } = await supabaseServer\n        .from('wishlist')\n        .select('vehicle_id')\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false });\n\n      let favoriteIds = [];\n\n      if (wishlistError) {\n        console.log('‚ùå Table wishlist non disponible, utilisation bio:', wishlistError);\n        // Fallback vers le syst√®me bio\n        const user = await this.getUser(userId);\n        if (!user) return [];\n\n        try {\n          if (user.bio && user.bio.trim() !== '') {\n            const bioData = JSON.parse(user.bio);\n            favoriteIds = bioData.favorites || [];\n          }\n        } catch (e) {\n          return [];\n        }\n      } else {\n        // Utiliser la table wishlist d√©di√©e\n        favoriteIds = (wishlistData || []).map(item => item.vehicle_id);\n        console.log('‚úÖ Favoris r√©cup√©r√©s depuis table d√©di√©e:', favoriteIds);\n      }\n\n      if (favoriteIds.length === 0) {\n        console.log('‚úÖ Aucun favori trouv√©');\n        return [];\n      }\n\n      // Convertir les IDs en nombres pour la requ√™te Supabase\n      const numericIds = favoriteIds.map(id => parseInt(id.toString())).filter(id => !isNaN(id));\n      \n      if (numericIds.length === 0) {\n        console.log('‚úÖ Aucun ID valide trouv√©');\n        return [];\n      }\n\n      console.log('üîç IDs num√©riques pour requ√™te optimis√©e:', numericIds);\n\n      // Requ√™te optimis√©e : r√©cup√©rer tous les v√©hicules favoris en une fois\n      const { data: annonceData, error: annonceError } = await supabaseServer\n        .from('annonces')\n        .select(`\n          *,\n          users!annonces_user_id_fkey (\n            id, email, name, phone, whatsapp, type, company_name, \n            company_logo, address, city, postal_code, website, \n            siret, bio, avatar, specialties, verified, email_verified, \n            contact_preferences, created_at, last_login_at\n          )\n        `)\n        .in('id', numericIds)\n        .eq('status', 'approved');\n\n      if (annonceError) {\n        console.error('‚ùå Erreur r√©cup√©ration favoris optimis√©e:', annonceError);\n        return [];\n      }\n\n      // Transformer les donn√©es en format Vehicle\n      const favorites = (annonceData || []).map(annonce => ({\n        id: annonce.id.toString(),\n        userId: annonce.user_id,\n        user: annonce.users ? {\n          id: annonce.users.id,\n          email: annonce.users.email,\n          name: annonce.users.name,\n          phone: annonce.users.phone,\n          whatsapp: annonce.users.whatsapp,\n          type: annonce.users.type,\n          companyName: annonce.users.company_name,\n          companyLogo: annonce.users.company_logo,\n          address: annonce.users.address,\n          city: annonce.users.city,\n          postalCode: annonce.users.postal_code,\n          website: annonce.users.website,\n          siret: annonce.users.siret,\n          bio: annonce.users.bio,\n          avatar: annonce.users.avatar,\n          specialties: annonce.users.specialties || [],\n          verified: annonce.users.verified,\n          emailVerified: annonce.users.email_verified,\n          contactPreferences: annonce.users.contact_preferences || [],\n          createdAt: annonce.users.created_at,\n        } : null,\n        title: annonce.title,\n        description: annonce.description,\n        category: annonce.category,\n        brand: annonce.brand,\n        model: annonce.model,\n        year: annonce.year,\n        mileage: annonce.mileage,\n        fuelType: annonce.fuel_type,\n        condition: annonce.condition,\n        price: annonce.price,\n        location: annonce.location,\n        images: annonce.images || [],\n        features: annonce.features || [],\n        listingType: annonce.listing_type || 'sale',\n        contactPhone: null,\n        contactEmail: null,\n        contactWhatsapp: null,\n        hidePhone: false,\n        isPremium: annonce.is_premium || false,\n        premiumType: annonce.premium_type,\n        createdAt: annonce.created_at,\n        updatedAt: annonce.updated_at,\n        views: annonce.views || 0,\n        favorites: annonce.favorites || 0,\n        status: annonce.status || 'approved',\n        isActive: annonce.is_active !== false\n      }));\n\n      console.log('‚úÖ Favoris r√©cup√©r√©s avec d√©tails (optimis√©):', favorites.length);\n      return favorites;\n    } catch (error) {\n      console.error('‚ùå Erreur dans getUserFavorites:', error);\n      return [];\n    }\n  }\n\n  async addToWishlist(item: InsertWishlist): Promise<Wishlist> {\n    console.log('üîÑ Migration vers table wishlist d√©di√©e:', item);\n    \n    try {\n      // Essayer d'abord d'ins√©rer dans la table wishlist d√©di√©e\n      const wishlistId = crypto.randomUUID();\n      \n      const { data: wishlistData, error: wishlistError } = await supabaseServer\n        .from('wishlist')\n        .upsert({\n          id: wishlistId,\n          user_id: item.userId,\n          vehicle_id: item.vehicleId.toString(), // TEXT type, pas INTEGER\n          created_at: new Date().toISOString()\n        }, {\n          onConflict: 'user_id,vehicle_id'\n        })\n        .select()\n        .single();\n\n      if (wishlistError) {\n        console.log('‚ùå Table wishlist non disponible, utilisation bio:', wishlistError);\n        // Fallback vers le syst√®me bio\n        return await this.addToWishlistBio(item);\n      }\n\n      const result = {\n        id: wishlistData.id,\n        userId: wishlistData.user_id,\n        vehicleId: wishlistData.vehicle_id, // D√©j√† en TEXT\n        createdAt: new Date(wishlistData.created_at)\n      };\n      \n      console.log('‚úÖ Favori ajout√© table wishlist d√©di√©e:', result);\n      return result as Wishlist;\n    } catch (error) {\n      console.error('‚ùå Erreur table wishlist, fallback bio:', error);\n      return await this.addToWishlistBio(item);\n    }\n  }\n\n  // M√©thode fallback utilisant le bio\n  async addToWishlistBio(item: InsertWishlist): Promise<Wishlist> {\n    const user = await this.getUser(item.userId);\n    if (!user) {\n      throw new Error('Utilisateur non trouv√©');\n    }\n\n    let favorites = [];\n    try {\n      if (user.bio && user.bio.trim() !== '') {\n        const bioData = JSON.parse(user.bio);\n        favorites = bioData.favorites || [];\n      }\n    } catch (e) {\n      favorites = [];\n    }\n\n    if (!favorites.includes(item.vehicleId)) {\n      favorites.push(item.vehicleId);\n      \n      const bioData = { favorites };\n      const bioJson = JSON.stringify(bioData);\n      \n      const { error } = await supabaseServer\n        .from('users')\n        .update({ bio: bioJson })\n        .eq('id', item.userId);\n        \n      if (error) {\n        throw new Error(`Erreur sauvegarde favoris: ${error.message}`);\n      }\n    }\n\n    return {\n      id: crypto.randomUUID(),\n      userId: item.userId,\n      vehicleId: item.vehicleId,\n      createdAt: new Date()\n    } as Wishlist;\n  }\n\n  async removeFromWishlist(userId: string, vehicleId: string): Promise<boolean> {\n    console.log('üîÑ Suppression favori table wishlist:', { userId, vehicleId });\n    \n    try {\n      // Essayer d'abord la table wishlist d√©di√©e\n      const { error: wishlistError } = await supabaseServer\n        .from('wishlist')\n        .delete()\n        .eq('user_id', userId)\n        .eq('vehicle_id', vehicleId.toString()); // TEXT type, pas INTEGER\n      \n      if (wishlistError) {\n        console.log('‚ùå Table wishlist non disponible, utilisation bio:', wishlistError);\n        return await this.removeFromWishlistBio(userId, vehicleId);\n      }\n      \n      console.log('‚úÖ Favori supprim√© table wishlist d√©di√©e');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Erreur table wishlist, fallback bio:', error);\n      return await this.removeFromWishlistBio(userId, vehicleId);\n    }\n  }\n\n  async removeFromWishlistBio(userId: string, vehicleId: string): Promise<boolean> {\n    const user = await this.getUser(userId);\n    if (!user) return false;\n\n    let favorites = [];\n    try {\n      if (user.bio) {\n        const bioData = JSON.parse(user.bio);\n        favorites = bioData.favorites || [];\n      }\n    } catch (e) {\n      favorites = [];\n    }\n\n    favorites = favorites.filter((fav: string) => fav !== vehicleId);\n    \n    const bioData = { favorites };\n    await supabaseServer\n      .from('users')\n      .update({ bio: JSON.stringify(bioData) })\n      .eq('id', userId);\n    \n    return true;\n  }\n\n  async isInWishlist(userId: string, vehicleId: string): Promise<boolean> {\n    console.log('üîÑ V√©rification favori table wishlist:', { userId, vehicleId });\n    \n    try {\n      // Essayer d'abord la table wishlist d√©di√©e\n      const { data: wishlistData, error: wishlistError } = await supabaseServer\n        .from('wishlist')\n        .select('id')\n        .eq('user_id', userId)\n        .eq('vehicle_id', parseInt(vehicleId))\n        .limit(1);\n      \n      if (wishlistError) {\n        console.log('‚ùå Table wishlist non disponible, utilisation bio:', wishlistError);\n        return await this.isInWishlistBio(userId, vehicleId);\n      }\n      \n      const isInWishlist = wishlistData && wishlistData.length > 0;\n      console.log('‚úÖ V√©hicule en favori (table d√©di√©e):', isInWishlist);\n      return isInWishlist;\n    } catch (error) {\n      console.error('‚ùå Erreur table wishlist, fallback bio:', error);\n      return await this.isInWishlistBio(userId, vehicleId);\n    }\n  }\n\n  async isInWishlistBio(userId: string, vehicleId: string): Promise<boolean> {\n    const user = await this.getUser(userId);\n    if (!user || !user.bio) return false;\n\n    try {\n      const bioData = JSON.parse(user.bio);\n      const favorites = bioData.favorites || [];\n      return favorites.includes(vehicleId);\n    } catch (e) {\n      return false;\n    }\n  }\n\n\n\n  // Saved Searches methods\n  async getUserSavedSearches(userId: string): Promise<SavedSearch[]> {\n    const { data, error } = await supabaseServer\n      .from('saved_searches')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      console.error('Error fetching saved searches:', error);\n      return [];\n    }\n    return data as SavedSearch[];\n  }\n\n  async createSavedSearch(search: InsertSavedSearch): Promise<SavedSearch> {\n    // Mapper les champs vers les colonnes de la base de donn√©es\n    const dbData = {\n      id: search.id,\n      user_id: search.userId,\n      name: search.name,\n      filters: search.filters,\n      alerts_enabled: search.alertsEnabled || false,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n\n    const { data, error } = await supabaseServer\n      .from('saved_searches')\n      .insert(dbData)\n      .select()\n      .single();\n    \n    if (error) {\n      throw new Error(`Error creating saved search: ${error.message}`);\n    }\n    return data as SavedSearch;\n  }\n\n  async updateSavedSearch(id: string, updates: Partial<InsertSavedSearch>): Promise<SavedSearch | undefined> {\n    // Mapper les champs vers les colonnes de la base de donn√©es\n    const dbUpdates: any = {\n      updated_at: new Date().toISOString()\n    };\n\n    if (updates.alertsEnabled !== undefined) {\n      dbUpdates.alerts_enabled = updates.alertsEnabled;\n    }\n    if (updates.name !== undefined) {\n      dbUpdates.name = updates.name;\n    }\n    if (updates.filters !== undefined) {\n      dbUpdates.filters = updates.filters;\n    }\n    \n    const { data, error } = await supabaseServer\n      .from('saved_searches')\n      .update(dbUpdates)\n      .eq('id', id)\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error updating saved search:', error);\n      return undefined;\n    }\n    return data as SavedSearch;\n  }\n\n  async deleteSavedSearch(id: string): Promise<boolean> {\n    const { error } = await supabaseServer\n      .from('saved_searches')\n      .delete()\n      .eq('id', id);\n    \n    return !error;\n  }\n\n  async getAllVehiclesAdmin(): Promise<Vehicle[]> {\n    console.log('üîÑ R√©cup√©ration de TOUTES les annonces (admin) avec users depuis Supabase...');\n    \n    try {\n      // Requ√™te directe avec JOIN pour r√©cup√©rer toutes les annonces (y compris inactives)\n      let { data, error } = await supabaseServer\n        .from('annonces')\n        .select(`\n          *,\n          users (*)\n        `)\n        .order('created_at', { ascending: false });\n      \n      if (error) {\n        console.error('‚ùå Erreur Supabase:', error.message);\n        console.log('‚ùå Rechute vers requ√™te directe...');\n        \n        // Fallback: r√©cup√©rer s√©par√©ment les v√©hicules et utilisateurs\n        const { data: vehiclesData, error: vehiclesError } = await supabaseServer\n          .from('annonces')\n          .select('*')\n          .order('created_at', { ascending: false });\n          \n        if (vehiclesError) {\n          throw new Error(`Error fetching vehicles: ${vehiclesError.message}`);\n        }\n        \n        const { data: usersData, error: usersError } = await supabaseServer\n          .from('users')\n          .select('*');\n          \n        if (usersError) {\n          throw new Error(`Error fetching users: ${usersError.message}`);\n        }\n        \n        // Associer manuellement les donn√©es\n        data = vehiclesData.map((vehicle: any) => {\n          const user = usersData.find((u: any) => u.id === vehicle.user_id);\n          return { ...vehicle, users: user };\n        });\n      }\n      \n      console.log('‚úÖ TOUTES les annonces avec users r√©cup√©r√©es depuis Supabase:', data?.length || 0);\n      \n      if (data && data.length > 0) {\n        // Transformer les donn√©es de la table annonces vers le format Vehicle avec user inclus\n        const transformedData = data.map((vehicle: any) => ({\n          id: vehicle.id.toString(),\n          userId: vehicle.user_id,\n          user: vehicle.users ? {\n            id: vehicle.users.id,\n            email: vehicle.users.email,\n            name: vehicle.users.name,\n            phone: vehicle.users.phone,\n            whatsapp: vehicle.users.whatsapp,\n            type: vehicle.users.type,\n            companyName: vehicle.users.company_name,\n            companyLogo: vehicle.users.company_logo,\n            address: vehicle.users.address,\n            city: vehicle.users.city,\n            postalCode: vehicle.users.postal_code,\n            website: vehicle.users.website,\n            siret: vehicle.users.siret,\n            bio: vehicle.users.bio,\n            avatar: vehicle.users.avatar,\n            specialties: vehicle.users.specialties ? JSON.parse(vehicle.users.specialties) : [],\n            verified: vehicle.users.verified,\n            emailVerified: vehicle.users.email_verified,\n            contactPreferences: vehicle.users.contact_preferences ? JSON.parse(vehicle.users.contact_preferences) : [],\n            createdAt: new Date(vehicle.users.created_at),\n            lastLoginAt: vehicle.users.last_login_at ? new Date(vehicle.users.last_login_at) : undefined\n          } : undefined,\n          title: vehicle.title,\n          description: vehicle.description,\n          category: vehicle.category,\n          brand: vehicle.brand,\n          model: vehicle.model,\n          year: vehicle.year,\n          mileage: vehicle.mileage,\n          fuelType: vehicle.fuel_type,\n          condition: vehicle.condition,\n          price: vehicle.price,\n          location: vehicle.location,\n          images: vehicle.images || [],\n          features: vehicle.features || [],\n          listingType: vehicle.listing_type || 'sale',\n          contactPhone: vehicle.contact_phone || null,\n          contactEmail: vehicle.contact_email || null,\n          contactWhatsapp: vehicle.contact_whatsapp || null,\n          hidePhone: vehicle.hide_phone || false,\n          isPremium: vehicle.is_premium,\n          premiumType: vehicle.premium_type,\n          premiumExpiresAt: vehicle.premium_expires_at ? new Date(vehicle.premium_expires_at) : undefined,\n          createdAt: new Date(vehicle.created_at),\n          updatedAt: new Date(vehicle.updated_at),\n          views: vehicle.views,\n          favorites: vehicle.favorites,\n          status: vehicle.status,\n          isActive: vehicle.is_active !== false\n        }));\n        \n        return transformedData as Vehicle[];\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur dans getAllVehiclesAdmin:', error);\n      return [];\n    }\n    \n    return [];\n  }\n\n  async updateVehicleActiveStatus(id: string, isActive: boolean): Promise<boolean> {\n    try {\n      const { error } = await supabaseServer\n        .from('annonces')\n        .update({ is_active: isActive })\n        .eq('id', parseInt(id));\n\n      if (error) {\n        console.error('‚ùå Erreur changement statut actif:', error);\n        // Si la colonne n'existe pas encore, le signaler\n        if (error.message.includes('column') && error.message.includes('is_active')) {\n          console.log('‚ö†Ô∏è  La colonne is_active doit √™tre ajout√©e √† la table annonces dans Supabase');\n          console.log('‚ö†Ô∏è  Commande SQL: ALTER TABLE annonces ADD COLUMN is_active BOOLEAN DEFAULT true;');\n        }\n        return false;\n      }\n\n      console.log(`‚úÖ Statut annonce ${id} chang√©: ${isActive ? 'active' : 'd√©sactiv√©e'}`);\n      return true;\n    } catch (error) {\n      console.error('‚ùå Erreur inattendue changement statut:', error);\n      return false;\n    }\n  }\n}\n\nexport const storage = new SupabaseStorage();\n","size_bytes":45068},"server/supabase.ts":{"content":"import dotenv from 'dotenv';\ndotenv.config();\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.VITE_SUPABASE_URL\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\nif (!supabaseUrl) {\n  throw new Error('VITE_SUPABASE_URL environment variable is required')\n}\n\nif (!supabaseServiceKey) {\n  console.warn('SUPABASE_SERVICE_ROLE_KEY not found, using anon key for server operations')\n}\n\n// Use service role key for server-side operations, fallback to anon key\nconst key = supabaseServiceKey || process.env.VITE_SUPABASE_ANON_KEY\n\nif (!key) {\n  throw new Error('Either SUPABASE_SERVICE_ROLE_KEY or VITE_SUPABASE_ANON_KEY is required')\n}\n\nexport const supabaseServer = createClient(supabaseUrl, key, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n})","size_bytes":817},"server/test-all-49-annonces.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function testAll49Annonces() {\n  console.log('üìä TEST COMPLET DES 49 ANNONCES [BD]');\n  \n  try {\n    // R√©cup√©rer TOUTES les annonces avec leurs users\n    const { data: allAnnonces, error: joinError } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        price,\n        category,\n        users(id, name, email, type)\n      `)\n      .order('id');\n    \n    if (joinError) {\n      console.error('‚ùå Erreur:', joinError);\n      return;\n    }\n    \n    console.log(`‚úÖ ${allAnnonces?.length} annonces r√©cup√©r√©es avec users`);\n    \n    // Statistiques d√©taill√©es\n    const categories = new Map();\n    const userTypes = new Map();\n    const priceRanges = new Map();\n    \n    allAnnonces?.forEach(annonce => {\n      // Par cat√©gorie\n      const cat = annonce.category;\n      categories.set(cat, (categories.get(cat) || 0) + 1);\n      \n      // Par type d'utilisateur\n      const userType = annonce.users?.type || 'unknown';\n      userTypes.set(userType, (userTypes.get(userType) || 0) + 1);\n      \n      // Par gamme de prix\n      const price = annonce.price;\n      let range = '';\n      if (price < 1000) range = '< 1000‚Ç¨';\n      else if (price < 5000) range = '1000-5000‚Ç¨';\n      else if (price < 15000) range = '5000-15000‚Ç¨';\n      else if (price < 30000) range = '15000-30000‚Ç¨';\n      else range = '> 30000‚Ç¨';\n      \n      priceRanges.set(range, (priceRanges.get(range) || 0) + 1);\n    });\n    \n    console.log('\\nüìà STATISTIQUES COMPL√àTES:');\n    \n    console.log('\\nüöó Par cat√©gorie:');\n    [...categories.entries()].sort((a, b) => b[1] - a[1]).forEach(([cat, count]) => {\n      console.log(`   ${cat}: ${count} annonces`);\n    });\n    \n    console.log('\\nüë• Par type d\\'utilisateur:');\n    [...userTypes.entries()].forEach(([type, count]) => {\n      console.log(`   ${type}: ${count} annonces`);\n    });\n    \n    console.log('\\nüí∞ Par gamme de prix:');\n    [...priceRanges.entries()].forEach(([range, count]) => {\n      console.log(`   ${range}: ${count} annonces`);\n    });\n    \n    // Exemples d'annonces par type d'utilisateur\n    console.log('\\nüîç EXEMPLES PAR TYPE:');\n    \n    const professionals = allAnnonces?.filter(a => a.users?.type === 'professional').slice(0, 3);\n    console.log('\\nProfessionnels:');\n    professionals?.forEach(a => {\n      console.log(`   ${a.id}: ${a.title} - ${a.price}‚Ç¨ (${a.users.name})`);\n    });\n    \n    const individuals = allAnnonces?.filter(a => a.users?.type === 'individual').slice(0, 3);\n    console.log('\\nParticuliers:');\n    individuals?.forEach(a => {\n      console.log(`   ${a.id}: ${a.title} - ${a.price}‚Ç¨ (${a.users.name})`);\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ntestAll49Annonces();","size_bytes":2836},"server/test-auto-sync.ts":{"content":"// Test de la synchronisation automatique en cr√©ant un utilisateur test\nimport { supabaseServer } from './supabase.js';\n\nasync function testAutoSync() {\n  console.log('üß™ Test de la synchronisation automatique...');\n  \n  try {\n    // Cr√©er un utilisateur test via l'Admin API\n    const testEmail = `test-sync-${Date.now()}@example.com`;\n    const testPassword = 'TestPassword123!';\n    \n    console.log(`üìù Cr√©ation utilisateur test: ${testEmail}`);\n    \n    const { data: newUser, error: createError } = await supabaseServer.auth.admin.createUser({\n      email: testEmail,\n      password: testPassword,\n      email_confirm: true,\n      user_metadata: {\n        name: 'Test Sync User',\n        type: 'individual',\n        phone: '+33 1 23 45 67 89'\n      }\n    });\n    \n    if (createError) {\n      console.error('‚ùå Erreur cr√©ation utilisateur:', createError);\n      return;\n    }\n    \n    console.log('‚úÖ Utilisateur cr√©√© dans auth.users');\n    console.log('üîç ID utilisateur:', newUser.user.id);\n    \n    // Attendre un peu pour que le trigger s'ex√©cute\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    // V√©rifier que l'utilisateur a √©t√© cr√©√© dans public.users\n    const { data: publicUser, error: publicError } = await supabaseServer\n      .from('users')\n      .select('*')\n      .eq('id', newUser.user.id)\n      .single();\n      \n    if (publicError) {\n      console.error('‚ùå Utilisateur pas trouv√© dans public.users:', publicError);\n    } else {\n      console.log('‚úÖ Utilisateur trouv√© dans public.users:', publicUser.name);\n    }\n    \n    // V√©rifier que le profil a √©t√© cr√©√©\n    const { data: profile, error: profileError } = await supabaseServer\n      .from('profiles')\n      .select('*')\n      .eq('id', newUser.user.id)\n      .single();\n      \n    if (profileError) {\n      console.error('‚ùå Profil pas trouv√©:', profileError);\n    } else {\n      console.log('‚úÖ Profil cr√©√©:', profile.account_type, profile.phone);\n    }\n    \n    // Nettoyer en supprimant l'utilisateur test\n    console.log('üßπ Suppression utilisateur test...');\n    await supabaseServer.auth.admin.deleteUser(newUser.user.id);\n    console.log('‚úÖ Utilisateur test supprim√©');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur test:', error);\n  }\n}\n\ntestAutoSync();","size_bytes":2311},"server/test-corrected-vehicle-data.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function testCorrectedVehicleData() {\n  console.log('üîç TEST DES DONN√âES CORRIG√âES VEHICLE + USER');\n  \n  try {\n    // Simuler ce que fait getAllVehicles() maintenant\n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .select(`\n        *,\n        users(*)\n      `)\n      .limit(3);\n    \n    if (error) {\n      console.error('‚ùå Erreur:', error);\n      return;\n    }\n    \n    console.log(`üìä ${data?.length} v√©hicules avec donn√©es compl√®tes`);\n    \n    data?.forEach((annonce, index) => {\n      console.log(`\\n--- V√âHICULE ${index + 1} ---`);\n      console.log('‚úÖ Titre:', annonce.title);\n      console.log('‚úÖ Prix:', annonce.price, '‚Ç¨');\n      \n      if (annonce.users) {\n        console.log('üë§ VENDEUR:');\n        console.log('   Nom:', annonce.users.name);\n        console.log('   Email:', annonce.users.email);\n        console.log('   T√©l√©phone:', annonce.users.phone || 'Non renseign√©');\n        console.log('   WhatsApp:', annonce.users.whatsapp || 'Non renseign√©');\n        console.log('   Type:', annonce.users.type);\n        console.log('   Entreprise:', annonce.users.company_name || 'N/A');\n        console.log('   V√©rifi√©:', annonce.users.verified ? 'Oui' : 'Non');\n      } else {\n        console.log('‚ùå PROBL√àME: Donn√©es vendeur manquantes');\n      }\n    });\n    \n    console.log('\\nüéØ R√âSULTAT: Les donn√©es vendeur sont maintenant disponibles pour l\\'affichage !');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ntestCorrectedVehicleData();","size_bytes":1601},"server/test-insert-annonce.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function testInsertAnnonce() {\n  console.log('üß™ TEST INSERTION - Une annonce dans la table annonces');\n  \n  try {\n    // Ins√©rer une seule annonce pour test\n    const testAnnonce = {\n      user_id: 'test_user',\n      title: 'BMW 320d - Test connexion',\n      description: 'BMW 320d en excellent √©tat pour tester la connexion √† la base de donn√©es annonces.',\n      category: 'voiture',\n      brand: 'BMW',\n      model: '320d',\n      year: 2020,\n      mileage: 45000,\n      fuel_type: 'diesel',\n      condition: 'used',\n      price: 28500,\n      location: 'Paris 75011',\n      images: ['https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg'],\n      features: ['GPS', 'Climatisation', 'Jantes alliage'],\n      is_premium: false,\n      views: 0,\n      favorites: 0,\n      status: 'approved'\n    };\n    \n    const { data, error } = await supabaseServer\n      .from('annonces')\n      .insert([testAnnonce])\n      .select();\n    \n    if (error) {\n      console.error('‚ùå Erreur insertion test:', error);\n      return;\n    }\n    \n    console.log('‚úÖ TEST R√âUSSI - Annonce ins√©r√©e:', data);\n    \n    // V√©rifier la lecture\n    const { data: readData, error: readError } = await supabaseServer\n      .from('annonces')\n      .select('*')\n      .eq('title', 'BMW 320d - Test connexion');\n    \n    if (readError) {\n      console.error('‚ùå Erreur lecture:', readError);\n      return;\n    }\n    \n    console.log('‚úÖ LECTURE CONFIRM√âE - Annonce r√©cup√©r√©e:', readData);\n    console.log('üéâ CONNEXION TABLE ANNONCES FONCTIONNELLE !');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ntestInsertAnnonce();","size_bytes":1703},"server/test-profiles-table.ts":{"content":"// Test pour v√©rifier que la table profiles existe et est fonctionnelle\nimport { supabaseServer } from './supabase.js';\n\nasync function testProfilesTable() {\n  console.log('üß™ Test de la table profiles...');\n  \n  try {\n    // 1. V√©rifier que la table profiles existe\n    const { data: profiles, error: profilesError } = await supabaseServer\n      .from('profiles')\n      .select('*')\n      .limit(5);\n      \n    if (profilesError) {\n      console.error('‚ùå Table profiles non accessible:', profilesError);\n      return;\n    }\n    \n    console.log('‚úÖ Table profiles accessible');\n    console.log('üìä Profils existants:', profiles.length);\n    \n    profiles.forEach(profile => {\n      console.log(`  - ${profile.id} - ${profile.account_type} - ${profile.phone || 'pas de tel'}`);\n    });\n    \n    // 2. V√©rifier les utilisateurs existants qui n'ont pas de profil\n    const { data: users } = await supabaseServer\n      .from('users')\n      .select('id, email, name');\n      \n    console.log('üë• Utilisateurs dans users:', users?.length);\n    \n    // 3. Cr√©er des profils pour les utilisateurs existants s'ils n'en ont pas\n    if (users) {\n      for (const user of users) {\n        const existingProfile = profiles.find(p => p.id === user.id);\n        if (!existingProfile) {\n          console.log(`üîß Cr√©ation profil pour ${user.email}...`);\n          \n          const { error: createError } = await supabaseServer\n            .from('profiles')\n            .insert({\n              id: user.id,\n              account_type: 'individual',\n              onboarding_completed: true // Utilisateurs existants consid√©r√©s comme compl√©t√©s\n            });\n            \n          if (createError) {\n            console.error(`‚ùå Erreur cr√©ation profil ${user.email}:`, createError);\n          } else {\n            console.log(`‚úÖ Profil cr√©√© pour ${user.email}`);\n          }\n        }\n      }\n    }\n    \n    console.log('');\n    console.log('üéØ PROCHAINES √âTAPES :');\n    console.log('1. Configurer Google OAuth dans Supabase Dashboard');\n    console.log('2. Tester cr√©ation nouveau compte pour valider synchronisation automatique');\n    console.log('3. Tester connexion Google OAuth');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur test profiles:', error);\n  }\n}\n\ntestProfilesTable();","size_bytes":2310},"server/test-relation-after-creation.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function testRelationAfterCreation() {\n  console.log('üîó TEST DE LA RELATION APR√àS CR√âATION');\n  \n  try {\n    // Test simple de jointure\n    const { data: joinTest, error: joinError } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        price,\n        users(id, name, email, type)\n      `)\n      .limit(5);\n    \n    if (joinError) {\n      console.error('‚ùå Relation non fonctionnelle:', joinError.message);\n      console.log('üí° Ex√©cutez le fichier create-foreign-key-relation.sql dans Supabase');\n      return;\n    }\n    \n    console.log('‚úÖ RELATION FONCTIONNELLE !');\n    console.log(`üìä ${joinTest?.length} annonces avec users li√©s`);\n    \n    joinTest?.forEach(annonce => {\n      console.log(`\\n   Annonce ${annonce.id}: ${annonce.title}`);\n      console.log(`   Prix: ${annonce.price}‚Ç¨`);\n      console.log(`   User: ${annonce.users?.name} (${annonce.users?.email})`);\n      console.log(`   Type: ${annonce.users?.type}`);\n    });\n    \n    // Statistiques\n    const total = joinTest?.length || 0;\n    const individuals = joinTest?.filter(a => a.users?.type === 'individual').length || 0;\n    const professionals = joinTest?.filter(a => a.users?.type === 'professional').length || 0;\n    \n    console.log('\\nüìà STATISTIQUES:');\n    console.log(`   Total: ${total} annonces test√©es`);\n    console.log(`   Particuliers: ${individuals}`);\n    console.log(`   Professionnels: ${professionals}`);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n  }\n}\n\n// Attendre 2 secondes puis tester (laisser le temps de cr√©er la relation)\nsetTimeout(testRelationAfterCreation, 2000);","size_bytes":1721},"server/test-relations-final.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function testRelationsFinal() {\n  console.log('üîó TEST FINAL DES RELATIONS ANNONCES ‚Üî USERS');\n  \n  try {\n    // Test de jointure annonces avec users\n    const { data: annoncesWith Users, error: joinError } = await supabaseServer\n      .from('annonces')\n      .select(`\n        id,\n        title,\n        user_id,\n        price,\n        category,\n        users!inner(id, name, email, type)\n      `)\n      .limit(10);\n    \n    if (joinError) {\n      console.error('‚ùå Erreur jointure:', joinError);\n      return;\n    }\n    \n    console.log('‚úÖ RELATIONS FONCTIONNELLES !');\n    console.log(`üìä ${annoncesWith Users?.length} annonces avec users li√©s`);\n    \n    annoncesWith Users?.forEach(annonce => {\n      console.log(`   ${annonce.id}: ${annonce.title}`);\n      console.log(`      ‚Üí User: ${annonce.users.name} (${annonce.users.email})`);\n      console.log(`      ‚Üí Prix: ${annonce.price}‚Ç¨ | Cat√©gorie: ${annonce.category}\\n`);\n    });\n    \n    // Statistiques par type d'utilisateur\n    const individualCount = annoncesWith Users?.filter(a => a.users.type === 'individual').length || 0;\n    const professionalCount = annoncesWith Users?.filter(a => a.users.type === 'professional').length || 0;\n    \n    console.log('üìà R√âPARTITION PAR TYPE:');\n    console.log(`   Particuliers: ${individualCount} annonces`);\n    console.log(`   Professionnels: ${professionalCount} annonces`);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ntestRelationsFinal();","size_bytes":1555},"server/test-supabase.ts":{"content":"import { supabaseServer } from './supabase';\n\nexport async function testSupabaseConnection() {\n  console.log('üîó TEST CONNEXION SUPABASE - PREUVE DEMAND√âE');\n  \n  try {\n    // Test 1: V√©rifier la connexion\n    console.log('1Ô∏è‚É£ Test connexion...');\n    const { data: testData, error: testError } = await supabaseServer\n      .from('information_schema.tables')\n      .select('table_name')\n      .limit(1);\n    \n    if (testError) {\n      console.error('‚ùå √âchec connexion:', testError);\n      return false;\n    }\n    \n    console.log('‚úÖ Connexion Supabase confirm√©e');\n    \n    // Test 2: Cr√©er table exemple (via raw SQL si possible)\n    console.log('2Ô∏è‚É£ Tentative cr√©ation table exemple...');\n    \n    // Test 3: Ins√©rer donn√©es directement via upsert\n    console.log('3Ô∏è‚É£ Insertion des donn√©es de test...');\n    const { data: insertData, error: insertError } = await supabaseServer\n      .from('exemple')\n      .upsert([\n        {\n          id: 1,\n          nom: 'ennoury',\n          prenom: 'amine',\n          telephone: '0522708175'\n        }\n      ], { onConflict: 'id' })\n      .select();\n    \n    if (insertError) {\n      console.log('‚ö†Ô∏è  Table exemple n\\'existe pas encore. Erreur:', insertError.message);\n      \n      // V√©rifier les tables existantes\n      const { data: tables, error: tablesError } = await supabaseServer\n        .from('information_schema.tables')\n        .select('table_name')\n        .eq('table_schema', 'public');\n        \n      if (!tablesError && tables) {\n        console.log('üìã Tables existantes dans votre base:', tables.map(t => t.table_name));\n      }\n      \n      return false;\n    }\n    \n    console.log('‚úÖ PREUVE CONNEXION SUPABASE - DONN√âES INS√âR√âES:', insertData);\n    \n    // Test 4: Lire les donn√©es pour confirmation\n    const { data: readData, error: readError } = await supabaseServer\n      .from('exemple')\n      .select('*')\n      .eq('id', 1);\n    \n    if (readError) {\n      console.error('‚ùå Erreur lecture:', readError);\n      return false;\n    }\n    \n    console.log('üéâ PREUVE FINALE - Donn√©es lues depuis Supabase:', readData);\n    return true;\n    \n  } catch (error) {\n    console.error('‚ùå ERREUR GLOBALE:', error);\n    return false;\n  }\n}\n\ntestSupabaseConnection();","size_bytes":2269},"server/test-sync-api.ts":{"content":"// Test de l'API de synchronisation manuelle\nimport { supabaseServer } from './supabase.js';\n\nasync function testSyncAPI() {\n  console.log('üß™ Test de l\\'API de synchronisation...');\n  \n  try {\n    // 1. Cr√©er un utilisateur test dans auth.users\n    const testEmail = `test-manual-sync-${Date.now()}@example.com`;\n    const { data: newUser, error: createError } = await supabaseServer.auth.admin.createUser({\n      email: testEmail,\n      password: 'TestPassword123!',\n      email_confirm: true,\n      user_metadata: {\n        name: 'Test Manual Sync',\n        type: 'professional',\n        phone: '+33 6 12 34 56 78',\n        companyName: 'Test Company'\n      }\n    });\n    \n    if (createError || !newUser.user) {\n      console.error('‚ùå Erreur cr√©ation utilisateur:', createError);\n      return;\n    }\n    \n    console.log('‚úÖ Utilisateur cr√©√© dans auth.users:', newUser.user.id);\n    \n    // 2. Tester l'API de synchronisation\n    const syncResponse = await fetch('http://localhost:5000/api/auth/sync', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userId: newUser.user.id,\n        userData: {\n          name: 'Test Manual Sync',\n          type: 'professional',\n          phone: '+33 6 12 34 56 78',\n          companyName: 'Test Company'\n        }\n      })\n    });\n    \n    if (syncResponse.ok) {\n      const syncData = await syncResponse.json();\n      console.log('‚úÖ Synchronisation API r√©ussie:', syncData.user.name);\n      console.log('üìä Profil cr√©√©:', syncData.profile.account_type);\n    } else {\n      console.error('‚ùå Erreur API sync:', await syncResponse.text());\n    }\n    \n    // 3. V√©rifier le statut de synchronisation\n    const statusResponse = await fetch(`http://localhost:5000/api/auth/status/${newUser.user.id}`);\n    if (statusResponse.ok) {\n      const statusData = await statusResponse.json();\n      console.log('üìã Statut synchronisation:', statusData);\n    }\n    \n    // 4. Nettoyer\n    await supabaseServer.auth.admin.deleteUser(newUser.user.id);\n    console.log('üßπ Utilisateur test supprim√©');\n    \n  } catch (error) {\n    console.error('‚ùå Erreur test:', error);\n  }\n}\n\ntestSyncAPI();","size_bytes":2223},"server/test-user-sync.ts":{"content":"// Test de synchronisation des utilisateurs\nimport { supabaseServer } from './supabase.js';\n\nasync function testUserSync() {\n  console.log('üß™ Test de synchronisation des utilisateurs...');\n  \n  try {\n    // 1. Tester les utilisateurs auth existants\n    const { data: authUsers, error: authError } = await supabaseServer.auth.admin.listUsers();\n    \n    if (authError) {\n      console.error('‚ùå Erreur r√©cup√©ration utilisateurs auth:', authError);\n      return;\n    }\n    \n    console.log('üë• Utilisateurs auth.users:', authUsers.users.length);\n    authUsers.users.forEach(user => {\n      console.log(`  - ${user.email} (${user.id})`);\n      console.log(`    M√©tadonn√©es:`, user.user_metadata);\n    });\n    \n    // 2. Tester les utilisateurs dans public.users\n    const { data: publicUsers, error: publicError } = await supabaseServer\n      .from('users')\n      .select('*');\n      \n    if (publicError) {\n      console.error('‚ùå Erreur r√©cup√©ration public.users:', publicError);\n    } else {\n      console.log('üìä Utilisateurs public.users:', publicUsers.length);\n      publicUsers.forEach(user => {\n        console.log(`  - ${user.email} (${user.id}) - ${user.name}`);\n      });\n    }\n    \n    // 3. V√©rifier correspondance\n    const authEmails = authUsers.users.map(u => u.email);\n    const publicEmails = publicUsers?.map(u => u.email) || [];\n    \n    const missingInPublic = authEmails.filter(email => !publicEmails.includes(email));\n    \n    if (missingInPublic.length > 0) {\n      console.log('‚ö†Ô∏è Utilisateurs manquants dans public.users:', missingInPublic);\n    } else {\n      console.log('‚úÖ Tous les utilisateurs auth sont synchronis√©s');\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur test:', error);\n  }\n}\n\ntestUserSync();","size_bytes":1769},"server/test-vehicle-with-user.ts":{"content":"import { supabaseServer } from './supabase';\n\nasync function testVehicleWithUser() {\n  console.log('üîç TEST STRUCTURE DONN√âES VEHICLE + USER');\n  \n  try {\n    // Test comment les donn√©es arrivent depuis le backend\n    const { data: vehicles, error } = await supabaseServer\n      .from('annonces')\n      .select(`\n        *,\n        users(*)\n      `)\n      .limit(2);\n    \n    if (error) {\n      console.error('‚ùå Erreur:', error);\n      return;\n    }\n    \n    console.log('üìä STRUCTURE DES DONN√âES RE√áUES:');\n    vehicles?.forEach((vehicle, index) => {\n      console.log(`\\n--- V√âHICULE ${index + 1} ---`);\n      console.log('ID:', vehicle.id);\n      console.log('Title:', vehicle.title);\n      console.log('User ID:', vehicle.user_id);\n      console.log('Users Object:', JSON.stringify(vehicle.users, null, 2));\n      \n      if (vehicle.users) {\n        console.log('‚úÖ User Name:', vehicle.users.name);\n        console.log('‚úÖ User Email:', vehicle.users.email);\n        console.log('‚úÖ User Phone:', vehicle.users.phone);\n        console.log('‚úÖ User WhatsApp:', vehicle.users.whatsapp);\n        console.log('‚úÖ User Type:', vehicle.users.type);\n      } else {\n        console.log('‚ùå PROBL√àME: Pas de donn√©es users');\n      }\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur globale:', error);\n  }\n}\n\ntestVehicleWithUser();","size_bytes":1359},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp, real, json, uuid } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Table profiles minimaliste selon les specs utilisateur\nexport const profiles = pgTable(\"profiles\", {\n  id: uuid(\"id\").primaryKey(), // References auth.users(id)\n  avatarUrl: text(\"avatar_url\"),\n  accountType: text(\"account_type\").$type<'individual' | 'professional'>().default('individual'),\n  phone: text(\"phone\"),\n  onboardingCompleted: boolean(\"onboarding_completed\").default(false),\n  marketingConsent: boolean(\"marketing_consent\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Table users existante (√† migrer progressivement vers profiles)\nexport const users = pgTable(\"users\", {\n  id: text(\"id\").primaryKey(),\n  email: text(\"email\").notNull().unique(),\n  name: text(\"name\").notNull(),\n  phone: text(\"phone\"),\n  whatsapp: text(\"whatsapp\"),\n  type: text(\"type\").notNull(), // 'individual' | 'professional'\n  companyName: text(\"company_name\"),\n  companyLogo: text(\"company_logo\"),\n  address: text(\"address\"),\n  city: text(\"city\"),\n  postalCode: text(\"postal_code\"),\n  website: text(\"website\"),\n  siret: text(\"siret\"),\n  bio: text(\"bio\"),\n  avatar: text(\"avatar\"),\n  specialties: json(\"specialties\").$type<string[]>(),\n  verified: boolean(\"verified\").default(false),\n  emailVerified: boolean(\"email_verified\").default(false),\n  contactPreferences: json(\"contact_preferences\").$type<string[]>(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  lastLoginAt: timestamp(\"last_login_at\"),\n});\n\nexport const annonces = pgTable(\"annonces\", {\n  id: serial(\"id\").primaryKey(),\n  userId: text(\"user_id\").references(() => users.id).notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  category: text(\"category\").notNull(),\n  brand: text(\"brand\").notNull(),\n  model: text(\"model\").notNull(),\n  year: integer(\"year\").notNull(),\n  mileage: integer(\"mileage\"),\n  fuelType: text(\"fuel_type\"), // 'gasoline' | 'diesel' | 'electric' | 'hybrid'\n  condition: text(\"condition\").notNull(), // 'new' | 'used' | 'damaged'\n  price: real(\"price\").notNull(),\n  location: text(\"location\").notNull(),\n  images: json(\"images\").$type<string[]>().default([]),\n  features: json(\"features\").$type<string[]>().default([]),\n  listingType: text(\"listing_type\").notNull().default(\"sale\"), // 'sale' | 'search'\n  isPremium: boolean(\"is_premium\").default(false),\n  premiumType: text(\"premium_type\"), // 'daily' | 'weekly' | 'monthly'\n  premiumExpiresAt: timestamp(\"premium_expires_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n  views: integer(\"views\").default(0),\n  favorites: integer(\"favorites\").default(0),\n  status: text(\"status\").default(\"approved\"), // 'pending' | 'approved' | 'rejected'\n  isActive: boolean(\"is_active\").default(true), // Allow users to activate/deactivate their listings\n});\n\nexport const messages = pgTable(\"messages\", {\n  id: text(\"id\").primaryKey(),\n  fromUserId: text(\"from_user_id\").references(() => users.id).notNull(),\n  toUserId: text(\"to_user_id\").references(() => users.id).notNull(),\n  vehicleId: text(\"vehicle_id\").references(() => annonces.id).notNull(),\n  content: text(\"content\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  read: boolean(\"read\").default(false),\n});\n\n// Wishlist table for favorite vehicles\nexport const wishlist = pgTable(\"wishlist\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\").references(() => users.id).notNull(),\n  vehicleId: text(\"vehicle_id\").references(() => annonces.id).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Admin tables\nexport const admins = pgTable(\"admins\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\").notNull(),\n  role: text(\"role\").notNull().default(\"moderator\"), // 'super_admin' | 'admin' | 'moderator'\n  permissions: json(\"permissions\").$type<Record<string, boolean>>().default({}),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Types pour la nouvelle table profiles\nexport type Profile = typeof profiles.$inferSelect;\nexport type InsertProfile = typeof profiles.$inferInsert;\n\n// Sch√©mas Zod pour profiles\nexport const insertProfileSchema = createInsertSchema(profiles);\nexport const updateProfileSchema = insertProfileSchema.partial();\n\nexport const reports = pgTable(\"reports\", {\n  id: serial(\"id\").primaryKey(),\n  annonceId: text(\"annonce_id\"),\n  reporterUserId: text(\"reporter_user_id\"),\n  reason: text(\"reason\").notNull(),\n  description: text(\"description\"),\n  status: text(\"status\").default(\"pending\"), // 'pending' | 'reviewed' | 'resolved' | 'dismissed'\n  adminResponse: text(\"admin_response\"),\n  adminUserId: text(\"admin_user_id\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const adminLogs = pgTable(\"admin_logs\", {\n  id: serial(\"id\").primaryKey(),\n  adminUserId: text(\"admin_user_id\").notNull(),\n  action: text(\"action\").notNull(),\n  targetType: text(\"target_type\").notNull(),\n  targetId: text(\"target_id\"),\n  details: json(\"details\").$type<Record<string, any>>().default({}),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Saved searches table for alerts\nexport const savedSearches = pgTable(\"saved_searches\", {\n  id: text(\"id\").primaryKey(),\n  userId: text(\"user_id\").references(() => users.id).notNull(),\n  name: text(\"name\").notNull(), // User-given name for the search\n  filters: json(\"filters\").$type<{\n    category?: string;\n    subcategory?: string;\n    brand?: string;\n    model?: string;\n    yearFrom?: number;\n    yearTo?: number;\n    mileageFrom?: number;\n    mileageTo?: number;\n    priceFrom?: number;\n    priceTo?: number;\n    fuelType?: string;\n    condition?: string;\n    location?: string;\n    searchTerm?: string;\n  }>().notNull(),\n  alertsEnabled: boolean(\"alerts_enabled\").default(false),\n  lastChecked: timestamp(\"last_checked\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users);\nexport const insertVehicleSchema = createInsertSchema(annonces).omit({ id: true });\nexport const insertMessageSchema = createInsertSchema(messages);\nexport const insertWishlistSchema = createInsertSchema(wishlist);\nexport const insertSavedSearchSchema = createInsertSchema(savedSearches);\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type InsertVehicle = z.infer<typeof insertVehicleSchema>;\nexport type InsertMessage = z.infer<typeof insertMessageSchema>;\nexport type InsertWishlist = z.infer<typeof insertWishlistSchema>;\nexport type InsertSavedSearch = z.infer<typeof insertSavedSearchSchema>;\n\nexport type User = typeof users.$inferSelect;\nexport type Vehicle = typeof annonces.$inferSelect;\nexport type Message = typeof messages.$inferSelect;\nexport type Wishlist = typeof wishlist.$inferSelect;\nexport type SavedSearch = typeof savedSearches.$inferSelect;\n","size_bytes":7295},"types/index.ts":{"content":"export interface User {\n  id: string;\n  email: string;\n  name: string;\n  phone?: string;\n  whatsapp?: string;\n  type: 'individual' | 'professional';\n  companyName?: string;\n  companyLogo?: string;\n  address?: string;\n  city?: string;\n  postalCode?: string;\n  website?: string;\n  siret?: string;\n  bio?: string;\n  avatar?: string;\n  specialties?: string[];\n  verified: boolean;\n  emailVerified?: boolean;\n  contactPreferences?: ('whatsapp' | 'phone' | 'email')[];\n  createdAt: Date;\n  lastLoginAt?: Date;\n}\n\nexport interface Vehicle {\n  id: string;\n  userId: string;\n  user?: User;\n  title: string;\n  description: string;\n  category: SubcategoryId;\n  brand: string;\n  model: string;\n  year: number;\n  mileage?: number;\n  fuelType?: 'gasoline' | 'diesel' | 'electric' | 'hybrid';\n  condition: 'new' | 'used' | 'damaged';\n  price: number;\n  location: string;\n  images: string[];\n  features: string[];\n  isPremium: boolean;\n  premiumType?: 'daily' | 'weekly' | 'monthly';\n  premiumExpiresAt?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n  views: number;\n  favorites: number;\n  status: 'pending' | 'approved' | 'rejected';\n}\n\nexport interface Message {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  vehicleId: string;\n  content: string;\n  createdAt: Date;\n  read: boolean;\n}\n\nexport interface SearchFilters {\n  category?: string;\n  subcategory?: string;\n  brand?: string;\n  model?: string;\n  yearFrom?: number;\n  yearTo?: number;\n  mileageFrom?: number;\n  mileageTo?: number;\n  priceFrom?: number;\n  priceTo?: number;\n  fuelType?: string;\n  condition?: string;\n  location?: string;\n  searchTerm?: string;\n  sortBy?: 'date' | 'price_asc' | 'price_desc' | 'mileage';\n}\n\n// Type pour les cat√©gories principales\nexport type CategoryId = 'voiture-utilitaire' | 'moto-scooter-quad' | 'nautisme-sport-aerien' | 'services' | 'pieces';\n\n// Type pour les sous-cat√©gories\nexport type SubcategoryId = 'voiture' | 'utilitaire' | 'caravane' | 'remorque' | 'moto' | 'scooter' | 'quad' | 'bateau' | 'jetski' | 'aerien' | 'reparation' | 'remorquage' | 'entretien' | 'autre-service' | 'piece-voiture' | 'piece-moto' | 'autre-piece';\n\nexport interface PremiumOption {\n  id: string;\n  name: string;\n  price: number;\n  duration: number; // in days\n  features: string[];\n}\n\nexport interface AccountSetupStep {\n  id: number;\n  title: string;\n  description: string;\n  completed: boolean;\n}","size_bytes":2374},"types/listing.ts":{"content":"export interface ListingFormData {\n  // √âtape 1: Type d'annonce\n  listingType: 'buy' | 'sell' | null;\n  \n  // √âtape 2: Type de produit\n  productType: 'car' | 'motorcycle' | 'scooter' | 'quad' | 'utility' | 'service' | 'parts' | null;\n  \n  // √âtape 3: Titre\n  title: string;\n  \n  // √âtape 4: Immatriculation (conditionnelle)\n  registrationNumber?: string;\n  \n  // √âtape 5: D√©tails du produit (dynamique selon le type)\n  productDetails: {\n    // Commun\n    brand: string;\n    model: string;\n    year: number;\n    firstRegistrationDate?: string; // Date de premi√®re mise en circulation\n    critAir?: '0' | '1' | '2' | '3' | '4' | '5' | 'non_classe'; // Vignette Crit'Air\n    \n    // Voiture\n    mileage?: number;\n    transmission?: 'manual' | 'automatic' | 'semi-automatic';\n    fuelType?: 'gasoline' | 'diesel' | 'electric' | 'hybrid';\n    color?: string;\n    power?: number; // CV\n    doors?: number;\n    vehicleType?: 'citadine' | 'berline' | 'suv' | 'break' | 'coupe' | 'cabriolet' | 'monospace' | 'pickup';\n    upholstery?: 'tissu' | 'cuir_partiel' | 'cuir' | 'velours' | 'alcantara';\n    equipment?: string[]; // Liste des √©quipements\n    emissionClass?: 'euro1' | 'euro2' | 'euro3' | 'euro4' | 'euro5' | 'euro6';\n    \n    // Moto\n    displacement?: number; // Cylindr√©e\n    motorcycleType?: 'sport' | 'touring' | 'urban' | 'trail' | 'custom' | 'roadster' | 'enduro' | 'cross';\n    licenseType?: 'A' | 'A1' | 'A2' | 'AL' | 'sans_permis'; // Type de permis requis\n    \n    // Utilitaire\n    utilityType?: 'van' | 'truck' | 'pickup' | 'trailer';\n    gvw?: number; // PTAC\n    volume?: number; // Volume utile\n    \n    // Pi√®ce d√©tach√©e\n    partCategory?: string;\n    partReference?: string;\n    compatibility?: string;\n    partCondition?: 'new' | 'used';\n  };\n  \n  // √âtape 6: √âtat du bien (conditionnelle)\n  condition?: 'like_new' | 'good' | 'average' | 'poor' | 'damaged';\n  \n  // √âtape 7: Description\n  description: string;\n  \n  // √âtape 8: Photos\n  photos: File[];\n  \n  // √âtape 9: Prix\n  price: number;\n  \n  // √âtape 10: Localisation\n  location: {\n    city: string;\n    postalCode: string;\n    coordinates?: { lat: number; lng: number };\n  };\n  \n  // √âtape 11: Coordonn√©es\n  contact: {\n    phone: string;\n    email?: string;\n    hidePhone: boolean;\n  };\n}\n\nexport interface FormStep {\n  id: number;\n  title: string;\n  isCompleted: boolean;\n  isActive: boolean;\n}","size_bytes":2388},"types/premium.ts":{"content":"export interface PremiumPack {\n  id: string;\n  name: string;\n  duration: number; // en jours\n  price: number; // en euros\n  description: string;\n  features: string[];\n  mostPopular?: boolean;\n}\n\nexport const PREMIUM_PACKS: PremiumPack[] = [\n  {\n    id: 'free',\n    name: 'Publication gratuite',\n    duration: 0,\n    price: 0,\n    description: 'Votre annonce sera visible dans les r√©sultats de recherche',\n    features: [\n      'Publication gratuite',\n      'Visible dans les r√©sultats',\n      'Dur√©e illimit√©e'\n    ]\n  },\n  {\n    id: 'daily',\n    name: 'Remont√©e quotidienne',\n    duration: 1,\n    price: 0.99,\n    description: 'Votre annonce en t√™te de liste pendant 24h',\n    features: [\n      'Remont√©e en t√™te de liste',\n      'Dur√©e : 24 heures',\n      'Visibilit√© maximale'\n    ]\n  },\n  {\n    id: 'weekly',\n    name: 'Remont√©e hebdomadaire',\n    duration: 7,\n    price: 4.99,\n    description: 'Votre annonce en t√™te de liste pendant 7 jours',\n    features: [\n      'Remont√©e en t√™te de liste',\n      'Dur√©e : 7 jours',\n      '√âconomie de 28%',\n      'Visibilit√© prolong√©e'\n    ],\n    mostPopular: true\n  },\n  {\n    id: 'monthly',\n    name: 'Remont√©e mensuelle',\n    duration: 30,\n    price: 19.90,\n    description: 'Votre annonce en t√™te de liste pendant 30 jours',\n    features: [\n      'Remont√©e en t√™te de liste',\n      'Dur√©e : 30 jours',\n      '√âconomie de 33%',\n      'Visibilit√© maximale',\n      'Meilleur rapport qualit√©/prix'\n    ]\n  }\n];","size_bytes":1479},"utils/mockData.ts":{"content":"import { User, Vehicle, PremiumOption } from '../types';\n\nexport const mockUsers: User[] = [\n  {\n    id: 'demo',\n    email: 'demo@demo.com',\n    name: 'Utilisateur D√©mo',\n    phone: '+33 6 00 00 00 00',\n    whatsapp: '+33 6 00 00 00 00',\n    type: 'individual',\n    verified: true,\n    city: 'Paris',\n    postalCode: '75001',\n    contactPreferences: ['whatsapp', 'phone', 'email'],\n    createdAt: new Date('2024-01-01'),\n  },\n  {\n    id: '1',\n    email: 'john.doe@email.com',\n    name: 'John Doe',\n    phone: '+33 6 12 34 56 78',\n    whatsapp: '+33 6 12 34 56 78',\n    type: 'individual',\n    verified: true,\n    city: 'Marseille',\n    postalCode: '13001',\n    contactPreferences: ['phone', 'email'],\n    createdAt: new Date('2024-01-15'),\n  },\n  {\n    id: '2',\n    email: 'garage.martin@email.com',\n    name: 'Pierre Martin',\n    phone: '+33 1 23 45 67 89',\n    whatsapp: '+33 6 00 11 22 33',\n    type: 'professional',\n    companyName: 'Garage Martin Auto',\n    address: '123 Avenue de la R√©publique, 75011 Paris',\n    city: 'Paris',\n    postalCode: '75011',\n    contactPreferences: ['whatsapp', 'phone', 'email'],\n    verified: true,\n    createdAt: new Date('2024-01-10'),\n  },\n  {\n    id: '3',\n    email: 'marie.dupont@email.com',\n    name: 'Marie Dupont',\n    phone: '+33 6 98 76 54 32',\n    whatsapp: '+33 6 98 76 54 32',\n    type: 'individual',\n    verified: true,\n    city: 'Lyon',\n    postalCode: '69003',\n    contactPreferences: ['whatsapp', 'email'],\n    createdAt: new Date('2024-02-01'),\n  },\n  {\n    id: '4',\n    email: 'moto.expert@email.com',\n    name: 'Jean-Luc Moreau',\n    phone: '+33 4 56 78 90 12',\n    whatsapp: '+33 6 55 44 33 22',\n    type: 'professional',\n    companyName: 'Moto Expert Lyon',\n    address: '45 Rue de la Moto, 69000 Lyon',\n    city: 'Lyon',\n    postalCode: '69000',\n    contactPreferences: ['phone', 'email'],\n    verified: true,\n    createdAt: new Date('2024-01-20'),\n  },\n  {\n    id: '5',\n    email: 'pieces.megane@email.com',\n    name: 'David Rousseau',\n    phone: '+33 6 77 88 99 00',\n    whatsapp: '+33 6 77 88 99 00',\n    type: 'professional',\n    companyName: 'Pi√®ces Auto Rousseau',\n    address: '67 Boulevard des Casses, 31200 Toulouse',\n    city: 'Toulouse',\n    postalCode: '31200',\n    contactPreferences: ['whatsapp', 'phone', 'email'],\n    verified: true,\n    createdAt: new Date('2024-02-15'),\n  },\n];\n\nexport const mockVehicles: Vehicle[] = [\n  // Voitures\n  {\n    id: '1',\n    userId: 'demo',\n    user: mockUsers[0],\n    title: '[Demo] BMW 320d - Excellent √©tat',\n    description: 'BMW 320d en excellent √©tat, entretien r√©gulier, carnet de maintenance √† jour. V√©hicule non fumeur, pneus r√©cents.',\n    category: 'voiture',\n    brand: 'BMW',\n    model: '320d',\n    year: 2020,\n    mileage: 45000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 28500,\n    location: 'Paris 75011',\n    images: [\n      'https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg',\n      'https://images.pexels.com/photos/1545743/pexels-photo-1545743.jpeg',\n    ],\n    features: ['GPS', 'Climatisation', 'Jantes alliage', 'R√©gulateur de vitesse'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '3',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Peugeot 308 - Fiable et √©conomique',\n    description: 'Peugeot 308 essence, parfaite pour la ville. V√©hicule bien entretenu, contr√¥le technique OK.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2018,\n    mileage: 72000,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 15900,\n    location: 'Marseille 13001',\n    images: [\n      'https://images.pexels.com/photos/28928968/pexels-photo-28928968.jpeg',\n    ],\n    features: ['Climatisation', 'Bluetooth', 'R√©gulateur de vitesse'],\n    isPremium: false,\n    createdAt: new Date('2024-11-25'),\n    updatedAt: new Date('2024-11-25'),\n    views: 67,\n    favorites: 4,\n    status: 'approved',\n  },\n  {\n    id: '4',\n    userId: '2',\n    user: mockUsers[2],\n    title: '[Demo] Renault Clio V - Comme neuve',\n    description: 'Renault Clio V essence, premi√®re main, garantie constructeur. V√©hicule r√©cent en parfait √©tat.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'Clio',\n    year: 2022,\n    mileage: 15000,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 18500,\n    location: 'Lyon 69003',\n    images: [\n      'https://images.pexels.com/photos/6747188/pexels-photo-6747188.jpeg',\n    ],\n    features: ['GPS', 'Cam√©ra de recul', 'Climatisation automatique', 'Bluetooth'],\n    isPremium: true,\n    premiumType: 'daily',\n    premiumExpiresAt: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 89,\n    favorites: 8,\n    status: 'approved',\n  },\n  {\n    id: '5',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Volkswagen Golf VII - Tr√®s bon √©tat',\n    description: 'Volkswagen Golf VII diesel, entretien suivi en concession. V√©hicule familial spacieux et √©conomique.',\n    category: 'voiture',\n    brand: 'Volkswagen',\n    model: 'Golf',\n    year: 2019,\n    mileage: 58000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 22900,\n    location: 'Toulouse 31000',\n    images: [\n      'https://images.pexels.com/photos/4713812/pexels-photo-4713812.jpeg',\n    ],\n    features: ['GPS', 'R√©gulateur adaptatif', 'Si√®ges chauffants', 'Jantes alliage'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 134,\n    favorites: 9,\n    status: 'approved',\n  },\n  {\n    id: '101',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Mercedes Classe C 220 d - Berline premium',\n    description: 'Mercedes Classe C 220 d en excellent √©tat, berline premium avec finition soign√©e. Entretien Mercedes, carnet complet, v√©hicule non fumeur.',\n    category: 'voiture',\n    brand: 'Mercedes-Benz',\n    model: 'Classe C',\n    year: 2019,\n    mileage: 55000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 27900,\n    location: 'Lyon 69003',\n    images: [\n      'https://www.wandaloo.com/files/Voiture-Neuve/mercedes/Mercedes-Classe-C-2019-Neuve-Maroc-09.jpg',\n      'https://www.leguideauto.ma/contents/cars/pictures/2021/12/large/oRcpIpaOSsjUvdWJ372IhEwRY2VS0WlkJH0pIsZV.webp',\n    ],\n    features: ['GPS Navigation', 'Climatisation automatique', 'Si√®ges cuir', 'Jantes alliage 17\"', 'R√©gulateur de vitesse', 'Bluetooth', 'Feux LED'],\n    isPremium: false,\n    createdAt: new Date('2024-12-15'),  \n    updatedAt: new Date('2024-12-15'),\n    views: 23,\n    favorites: 2,\n    status: 'approved',\n  },\n\n  // Motos\n  {\n    id: '2',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Yamaha MT-07 - Comme neuve',\n    description: 'Yamaha MT-07 en parfait √©tat, r√©vision compl√®te effectu√©e. Moto parfaite pour d√©buter ou pour un usage quotidien.',\n    category: 'moto',\n    brand: 'Yamaha',\n    model: 'MT-07',\n    year: 2022,\n    mileage: 8500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 6800,\n    location: 'Lyon 69001',\n    images: [\n      'https://images.pexels.com/photos/19161359/pexels-photo-19161359.jpeg',\n    ],\n    features: ['ABS', '√âclairage LED', 'Compteur digital'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 89,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '6',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Honda CB650R - Sportive √©l√©gante',\n    description: 'Honda CB650R en excellent √©tat, moto sportive au design moderne. Entretien r√©gulier, pneus neufs.',\n    category: 'moto',\n    brand: 'Honda',\n    model: 'CB650R',\n    year: 2021,\n    mileage: 12000,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 8900,\n    location: 'Nice 06000',\n    images: [\n      'https://images.pexels.com/photos/5027480/pexels-photo-5027480.jpeg',\n    ],\n    features: ['ABS', 'Modes de conduite', '√âclairage LED', 'Quickshifter'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 156,\n    favorites: 15,\n    status: 'approved',\n  },\n  {\n    id: '7',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Kawasaki Z900 - Puissance et style',\n    description: 'Kawasaki Z900 en tr√®s bon √©tat, moto puissante et agile. Parfaite pour les amateurs de sensations.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z900',\n    year: 2020,\n    mileage: 18500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 9500,\n    location: 'Bordeaux 33000',\n    images: [\n      'https://images.pexels.com/photos/31058697/pexels-photo-31058697.png',\n    ],\n    features: ['ABS', 'Contr√¥le de traction', 'Modes de conduite', '√âclairage LED'],\n    isPremium: false,\n    createdAt: new Date('2024-11-27'),\n    updatedAt: new Date('2024-11-27'),\n    views: 98,\n    favorites: 11,\n    status: 'approved',\n  },\n\n  // Scooters\n  {\n    id: '8',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Yamaha XMAX 300 - Confort urbain',\n    description: 'Yamaha XMAX 300 en excellent √©tat, scooter grand roues parfait pour la ville et les trajets quotidiens.',\n    category: 'scooter',\n    brand: 'Yamaha',\n    model: 'XMAX 300',\n    year: 2021,\n    mileage: 9500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 4200,\n    location: 'Montpellier 34000',\n    images: [\n      'https://images.pexels.com/photos/6012976/pexels-photo-6012976.jpeg',\n    ],\n    features: ['ABS', 'Coffre sous selle', '√âclairage LED', 'Prise USB'],\n    isPremium: false,\n    createdAt: new Date('2024-11-26'),\n    updatedAt: new Date('2024-11-26'),\n    views: 76,\n    favorites: 6,\n    status: 'approved',\n  },\n\n  // Quads\n  {\n    id: '22',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Yamaha Raptor 700R - Quad sportif',\n    description: 'Yamaha Raptor 700R en excellent √©tat, quad sportif parfait pour les loisirs et le sport. Entretien r√©gulier, pneus neufs.',\n    category: 'quad',\n    brand: 'Yamaha',\n    model: 'Raptor 700R',\n    year: 2020,\n    mileage: 2500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 8500,\n    location: 'Annecy 74000',\n    images: [\n      'https://images.pexels.com/photos/20340293/pexels-photo-20340293.jpeg',\n    ],\n    features: ['Suspension sport', 'Freins √† disque', 'D√©marreur √©lectrique', 'Pneus tout-terrain'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 145,\n    favorites: 14,\n    status: 'approved',\n  },\n\n  // Utilitaires\n  {\n    id: '14',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Ford Transit Custom - Van am√©nag√©',\n    description: 'Ford Transit Custom diesel, am√©nagement professionnel. Parfait pour artisans ou transport de marchandises.',\n    category: 'utilitaire',\n    brand: 'Ford',\n    model: 'Transit Custom',\n    year: 2020,\n    mileage: 85000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 24500,\n    location: 'Paris 75019',\n    images: [\n      'https://images.pexels.com/photos/7363197/pexels-photo-7363197.jpeg',\n    ],\n    features: ['Climatisation', 'Cloison de s√©paration', 'Attelage', 'GPS'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 134,\n    favorites: 8,\n    status: 'approved',\n  },\n  {\n    id: '15',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Renault Master - Fourgon grand volume',\n    description: 'Renault Master diesel, grand volume de chargement. Id√©al pour d√©m√©nagements et transport volumineux.',\n    category: 'utilitaire',\n    brand: 'Renault',\n    model: 'Master',\n    year: 2019,\n    mileage: 120000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 18900,\n    location: 'Lyon 69007',\n    images: [\n      'https://images.pexels.com/photos/5025669/pexels-photo-5025669.jpeg',\n    ],\n    features: ['Hayon arri√®re', 'Porte lat√©rale', 'Radio Bluetooth'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 89,\n    favorites: 5,\n    status: 'approved',\n  },\n  {\n    id: '16',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Volkswagen Crafter - Utilitaire r√©cent',\n    description: 'Volkswagen Crafter diesel, utilitaire r√©cent avec faible kilom√©trage. Entretien suivi en concession.',\n    category: 'utilitaire',\n    brand: 'Volkswagen',\n    model: 'Crafter',\n    year: 2021,\n    mileage: 45000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 32500,\n    location: 'Marseille 13008',\n    images: [\n      'https://images.pexels.com/photos/19116880/pexels-photo-19116880.jpeg',\n    ],\n    features: ['Climatisation', 'GPS', 'Cam√©ra de recul', 'Attelage'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 112,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '17',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Iveco Daily - Plateau benne',\n    description: 'Iveco Daily diesel avec plateau benne basculante. Parfait pour les travaux et le transport de mat√©riaux.',\n    category: 'utilitaire',\n    brand: 'Iveco',\n    model: 'Daily',\n    year: 2018,\n    mileage: 95000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 28900,\n    location: 'Toulouse 31200',\n    images: [\n      'https://images.pexels.com/photos/18434074/pexels-photo-18434074.jpeg',\n    ],\n    features: ['Benne basculante', 'Attelage', 'Radio', 'Crochet de remorquage'],\n    isPremium: false,\n    createdAt: new Date('2024-11-27'),\n    updatedAt: new Date('2024-11-27'),\n    views: 67,\n    favorites: 4,\n    status: 'approved',\n  },\n\n  // Autres v√©hicules\n  {\n    id: '18',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Jet Ski Yamaha VX Cruiser - Loisirs nautiques',\n    description: 'Jet Ski Yamaha VX Cruiser en excellent √©tat, parfait pour les loisirs nautiques. Entretien r√©gulier, remorque incluse.',\n    category: 'jetski',\n    brand: 'Yamaha',\n    model: 'VX Cruiser',\n    year: 2020,\n    mileage: 45,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 12500,\n    location: 'Cannes 06400',\n    images: [\n      'https://images.pexels.com/photos/33046/jet-ski-water-sport-water-bike-water.jpg',\n    ],\n    features: ['Remorque incluse', 'GPS √©tanche', 'Coffre √©tanche', 'Syst√®me audio'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 234,\n    favorites: 18,\n    status: 'approved',\n  },\n  {\n    id: '19',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Bateau Quicksilver 505 - Moteur Mercury',\n    description: 'Bateau Quicksilver 505 avec moteur Mercury 90CV. Parfait pour la p√™che et les balades en famille.',\n    category: 'bateau',\n    brand: 'Quicksilver',\n    model: '505',\n    year: 2019,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 18900,\n    location: 'La Rochelle 17000',\n    images: [\n      'https://images.pexels.com/photos/296278/pexels-photo-296278.jpeg',\n    ],\n    features: ['Moteur Mercury 90CV', 'Remorque', 'Sondeur', 'Bimini'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '20',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Camion Renault Midlum - Transport professionnel',\n    description: 'Camion Renault Midlum diesel, parfait pour le transport professionnel. Entretien suivi, contr√¥le technique OK.',\n    category: 'caravane',\n    brand: 'Renault',\n    model: 'Midlum',\n    year: 2017,\n    mileage: 180000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 45000,\n    location: 'Lille 59000',\n    images: [\n      'https://images.pexels.com/photos/18982333/pexels-photo-18982333.jpeg',\n    ],\n    features: ['Hayon √©l√©vateur', 'Climatisation', 'Tachygraphe', 'Radio'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 89,\n    favorites: 6,\n    status: 'approved',\n  },\n  {\n    id: '21',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Caravane Hobby De Luxe - Vacances familiales',\n    description: 'Caravane Hobby De Luxe en excellent √©tat, parfaite pour les vacances en famille. √âquipement complet.',\n    category: 'caravane',\n    brand: 'Hobby',\n    model: 'De Luxe',\n    year: 2020,\n    condition: 'used',\n    price: 22500,\n    location: 'Annecy 74000',\n    images: [\n      'https://images.pexels.com/photos/3927311/pexels-photo-3927311.jpeg',\n    ],\n    features: ['Cuisine √©quip√©e', 'Douche/WC', 'Chauffage', 'Auvent', 'TV'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 145,\n    favorites: 14,\n    status: 'approved',\n  },\n\n  // Pi√®ces d√©tach√©es\n  {\n    id: '12',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Moteur BMW 320d N47 - R√©vis√©',\n    description: 'Moteur BMW 320d N47 enti√®rement r√©vis√©, garantie 6 mois. Distribution chang√©e, joint de culasse neuf.',\n    category: 'piece-voiture',\n    brand: 'BMW',\n    model: 'Moteur N47',\n    year: 2015,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 2500,\n    location: 'Paris 75020',\n    images: [\n      'https://images.pexels.com/photos/190574/pexels-photo-190574.jpeg',\n    ],\n    features: ['R√©vis√©', 'Garantie 6 mois', 'Distribution neuve', 'Joint culasse neuf'],\n    isPremium: false,\n    createdAt: new Date('2024-11-23'),\n    updatedAt: new Date('2024-11-23'),\n    views: 89,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '13',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Jantes alliage 17\" BMW - Parfait √©tat',\n    description: 'Set de 4 jantes alliage BMW 17 pouces en parfait √©tat, style 394. Avec pneus Michelin r√©cents.',\n    category: 'piece-voiture',\n    brand: 'BMW',\n    model: 'Jantes Style 394',\n    year: 2020,\n    condition: 'used',\n    price: 800,\n    location: 'Lyon 69007',\n    images: [\n      'https://images.pexels.com/photos/9182360/pexels-photo-9182360.jpeg',\n    ],\n    features: ['Set de 4', 'Pneus inclus', 'Parfait √©tat', 'Style 394'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '23',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Pare-chocs avant Peugeot 308 - Neuf',\n    description: 'Pare-chocs avant Peugeot 308 phase 2, neuf dans son emballage. Couleur gris m√©tallis√©, pr√™t √† peindre.',\n    category: 'piece-voiture',\n    brand: 'Peugeot',\n    model: 'Pare-chocs 308',\n    year: 2018,\n    condition: 'new',\n    price: 320,\n    location: 'Marseille 13001',\n    images: [\n      'https://images.pexels.com/photos/14121200/pexels-photo-14121200.jpeg',\n    ],\n    features: ['Neuf', 'Emballage d\\'origine', 'Pr√™t √† peindre', 'Phase 2'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 67,\n    favorites: 5,\n    status: 'approved',\n  },\n  {\n    id: '24',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Alternateur Renault Clio - Test√© OK',\n    description: 'Alternateur Renault Clio 4 en parfait √©tat de fonctionnement. Test√© et garanti 3 mois.',\n    category: 'piece-voiture',\n    brand: 'Renault',\n    model: 'Alternateur Clio',\n    year: 2019,\n    condition: 'used',\n    price: 150,\n    location: 'Toulouse 31100',\n    images: [\n      'https://media.vroomly.com/public/thumbnails/interventions/vZCHt6JOq26r_700x700_mtdhGWCw.jpg',\n    ],\n    features: ['Test√© OK', 'Garantie 3 mois', 'Parfait √©tat', 'Pr√™t √† monter'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 45,\n    favorites: 3,\n    status: 'approved',\n  },\n  {\n    id: '30',\n    userId: '2',\n    user: mockUsers[1], // Pierre Martin\n    title: '[Demo] Pare-choc avant Ford Fiesta - Bon √©tat',\n    description: 'Pare-choc avant Ford Fiesta en bon √©tat, quelques rayures mineures. Compatible avec mod√®les 2013-2017. Pr√™t √† monter.',\n    category: 'piece-voiture',\n    brand: 'Ford',\n    model: 'Pare-choc Fiesta',\n    year: 2015,\n    condition: 'used',\n    price: 180,\n    location: 'Paris 75011',\n    images: [\n      'https://photos.gpa26.com/photos/pieces/thumbnails/275561_16i1.jpg',\n    ],\n    features: ['Bon √©tat g√©n√©ral', 'Rayures mineures', 'Compatible 2013-2017', 'Pr√™t √† monter'],\n    isPremium: false,\n    createdAt: new Date('2024-12-06'),\n    updatedAt: new Date('2024-12-06'),\n    views: 23,\n    favorites: 2,\n    status: 'approved',\n  },\n  {\n    id: '41',\n    userId: '3',\n    user: mockUsers[2], // Sophie Dubois\n    title: '[Demo] Roues compl√®tes Ford Fiesta - Jantes alu 15\"',\n    description: 'Set de 4 roues compl√®tes pour Ford Fiesta avec jantes aluminium 15 pouces et pneus Michelin Energy Saver 195/65 R15. Excellent √©tat, tr√®s peu servi.',\n    category: 'piece-voiture',\n    brand: 'Ford',\n    model: 'Roues Fiesta 15\"',\n    year: 2016,\n    condition: 'used',\n    price: 450,\n    location: 'Lyon 69007',\n    images: [\n      'https://www.picclickimg.com/RF8AAOSwZj9nC2Kn/Cerchi-in-Lega-FIAT-GRANDE-PUNTO-15-con.webp',\n    ],\n    features: ['Set de 4 roues', 'Jantes alu 15 pouces', 'Pneus Michelin inclus', 'Compatible 2013-2018', 'Excellent √©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-12-23'),\n    updatedAt: new Date('2024-12-23'),\n    views: 15,\n    favorites: 4,\n    status: 'approved',\n  },\n  {\n    id: '42',\n    userId: '1',\n    user: mockUsers[0], // Marie Dubois\n    title: '[Demo] Capot Audi A5 Sportback - Excellent √©tat',\n    description: 'Capot complet pour Audi A5 Sportback en excellent √©tat. Aucun choc, peinture d\\'origine parfaite. Compatible mod√®les 2017-2021. D√©pose soign√©e.',\n    category: 'piece-voiture',\n    brand: 'Audi',\n    model: 'Capot A5 Sportback',\n    year: 2019,\n    condition: 'used',\n    price: 650,\n    location: 'Strasbourg 67100',\n    images: [\n      'https://i.ebayimg.com/images/g/JPAAAOSw3q5jRoPL/s-l400.jpg',\n    ],\n    features: ['Peinture d\\'origine', 'Aucun choc', 'Compatible 2017-2021', 'D√©pose professionnelle', 'Excellent √©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-12-23'),\n    updatedAt: new Date('2024-12-23'),\n    views: 8,\n    favorites: 2,\n    status: 'approved',\n  },\n  {\n    id: '43',\n    userId: '4',\n    user: mockUsers[3], // Jean Martin Pro\n    title: '[Demo] Pare-choc avant Audi A5 - Neuf d\\'origine',\n    description: 'Pare-choc avant Audi A5 Sportback neuf d\\'origine Audi. Jamais mont√©, dans son emballage. Compatible avec capteurs de stationnement et feux antibrouillard.',\n    category: 'piece-voiture',\n    brand: 'Audi',\n    model: 'Pare-choc A5',\n    year: 2020,\n    condition: 'new',\n    price: 850,\n    location: 'Mulhouse 68200',\n    images: [\n      'https://aricy-auto.ma/wp-content/uploads/2024/09/Pare-choc-Avant-AUDI-A5-F5-16-19-Look-RS5-3.webp',\n    ],\n    features: ['Pi√®ce d\\'origine Audi', 'Neuf emball√©', 'Capteurs compatibles', 'Feux antibrouillard OK', 'Garantie constructeur'],\n    isPremium: true,\n    premiumType: 'daily',\n    premiumExpiresAt: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-23'),\n    updatedAt: new Date('2024-12-23'),\n    views: 12,\n    favorites: 5,\n    status: 'approved',\n  },\n\n  // V√©hicules A√©riens\n  {\n    id: '20',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] ULM Pendulaire Cosmos - Phase 2',\n    description: 'ULM pendulaire Cosmos Phase 2 en excellent √©tat. Moteur Rotax 912 ULS, 100 heures de vol. Id√©al pour d√©buter.',\n    category: 'aerien',\n    brand: 'Cosmos',\n    model: 'Phase 2',\n    year: 2018,\n    price: 45000,\n    location: 'Toulouse 31000',\n    images: [\n      'https://images.pexels.com/photos/8244915/pexels-photo-8244915.jpeg',\n    ],\n    mileage: 100, // Heures de vol\n    fuelType: 'gasoline',\n    condition: 'used',\n    features: ['Moteur Rotax 912 ULS', 'Carnet de vol complet', 'R√©vision r√©cente', 'Housse de protection'],\n    isPremium: false,\n    createdAt: new Date('2024-11-25'),\n    updatedAt: new Date('2024-11-25'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '21',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Parapente Ozone Rush 5 - Taille M',\n    description: 'Parapente Ozone Rush 5 taille M, parfait √©tat. Id√©al pour pilotes interm√©diaires. Sellette et secours inclus.',\n    category: 'aerien',\n    brand: 'Ozone',\n    model: 'Rush 5',\n    year: 2021,\n    price: 2800,\n    location: 'Annecy 74000',\n    images: [\n      'https://images.pexels.com/photos/6478078/pexels-photo-6478078.jpeg',\n    ],\n    condition: 'used',\n    features: ['Sellette Advance incluse', 'Parachute de secours', 'Sac de rangement', 'Carnet d\\'entretien'],\n    isPremium: false,\n    createdAt: new Date('2024-11-24'),\n    updatedAt: new Date('2024-11-24'),\n    views: 89,\n    favorites: 8,\n    status: 'approved',\n  },\n\n  // Services\n  {\n    id: '22',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Remorquage 24h/24 - Toute la France',\n    description: 'Service de remorquage professionnel disponible 24h/24 et 7j/7 sur toute la France. Intervention rapide, mat√©riel moderne, tarifs transparents.',\n    category: 'remorquage',\n    brand: 'D√©pannage Pro',\n    model: 'Service national',\n    year: 2024,\n    price: 80, // Prix de base\n    location: 'France enti√®re',\n    images: [\n      'https://images.pexels.com/photos/943930/pexels-photo-943930.jpeg',\n    ],\n    condition: 'new',\n    features: ['Disponible 24h/24', 'Toute la France', 'Tarif transparent', 'Mat√©riel moderne', 'Devis gratuit'],\n    isPremium: true,\n    premiumType: 'monthly',\n    premiumExpiresAt: new Date(Date.now() + 25 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 445,\n    favorites: 32,\n    status: 'approved',\n  },\n  {\n    id: '23',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Garage Auto Expert - R√©paration toutes marques',\n    description: 'Garage sp√©cialis√© dans la r√©paration automobile toutes marques. Diagnostic √©lectronique, m√©canique g√©n√©rale, carrosserie. Devis gratuit.',\n    category: 'reparation',\n    brand: 'Auto Expert',\n    model: 'Garage Marseille',\n    year: 2024,\n    price: 60, // Prix horaire\n    location: 'Marseille 13008',\n    images: [\n      'https://images.pexels.com/photos/4489702/pexels-photo-4489702.jpeg',\n    ],\n    condition: 'new',\n    features: ['Toutes marques', 'Diagnostic √©lectronique', 'Carrosserie', 'Devis gratuit', 'Garantie pi√®ces'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 234,\n    favorites: 18,\n    status: 'approved',\n  },\n\n  // V√©hicules accident√©s\n  {\n    id: '24',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Renault M√©gane IV - V√©hicule accident√©',\n    description: 'Renault M√©gane IV accident√©e suite √† collision arri√®re. Moteur OK, transmission OK. Id√©al pour pi√®ces ou r√©paration.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'M√©gane',\n    year: 2018,\n    mileage: 85000,\n    fuelType: 'diesel',\n    condition: 'damaged',\n    price: 4500,\n    location: 'Lyon 69007',\n    images: [\n      'https://images.pexels.com/photos/2265634/pexels-photo-2265634.jpeg',\n    ],\n    features: ['Moteur OK', 'Bo√Æte vitesse OK', 'Accident arri√®re', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 156,\n    favorites: 8,\n    status: 'approved',\n  },\n  {\n    id: '25',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Peugeot 308 - Accident√©e - Pour pi√®ces',\n    description: 'Peugeot 308 accident√©e c√¥t√© conducteur. Moteur 1.6 HDI fonctionne parfaitement. Nombreuses pi√®ces r√©cup√©rables.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2016,\n    mileage: 125000,\n    fuelType: 'diesel',\n    condition: 'damaged',\n    price: 3200,\n    location: 'Nantes 44000',\n    images: [\n      'https://images.pexels.com/photos/1036792/pexels-photo-1036792.jpeg',\n    ],\n    features: ['Moteur 1.6 HDI OK', 'Accident lat√©ral', 'Pi√®ces r√©cup√©rables', 'Vente en l\\'√©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 89,\n    favorites: 5,\n    status: 'approved',\n  },\n  {\n    id: '26',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Ford Fiesta - Accident√©e - Pour pi√®ces',\n    description: 'Ford Fiesta accident√©e suite collision lat√©rale. Moteur essence 1.0 EcoBoost intact. Nombreuses pi√®ces r√©cup√©rables, carrosserie c√¥t√© droit endommag√©e.',\n    category: 'voiture',\n    brand: 'Ford',\n    model: 'Fiesta',\n    year: 2017,\n    mileage: 95000,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 3800,\n    location: 'Bordeaux 33000',\n    images: [\n      'https://images.pexels.com/photos/11985216/pexels-photo-11985216.jpeg',\n      'https://images.pexels.com/photos/11985979/pexels-photo-11985979.jpeg',\n    ],\n    features: ['Moteur 1.0 EcoBoost OK', 'Accident lat√©ral droit', 'Pi√®ces r√©cup√©rables', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 267,\n    favorites: 15,\n    status: 'approved',\n  },\n\n  // Annonces de recherche (invers√©es - achat)\n  {\n    id: '27',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] RECHERCHE - Moto sportive 600cc',\n    description: 'Recherche moto sportive 600cc type CBR, R6, ZX-6R. Budget jusqu\\'√† 8000‚Ç¨. √âtat correct accept√©, kilom√©trage raisonnable.',\n    category: 'moto',\n    brand: 'Honda, Yamaha, Kawasaki',\n    model: 'Sportive 600cc',\n    year: 2015,\n    price: 8000, // Budget max\n    location: 'Toulouse 31000',\n    images: [\n      'https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg',\n    ],\n    condition: 'used',\n    features: ['Budget 8000‚Ç¨ max', '√âtat correct', 'Kilom√©trage raisonnable', 'Contact rapide'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 78,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '28',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] RECHERCHE - Citadine √©conomique',\n    description: 'Recherche petite voiture citadine √©conomique type Clio, 208, Corsa. Budget 12000‚Ç¨ maximum. Premi√®re main pr√©f√©r√©e.',\n    category: 'voiture',\n    brand: 'Renault, Peugeot, Opel',\n    model: 'Citadine',\n    year: 2018,\n    price: 12000, // Budget max\n    location: 'Paris 75015',\n    images: [\n      'https://images.pexels.com/photos/1592384/pexels-photo-1592384.jpeg',\n    ],\n    condition: 'used',\n    features: ['Budget 12000‚Ç¨ max', 'Premi√®re main', '√âconomique', 'Entretien suivi'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 145,\n    favorites: 9,\n    status: 'approved',\n  },\n  {\n    id: '29',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] RECHERCHE - Moteur complet diesel',\n    description: 'Recherche moteur complet diesel 1.6 ou 2.0 TDI, HDI, dCi. √âtat de marche, kilom√©trage indiff√©rent. Urgence r√©paration.',\n    category: 'piece-voiture',\n    brand: 'Volkswagen, Peugeot, Renault',\n    model: 'Moteur 1.6-2.0 TDI/HDI',\n    year: 2012,\n    price: 2500, // Budget max\n    location: 'Marseille 13009',\n    images: [\n      'https://images.pexels.com/photos/13177819/pexels-photo-13177819.jpeg',\n    ],\n    condition: 'used',\n    features: ['Moteur complet', '√âtat de marche', 'Urgence', 'Transport possible'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 167,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '30',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] RECHERCHE - Jet ski 3 places',\n    description: 'Recherche jet ski 3 places type Sea-Doo, Yamaha. Budget jusqu\\'√† 10000‚Ç¨. Remorque souhait√©e mais pas obligatoire.',\n    category: 'jetski',\n    brand: 'Sea-Doo, Yamaha',\n    model: '3 places',\n    year: 2016,\n    price: 10000, // Budget max\n    location: 'Nice 06200',\n    images: [\n      'https://images.pexels.com/photos/1001990/pexels-photo-1001990.jpeg',\n    ],\n    condition: 'used',\n    features: ['3 places minimum', 'Budget 10000‚Ç¨', 'Remorque souhait√©e', 'Bon √©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 198,\n    favorites: 14,\n    status: 'approved',\n  },\n\n  // Pi√®ces d√©tach√©es moto\n  {\n    id: '31',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] √âchappement Akrapovic Racing - Yamaha R1',\n    description: '√âchappement complet Akrapovic Racing Line pour Yamaha R1 2015-2019. Titane, neuf jamais mont√©. Gain de puissance et sonorit√© exceptionnelle.',\n    category: 'piece-moto',\n    brand: 'Akrapovic',\n    model: 'Racing Line',\n    year: 2018,\n    price: 1450,\n    location: 'Lyon 69003',\n    images: [\n      'https://images.pexels.com/photos/9166732/pexels-photo-9166732.jpeg',\n    ],\n    condition: 'new',\n    features: ['Titane', 'Neuf jamais mont√©', 'Certificat CE', 'Notice incluse', 'Gain 8CV'],\n    isPremium: true,\n    premiumType: 'daily',\n    premiumExpiresAt: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 267,\n    favorites: 23,\n    status: 'approved',\n  },\n  {\n    id: '32',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Fourche compl√®te Kymco Agility 125',\n    description: 'Fourche compl√®te d\\'origine pour scooter Kymco Agility 125. Bon √©tat, d√©mont√©e proprement suite changement de scooter.',\n    category: 'piece-moto',\n    brand: 'Kymco',\n    model: 'Agility 125',\n    year: 2016,\n    price: 180,\n    location: 'Marseille 13001',\n    images: [\n      'https://www.maxi-pieces-50.fr/pub/images_import/02_/PR13829.jpg',\n      'https://media1.motorkit.com/16717-thickbox_default/fourche-avant-pour-kymco-agility-50cc-muni-de-jantes-12-pouces.jpg',\n    ],\n    condition: 'used',\n    features: ['Pi√®ce d\\'origine', 'Bon √©tat', 'D√©montage soign√©', '√âtriers inclus'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 89,\n    favorites: 7,\n    status: 'approved',\n  },\n\n  // Services\n  {\n    id: '33',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Entretien automobile √† domicile - Toute marque',\n    description: 'Service d\\'entretien automobile √† domicile. Vidange, filtres, r√©vision compl√®te. D√©placement gratuit dans un rayon de 30km autour de Paris.',\n    category: 'entretien',\n    brand: 'M√©ca Mobile',\n    model: 'Service domicile',\n    year: 2024,\n    price: 75, // Prix horaire\n    location: 'Paris et r√©gion 75/92/93/94',\n    images: [\n      'https://images.pexels.com/photos/4489741/pexels-photo-4489741.jpeg',\n    ],\n    condition: 'new',\n    features: ['D√©placement gratuit 30km', 'Toutes marques', 'Pi√®ces garanties', 'Devis gratuit', 'Disponible weekend'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 312,\n    favorites: 28,\n    status: 'approved',\n  },\n  {\n    id: '34',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Assurance Auto - Paiement mensuel facilit√©',\n    description: 'Service d\\'assurance automobile avec paiement mensuel sans frais. Tous risques, assistance 24h/24, devis en ligne imm√©diat.',\n    category: 'autre-service',\n    brand: 'Assur Plus',\n    model: 'Tous risques',\n    year: 2024,\n    price: 45, // Prix mensuel moyen\n    location: 'France enti√®re',\n    images: [\n      'https://images.pexels.com/photos/4427480/pexels-photo-4427480.jpeg',\n    ],\n    condition: 'new',\n    features: ['Paiement mensuel', 'Assistance 24h/24', 'Devis imm√©diat', 'Tous risques', 'France enti√®re'],\n    isPremium: true,\n    premiumType: 'monthly',\n    premiumExpiresAt: new Date(Date.now() + 28 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 456,\n    favorites: 34,\n    status: 'approved',\n  },\n\n  // Remorque pour voiture\n  {\n    id: '35',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Remorque bagag√®re 1300kg - Excellent √©tat',\n    description: 'Remorque bagag√®re frein√©e 1300kg charge utile. Parfait √©tat, peu servie. Id√©ale transport, d√©m√©nagement. Plancher antid√©rapant.',\n    category: 'remorque',\n    brand: 'Erde',\n    model: '164',\n    year: 2020,\n    price: 890,\n    location: 'Toulouse 31400',\n    images: [\n      'https://images.pexels.com/photos/10304035/pexels-photo-10304035.jpeg',\n    ],\n    condition: 'used',\n    features: ['Frein√©e 1300kg', 'Plancher antid√©rapant', 'Ridelles amovibles', '√âclairage LED', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 167,\n    favorites: 12,\n    status: 'approved',\n  },\n\n  // Voiture accident√©e\n  {\n    id: '36',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Audi A5 Sportback accident√©e - Pour pi√®ces',\n    description: 'Audi A5 Sportback suite accident face avant. D√©g√¢ts : capot, pare-choc avant, phares, jantes et moyeux √† refaire. Moteur intact, reste de la carrosserie en bon √©tat.',\n    category: 'voiture',\n    brand: 'Audi',\n    model: 'A5 Sportback',\n    year: 2019,\n    price: 8500,\n    location: 'Strasbourg 67000',\n    images: [\n      'https://images.pexels.com/photos/5351111/pexels-photo-5351111.jpeg',\n      'https://images.pexels.com/photos/5351114/pexels-photo-5351114.jpeg',\n    ],\n    condition: 'damaged',\n    features: ['Moteur intact', 'Carrosserie arri√®re OK', 'Int√©rieur parfait', 'Carte grise OK', 'Visible sur RDV'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 234,\n    favorites: 18,\n    status: 'approved',\n  },\n\n  // Nouvelles annonces de v√©hicules accident√©s\n  {\n    id: '37',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Honda CBR600RR accident√©e - Moteur OK',\n    description: 'Honda CBR600RR accident√©e suite chute sur circuit. Car√©nages cass√©s, guidon tordu, clignotants cass√©s. Moteur et bo√Æte parfaits, fourche √† r√©viser.',\n    category: 'moto',\n    brand: 'Honda',\n    model: 'CBR600RR',\n    year: 2018,\n    mileage: 25000,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 4200,\n    location: 'Lyon 69001',\n    images: [\n      'https://images.pexels.com/photos/2519374/pexels-photo-2519374.jpeg',\n    ],\n    features: ['Moteur OK', 'Bo√Æte vitesse OK', 'Car√©nages √† changer', 'Fourche √† r√©viser', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 198,\n    favorites: 14,\n    status: 'approved',\n  },\n  {\n    id: '38',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Kawasaki Z800 accident√©e - Pour pi√®ces',\n    description: 'Kawasaki Z800 accident√©e suite collision lat√©rale. Moteur fonctionne, nombreuses pi√®ces r√©cup√©rables. R√©servoir enfonc√©, car√©nages cass√©s.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z800',\n    year: 2017,\n    mileage: 32000,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 3800,\n    location: 'Marseille 13008',\n    images: [\n      'https://www.bike-eco.fr/273022/71705.jpg',\n    ],\n    features: ['Moteur fonctionne', 'Pi√®ces r√©cup√©rables', 'R√©servoir enfonc√©', 'Accident lat√©ral', 'Vente en l\\'√©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 156,\n    favorites: 9,\n    status: 'approved',\n  },\n  {\n    id: '39',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Quad Kymco MXU 500 accident√© - Moteur OK',\n    description: 'Quad Kymco MXU 500 accident√© lors d\\'une sortie tout-terrain. Plastiques cass√©s, guidon tordu. Moteur et transmission en parfait √©tat.',\n    category: 'quad',\n    brand: 'Kymco',\n    model: 'MXU 500',\n    year: 2019,\n    mileage: 1200,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 3500,\n    location: 'Toulouse 31000',\n    images: [\n      'https://lecoindupro.blob.core.windows.net/upload/2341692.Lg.jpg',\n    ],\n    features: ['Moteur parfait', 'Transmission OK', 'Plastiques √† changer', 'Guidon tordu', 'Id√©al r√©paration'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 134,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '40',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Jet Ski Sea-Doo GTX accident√© - Coque endommag√©e',\n    description: 'Jet Ski Sea-Doo GTX accident√© suite collision avec rocher. Coque fissur√©e c√¥t√© droit, moteur fonctionne parfaitement. Pompe √† jet OK.',\n    category: 'jetski',\n    brand: 'Sea-Doo',\n    model: 'GTX',\n    year: 2020,\n    mileage: 85,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 6500,\n    location: 'Nice 06000',\n    images: [\n      'https://wpde.com/resources/media/6f122d96-8e8c-4dd1-9f7a-e68b9430d31f-large1x1_jetskicrash.jpg',\n    ],\n    features: ['Moteur parfait', 'Pompe √† jet OK', 'Coque fissur√©e', 'Accident c√¥t√© droit', 'R√©parable'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 178,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '44',\n    userId: '5',\n    user: mockUsers[4], // David Rousseau - Pi√®ces Auto Rousseau\n    title: '[Demo] Pare-brise Renault M√©gane IV - Neuf d\\'origine',\n    description: 'Pare-brise neuf d\\'origine constructeur pour Renault M√©gane IV (2016-2024). Avec capteur de pluie et cam√©ra compatible. Installation possible sur place.',\n    category: 'piece-voiture',\n    brand: 'Renault',\n    model: 'Pare-brise M√©gane IV',\n    year: 2020,\n    condition: 'new',\n    price: 285,\n    location: 'Toulouse 31200',\n    images: [\n      'https://cdn.proxyparts.com/parts/100255/13623698/large/8549bb59-b0e9-4e99-98a8-eb149efd7fa7.jpg',\n      'https://images.unsplash.com/photo-1621905251189-08b45d6a269e?w=800'\n    ],\n    features: [\n      'Pare-brise d\\'origine Renault',\n      'Compatible capteur de pluie',\n      'Pr√©-√©quip√© cam√©ra avant',\n      'Vitrage feuillet√© s√©curit',\n      'Installation possible',\n      'Garantie constructeur 2 ans'\n    ],\n\n    isPremium: false,\n    views: 45,\n    favorites: 3,\n    status: 'approved',\n    createdAt: new Date('2025-01-24T10:30:00'),\n    updatedAt: new Date('2025-01-24T10:30:00')\n  },\n  {\n    id: '45',\n    userId: '5',\n    user: mockUsers[4], // David Rousseau - Pi√®ces Auto Rousseau\n    title: '[Demo] Kit + module airbag d\\'un Renault Megane',\n    description: 'Kit airbag complet avec module √©lectronique pour Renault M√©gane. Syst√®me d\\'origine test√© et garanti fonctionnel. D√©pose soign√©e.',\n    category: 'piece-voiture',\n    brand: 'Renault',\n    model: 'Kit airbag M√©gane',\n    year: 2019,\n    condition: 'used',\n    price: 500,\n    location: 'Toulouse 31200',\n    images: [\n      'https://cdn.proxyparts.com/parts/100109/5846642/large/8006aaf1-6c17-485d-9b86-8a5baafa45d8.jpg',\n      'https://cdn.proxyparts.com/parts/100109/5846642/large/49ad8fb3-f647-45c0-815d-471281456591.jpg',\n      'https://cdn.proxyparts.com/parts/100109/5846642/large/9710e3bd-40ea-4df5-98c1-ec965f8af633.jpg'\n    ],\n    features: [\n      'Kit airbag complet',\n      'Module √©lectronique inclus',\n      'Syst√®me d\\'origine Renault',\n      'Test√© avant d√©pose',\n      'Compatible M√©gane toutes phases',\n      'Installation professionnelle recommand√©e',\n      'Garantie fonctionnement 6 mois'\n    ],\n\n    isPremium: false,\n    views: 67,\n    favorites: 5,\n    status: 'approved',\n    createdAt: new Date('2025-01-24T14:15:00'),\n    updatedAt: new Date('2025-01-24T14:15:00')\n  },\n];\n\nexport const premiumOptions: PremiumOption[] = [\n  {\n    id: '1',\n    name: 'Remont√©e quotidienne',\n    price: 2,\n    duration: 1,\n    features: ['Remont√©e automatique en t√™te de liste', 'Badge \"Urgent\"'],\n  },\n  {\n    id: '2',\n    name: 'Mise en avant hebdomadaire',\n    price: 5,\n    duration: 7,\n    features: ['Mise en avant pendant 7 jours', 'Badge \"Premium\"', 'Statistiques d√©taill√©es'],\n  },\n  {\n    id: '3',\n    name: 'Pack Pro mensuel',\n    price: 19.99,\n    duration: 30,\n    features: ['10 annonces mises en avant', 'Statistiques avanc√©es', 'Support prioritaire'],\n  },\n];\n\nexport const brands = [\n  // Cette liste est maintenant remplac√©e par des listes sp√©cifiques par type de v√©hicule\n];\n\n// Marques par type de v√©hicule\nexport const brandsByVehicleType = {\n  // Voitures\n  voiture: [\n    'Abarth', 'AC', 'Alfa Romeo', 'Alpina', 'Alpine', 'Aston Martin', 'Audi', 'Austin', 'Austin-Healey',\n    'Baic', 'Bentley', 'BMW', 'Borgward', 'Buick', 'BYD', 'Cadillac', 'Chevrolet', 'Chrysler', 'Citro√´n',\n    'Cupra', 'Dacia', 'DFSK', 'Dodge', 'Donkervoort', 'DS Automobiles', 'Ferrari', 'Fiat', 'Ford',\n    'Forthing', 'Foton', 'GMC', 'Glas', 'Honda', 'Hummer', 'Hyundai', 'Ineos', 'Infiniti', 'Isuzu',\n    'JAC', 'Jaecoo', 'Jaguar', 'Jeep', 'Kia', 'KTM', 'Lada', 'Lamborghini', 'Lancia', 'Land Rover',\n    'Lexus', 'Ligier', 'Livan', 'London Taxi', 'Lotus', 'MAN', 'Maserati', 'Maxus', 'Maybach', 'Mazda',\n    'McLaren', 'Mercedes-Benz', 'MG', 'Mini', 'Mitsubishi', 'Morgan', 'Nissan', 'Oldsmobile', 'Opel',\n    'Packard', 'Peugeot', 'Plymouth', 'Polaris', 'Polestar', 'Pontiac', 'Porsche', 'Renault', 'Rolls-Royce',\n    'Rover', 'Saab', 'Seat', 'Skoda', 'Smart', 'SsangYong', 'Subaru', 'Suzuki', 'SWM', 'Tesla', 'Toyota',\n    'Triumph', 'Volkswagen', 'Volvo', 'Westfield', 'Wiesmann', 'Xpeng', 'Zastava', 'Autres voitures'\n  ],\n\n  // Utilitaires\n  utilitaire: [\n    'Citro√´n', 'Fiat', 'Ford', 'Iveco', 'MAN', 'Maxus', 'Mercedes-Benz', 'Nissan', 'Opel', 'Peugeot',\n    'Renault', 'Toyota', 'Volkswagen', 'Autres utilitaires'\n  ],\n\n  // Caravanes \n  caravane: [\n    'Adria', 'B√ºrstner', 'Caravelair', 'Chausson', 'Dethleffs', 'Eriba', 'Fendt', 'Hobby', 'Hymer',\n    'Knaus', 'LMC', 'Rapido', 'Sterckeman', 'Tabbert', 'Trigano', 'Weinsberg', 'Wilk', 'Autres caravanes'\n  ],\n\n  // Remorques\n  remorque: [\n    'Anssems', 'B√∂ckmann', 'Brenderup', 'Hapert', 'Humbaur', 'Lider', 'Martz', 'Norauto', 'Saris',\n    'Trigano', 'Unsinn', 'Autres remorques'\n  ],\n\n  // Motos\n  moto: [\n    'Aprilia', 'Benelli', 'Beta', 'BMW', 'Brixton', 'CFMOTO', 'Daelim', 'Derbi', 'Ducati', 'Energica',\n    'Fantic', 'GasGas', 'Harley-Davidson', 'Honda', 'Husaberg', 'Husqvarna', 'Indian', 'Kawasaki',\n    'Keeway', 'KTM', 'Kymco', 'Mash', 'MBK', 'Moto Guzzi', 'MV Agusta', 'Norton', 'Orcal', 'Peugeot',\n    'Piaggio', 'Quadro', 'Rieju', 'Royal Enfield', 'Sherco', 'Suzuki', 'SWM', 'Sym', 'TGB', 'Triumph',\n    'Vespa', 'Victory', 'Yamaha', 'Zontes', 'Z√ºndapp', 'Autres motos'\n  ],\n\n  // Scooters\n  scooter: [\n    'Aprilia', 'Baotian', 'BMW', 'Derbi', 'Gilera', 'Honda', 'Keeway', 'Kymco', 'MBK', 'Peugeot',\n    'Piaggio', 'SYM', 'Vespa', 'Yamaha', 'Zontes', 'Autre scooter'\n  ],\n\n  // Quads\n  quad: [\n    'Aeon', 'Access Motor', 'Arctic Cat', 'Can-Am', 'CFMOTO', 'Goes', 'Honda', 'Hytrack', 'Kawasaki',\n    'Kymco', 'Linhai', 'Polaris', 'Suzuki', 'TGB', 'Yamaha', 'Autres quads'\n  ],\n\n  // Jetskis\n  jetski: [\n    'Bombardier', 'Kawasaki', 'Sea-Doo', 'Yamaha', 'Autres jetski'\n  ],\n\n  // Bateaux\n  bateau: [\n    'Antares', 'Bayliner', 'B√©n√©teau', 'Bombard', 'Cap Camarat', 'Flyer', 'Jeanneau', 'Ocqueteau',\n    'Pacific Craft', 'Quicksilver', 'Ranieri', 'Sea Ray', 'Selva', 'White Shark', 'Zodiac', 'Autres bateaux'\n  ],\n\n  // A√©riens\n  aerien: [\n    'Advance', 'Airborne', 'BGD', 'Dudek', 'Gin', 'Nova', 'Ozone', 'Skywalk', 'Swing', 'UP', 'Autres a√©riens'\n  ],\n\n  // Services (pas de marques sp√©cifiques)\n  reparation: [],\n  remorquage: [],\n  entretien: [],\n  'autre-service': [],\n\n  // Pi√®ces d√©tach√©es (utilise toutes les marques)\n  'piece-moto': [\n    'Aprilia', 'Benelli', 'Beta', 'BMW', 'Brixton', 'CFMOTO', 'Daelim', 'Derbi', 'Ducati', 'Energica',\n    'Fantic', 'GasGas', 'Harley-Davidson', 'Honda', 'Husaberg', 'Husqvarna', 'Indian', 'Kawasaki',\n    'Keeway', 'KTM', 'Kymco', 'Mash', 'MBK', 'Moto Guzzi', 'MV Agusta', 'Norton', 'Orcal', 'Peugeot',\n    'Piaggio', 'Quadro', 'Rieju', 'Royal Enfield', 'Sherco', 'Suzuki', 'SWM', 'Sym', 'TGB', 'Triumph',\n    'Vespa', 'Victory', 'Yamaha', 'Zontes', 'Z√ºndapp', 'Autres motos'\n  ],\n  'piece-voiture': [\n    'Abarth', 'AC', 'Alfa Romeo', 'Alpina', 'Alpine', 'Aston Martin', 'Audi', 'Austin', 'Austin-Healey',\n    'Baic', 'Bentley', 'BMW', 'Borgward', 'Buick', 'BYD', 'Cadillac', 'Chevrolet', 'Chrysler', 'Citro√´n',\n    'Cupra', 'Dacia', 'DFSK', 'Dodge', 'Donkervoort', 'DS Automobiles', 'Ferrari', 'Fiat', 'Ford',\n    'Forthing', 'Foton', 'GMC', 'Glas', 'Honda', 'Hummer', 'Hyundai', 'Ineos', 'Infiniti', 'Isuzu',\n    'JAC', 'Jaecoo', 'Jaguar', 'Jeep', 'Kia', 'KTM', 'Lada', 'Lamborghini', 'Lancia', 'Land Rover',\n    'Lexus', 'Ligier', 'Livan', 'London Taxi', 'Lotus', 'MAN', 'Maserati', 'Maxus', 'Maybach', 'Mazda',\n    'McLaren', 'Mercedes-Benz', 'MG', 'Mini', 'Mitsubishi', 'Morgan', 'Nissan', 'Oldsmobile', 'Opel',\n    'Packard', 'Peugeot', 'Plymouth', 'Polaris', 'Polestar', 'Pontiac', 'Porsche', 'Renault', 'Rolls-Royce',\n    'Rover', 'Saab', 'Seat', 'Skoda', 'Smart', 'SsangYong', 'Subaru', 'Suzuki', 'SWM', 'Tesla', 'Toyota',\n    'Triumph', 'Volkswagen', 'Volvo', 'Westfield', 'Wiesmann', 'Xpeng', 'Zastava', 'Autres voitures'\n  ],\n  'autre-piece': [\n    'Antivol', 'Bagagerie', 'Casques', 'Combinaisons', 'Gants', 'Huiles', 'Outils', 'Pneumatiques', 'Autres pi√®ces'\n  ]\n};\n\n// Fonction utilitaire pour obtenir les marques selon la sous-cat√©gorie\nexport const getBrandsBySubcategory = (subcategory: string): string[] => {\n  return brandsByVehicleType[subcategory as keyof typeof brandsByVehicleType] || [];\n};\nexport const fuelTypes = [\n  { value: 'gasoline', label: 'Essence' },\n  { value: 'diesel', label: 'Diesel' },\n  { value: 'electric', label: '√âlectrique' },\n  { value: 'hybrid', label: 'Hybride' },\n];\n\nexport const conditions = [\n  { value: 'used', label: 'Occasion' },\n  { value: 'damaged', label: 'Accident√©' },\n];\n\n// √âquipements pr√©d√©finis pour les v√©hicules\nexport const VEHICLE_EQUIPMENT = {\n  voiture: [\n    'Toit ouvrant / Toit panoramique',\n    'Climatisation',\n    'GPS',\n    'Si√®ges chauffants',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Jantes alliage',\n    'Feux LED / X√©non',\n    'Vitres √©lectriques',\n    'Airbags',\n    'Si√®ges √©lectriques',\n    'Attelage',\n    'R√©gulateur de vitesse',\n    'Bluetooth',\n    'Syst√®me audio premium',\n    'Cuir'\n  ],\n  moto: [\n    'ABS',\n    'Contr√¥le de traction',\n    'Modes de conduite',\n    '√âclairage LED',\n    'Quickshifter',\n    'Chauffage poign√©es',\n    'Pare-brise',\n    'Top case',\n    'Sacoches',\n    'Antivol',\n    'Compteur digital',\n    'USB'\n  ],\n  scooter: [\n    'ABS',\n    'Contr√¥le de traction',\n    'Modes de conduite',\n    '√âclairage LED',\n    'Chauffage poign√©es',\n    'Pare-brise',\n    'Top case',\n    'Coffre sous la selle',\n    'Antivol',\n    'Compteur digital',\n    'USB',\n    'Prise 12V'\n  ],\n  utilitaire: [\n    'Climatisation',\n    'GPS',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Attelage',\n    'Cloison de s√©paration',\n    'Hayon arri√®re',\n    'Porte lat√©rale',\n    'Plancher bois',\n    '√âclairage LED cargo',\n    'Prise 12V',\n    'Radio Bluetooth'\n  ],\n  quad: [\n    'Direction assist√©e',\n    'Suspension ajustable',\n    'Treuil √©lectrique',\n    'Feux LED',\n    'Prise 12V',\n    'Porte-bagages',\n    'Protection inf√©rieure',\n    'Poign√©es chauffantes',\n    'Compteur digital'\n  ],\n  jetski: [\n    'Syst√®me de freinage',\n    'Mode √©conomique',\n    'Syst√®me audio',\n    'Compartiment √©tanche',\n    '√âchelle de remont√©e',\n    'Tapis antid√©rapant'\n  ],\n  bateau: [\n    'GPS/Sondeur',\n    'VHF',\n    'Pilote automatique',\n    'Guindeau √©lectrique',\n    'Bimini',\n    'Taud de soleil',\n    'Annexe',\n    'Moteur auxiliaire',\n    'R√©frig√©rateur',\n    'WC marin'\n  ],\n  aerien: [\n    'Parachute de secours',\n    'Variom√®tre',\n    'GPS',\n    'Radio',\n    'Sellette',\n    'Casque',\n    'Protection dorsale'\n  ]\n};\n\nexport const colors = [\n  '#ef4444', // red\n  '#f97316', // orange\n  '#eab308', // yellow\n  '#22c55e', // green\n  '#06b6d4', // cyan\n  '#3b82f6', // blue\n  '#8b5cf6', // violet\n  '#ec4899', // pink\n  '#64748b', // slate\n  '#6b7280', // gray\n];\n\n// Nombre de portes pour les v√©hicules\nexport const doorCounts = [\n  { value: 2, label: '2 portes' },\n  { value: 3, label: '3 portes' },\n  { value: 4, label: '4 portes' },\n  { value: 5, label: '5 portes' },\n];\n\n// Types de v√©hicules\nexport const vehicleTypes = [\n  { value: 'citadine', label: 'Citadine' },\n  { value: 'berline', label: 'Berline' },\n  { value: 'suv', label: 'SUV' },\n  { value: 'break', label: 'Break' },\n  { value: 'coupe', label: 'Coup√©' },\n  { value: 'cabriolet', label: 'Cabriolet' },\n  { value: 'monospace', label: 'Monospace' },\n  { value: 'pickup', label: 'Pick-up' },\n];\n\n// Types de transmission\nexport const transmissionTypes = [\n  { value: 'manual', label: 'Manuelle' },\n  { value: 'automatic', label: 'Automatique' },\n  { value: 'semi-automatic', label: 'Semi-automatique' },\n];\n\n// Couleurs de v√©hicules\nexport const vehicleColors = [\n  { value: 'blanc', label: 'Blanc' },\n  { value: 'noir', label: 'Noir' },\n  { value: 'gris', label: 'Gris' },\n  { value: 'argent', label: 'Argent' },\n  { value: 'rouge', label: 'Rouge' },\n  { value: 'bleu', label: 'Bleu' },\n  { value: 'vert', label: 'Vert' },\n  { value: 'jaune', label: 'Jaune' },\n  { value: 'orange', label: 'Orange' },\n  { value: 'violet', label: 'Violet' },\n  { value: 'marron', label: 'Marron' },\n  { value: 'beige', label: 'Beige' },\n];\n\n// Types de sellerie\nexport const upholsteryTypes = [\n  { value: 'tissu', label: 'Tissu' },\n  { value: 'cuir_partiel', label: 'Cuir partiel' },\n  { value: 'cuir', label: 'Cuir' },\n  { value: 'velours', label: 'Velours' },\n  { value: 'alcantara', label: 'Alcantara' },\n];\n\n// Classes d'√©mission\nexport const emissionClasses = [\n  { value: 'euro1', label: 'Euro 1' },\n  { value: 'euro2', label: 'Euro 2' },\n  { value: 'euro3', label: 'Euro 3' },\n  { value: 'euro4', label: 'Euro 4' },\n  { value: 'euro5', label: 'Euro 5' },\n  { value: 'euro6', label: 'Euro 6' },\n];\n\n// Types d'utilitaires\nexport const utilityTypes = [\n  { value: 'van', label: 'Fourgon' },\n  { value: 'truck', label: 'Camion' },\n  { value: 'pickup', label: 'Pick-up' },\n  { value: 'trailer', label: 'Remorque' },\n];\n\n// Types de caravanes\nexport const caravanTypes = [\n  { value: 'travel_trailer', label: 'Caravane de voyage' },\n  { value: 'motorhome', label: 'Camping-car' },\n  { value: 'popup', label: 'Caravane pliante' },\n  { value: 'fifth_wheel', label: 'Caravane √† sellette' },\n];\n\n// Types de remorques\nexport const trailerTypes = [\n  { value: 'utility', label: 'Utilitaire' },\n  { value: 'boat', label: 'Porte-bateau' },\n  { value: 'car', label: 'Porte-voiture' },\n  { value: 'cargo', label: 'Cargo ferm√©e' },\n];\n\n// Types de motos\nexport const motorcycleTypes = [\n  { value: 'sport', label: 'Sportive' },\n  { value: 'touring', label: 'Routi√®re' },\n  { value: 'urban', label: 'Urbaine' },\n  { value: 'trail', label: 'Trail' },\n  { value: 'custom', label: 'Custom' },\n  { value: 'roadster', label: 'Roadster' },\n  { value: 'enduro', label: 'Enduro' },\n  { value: 'cross', label: 'Cross' },\n];\n\n// Types de quads\nexport const quadTypes = [\n  { value: 'sport', label: 'Sport' },\n  { value: 'utility', label: 'Utilitaire' },\n  { value: 'touring', label: 'Tourisme' },\n  { value: 'youth', label: 'Jeune' },\n];\n\n// Types de jetskis\nexport const jetskiTypes = [\n  { value: 'recreation', label: 'Loisir' },\n  { value: 'performance', label: 'Performance' },\n  { value: 'luxury', label: 'Luxe' },\n  { value: 'touring', label: 'Tourisme' },\n];\n\n// Types de bateaux\nexport const boatTypes = [\n  { value: 'motor', label: 'Bateau √† moteur' },\n  { value: 'sailing', label: 'Voilier' },\n  { value: 'fishing', label: 'Bateau de p√™che' },\n  { value: 'inflatable', label: 'Pneumatique' },\n  { value: 'cabin', label: 'Cabine' },\n];\n\n// Types de services\nexport const serviceTypes = [\n  { value: 'repair', label: 'R√©paration' },\n  { value: 'maintenance', label: 'Entretien' },\n  { value: 'towing', label: 'Remorquage' },\n  { value: 'inspection', label: 'Contr√¥le technique' },\n  { value: 'bodywork', label: 'Carrosserie' },\n  { value: 'painting', label: 'Peinture' },\n  { value: 'tuning', label: 'Pr√©paration' },\n];\n\n// Types de v√©hicules par sous-cat√©gorie\nexport const VEHICLE_TYPES = {\n  voiture: ['Citadine', 'Berline', 'SUV', 'Break', 'Coup√©', 'Cabriolet', 'Monospace', 'Pick-up', 'Autre voiture'],\n  utilitaire: ['Fourgon', 'Camionnette', 'Camion', 'Pick-up', 'Autre utilitaire'],\n  caravane: ['Caravane de voyage', 'Camping-car', 'Caravane pliante', 'Caravane √† sellette', 'Autre caravane'],\n  remorque: ['Utilitaire', 'Porte-bateau', 'Porte-voiture', 'Cargo ferm√©e', 'Autre remorque'],\n  moto: ['Sportive', 'Routi√®re', 'Urbaine', 'Trail', 'Custom', 'Roadster', 'Cross', 'Enduro', 'Autre moto'],\n  scooter: ['50cm¬≥', '125cm¬≥', '300cm¬≥', 'Maxi-scooter', '√âlectrique', 'Autre scooter'],\n  quad: ['Sport', 'Utilitaire', 'Loisir', 'Enfant', 'Autre quad'],\n  jetski: ['Loisir', 'Performance', 'Luxe', 'Tourisme', 'Autre jetski'],\n  bateau: ['Bateau √† moteur', 'Voilier', 'Bateau de p√™che', 'Pneumatique', 'Cabine', 'Autre bateau'],\n  aerien: ['ULM', 'Parapente', 'Deltaplane', 'H√©licopt√®re', 'Avion l√©ger', 'Autre a√©ronef']\n};\n\n// Mapping des cat√©gories principales et sous-cat√©gories selon votre structure\nexport const CATEGORY_SUBCATEGORIES_MAP = {\n  'voiture-utilitaire': ['voiture', 'utilitaire', 'caravane', 'remorque'],\n  'moto-scooter-quad': ['moto', 'scooter', 'quad'],\n  'nautisme-sport-aerien': ['bateau', 'jetski', 'aerien'],\n  'services': ['reparation', 'remorquage', 'entretien', 'autre-service'],\n  'pieces': ['piece-voiture', 'piece-moto', 'autre-piece']\n};\n\nexport const categories = [\n  { value: 'voiture-utilitaire', label: 'Voitures - Utilitaires', icon: 'üöó' },\n  { value: 'moto-scooter-quad', label: 'Motos, Scooters, Quads', icon: 'üèçÔ∏è' },\n  { value: 'nautisme-sport-aerien', label: 'Nautisme, Sport et Plein air', icon: 'üö§' },\n  { value: 'services', label: 'Services', icon: 'üõ†Ô∏è' },\n  { value: 'pieces', label: 'Pi√®ces d√©tach√©es', icon: 'üîß' },\n];","size_bytes":59405},"app/create-listing/page.tsx":{"content":"import { Header } from \"@/components/Header\";\nimport { CreateListingForm } from \"@/components/client-components/CreateListingForm\";\nimport { Footer } from \"@/components/client-components/Footer\";\nimport { useState } from \"react\";\n\nexport default function CreateListingPage() {\n  const [currentView, setCurrentView] = useState('create-listing');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header \n        currentView={currentView}\n        setCurrentView={setCurrentView}\n        mobileMenuOpen={mobileMenuOpen}\n        setMobileMenuOpen={setMobileMenuOpen}\n      />\n      <main className=\"container mx-auto px-4 py-8\">\n        <CreateListingForm />\n      </main>\n      <Footer />\n    </div>\n  );\n}","size_bytes":784},"app/dashboard/page.tsx":{"content":"import { Header } from \"@/components/Header\";\nimport { Dashboard } from \"@/components/client-components/Dashboard\";\nimport { Footer } from \"@/components/client-components/Footer\";\nimport { useState } from \"react\";\n\nexport default function DashboardPage() {\n  const [currentView, setCurrentView] = useState('dashboard');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [dashboardTab, setDashboardTab] = useState('listings');\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header \n        currentView={currentView}\n        setCurrentView={setCurrentView}\n        mobileMenuOpen={mobileMenuOpen}\n        setMobileMenuOpen={setMobileMenuOpen}\n        setDashboardTab={setDashboardTab}\n      />\n      <main className=\"container mx-auto px-4 py-8\">\n        <Dashboard activeTab={dashboardTab} setActiveTab={setDashboardTab} />\n      </main>\n      <Footer />\n    </div>\n  );\n}","size_bytes":913},"client/src/App.tsx":{"content":"import React, { useState, useCallback } from 'react';\nimport { AppProvider, useApp } from './contexts/AppContext';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { Header } from './components/Header';\nimport { Hero } from './components/Hero';\nimport { VehicleListings } from './components/VehicleListings';\nimport { VehicleDetail } from './components/VehicleDetail';\nimport { AuthModal } from './components/AuthModal';\nimport { Dashboard } from './components/Dashboard';\nimport { CreateListingForm } from './components/CreateListingForm';\nimport { DraggableModal } from './components/DraggableModal';\nimport { Conseils } from './components/Conseils';\nimport { SearchResults } from './components/SearchResults';\nimport { Footer } from './components/Footer';\nimport { AboutPage } from './pages/AboutPage';\nimport { TermsPage } from './pages/TermsPage';\nimport { PrivacyPage } from './pages/PrivacyPage';\nimport { LegalPage } from './pages/LegalPage';\nimport { HelpPage } from './pages/HelpPage';\nimport { SafetyTipsPage } from './pages/SafetyTipsPage';\nimport { AdminDashboard } from './components/AdminDashboard';\nimport { AdminDashboardClean } from './components/AdminDashboardClean';\nimport { AdminLogin } from './components/AdminLogin';\nimport { AdminTest } from './components/AdminTest';\nimport { Messages } from './pages/Messages';\nimport { SearchPage } from './pages/SearchPage';\nimport { AuthCallback } from './pages/AuthCallback';\n\nfunction AppContent() {\n  const [currentView, setCurrentView] = useState('home');\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [showCreateListingModal, setShowCreateListingModal] = useState(false);\n  const [dashboardTab, setDashboardTab] = useState('overview');\n  const [searchQuery, setSearchQuery] = useState('');\n  const { selectedVehicle, setSelectedVehicle, setSearchFilters } = useApp();\n\n  // Scroll to top when view changes\n  React.useEffect(() => {\n    if (!selectedVehicle) {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [currentView, selectedVehicle]);\n\n  const handleBack = useCallback(() => {\n    setSelectedVehicle(null);\n  }, [setSelectedVehicle]);\n\n  const handleBreadcrumbNavigation = useCallback((path: string) => {\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule\n    \n    // Navigation bas√©e sur le chemin du breadcrumb\n    if (path === 'home') {\n      setCurrentView('home');\n    } else if (path.includes('/')) {\n      // Navigation vers une marque sp√©cifique (ex: \"car/bmw\")\n      const [category, brand] = path.split('/');\n      setSearchFilters({ category, brand });\n      setCurrentView('listings');\n    } else {\n      // Navigation vers une cat√©gorie\n      const categoryMap: { [key: string]: string } = {\n        'car-utility': 'car',\n        'moto-quad': 'motorcycle',\n        'nautisme-sport': 'boat',\n        'services': 'services',\n        'spare-parts': 'parts',\n        'motorcycle': 'motorcycle',\n        'scooter': 'scooter',\n        'quad': 'quad',\n        'boat': 'boat',\n        'jetski': 'jetski',\n        'aircraft': 'aircraft'\n      };\n      \n      const filterCategory = categoryMap[path];\n      if (filterCategory) {\n        setSearchFilters({ category: filterCategory });\n        setCurrentView('listings');\n      } else {\n        setCurrentView('home');\n      }\n    }\n  }, [setSelectedVehicle, setCurrentView, setSearchFilters]);\n\n  const handleSearch = useCallback((query: string) => {\n    setSearchQuery(query);\n    setCurrentView('search');\n  }, []);\n\n  const renderContent = () => {\n    switch (currentView) {\n      case 'listings':\n        return <VehicleListings />;\n      case 'dashboard':\n        return <Dashboard \n          initialTab={dashboardTab} \n          onCreateListing={() => setShowCreateListingModal(true)}\n          onRedirectHome={() => setCurrentView('home')}\n          onRedirectToSearch={() => setCurrentView('search')}\n          setSearchFilters={setSearchFilters}\n        />;\n      case 'create-listing':\n        setShowCreateListingModal(true);\n        setCurrentView('home');\n        return <Hero setCurrentView={setCurrentView} />;\n      case 'conseils':\n        return <Conseils />;\n      case 'about':\n        return <AboutPage onBack={() => setCurrentView('home')} setCurrentView={setCurrentView} />;\n      case 'terms':\n        return <TermsPage onBack={() => setCurrentView('home')} setCurrentView={setCurrentView} />;\n      case 'privacy':\n        return <PrivacyPage onBack={() => setCurrentView('home')} setCurrentView={setCurrentView} />;\n      case 'legal':\n        return <LegalPage onBack={() => setCurrentView('home')} setCurrentView={setCurrentView} />;\n      case 'help':\n        return <HelpPage onBack={() => setCurrentView('home')} setCurrentView={setCurrentView} />;\n      case 'safety':\n        return <SafetyTipsPage onBack={() => setCurrentView('home')} setCurrentView={setCurrentView} />;\n      case 'search':\n        return <SearchPage />;\n      case 'search-old':\n        return <SearchResults \n          searchQuery={searchQuery} \n          onBack={() => setCurrentView('home')} \n          onVehicleSelect={setSelectedVehicle}\n        />;\n      case 'messages':\n        return <Messages />;\n      case 'admin':\n        // V√©rifier si l'admin est authentifi√©\n        const isAdminAuth = localStorage.getItem('admin_authenticated') === 'true';\n        if (isAdminAuth) {\n          return <AdminDashboardClean onBack={() => setCurrentView('home')} />;\n        } else {\n          return <AdminLogin \n            onLoginSuccess={() => setCurrentView('admin')} \n            onBack={() => setCurrentView('home')} \n          />;\n        }\n      case 'admin-login':\n        return <AdminLogin \n          onLoginSuccess={() => setCurrentView('admin')} \n          onBack={() => setCurrentView('home')} \n        />;\n      case 'admin-test':\n        return <AdminTest />;\n      case 'auth-callback':\n        return <AuthCallback />;\n      default:\n        return <Hero setCurrentView={setCurrentView} />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-50\">\n      <Header\n        currentView={currentView}\n        setCurrentView={setCurrentView}\n        mobileMenuOpen={mobileMenuOpen}\n        setMobileMenuOpen={setMobileMenuOpen}\n        setDashboardTab={setDashboardTab}\n        onSearch={handleSearch}\n      />\n      \n      {selectedVehicle ? (\n        <VehicleDetail\n          vehicle={selectedVehicle}\n          onBack={handleBack}\n          onVehicleSelect={setSelectedVehicle}\n          onNavigate={handleBreadcrumbNavigation}\n          setCurrentView={setCurrentView}\n        />\n      ) : (\n        <>\n          {renderContent()}\n          <Footer setCurrentView={setCurrentView} />\n        </>\n      )}\n      <AuthModal />\n      \n      {/* Modal de cr√©ation d'annonce d√©pla√ßable */}\n      <DraggableModal\n        isOpen={showCreateListingModal}\n        onClose={() => setShowCreateListingModal(false)}\n        title=\"D√©poser une annonce\"\n      >\n        <CreateListingForm \n          onSuccess={() => {\n            setShowCreateListingModal(false);\n            setCurrentView('dashboard');\n            setDashboardTab('listings');\n          }}\n        />\n      </DraggableModal>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <AppProvider>\n        <AppContent />\n      </AppProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;","size_bytes":7436},"client/src/Router.tsx":{"content":"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from '@/app/page';\nimport CreateListingPage from '@/app/create-listing/page';\nimport DashboardPage from '@/app/dashboard/page';\nimport { ClientLayout } from '@/components/ClientLayout';\nimport AuthCallback from './components/auth/AuthCallback';\n\nexport function AppRouter() {\n  return (\n    <Router>\n      <ClientLayout>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/create-listing\" element={<CreateListingPage />} />\n          <Route path=\"/dashboard\" element={<DashboardPage />} />\n          <Route path=\"/auth/callback\" element={<AuthCallback />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </ClientLayout>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","size_bytes":875},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Custom animations for the garage ad */\n@keyframes marquee {\n  0% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n}\n\n.animate-marquee {\n  animation: marquee 20s linear infinite;\n}\n\n/* Pulse animation for special elements */\n@keyframes pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);\n  }\n  50% {\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 30px rgba(255, 255, 255, 0.6);\n  }\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite;\n}","size_bytes":588},"client/src/main.tsx":{"content":"import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n","size_bytes":234},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"components/client-components/AccountSetup.tsx":{"content":"import React, { useState } from 'react';\nimport { User, Building, MapPin, Camera, CheckCircle, ArrowRight } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\n\ninterface AccountSetupProps {\n  onComplete: () => void;\n}\n\nexport const AccountSetup: React.FC<AccountSetupProps> = ({ onComplete }) => {\n  const { currentUser, setCurrentUser } = useApp();\n  const [step, setStep] = useState(1);\n  const [profileData, setProfileData] = useState({\n    avatar: '',\n    bio: '',\n    address: '',\n    city: '',\n    postalCode: '',\n    website: '',\n    siret: '',\n    specialties: [] as string[],\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setProfileData({ ...profileData, [e.target.name]: e.target.value });\n  };\n\n  const handleSpecialtyToggle = (specialty: string) => {\n    const newSpecialties = profileData.specialties.includes(specialty)\n      ? profileData.specialties.filter(s => s !== specialty)\n      : [...profileData.specialties, specialty];\n    setProfileData({ ...profileData, specialties: newSpecialties });\n  };\n\n  const handleComplete = () => {\n    // Update user profile with additional data\n    if (currentUser) {\n      setCurrentUser({\n        ...currentUser,\n        ...profileData,\n      });\n    }\n    onComplete();\n  };\n\n  const specialtyOptions = [\n    'Voitures d\\'occasion',\n    'V√©hicules de luxe',\n    'Motos sportives',\n    'Scooters urbains',\n    'V√©hicules utilitaires',\n    'Pi√®ces d√©tach√©es',\n    'R√©paration',\n    'Carrosserie',\n    'M√©canique',\n    '√âlectronique auto',\n  ];\n\n  return (\n    <div className=\"max-w-2xl mx-auto bg-white rounded-2xl shadow-xl p-8\">\n      {/* Progress Bar */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <span className=\"text-sm font-medium text-gray-600\">√âtape {step} sur 3</span>\n          <span className=\"text-sm font-medium text-[#0CBFDE]\">{Math.round((step / 3) * 100)}%</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${(step / 3) * 100}%` }}\n          ></div>\n        </div>\n      </div>\n\n      {/* Step 1: Basic Profile */}\n      {step === 1 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Compl√©tez votre profil\n            </h2>\n            <p className=\"text-gray-600\">\n              Ajoutez quelques informations pour personnaliser votre compte\n            </p>\n          </div>\n\n          {/* Avatar Upload */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-block\">\n              <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                {profileData.avatar ? (\n                  <img src={profileData.avatar} alt=\"Avatar\" className=\"w-full h-full rounded-full object-cover\" />\n                ) : (\n                  <User className=\"h-12 w-12 text-white\" />\n                )}\n              </div>\n              <button className=\"absolute bottom-0 right-0 bg-white border-2 border-gray-300 rounded-full p-2 hover:bg-gray-50 transition-colors\">\n                <Camera className=\"h-4 w-4 text-gray-600\" />\n              </button>\n            </div>\n            <p className=\"text-sm text-gray-600\">Ajoutez une photo de profil</p>\n          </div>\n\n          {/* Bio */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Pr√©sentation\n            </label>\n            <textarea\n              name=\"bio\"\n              value={profileData.bio}\n              onChange={handleInputChange}\n              rows={4}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n              placeholder={currentUser?.type === 'professional' \n                ? \"Pr√©sentez votre entreprise et vos services...\"\n                : \"Parlez-nous de vous...\"\n              }\n            />\n          </div>\n\n          <button\n            onClick={() => setStep(2)}\n            className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2\"\n          >\n            <span>Continuer</span>\n            <ArrowRight className=\"h-5 w-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Step 2: Location */}\n      {step === 2 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-8\">\n            <MapPin className=\"h-12 w-12 text-primary-bolt-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Votre localisation\n            </h2>\n            <p className=\"text-gray-600\">\n              Aidez les acheteurs √† vous trouver facilement\n            </p>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Adresse compl√®te\n            </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={profileData.address}\n              onChange={handleInputChange}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n              placeholder=\"123 Rue de la R√©publique\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Ville\n              </label>\n              <input\n                type=\"text\"\n                name=\"city\"\n                value={profileData.city}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"Paris\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Code postal\n              </label>\n              <input\n                type=\"text\"\n                name=\"postalCode\"\n                value={profileData.postalCode}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"75001\"\n              />\n            </div>\n          </div>\n\n          {currentUser?.type === 'professional' && (\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Site web\n                </label>\n                <input\n                  type=\"url\"\n                  name=\"website\"\n                  value={profileData.website}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"https://mongarage.com\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  SIRET (optionnel)\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"siret\"\n                  value={profileData.siret}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"12345678901234\"\n                />\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() => setStep(1)}\n              className=\"flex-1 py-3 px-6 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n            >\n              Retour\n            </button>\n            <button\n              onClick={() => setStep(3)}\n              className=\"flex-1 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2\"\n            >\n              <span>Continuer</span>\n              <ArrowRight className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Step 3: Specialties (for professionals) */}\n      {step === 3 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-8\">\n            <Building className=\"h-12 w-12 text-primary-bolt-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              {currentUser?.type === 'professional' ? 'Vos sp√©cialit√©s' : 'Presque termin√© !'}\n            </h2>\n            <p className=\"text-gray-600\">\n              {currentUser?.type === 'professional' \n                ? 'S√©lectionnez vos domaines d\\'expertise'\n                : 'Votre compte est pr√™t √† √™tre utilis√©'\n              }\n            </p>\n          </div>\n\n          {currentUser?.type === 'professional' ? (\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-4\">\n                S√©lectionnez vos sp√©cialit√©s\n              </label>\n              <div className=\"grid grid-cols-2 gap-3\">\n                {specialtyOptions.map((specialty) => (\n                  <button\n                    key={specialty}\n                    onClick={() => handleSpecialtyToggle(specialty)}\n                    className={`p-3 text-left border-2 rounded-xl transition-all ${\n                      profileData.specialties.includes(specialty)\n                        ? 'border-primary-bolt-500 bg-primary-bolt-50 text-primary-bolt-500'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">{specialty}</span>\n                      {profileData.specialties.includes(specialty) && (\n                        <CheckCircle className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                F√©licitations !\n              </h3>\n              <p className=\"text-gray-600\">\n                Votre compte est maintenant configur√© et pr√™t √† √™tre utilis√©.\n              </p>\n            </div>\n          )}\n\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() => setStep(2)}\n              className=\"flex-1 py-3 px-6 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n            >\n              Retour\n            </button>\n            <button\n              onClick={handleComplete}\n              className=\"flex-1 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2\"\n            >\n              <CheckCircle className=\"h-5 w-5\" />\n              <span>Terminer</span>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","size_bytes":12228},"components/client-components/AddressInput.tsx":{"content":"import React, { useState, useEffect, useRef } from 'react';\nimport { MapPin, Check, AlertCircle, Loader } from 'lucide-react';\n\ninterface City {\n  nom: string;\n  code: string;\n  codePostal: string;\n  codeDepartement: string;\n  population: number;\n}\n\ninterface AddressInputProps {\n  postalCode: string;\n  city: string;\n  onPostalCodeChange: (postalCode: string) => void;\n  onCityChange: (city: string) => void;\n  className?: string;\n}\n\nexport const AddressInput: React.FC<AddressInputProps> = ({\n  postalCode,\n  city,\n  onPostalCodeChange,\n  onCityChange,\n  className = ''\n}) => {\n  const [cities, setCities] = useState<City[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  // Valider le format du code postal fran√ßais\n  const isValidPostalCodeFormat = (code: string): boolean => {\n    return /^\\d{5}$/.test(code);\n  };\n\n  // Rechercher les villes par code postal\n  const searchCitiesByPostalCode = async (code: string) => {\n    if (!isValidPostalCodeFormat(code)) {\n      setError('Le code postal doit contenir 5 chiffres');\n      setCities([]);\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch(`https://geo.api.gouv.fr/communes?codePostal=${code}&fields=nom,code,codesPostaux,codeDepartement,population&format=json&geometry=centre`);\n      \n      if (!response.ok) {\n        throw new Error('Erreur lors de la recherche');\n      }\n\n      const data: City[] = await response.json();\n      \n      if (data.length === 0) {\n        setError('Code postal non trouv√©');\n        setCities([]);\n      } else {\n        setCities(data);\n        setError('');\n        \n        // Si une seule ville correspond, la s√©lectionner automatiquement\n        if (data.length === 1) {\n          console.log('Auto-selecting city:', data[0].nom);\n          onCityChange(data[0].nom);\n          setShowDropdown(false);\n        } else {\n          // Plusieurs villes, afficher le dropdown\n          setShowDropdown(true);\n        }\n      }\n    } catch (err) {\n      setError('Erreur lors de la recherche des villes');\n      setCities([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // √âtat local pour l'input du code postal pour √©viter les conflits de controlled input\n  const [localPostalCode, setLocalPostalCode] = useState(postalCode);\n\n  // Synchroniser avec la prop postalCode seulement si elle change de l'ext√©rieur\n  useEffect(() => {\n    if (postalCode !== localPostalCode) {\n      setLocalPostalCode(postalCode);\n    }\n  }, [postalCode]);\n\n  // G√©rer le changement du code postal\n  const handlePostalCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    console.log('Input event value:', value, 'length:', value.length);\n    \n    // Permettre uniquement les chiffres et limiter √† EXACTEMENT 5 caract√®res\n    const numericValue = value.replace(/\\D/g, '').substring(0, 5);\n    console.log('Processed numeric value:', numericValue, 'length:', numericValue.length);\n    \n    // Mettre √† jour l'√©tat local imm√©diatement pour l'affichage\n    setLocalPostalCode(numericValue);\n    \n    // Mettre √† jour le parent IMM√âDIATEMENT\n    onPostalCodeChange(numericValue);\n    \n    // R√©initialiser la ville si le code postal change\n    if (numericValue !== localPostalCode) {\n      onCityChange('');\n      setCities([]);\n      setShowDropdown(false);\n      setError('');\n    }\n\n    // Rechercher automatiquement si EXACTEMENT 5 chiffres saisis\n    if (numericValue.length === 5) {\n      console.log('Searching for postal code:', numericValue);\n      searchCitiesByPostalCode(numericValue);\n    }\n  };\n\n  // S√©lectionner une ville\n  const selectCity = (selectedCity: City) => {\n    console.log('Sending to parent - city:', selectedCity.nom);\n    onCityChange(selectedCity.nom);\n    setShowDropdown(false);\n  };\n\n  // Fermer le dropdown si on clique √† l'ext√©rieur\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setShowDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getStatusIcon = () => {\n    if (loading) {\n      return <Loader className=\"h-4 w-4 text-blue-500 animate-spin\" />;\n    }\n    if (error) {\n      return <AlertCircle className=\"h-4 w-4 text-red-500\" />;\n    }\n    if (city && postalCode.length === 5) {\n      return <Check className=\"h-4 w-4 text-green-500\" />;\n    }\n    return <MapPin className=\"h-4 w-4 text-gray-400\" />;\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n\n      \n      {/* Code Postal */}\n      <div>\n        <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n          Code postal *\n        </label>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            value={localPostalCode}\n            onChange={handlePostalCodeChange}\n            className={`w-full px-4 py-3 pr-10 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n              error ? 'border-red-300 bg-red-50' : 'border-gray-300'\n            }`}\n            placeholder=\"Tapez votre code postal (ex: 75001)\"\n            maxLength={5}\n          />\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            {getStatusIcon()}\n          </div>\n        </div>\n        \n        {error && (\n          <p className=\"mt-1 text-sm text-red-600 flex items-center space-x-1\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <span>{error}</span>\n          </p>\n        )}\n      </div>\n\n      {/* Ville */}\n      <div className=\"relative\" ref={dropdownRef}>\n        <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n          Ville *\n        </label>\n        <input\n          type=\"text\"\n          value={city}\n          onChange={(e) => onCityChange(e.target.value)}\n          className={`w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n            (!postalCode || postalCode.length !== 5) ? 'bg-gray-50 text-gray-500' : ''\n          }`}\n          placeholder=\"Saisissez d'abord le code postal\"\n          disabled={!postalCode || postalCode.length !== 5}\n        />\n\n        {/* Dropdown des villes multiples */}\n        {showDropdown && cities.length > 1 && (\n          <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-xl shadow-lg max-h-60 overflow-auto\">\n            <div className=\"p-2 text-xs text-gray-500 border-b border-gray-100\">\n              Plusieurs villes trouv√©es pour ce code postal :\n            </div>\n            {cities.map((cityOption, index) => (\n              <button\n                key={`${cityOption.code}-${index}`}\n                onClick={() => selectCity(cityOption)}\n                className=\"w-full text-left px-4 py-3 hover:bg-primary-bolt-50 focus:bg-primary-bolt-50 focus:outline-none transition-colors\"\n              >\n                <div className=\"font-medium text-gray-900\">{cityOption.nom}</div>\n                <div className=\"text-sm text-gray-500\">\n                  {cityOption.population.toLocaleString()} habitants\n                </div>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Informations sur la ville s√©lectionn√©e */}\n      {city && cities.length > 0 && !showDropdown && (\n        <div className=\"p-3 bg-green-50 border border-green-200 rounded-xl\">\n          <div className=\"flex items-center space-x-2 text-green-800\">\n            <Check className=\"h-4 w-4\" />\n            <span className=\"text-sm font-medium\">Adresse valid√©e</span>\n          </div>\n          <div className=\"mt-1 text-sm text-green-700\">\n            {city} ({postalCode})\n            {cities[0]?.population && (\n              <span className=\"ml-2\">‚Ä¢ {cities[0].population.toLocaleString()} habitants</span>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","size_bytes":8288},"components/client-components/AuthModal.tsx":{"content":"import React, { useState } from 'react';\nimport { X, Mail, Lock, User, Building, Phone, Eye, EyeOff, CheckCircle, AlertCircle } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { mockUsers } from '../utils/mockData';\n\ninterface FormErrors {\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  name?: string;\n  phone?: string;\n  companyName?: string;\n  terms?: string;\n}\n\nexport const AuthModal: React.FC = () => {\n  const { showAuthModal, setShowAuthModal, authMode, setAuthMode, setCurrentUser } = useApp();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    phone: '',\n    type: 'individual' as 'individual' | 'professional',\n    companyName: '',\n    acceptTerms: false,\n    acceptNewsletter: false,\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1); // For multi-step registration\n\n  if (!showAuthModal) return null;\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email) {\n      newErrors.email = 'L\\'email est requis';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Format d\\'email invalide';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Le mot de passe doit contenir au moins 8 caract√®res';\n    }\n\n    // Registration-specific validations\n    if (authMode === 'register') {\n      if (!formData.name) {\n        newErrors.name = 'Le nom est requis';\n      }\n\n      if (!formData.confirmPassword) {\n        newErrors.confirmPassword = 'Confirmez votre mot de passe';\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Les mots de passe ne correspondent pas';\n      }\n\n      if (formData.type === 'professional' && !formData.companyName) {\n        newErrors.companyName = 'Le nom de l\\'entreprise est requis';\n      }\n\n      if (!formData.acceptTerms) {\n        newErrors.terms = 'Vous devez accepter les conditions d\\'utilisation';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      if (authMode === 'login') {\n        // Simulate login - in real app, this would call an API\n        const user = mockUsers.find(u => u.email === formData.email);\n        if (user && (formData.email === 'demo@demo.com' ? formData.password === 'demo1234' : true)) {\n          setCurrentUser(user);\n          setShowAuthModal(false);\n          resetForm();\n        } else {\n          setErrors({ email: 'Email ou mot de passe incorrect' });\n        }\n      } else {\n        // Simulate registration\n        const newUser = {\n          id: Math.random().toString(36).substr(2, 9),\n          email: formData.email,\n          name: formData.name,\n          phone: formData.phone,\n          type: formData.type,\n          companyName: formData.type === 'professional' ? formData.companyName : undefined,\n          verified: false,\n          createdAt: new Date(),\n        };\n        \n        // In a real app, you would send a verification email here\n        setCurrentUser(newUser);\n        setShowAuthModal(false);\n        resetForm();\n        \n        // Show success message (you could add a toast notification here)\n        alert('Compte cr√©√© avec succ√®s ! Un email de v√©rification a √©t√© envoy√©.');\n      }\n    } catch (error) {\n      setErrors({ email: 'Une erreur est survenue. Veuillez r√©essayer.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      phone: '',\n      type: 'individual',\n      companyName: '',\n      acceptTerms: false,\n      acceptNewsletter: false,\n    });\n    setErrors({});\n    setStep(1);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    const checked = (e.target as HTMLInputElement).checked;\n    \n    setFormData({ \n      ...formData, \n      [name]: type === 'checkbox' ? checked : value \n    });\n    \n    // Clear error when user starts typing\n    if (errors[name as keyof FormErrors]) {\n      setErrors({ ...errors, [name]: undefined });\n    }\n  };\n\n  const handleClose = () => {\n    setShowAuthModal(false);\n    resetForm();\n  };\n\n  const switchMode = () => {\n    setAuthMode(authMode === 'login' ? 'register' : 'login');\n    resetForm();\n  };\n\n  const getPasswordStrength = (password: string) => {\n    let strength = 0;\n    if (password.length >= 8) strength++;\n    if (/[A-Z]/.test(password)) strength++;\n    if (/[a-z]/.test(password)) strength++;\n    if (/[0-9]/.test(password)) strength++;\n    if (/[^A-Za-z0-9]/.test(password)) strength++;\n    return strength;\n  };\n\n  const passwordStrength = getPasswordStrength(formData.password);\n  const strengthColors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-blue-500', 'bg-green-500'];\n  const strengthLabels = ['Tr√®s faible', 'Faible', 'Moyen', 'Fort', 'Tr√®s fort'];\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-2xl max-w-md w-full max-h-[95vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {authMode === 'login' ? 'Connexion' : 'Cr√©er un compte'}\n            </h2>\n            <p className=\"text-gray-600 text-sm mt-1\">\n              {authMode === 'login' \n                ? 'Connectez-vous √† votre compte' \n                : 'Rejoignez la communaut√© Passion Auto2Roues'\n              }\n            </p>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors rounded-lg hover:bg-gray-100\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-5\">\n          {authMode === 'register' && (\n            <div>\n              {/* Account Type */}\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                  Type de compte\n                </label>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <label className={`relative flex items-center p-4 border-2 rounded-xl cursor-pointer transition-all ${\n                    formData.type === 'individual' \n                      ? 'border-[#0CBFDE] bg-cyan-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}>\n                    <input\n                      type=\"radio\"\n                      name=\"type\"\n                      value=\"individual\"\n                      checked={formData.type === 'individual'}\n                      onChange={handleInputChange}\n                      className=\"sr-only\"\n                    />\n                    <div className=\"flex flex-col items-center text-center\">\n                      <User className=\"h-6 w-6 mb-2 text-gray-600\" />\n                      <span className=\"text-sm font-medium\">Particulier</span>\n                    </div>\n                    {formData.type === 'individual' && (\n                      <CheckCircle className=\"absolute top-2 right-2 h-5 w-5 text-[#0CBFDE]\" />\n                    )}\n                  </label>\n                  \n                  <label className={`relative flex items-center p-4 border-2 rounded-xl cursor-pointer transition-all ${\n                    formData.type === 'professional' \n                      ? 'border-[#0CBFDE] bg-cyan-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}>\n                    <input\n                      type=\"radio\"\n                      name=\"type\"\n                      value=\"professional\"\n                      checked={formData.type === 'professional'}\n                      onChange={handleInputChange}\n                      className=\"sr-only\"\n                    />\n                    <div className=\"flex flex-col items-center text-center\">\n                      <Building className=\"h-6 w-6 mb-2 text-gray-600\" />\n                      <span className=\"text-sm font-medium\">Professionnel</span>\n                    </div>\n                    {formData.type === 'professional' && (\n                      <CheckCircle className=\"absolute top-2 right-2 h-5 w-5 text-[#0CBFDE]\" />\n                    )}\n                  </label>\n                </div>\n              </div>\n\n              {/* Name */}\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  {formData.type === 'professional' ? 'Nom du responsable' : 'Nom complet'}\n                </label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                      errors.name ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                    placeholder=\"Votre nom complet\"\n                  />\n                </div>\n                {errors.name && (\n                  <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\n                    {errors.name}\n                  </p>\n                )}\n              </div>\n\n              {/* Company Name for Professionals */}\n              {formData.type === 'professional' && (\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Nom de l'entreprise\n                  </label>\n                  <div className=\"relative\">\n                    <Building className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                    <input\n                      type=\"text\"\n                      name=\"companyName\"\n                      value={formData.companyName}\n                      onChange={handleInputChange}\n                      className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                        errors.companyName ? 'border-red-500' : 'border-gray-300'\n                      }`}\n                      placeholder=\"Nom de votre entreprise\"\n                    />\n                  </div>\n                  {errors.companyName && (\n                    <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                      <AlertCircle className=\"h-4 w-4 mr-1\" />\n                      {errors.companyName}\n                    </p>\n                  )}\n                </div>\n              )}\n\n              {/* Phone */}\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  T√©l√©phone\n                </label>\n                <div className=\"relative\">\n                  <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                    placeholder=\"+33 6 12 34 56 78\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Email */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Adresse email\n            </label>\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                  errors.email ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"votre@email.com\"\n                required\n              />\n            </div>\n            {errors.email && (\n              <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                <AlertCircle className=\"h-4 w-4 mr-1\" />\n                {errors.email}\n              </p>\n            )}\n          </div>\n\n          {/* Password */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Mot de passe\n            </label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n              <input\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                className={`w-full pl-10 pr-12 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                  errors.password ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Votre mot de passe\"\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n              >\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n              </button>\n            </div>\n            {errors.password && (\n              <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                <AlertCircle className=\"h-4 w-4 mr-1\" />\n                {errors.password}\n              </p>\n            )}\n            \n            {/* Password Strength Indicator */}\n            {authMode === 'register' && formData.password && (\n              <div className=\"mt-2\">\n                <div className=\"flex space-x-1 mb-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <div\n                      key={i}\n                      className={`h-1 flex-1 rounded ${\n                        i < passwordStrength ? strengthColors[passwordStrength - 1] : 'bg-gray-200'\n                      }`}\n                    />\n                  ))}\n                </div>\n                <p className=\"text-xs text-gray-600\">\n                  Force du mot de passe: {strengthLabels[passwordStrength - 1] || 'Tr√®s faible'}\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Confirm Password for Registration */}\n          {authMode === 'register' && (\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Confirmer le mot de passe\n              </label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className={`w-full pl-10 pr-12 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                    errors.confirmPassword ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Confirmez votre mot de passe\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                >\n                  {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n              {errors.confirmPassword && (\n                <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                  <AlertCircle className=\"h-4 w-4 mr-1\" />\n                  {errors.confirmPassword}\n                </p>\n              )}\n            </div>\n          )}\n\n          {/* Terms and Newsletter for Registration */}\n          {authMode === 'register' && (\n            <div className=\"space-y-3\">\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  name=\"acceptTerms\"\n                  checked={formData.acceptTerms}\n                  onChange={handleInputChange}\n                  className=\"mt-1 h-4 w-4 text-primary-bolt-500 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">\n                  J'accepte les{' '}\n                  <a href=\"#\" className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-medium\">\n                    conditions d'utilisation\n                  </a>{' '}\n                  et la{' '}\n                  <a href=\"#\" className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-medium\">\n                    politique de confidentialit√©\n                  </a>\n                </span>\n              </label>\n              {errors.terms && (\n                <p className=\"text-sm text-red-600 flex items-center\">\n                  <AlertCircle className=\"h-4 w-4 mr-1\" />\n                  {errors.terms}\n                </p>\n              )}\n\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  name=\"acceptNewsletter\"\n                  checked={formData.acceptNewsletter}\n                  onChange={handleInputChange}\n                  className=\"mt-1 h-4 w-4 text-primary-bolt-500 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">\n                  Je souhaite recevoir les offres et actualit√©s d'Auto2Roues par email\n                </span>\n              </label>\n            </div>\n          )}\n\n          {/* Submit Button */}\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n          >\n            {isLoading ? (\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <span>{authMode === 'login' ? 'Connexion...' : 'Cr√©ation du compte...'}</span>\n              </div>\n            ) : (\n              authMode === 'login' ? 'Se connecter' : 'Cr√©er mon compte'\n            )}\n          </button>\n        </form>\n\n        {/* Footer */}\n        <div className=\"p-6 border-t border-gray-200 bg-gray-50 rounded-b-2xl\">\n          <div className=\"text-center\">\n            <p className=\"text-gray-600 mb-3\">\n              {authMode === 'login' ? \"Pas encore de compte ?\" : \"D√©j√† un compte ?\"}\n            </p>\n            <button\n              onClick={switchMode}\n              className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-semibold transition-colors\"\n            >\n              {authMode === 'login' ? \"Cr√©er un compte\" : \"Se connecter\"}\n            </button>\n          </div>\n          \n          {authMode === 'login' && (\n            <div className=\"mt-4 text-center\">\n              <a\n                href=\"#\"\n                className=\"text-sm text-gray-600 hover:text-primary-bolt-500 transition-colors\"\n              >\n                Mot de passe oubli√© ?\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":21589},"components/client-components/Breadcrumb.tsx":{"content":"import React from 'react';\nimport { ChevronRight, Home } from 'lucide-react';\nimport { Vehicle } from '../types';\n\ninterface BreadcrumbItem {\n  label: string;\n  path?: string;\n}\n\ninterface BreadcrumbProps {\n  vehicle: Vehicle;\n  onNavigate?: (path: string) => void;\n}\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({ vehicle, onNavigate }) => {\n  // Mapping des cat√©gories vers leurs structures hi√©rarchiques\n  const getCategoryHierarchy = (category: string): BreadcrumbItem[] => {\n    const hierarchies: { [key: string]: BreadcrumbItem[] } = {\n      'voiture': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'utilitaire': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'caravane': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'remorque': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'moto': [\n        { label: 'Motos, Scooters, Quads', path: 'moto-scooter-quad' },\n        { label: 'Motos', path: 'moto' }\n      ],\n      'scooter': [\n        { label: 'Motos, Scooters, Quads', path: 'moto-scooter-quad' },\n        { label: 'Scooters', path: 'scooter' }\n      ],\n      'quad': [\n        { label: 'Motos, Scooters, Quads', path: 'moto-scooter-quad' },\n        { label: 'Quads', path: 'quad' }\n      ],\n      'bateau': [\n        { label: 'Nautisme, Sport et Plein air', path: 'nautisme-sport-aerien' },\n        { label: 'Bateaux', path: 'bateau' }\n      ],\n      'jetski': [\n        { label: 'Nautisme, Sport et Plein air', path: 'nautisme-sport-aerien' },\n        { label: 'Jet-ski', path: 'jetski' }\n      ],\n      'aerien': [\n        { label: 'Nautisme, Sport et Plein air', path: 'nautisme-sport-aerien' },\n        { label: 'A√©rien', path: 'aerien' }\n      ],\n      'reparation': [\n        { label: 'Services', path: 'services' },\n        { label: 'R√©paration', path: 'reparation' }\n      ],\n      'remorquage': [\n        { label: 'Services', path: 'services' },\n        { label: 'Remorquage', path: 'remorquage' }\n      ],\n      'entretien': [\n        { label: 'Services', path: 'services' },\n        { label: 'Entretien', path: 'entretien' }\n      ],\n      'autre-service': [\n        { label: 'Services', path: 'services' },\n        { label: 'Autre service', path: 'autre-service' }\n      ],\n      'piece-voiture': [\n        { label: 'Pi√®ces d√©tach√©es', path: 'pieces' },\n        { label: 'Pi√®ces voiture', path: 'piece-voiture' }\n      ],\n      'piece-moto': [\n        { label: 'Pi√®ces d√©tach√©es', path: 'pieces' },\n        { label: 'Pi√®ces moto', path: 'piece-moto' }\n      ],\n      'autre-piece': [\n        { label: 'Pi√®ces d√©tach√©es', path: 'pieces' },\n        { label: 'Autre pi√®ce', path: 'autre-piece' }\n      ]\n    };\n\n    return hierarchies[category] || [{ label: 'Autres', path: 'other' }];\n  };\n\n  // Construction du fil d'ariane\n  const buildBreadcrumb = (): BreadcrumbItem[] => {\n    const breadcrumbItems: BreadcrumbItem[] = [\n      { label: 'Accueil', path: 'home' }\n    ];\n\n    // Ajouter la hi√©rarchie de cat√©gories\n    const categoryHierarchy = getCategoryHierarchy(vehicle.category);\n    breadcrumbItems.push(...categoryHierarchy);\n\n    // Ajouter la marque si disponible\n    if (vehicle.brand) {\n      breadcrumbItems.push({\n        label: vehicle.brand,\n        path: `${vehicle.category}/${vehicle.brand.toLowerCase()}`\n      });\n    }\n\n    // Ajouter le titre du v√©hicule (sans lien car c'est la page actuelle)\n    breadcrumbItems.push({\n      label: vehicle.title\n    });\n\n    return breadcrumbItems;\n  };\n\n  const breadcrumbItems = buildBreadcrumb();\n\n  const handleClick = (path?: string) => {\n    if (path && onNavigate) {\n      onNavigate(path);\n    }\n  };\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200 py-3\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <ol className=\"flex items-center space-x-2 text-sm\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"flex items-center\">\n              {index === 0 && (\n                <Home className=\"h-4 w-4 mr-1 text-gray-400\" />\n              )}\n              \n              {item.path ? (\n                <button\n                  onClick={() => handleClick(item.path)}\n                  className=\"text-primary-bolt-500 hover:text-primary-bolt-600 hover:underline transition-colors font-medium\"\n                >\n                  {item.label}\n                </button>\n              ) : (\n                <span className=\"text-gray-900 font-medium\">{item.label}</span>\n              )}\n              \n              {index < breadcrumbItems.length - 1 && (\n                <ChevronRight className=\"h-4 w-4 mx-2 text-gray-400\" />\n              )}\n            </li>\n          ))}\n        </ol>\n      </div>\n    </nav>\n  );\n};","size_bytes":4886},"components/client-components/CategorySection.tsx":{"content":"import React from 'react';\nimport { Heart, ChevronRight, ChevronLeft, MapPin, Calendar } from 'lucide-react';\nimport { Vehicle } from '../types';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface CategorySectionProps {\n  title: string;\n  vehicles: Vehicle[];\n  onViewAll: () => void;\n  onVehicleClick: (vehicle: Vehicle) => void;\n}\n\nconst CategorySectionComponent: React.FC<CategorySectionProps> = ({\n  title,\n  vehicles,\n  onViewAll,\n  onVehicleClick\n}) => {\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const scrollLeft = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({ left: -300, behavior: 'smooth' });\n    }\n  };\n\n  const scrollRight = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({ left: 300, behavior: 'smooth' });\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatDate = (date: string | Date) => {\n    try {\n      const dateObj = typeof date === 'string' ? new Date(date) : date;\n      if (!dateObj || isNaN(dateObj.getTime())) {\n        return 'Date inconnue';\n      }\n      \n      const now = new Date();\n      const diffTime = Math.abs(now.getTime() - dateObj.getTime());\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      \n      if (diffDays === 1) return \"aujourd'hui\";\n      if (diffDays === 2) return \"hier\";\n      return `il y a ${diffDays} jours`;\n    } catch (error) {\n      return 'Date inconnue';\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    return (\n      <img \n        src={brandIcon} \n        alt=\"Brand icon\" \n        className=\"w-12 h-12 opacity-60\"\n      />\n    );\n  };\n\n  if (vehicles.length === 0) return null;\n\n  return (\n    <section className=\"py-12 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Container with background and padding */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n          {/* Header */}\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-primary-bolt-500\">{title}</h2>\n            <button\n              onClick={onViewAll}\n              className=\"flex items-center space-x-1 text-primary-bolt-500 hover:text-primary-bolt-600 font-medium transition-colors\"\n            >\n              <span>Voir plus d'annonces</span>\n              <ChevronRight className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* Listings Grid - Wider cards with better spacing */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n            {vehicles.slice(0, 4).map((vehicle, index) => (\n              <div\n                key={vehicle.id}\n                onClick={() => onVehicleClick(vehicle)}\n                className=\"bg-gray-50 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-200 cursor-pointer group overflow-hidden hover:scale-105 transform\"\n              >\n                {/* Image */}\n                <div className=\"relative h-48 bg-gray-100 overflow-hidden\">\n                  {vehicle.images.length > 0 ? (\n                    <img\n                      src={vehicle.images[0]}\n                      alt={vehicle.title}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-200\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center text-4xl\">\n                      {getCategoryIcon(vehicle.category)}\n                    </div>\n                  )}\n                  \n                  {/* Favorite Button */}\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      // Handle favorite\n                    }}\n                    className=\"absolute top-3 right-3 p-2 bg-white rounded-full shadow-sm hover:shadow-md transition-all opacity-0 group-hover:opacity-100\"\n                  >\n                    <Heart className=\"h-4 w-4 text-gray-600 hover:text-red-500 transition-colors\" />\n                  </button>\n\n                  {/* Pro Badge */}\n                  {vehicle.user?.type === 'professional' && (\n                    <div className=\"absolute top-3 left-3 bg-primary-bolt-500 text-white px-2 py-1 rounded text-xs font-medium\">\n                      Pro\n                    </div>\n                  )}\n                </div>\n\n                {/* Content */}\n                <div className=\"p-6\">\n                  {/* Title */}\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3 line-clamp-2 leading-tight\">\n                    {vehicle.title}\n                  </h3>\n\n                  {/* Price */}\n                  <div className=\"text-xl font-bold text-primary-bolt-500 mb-4\">\n                    {formatPrice(vehicle.price)}\n                  </div>\n\n                  {/* Location and Date */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <MapPin className=\"h-4 w-4 mr-2 flex-shrink-0\" />\n                      <span className=\"truncate\">{vehicle.location}</span>\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-500\">\n                      <Calendar className=\"h-4 w-4 mr-2 flex-shrink-0\" />\n                      <span>{formatDate(vehicle.createdAt)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport const CategorySection = React.memo(CategorySectionComponent);","size_bytes":5868},"components/client-components/Conseils.tsx":{"content":"import React from 'react';\nimport { BookOpen, Lightbulb, Shield, Wrench, Car, Bike, AlertTriangle, CheckCircle } from 'lucide-react';\n\nexport const Conseils: React.FC = () => {\n  const conseils = [\n    {\n      id: 1,\n      category: 'Achat',\n      title: 'Comment bien acheter un v√©hicule d\\'occasion',\n      description: 'Tous nos conseils pour √©viter les pi√®ges lors de l\\'achat d\\'un v√©hicule d\\'occasion.',\n      icon: Car,\n      color: 'from-blue-500 to-blue-600',\n      tips: [\n        'V√©rifiez les papiers du v√©hicule',\n        'Inspectez l\\'√©tat g√©n√©ral',\n        'Testez tous les √©quipements',\n        'N√©gociez le prix'\n      ]\n    },\n    {\n      id: 2,\n      category: 'Vente',\n      title: 'Optimiser la vente de votre v√©hicule',\n      description: 'Maximisez vos chances de vendre rapidement et au meilleur prix.',\n      icon: Lightbulb,\n      color: 'from-green-500 to-green-600',\n      tips: [\n        'Prenez de belles photos',\n        'R√©digez une description d√©taill√©e',\n        'Fixez un prix juste',\n        'Pr√©parez votre v√©hicule'\n      ]\n    },\n    {\n      id: 3,\n      category: 'S√©curit√©',\n      title: 'Transactions s√©curis√©es',\n      description: 'Prot√©gez-vous des arnaques et effectuez des transactions en toute s√©curit√©.',\n      icon: Shield,\n      color: 'from-red-500 to-red-600',\n      tips: [\n        'Rencontrez en personne',\n        'V√©rifiez l\\'identit√©',\n        'Utilisez un paiement s√©curis√©',\n        'M√©fiez-vous des prix trop bas'\n      ]\n    },\n    {\n      id: 4,\n      category: 'Entretien',\n      title: 'Maintenir votre v√©hicule en bon √©tat',\n      description: 'Conseils d\\'entretien pour prolonger la dur√©e de vie de votre v√©hicule.',\n      icon: Wrench,\n      color: 'from-purple-500 to-purple-600',\n      tips: [\n        'Respectez les r√©visions',\n        'Contr√¥lez r√©guli√®rement',\n        'Changez les consommables',\n        'Surveillez les t√©moins'\n      ]\n    },\n    {\n      id: 5,\n      category: 'Moto',\n      title: 'Sp√©cificit√©s des deux-roues',\n      description: 'Conseils sp√©cifiques pour l\\'achat et la vente de motos et scooters.',\n      icon: Bike,\n      color: 'from-orange-500 to-orange-600',\n      tips: [\n        'V√©rifiez l\\'√©tat des pneus',\n        'Testez les freins',\n        'Contr√¥lez la cha√Æne',\n        'V√©rifiez l\\'√©clairage'\n      ]\n    },\n    {\n      id: 6,\n      category: 'L√©gal',\n      title: 'Aspects juridiques et administratifs',\n      description: 'Tout ce qu\\'il faut savoir sur les d√©marches administratives.',\n      icon: AlertTriangle,\n      color: 'from-yellow-500 to-yellow-600',\n      tips: [\n        'Changement de propri√©taire',\n        'Contr√¥le technique',\n        'Assurance obligatoire',\n        'Certificat de cession'\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <div className=\"inline-flex items-center space-x-3 bg-primary-bolt-100 rounded-full px-6 py-3 mb-6\">\n            <BookOpen className=\"h-6 w-6 text-primary-bolt-500\" />\n            <span className=\"font-semibold text-primary-bolt-500\">Centre d'aide</span>\n          </div>\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-gray-900 mb-6\">\n            Conseils et guides pratiques\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            D√©couvrez nos conseils d'experts pour acheter, vendre et entretenir vos v√©hicules en toute s√©r√©nit√©.\n          </p>\n        </div>\n\n        {/* Conseils Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {conseils.map((conseil) => {\n            const IconComponent = conseil.icon;\n            return (\n              <div\n                key={conseil.id}\n                className=\"bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 overflow-hidden border border-gray-100\"\n              >\n                {/* Header with gradient */}\n                <div className={`bg-gradient-to-r ${conseil.color} p-6 text-white`}>\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-3\">\n                      <IconComponent className=\"h-6 w-6\" />\n                    </div>\n                    <span className=\"bg-white/20 backdrop-blur-sm rounded-full px-3 py-1 text-sm font-medium\">\n                      {conseil.category}\n                    </span>\n                  </div>\n                  <h3 className=\"text-xl font-bold mb-2\">{conseil.title}</h3>\n                  <p className=\"text-white/90 text-sm\">{conseil.description}</p>\n                </div>\n\n                {/* Content */}\n                <div className=\"p-6\">\n                  <h4 className=\"font-semibold text-gray-900 mb-4 flex items-center space-x-2\">\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                    <span>Points cl√©s</span>\n                  </h4>\n                  <ul className=\"space-y-3\">\n                    {conseil.tips.map((tip, index) => (\n                      <li key={index} className=\"flex items-start space-x-3\">\n                        <div className=\"w-2 h-2 bg-primary-bolt-500 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span className=\"text-gray-700 text-sm\">{tip}</span>\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  <button className=\"w-full mt-6 bg-gray-100 hover:bg-gray-200 text-gray-800 py-3 px-4 rounded-xl font-semibold transition-colors\">\n                    Lire le guide complet\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* FAQ Section */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-16\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Questions fr√©quentes</h2>\n            <p className=\"text-gray-600\">Les r√©ponses aux questions les plus courantes</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"space-y-6\">\n              <div className=\"border-l-4 border-primary-bolt-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Comment publier une annonce ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Cliquez sur \"D√©poser une annonce\", remplissez le formulaire √©tape par √©tape, \n                  ajoutez des photos et publiez gratuitement.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-green-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Combien co√ªte une annonce ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  La publication d'annonces est enti√®rement gratuite. Seules les options premium \n                  de mise en avant sont payantes.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-blue-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Comment contacter un vendeur ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Utilisez le bouton \"Voir le t√©l√©phone\" ou \"Envoyer un message\" sur la page \n                  de l'annonce pour contacter directement le vendeur.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"space-y-6\">\n              <div className=\"border-l-4 border-orange-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Comment √©viter les arnaques ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Rencontrez toujours le vendeur en personne, v√©rifiez les papiers du v√©hicule \n                  et m√©fiez-vous des prix anormalement bas.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-purple-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Puis-je modifier mon annonce ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Oui, vous pouvez modifier votre annonce √† tout moment depuis votre tableau \n                  de bord en cliquant sur l'ic√¥ne de modification.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-red-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Que faire en cas de probl√®me ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Contactez notre support client via le formulaire de contact ou par t√©l√©phone. \n                  Nous vous aiderons √† r√©soudre votre probl√®me.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Contact Support */}\n        <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-2xl p-8 text-white text-center\">\n          <h2 className=\"text-2xl font-bold mb-4\">Besoin d'aide suppl√©mentaire ?</h2>\n          <p className=\"text-primary-bolt-100 mb-6\">\n            Notre √©quipe support est l√† pour vous accompagner dans toutes vos d√©marches.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <button className=\"bg-white text-primary-bolt-500 hover:bg-gray-50 px-8 py-3 rounded-xl font-semibold transition-colors\">\n              Contacter le support\n            </button>\n            <button className=\"bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white px-8 py-3 rounded-xl font-semibold transition-colors border border-white/20\">\n              Centre d'aide complet\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":10003},"components/client-components/CreateListingForm.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { \n  ArrowLeft, ArrowRight, Upload, X, Check, Car, Bike, Wrench, Package, Camera, Search,\n  Truck, Ship, Waves, Settings, Anchor, Sailboat, Mountain, CreditCard\n} from 'lucide-react';\nimport { PremiumPackSelector } from './PremiumPackSelector';\nimport { PremiumPayment } from './PremiumPayment';\nimport { PublishSuccessModal } from './PublishSuccessModal';\nimport { AddressInput } from './AddressInput';\nimport { PREMIUM_PACKS } from '@/types/premium';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { getBrandsBySubcategory, fuelTypes } from '../utils/mockData';\n// Nouvelles images des cat√©gories principales\nimport voitureImage from '@assets/voiture-2_1752244968736.png';\nimport motosImage from '@assets/motos-scooters_1752244968742.png';\nimport piecesImage from '@assets/pieces-detachees_1752244968743.png';\nimport servicesImage from '@assets/services-entretien_1752244968744.png';\n\n// Images des sous-cat√©gories voitures-utilitaires\nimport voitureIcon from '@assets/voiture-_1752249166092.png';\nimport utilitaireIcon from '@assets/utilitaire_1752249166091.png';\nimport remorqueIcon from '@assets/remorque_1752249166090.png';\nimport caravaneIcon from '@assets/caravane_1752249166091.png';\n// Images des sous-cat√©gories motos-quad-marine\nimport motosIcon from '@assets/motos-scooters_1752244968742.png'; // Utiliser l'image de la cat√©gorie principale\nimport scooterIcon from '@assets/scooter_1752088210843.png';\nimport quadIcon from '@assets/Quad_1752249742337.png';\nimport jetskiIcon from '@assets/Jetski_1752249742334.png';\nimport bateauIcon from '@assets/bateau_1752249742336.png';\nimport aerienIcon from '@assets/aerien_1753810777764.png';\n\n// Images des sous-cat√©gories services\nimport reparationIcon from '@assets/reparation_1752251142655.png';\nimport remorquageIcon from '@assets/remorquage_1752251142654.png';\nimport entretienIcon from '@assets/entretien_1752251142651.png';\nimport autreServiceIcon from '@assets/autre_1752251142652.png';\n\n// Images pour les boutons \"Je vends\" et \"Je cherche\"\nimport vendreIcon from '@assets/vendre_1752258100618.png';\nimport chercherIcon from '@assets/chercher_1752258100621.png';\n\ninterface FormData {\n  // √âtape 1: Type d'annonce\n  listingType: 'sale' | 'search' | '';\n  \n  // √âtape 2: Famille principale\n  category: string;\n  \n  // √âtape 3: √âtat du bien (seulement pour biens mat√©riels - non services/pi√®ces)\n  condition?: 'neuf' | 'tres_bon_etat' | 'bon_etat' | 'etat_moyen' | 'pour_pieces';\n  \n  // √âtape 4: Sous-famille\n  subcategory: string;\n  \n  // √âtape 5+: Suite habituelle\n  title: string;\n  registrationNumber?: string;\n  specificDetails: Record<string, any>;\n  description: string;\n  photos: File[];\n  price: number;\n  location: {\n    city: string;\n    postalCode: string;\n  };\n  contact: {\n    phone: string;\n    email: string;\n    hidePhone: boolean;\n    whatsapp: string;\n    sameAsPhone: boolean;\n  };\n  premiumPack: string;\n}\n\nconst CATEGORIES = [\n  {\n    id: 'voiture-utilitaire',\n    name: 'Voitures - Utilitaires',\n    icon: Car,\n    image: voitureImage,\n    color: 'from-blue-500 to-blue-600',\n    isMaterial: true, // Bien mat√©riel\n    subcategories: [\n      { \n        id: 'voiture', \n        name: 'Voiture', \n        image: voitureIcon, \n        color: 'text-blue-500',\n        bgColor: 'bg-blue-100'\n      },\n      { \n        id: 'utilitaire', \n        name: 'Utilitaire', \n        image: utilitaireIcon, \n        color: 'text-gray-600',\n        bgColor: 'bg-gray-100'\n      },\n      { \n        id: 'caravane', \n        name: 'Caravane', \n        image: caravaneIcon, \n        color: 'text-green-600',\n        bgColor: 'bg-green-100'\n      },\n      { \n        id: 'remorque', \n        name: 'Remorque', \n        image: remorqueIcon, \n        color: 'text-orange-600',\n        bgColor: 'bg-orange-100'\n      }\n    ]\n  },\n  {\n    id: 'moto-scooter-quad',\n    name: 'Motos, Scooters, Quads',\n    icon: Bike,\n    image: motosImage,\n    color: 'from-green-500 to-green-600',\n    isMaterial: true, // Bien mat√©riel\n    subcategories: [\n      { \n        id: 'moto', \n        name: 'Moto', \n        image: motosIcon, \n        color: 'text-red-500',\n        bgColor: 'bg-red-100'\n      },\n      { \n        id: 'scooter', \n        name: 'Scooter', \n        image: scooterIcon, \n        color: 'text-purple-500',\n        bgColor: 'bg-purple-100'\n      },\n      { \n        id: 'quad', \n        name: 'Quad', \n        image: quadIcon, \n        color: 'text-yellow-600',\n        bgColor: 'bg-yellow-100'\n      }\n    ]\n  },\n  {\n    id: 'nautisme-sport-aerien',\n    name: 'Nautisme, Sport et Plein air',\n    icon: Anchor,\n    image: bateauIcon,\n    color: 'from-cyan-500 to-blue-600',\n    isMaterial: true, // Bien mat√©riel\n    subcategories: [\n      { \n        id: 'bateau', \n        name: 'Bateau', \n        image: bateauIcon, \n        color: 'text-blue-600',\n        bgColor: 'bg-blue-100'\n      },\n      { \n        id: 'jetski', \n        name: 'Jet ski', \n        image: jetskiIcon, \n        color: 'text-cyan-500',\n        bgColor: 'bg-cyan-100'\n      },\n      { \n        id: 'aerien', \n        name: 'A√©rien', \n        image: aerienIcon,\n        color: 'text-sky-600',\n        bgColor: 'bg-sky-100'\n      }\n    ]\n  },\n  {\n    id: 'services',\n    name: 'Services',\n    icon: Wrench,\n    image: servicesImage,\n    color: 'from-orange-500 to-orange-600',\n    isMaterial: false, // Pas un bien mat√©riel\n    subcategories: [\n      { \n        id: 'reparation', \n        name: 'R√©paration', \n        image: reparationIcon,\n        color: 'text-orange-500',\n        bgColor: 'bg-orange-100'\n      },\n      { \n        id: 'remorquage', \n        name: 'Remorquage', \n        image: remorquageIcon,\n        color: 'text-red-600',\n        bgColor: 'bg-red-100'\n      },\n      { \n        id: 'entretien', \n        name: 'Entretien', \n        image: entretienIcon,\n        color: 'text-green-500',\n        bgColor: 'bg-green-100'\n      },\n      { \n        id: 'autre-service', \n        name: 'Autre', \n        image: autreServiceIcon,\n        color: 'text-gray-500',\n        bgColor: 'bg-gray-100'\n      }\n    ]\n  },\n  {\n    id: 'pieces',\n    name: 'Pi√®ces d√©tach√©es',\n    icon: Package,\n    image: piecesImage,\n    color: 'from-purple-500 to-purple-600',\n    isMaterial: false, // Pas un bien mat√©riel (pi√®ces d√©tach√©es)\n    subcategories: [\n      { \n        id: 'piece-moto', \n        name: 'Pi√®ces moto', \n        image: motosImage, // Utiliser l'image de la cat√©gorie Motos, scooters\n        color: 'text-purple-500',\n        bgColor: 'bg-purple-100'\n      },\n      { \n        id: 'piece-voiture', \n        name: 'Pi√®ces voiture', \n        image: voitureImage, // Utiliser l'image de la cat√©gorie Voitures - utilitaires\n        color: 'text-blue-500',\n        bgColor: 'bg-blue-100'\n      },\n      { \n        id: 'autre-piece', \n        name: 'Autres pi√®ces', \n        image: piecesImage, \n        color: 'text-purple-500',\n        bgColor: 'bg-purple-100'\n      }\n    ]\n  }\n];\n\n// √âquipements pr√©d√©finis pour les v√©hicules\nconst VEHICLE_EQUIPMENT = {\n  car: [\n    'Toit ouvrant / Toit panoramique',\n    'Climatisation',\n    'GPS',\n    'Si√®ges chauffants',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Jantes alliage',\n    'Feux LED / X√©non',\n    'Vitres √©lectriques',\n    'Airbags',\n    'Si√®ges √©lectriques',\n    'Attelage',\n    'R√©gulateur de vitesse',\n    'Bluetooth',\n    'Syst√®me audio premium',\n    'Cuir'\n  ],\n  motorcycle: [\n    'ABS',\n    'Contr√¥le de traction',\n    'Modes de conduite',\n    '√âclairage LED',\n    'Quickshifter',\n    'Chauffage poign√©es',\n    'Pare-brise',\n    'Top case',\n    'Sacoches',\n    'Antivol',\n    'Compteur digital',\n    'USB'\n  ],\n  utility: [\n    'Climatisation',\n    'GPS',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Attelage',\n    'Cloison de s√©paration',\n    'Hayon arri√®re',\n    'Porte lat√©rale',\n    'Plancher bois',\n    '√âclairage LED cargo',\n    'Prise 12V',\n    'Radio Bluetooth'\n  ],\n  caravan: [\n    'Chauffage',\n    'Eau courante',\n    'WC',\n    'Douche',\n    'Frigo',\n    'Plaques de cuisson',\n    'Four',\n    'TV',\n    'Auvent',\n    'Climatisation',\n    'Panneaux solaires',\n    'Antenne satellite'\n  ],\n  trailer: [\n    'B√¢che de protection',\n    'Ridelles amovibles',\n    'Rampes de chargement',\n    'Sangles d\\'arrimage',\n    'Roue de secours',\n    '√âclairage LED',\n    'Plancher antid√©rapant',\n    'Support v√©lo'\n  ],\n  scooter: [\n    'ABS',\n    'Coffre sous selle',\n    '√âclairage LED',\n    'Prise USB',\n    'Pare-brise',\n    'Top case',\n    'Antivol',\n    'Compteur digital'\n  ],\n  quad: [\n    'Suspension sport',\n    'Freins √† disque',\n    'D√©marreur √©lectrique',\n    'Pneus tout-terrain',\n    'Treuil',\n    'Protection',\n    '√âclairage LED',\n    'Attelage'\n  ],\n  jetski: [\n    'Syst√®me audio',\n    'GPS',\n    '√âclairage LED',\n    'Compartiments √©tanches',\n    '√âchelle de remont√©e',\n    'Remorque incluse',\n    'Housse de protection'\n  ],\n  boat: [\n    'GPS',\n    'Sondeur',\n    'Radio VHF',\n    'Pilote automatique',\n    '√âclairage LED',\n    'Taud de soleil',\n    '√âchelle de bain',\n    'Douche de pont',\n    'WC',\n    'Cuisine',\n    'Couchettes'\n  ],\n  aircraft: [\n    'Parachute de secours',\n    'GPS',\n    'Radio',\n    'Variom√®tre',\n    'Sac de portage',\n    'Kit d\\'entretien',\n    'Housse de protection',\n    'Manuel d\\'utilisation'\n  ]\n};\n\n// Options pour les diff√©rents types\nconst VEHICLE_TYPES = {\n  car: [\n    'Citadine',\n    'Berline',\n    'SUV',\n    'Break',\n    'Coup√©',\n    'Cabriolet',\n    'Monospace',\n    'Pickup'\n  ],\n  utility: [\n    'Camionnette',\n    'Fourgon',\n    'Plateau',\n    'Benne',\n    'Frigorifique',\n    'Hayon',\n    'Autre'\n  ],\n  caravan: [\n    'Caravane pliante',\n    'Caravane rigide',\n    'Camping-car',\n    'Cellule amovible',\n    'Autre'\n  ],\n  trailer: [\n    'Remorque bagag√®re',\n    'Remorque porte-voiture',\n    'Remorque plateau',\n    'Remorque benne',\n    'Remorque ferm√©e',\n    'Autre'\n  ],\n  motorcycle: [\n    'Sportive',\n    'Routi√®re',\n    'Trail',\n    'Custom',\n    'Roadster',\n    'Enduro',\n    'Cross',\n    'Autre'\n  ],\n  scooter: [\n    'Scooter 50cc',\n    'Scooter 125cc',\n    'Scooter 250cc',\n    'Maxi-scooter',\n    'Scooter √©lectrique',\n    'Scooter vintage',\n    'Autre'\n  ],\n  quad: [\n    'Quad sport',\n    'Quad utilitaire',\n    'Quad enfant',\n    'Side-by-side',\n    'Autre'\n  ],\n  aircraft: [\n    'ULM pendulaire',\n    'ULM multiaxe',\n    'Parapente',\n    'Paramoteur',\n    'Planeur',\n    'Avion l√©ger',\n    'H√©licopt√®re',\n    'Autre'\n  ],\n  boat: [\n    'Bateau √† moteur',\n    'Voilier',\n    'Semi-rigide',\n    'Pneumatique',\n    'Catamaran',\n    'P√™che promenade',\n    'Runabout',\n    'Autre'\n  ],\n  jetski: [\n    'Jet √† bras',\n    'Jet assis',\n    'Jet 3 places',\n    'Jet de course',\n    'Autre'\n  ]\n};\n\nconst TRANSMISSION_TYPES = [\n  { value: 'manual', label: 'Manuelle' },\n  { value: 'automatic', label: 'Automatique' },\n  { value: 'semi-automatic', label: 'Semi-automatique' }\n];\n\nconst COLORS = [\n  'Blanc', 'Noir', 'Gris', 'Argent', 'Rouge', 'Bleu', 'Vert', 'Jaune', 'Orange', 'Violet', 'Marron', 'Beige', 'Autre'\n];\n\nconst DOORS = [2, 3, 4, 5];\n\nconst UPHOLSTERY_TYPES = [\n  { value: 'tissu', label: 'Tissu' },\n  { value: 'cuir_partiel', label: 'Cuir partiel' },\n  { value: 'cuir', label: 'Cuir' },\n  { value: 'velours', label: 'Velours' },\n  { value: 'alcantara', label: 'Alcantara' }\n];\n\nconst EMISSION_CLASSES = [\n  { value: 'euro1', label: 'Euro 1' },\n  { value: 'euro2', label: 'Euro 2' },\n  { value: 'euro3', label: 'Euro 3' },\n  { value: 'euro4', label: 'Euro 4' },\n  { value: 'euro5', label: 'Euro 5' },\n  { value: 'euro6', label: 'Euro 6' }\n];\n\nconst LICENSE_TYPES = [\n  { value: 'A', label: 'Permis A' },\n  { value: 'A1', label: 'Permis A1' },\n  { value: 'A2', label: 'Permis A2' },\n  { value: 'AL', label: 'Permis AL' },\n  { value: 'sans_permis', label: 'Sans permis' }\n];\n\nconst SERVICE_TYPES = [\n  'R√©paration m√©canique',\n  'R√©paration carrosserie',\n  'Entretien',\n  'R√©vision',\n  'Contr√¥le technique',\n  'Remorquage',\n  'D√©pannage',\n  'Autre'\n];\n\nconst PART_CATEGORIES = [\n  'Moteur',\n  'Transmission',\n  'Freinage',\n  'Suspension',\n  '√âlectronique',\n  'Carrosserie',\n  'Int√©rieur',\n  '√âclairage',\n  'Pneumatiques',\n  'Autre'\n];\n\nconst PART_CONDITIONS = [\n  { value: 'new', label: 'Neuf' },\n  { value: 'used', label: 'Occasion' }\n];\n\nconst VEHICLE_CONDITIONS = [\n  { value: 'en_circulation', label: 'Roulant', description: 'V√©hicule en √©tat de circulation' },\n  { value: 'accidente', label: 'Accident√©', description: 'V√©hicule accident√©, vendu en l\\'√©tat' }\n];\n\ninterface CreateListingFormProps {\n  onSuccess?: () => void;\n}\n\nexport const CreateListingForm: React.FC<CreateListingFormProps> = ({ onSuccess }) => {\n  const { user, dbUser } = useAuth();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [autoAdvanceEnabled, setAutoAdvanceEnabled] = useState(true);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  \n  // Configuration des pays support√©s\n  const COUNTRY_CODES = [\n    { code: '+33', name: 'France', length: 9, format: (num: string) => num.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5') },\n    { code: '+1', name: '√âtats-Unis/Canada', length: 10, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3') },\n    { code: '+44', name: 'Royaume-Uni', length: 10, format: (num: string) => num.replace(/(\\d{4})(\\d{3})(\\d{3})/, '$1 $2 $3') },\n    { code: '+49', name: 'Allemagne', length: 10, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3') },\n    { code: '+34', name: 'Espagne', length: 9, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{3})/, '$1 $2 $3') },\n    { code: '+39', name: 'Italie', length: 10, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3') },\n    { code: '+32', name: 'Belgique', length: 9, format: (num: string) => num.replace(/(\\d{3})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4') },\n    { code: '+41', name: 'Suisse', length: 9, format: (num: string) => num.replace(/(\\d{2})(\\d{3})(\\d{2})(\\d{2})/, '$1 $2 $3 $4') },\n    { code: '+212', name: 'Maroc', length: 9, format: (num: string) => num.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5') },\n    { code: '+213', name: 'Alg√©rie', length: 9, format: (num: string) => num.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5') }\n  ];\n\n  // Fonction pour d√©tecter et formater le num√©ro de t√©l√©phone international\n  const formatPhoneNumber = (phone: string): string => {\n    // Supprimer tous les caract√®res non num√©riques sauf le +\n    const cleaned = phone.replace(/[^\\d+]/g, '');\n    \n    // Si le num√©ro commence d√©j√† par +, essayer de le formater selon le pays\n    if (cleaned.startsWith('+')) {\n      for (const country of COUNTRY_CODES) {\n        if (cleaned.startsWith(country.code)) {\n          const withoutPrefix = cleaned.slice(country.code.length);\n          if (withoutPrefix.length >= country.length - 1 && withoutPrefix.length <= country.length + 1) {\n            const paddedNumber = withoutPrefix.padEnd(country.length, '');\n            return `${country.code} ${country.format(paddedNumber.slice(0, country.length))}`;\n          }\n        }\n      }\n      return cleaned; // Retourner tel quel si format non reconnu\n    }\n    \n    // Pour les num√©ros fran√ßais sans indicatif\n    if (cleaned.startsWith('0') && cleaned.length === 10) {\n      const withoutZero = cleaned.slice(1);\n      return `+33 ${withoutZero.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5')}`;\n    }\n    \n    // Si le num√©ro fait 9 chiffres (fran√ßais sans 0), ajouter +33\n    if (cleaned.length === 9 && !cleaned.startsWith('0')) {\n      return `+33 ${cleaned.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5')}`;\n    }\n    \n    // Si pas de format reconnu, ajouter +33 par d√©faut pour la France\n    if (cleaned.length > 0 && !cleaned.startsWith('+')) {\n      return `+33 ${cleaned}`;\n    }\n    \n    return cleaned;\n  };\n\n  // Initialiser formData avec les fonctions de formatage\n  const initializeFormData = (): FormData => ({\n    listingType: '',\n    category: '',\n    subcategory: '',\n    title: '',\n    registrationNumber: '',\n    specificDetails: {},\n    description: '',\n    photos: [],\n    price: 0,\n    location: { city: '', postalCode: '' },\n    contact: { \n      phone: '', \n      email: '', \n      hidePhone: false,\n      whatsapp: '',\n      sameAsPhone: false\n    },\n    premiumPack: 'free'\n  });\n\n  const [formData, setFormData] = useState<FormData>(initializeFormData());\n\n  const [vehicleDataLoading, setVehicleDataLoading] = useState(false);\n  const [vehicleDataMessage, setVehicleDataMessage] = useState('');\n\n  const totalSteps = 13; // Ajout d'une √©tape pack premium\n\n  // R√©initialiser la sous-cat√©gorie quand la cat√©gorie change\n  useEffect(() => {\n    if (formData.category) {\n      setFormData(prev => ({ ...prev, subcategory: '', specificDetails: {} }));\n    }\n  }, [formData.category]);\n\n  // Pr√©-remplir avec les donn√©es utilisateur √† l'initialisation\n  useEffect(() => {\n    if ((user || dbUser) && !formData.contact.phone && !formData.contact.email) {\n      setFormData(prev => ({\n        ...prev,\n        contact: {\n          ...prev.contact,\n          phone: dbUser?.phone ? formatPhoneNumber(dbUser.phone) : '',\n          email: user?.email || dbUser?.email || ''\n        }\n      }));\n    }\n  }, [user, dbUser]);\n\n  // Avancement automatique des √©tapes - seulement si l'auto-avancement est activ√©\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 1 && formData.listingType) {\n      setTimeout(() => setCurrentStep(2), 300);\n    }\n  }, [formData.listingType, currentStep, autoAdvanceEnabled]);\n\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 2 && formData.category) {\n      // Depuis famille principale, aller toujours √† sous-famille (√©tape 3)\n      setTimeout(() => setCurrentStep(3), 300);\n    }\n  }, [formData.category, currentStep, autoAdvanceEnabled]);\n\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 3 && formData.subcategory) {\n      // Depuis sous-famille : si bien mat√©riel n√©cessitant √©tat -> √©tape 4, sinon -> √©tape 5 (titre)\n      const nextStep = needsConditionStep() ? 4 : 5;\n      setTimeout(() => setCurrentStep(nextStep), 300);\n    }\n  }, [formData.subcategory, currentStep, autoAdvanceEnabled]);\n\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 4 && formData.condition && needsConditionStep()) {\n      // Depuis √©tat du bien, aller au titre (√©tape 5)\n      setTimeout(() => setCurrentStep(5), 300);\n    }\n  }, [formData.subcategory, currentStep, autoAdvanceEnabled]);\n\n  const updateFormData = (field: string, value: any) => {\n    console.log('updateFormData called:', field, value);\n    \n    // Validation sp√©ciale pour le titre\n    if (field === 'title') {\n      // Limiter √† 50 caract√®res et ne garder que lettres, chiffres, espaces et caract√®res accentu√©s\n      const cleanedValue = value\n        .replace(/[^a-zA-Z0-9\\s√Ä-√ø]/g, '') // Garde uniquement lettres, chiffres, espaces et caract√®res accentu√©s\n        .substring(0, 50); // Limite √† 50 caract√®res\n      \n      setFormData(prev => {\n        const newData = { ...prev, [field]: cleanedValue };\n        console.log('New form data (title filtered):', newData);\n        return newData;\n      });\n    } else if (field === 'description') {\n      // Validation sp√©ciale pour la description - ne garder que lettres, chiffres, espaces et caract√®res accentu√©s\n      const cleanedValue = value\n        .replace(/[^a-zA-Z0-9\\s√Ä-√ø.,!?;:()\\-]/g, '') // Garde uniquement lettres, chiffres, espaces, caract√®res accentu√©s et ponctuation de base\n        .substring(0, 300); // Limite √† 300 caract√®res\n      \n      setFormData(prev => {\n        const newData = { ...prev, [field]: cleanedValue };\n        console.log('New form data (description filtered):', newData);\n        return newData;\n      });\n    } else {\n      setFormData(prev => {\n        const newData = { ...prev, [field]: value };\n        console.log('New form data:', newData);\n        return newData;\n      });\n    }\n    \n    // R√©activer l'auto-avancement quand l'utilisateur fait un nouveau choix\n    if (!autoAdvanceEnabled) {\n      setAutoAdvanceEnabled(true);\n    }\n    \n    // Auto-avancement imm√©diat pour l'√©tat du bien\n    if (field === 'condition' && value && currentStep === 4) {\n      setTimeout(() => setCurrentStep(5), 300);\n    }\n  };\n\n  const updateSpecificDetails = (field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      specificDetails: { ...prev.specificDetails, [field]: value }\n    }));\n  };\n\n  // Validation du format d'immatriculation fran√ßaise\n  const validateRegistrationNumber = (regNumber: string): { isValid: boolean; message: string } => {\n    if (!regNumber) return { isValid: true, message: '' };\n    \n    // Nettoyer la cha√Æne (supprimer espaces et tirets)\n    const cleaned = regNumber.replace(/[\\s-]/g, '').toUpperCase();\n    \n    // Format SIV actuel (depuis 2009): AA-123-AA\n    const sivPattern = /^[A-Z]{2}[0-9]{3}[A-Z]{2}$/;\n    \n    // Format FNI ancien (avant 2009): 1234 AB 56\n    const fniPattern = /^[0-9]{1,4}[A-Z]{1,3}[0-9]{1,3}$/;\n    \n    if (sivPattern.test(cleaned)) {\n      return { isValid: true, message: 'Format SIV valide (AA-123-AA)' };\n    } else if (fniPattern.test(cleaned)) {\n      return { isValid: true, message: 'Format FNI valide (1234 AB 56)' };\n    } else {\n      return { \n        isValid: false, \n        message: 'Format invalide. Utilisez le format SIV (AA-123-AA) ou FNI (1234 AB 56)' \n      };\n    }\n  };\n\n  // Formater automatiquement l'immatriculation\n  const formatRegistrationNumber = (value: string): string => {\n    if (!value) return '';\n    \n    // Nettoyer la cha√Æne\n    const cleaned = value.replace(/[\\s-]/g, '').toUpperCase();\n    \n    // Tentative de formatage SIV (AA123AA -> AA-123-AA)\n    if (cleaned.length >= 5) {\n      const sivPattern = /^([A-Z]{2})([0-9]{3})([A-Z]{0,2}).*$/;\n      const match = cleaned.match(sivPattern);\n      if (match) {\n        const [, letters1, numbers, letters2] = match;\n        if (letters2.length === 2) {\n          return `${letters1}-${numbers}-${letters2}`;\n        } else if (letters2.length === 1) {\n          return `${letters1}-${numbers}-${letters2}`;\n        } else {\n          return `${letters1}-${numbers}`;\n        }\n      }\n    }\n    \n    // Tentative de formatage FNI (1234AB56 -> 1234 AB 56)\n    if (cleaned.length >= 6) {\n      const fniPattern = /^([0-9]{1,4})([A-Z]{1,3})([0-9]{1,3}).*$/;\n      const match = cleaned.match(fniPattern);\n      if (match) {\n        const [, numbers1, letters, numbers2] = match;\n        return `${numbers1} ${letters} ${numbers2}`;\n      }\n    }\n    \n    return cleaned;\n  };\n\n  // Validation du num√©ro de t√©l√©phone international\n  const validatePhoneNumber = (phone: string): { isValid: boolean; message: string } => {\n    if (!phone) return { isValid: false, message: 'Le num√©ro de t√©l√©phone est requis' };\n    \n    // V√©rifier si le num√©ro commence par +\n    if (!phone.startsWith('+')) {\n      return { isValid: false, message: 'Le num√©ro doit commencer par un indicatif international (+33, +1, +44, etc.)' };\n    }\n    \n    const cleaned = phone.replace(/[^\\d]/g, '');\n    \n    // V√©rifier pour chaque pays support√©\n    for (const country of COUNTRY_CODES) {\n      const countryCode = country.code.replace('+', '');\n      if (cleaned.startsWith(countryCode)) {\n        const withoutPrefix = cleaned.slice(countryCode.length);\n        \n        // Validation sp√©cifique pour la France\n        if (country.code === '+33') {\n          if (withoutPrefix.length === 9) {\n            const firstDigit = withoutPrefix.charAt(0);\n            const validPrefixes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n            if (validPrefixes.includes(firstDigit)) {\n              return { isValid: true, message: `Num√©ro valide (${country.name})` };\n            }\n          }\n        } else {\n          // Validation g√©n√©rique pour les autres pays\n          if (withoutPrefix.length >= country.length - 1 && withoutPrefix.length <= country.length + 1) {\n            return { isValid: true, message: `Num√©ro valide (${country.name})` };\n          }\n        }\n      }\n    }\n    \n    // Si aucun pays reconnu, v√©rifier si c'est un format international valide g√©n√©rique\n    if (cleaned.length >= 8 && cleaned.length <= 15) {\n      return { isValid: true, message: 'Format international valide' };\n    }\n    \n    return { \n      isValid: false, \n      message: 'Format invalide. Utilisez un indicatif international (ex: +33 6 12 34 56 78)' \n    };\n  };\n\n  // Fonction pour r√©cup√©rer les donn√©es v√©hicule via API\n  const fetchVehicleData = async (registrationNumber: string) => {\n    if (!registrationNumber || !validateRegistrationNumber(registrationNumber).isValid) {\n      return;\n    }\n\n    setVehicleDataLoading(true);\n    setVehicleDataMessage('');\n\n    try {\n      const response = await fetch('/api/vehicle-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ registrationNumber }),\n      });\n\n      const result = await response.json();\n\n      if (result.success && result.data) {\n        // Pr√©-remplir automatiquement les d√©tails sp√©cifiques\n        const apiData = result.data;\n        const newSpecificDetails = {\n          ...formData.specificDetails,\n          brand: apiData.brand || formData.specificDetails.brand,\n          model: apiData.model || formData.specificDetails.model,\n          year: apiData.year || formData.specificDetails.year,\n          fuelType: apiData.fuelType || formData.specificDetails.fuelType,\n          power: apiData.power || formData.specificDetails.power,\n          displacement: apiData.displacement || formData.specificDetails.displacement,\n          transmission: apiData.transmission || formData.specificDetails.transmission,\n          doors: apiData.doors || formData.specificDetails.doors,\n          color: apiData.color || formData.specificDetails.color,\n          vehicleType: apiData.vehicleType || formData.specificDetails.vehicleType,\n          emissionClass: apiData.emissionClass || formData.specificDetails.emissionClass,\n          critAir: apiData.critAir || formData.specificDetails.critAir,\n          firstRegistrationDate: apiData.firstRegistrationDate || formData.specificDetails.firstRegistrationDate,\n        };\n\n        setFormData(prev => ({\n          ...prev,\n          specificDetails: newSpecificDetails\n        }));\n\n        const source = result.source === 'cache' ? 'cache' : 'API officielle';\n        setVehicleDataMessage(`‚úÖ Donn√©es r√©cup√©r√©es depuis ${source} et pr√©-remplies automatiquement`);\n      } else {\n        setVehicleDataMessage(`‚ö†Ô∏è ${result.error || 'V√©hicule non trouv√© dans la base de donn√©es'}`);\n      }\n    } catch (error) {\n      console.error('Erreur r√©cup√©ration donn√©es:', error);\n      setVehicleDataMessage('‚ùå Erreur de connexion au service de donn√©es v√©hicule');\n    } finally {\n      setVehicleDataLoading(false);\n    }\n  };\n\n  const toggleEquipment = (equipment: string) => {\n    const currentEquipment = formData.specificDetails.equipment || [];\n    const updatedEquipment = currentEquipment.includes(equipment)\n      ? currentEquipment.filter((item: string) => item !== equipment)\n      : [...currentEquipment, equipment];\n    \n    updateSpecificDetails('equipment', updatedEquipment);\n  };\n\n  const nextStepHandler = () => {\n    const selectedCategory = getSelectedCategory();\n    let nextStepNumber = currentStep + 1;\n    \n    // Nouvelle logique conditionnelle : Type ‚Üí Famille ‚Üí Sous-famille ‚Üí √âtat (si mat√©riel) ‚Üí Titre\n    if (currentStep === 2) {\n      // Depuis famille principale -> sous-famille (3)\n      nextStepNumber = 3;\n    } else if (currentStep === 3) {\n      // Depuis sous-famille : si bien mat√©riel n√©cessitant √©tat -> √©tat du bien (4), sinon -> titre (5)\n      nextStepNumber = needsConditionStep() ? 4 : 5;\n    } else if (currentStep === 4) {\n      // Depuis √©tat du bien -> titre (5)\n      nextStepNumber = 5;\n    } else {\n      // Logique existante pour les √©tapes suivantes (r√©ajust√©es pour le nouveau sch√©ma)\n      if (isSearchForParts()) {\n        if (currentStep === 5) {\n          // Apr√®s le titre (√©tape 5), aller directement √† la description (√©tape 7)\n          nextStepNumber = 7;\n        } else if (currentStep === 7) {\n          // Apr√®s la description (√©tape 7), aller aux photos (√©tape 8)\n          nextStepNumber = 8;\n        } else if (currentStep === 8) {\n          // Apr√®s les photos (√©tape 8), aller directement aux contacts (√©tape 11)\n          nextStepNumber = 11;\n        }\n      } else if (isServiceCategory()) {\n        // Pour les services, ignorer l'√©tape 6 (D√©tails sp√©cifiques)\n        if (currentStep === 5) {\n          // Apr√®s le titre (√©tape 5), aller directement √† la description (√©tape 7)\n          nextStepNumber = 7;\n        }\n      } else if (isSearchListing()) {\n        // Pour les annonces de recherche, ignorer l'√©tape prix (√©tape 9)\n        if (currentStep === 8) {\n          // Apr√®s les photos (√©tape 8), aller directement √† la localisation (√©tape 10)\n          nextStepNumber = 10;\n        }\n      }\n      // Autres logiques selon les besoins\n    }\n    \n    if (nextStepNumber <= totalSteps) {\n      setCurrentStep(nextStepNumber);\n    }\n  };\n\n  const prevStepHandler = () => {\n    // D√©sactiver l'auto-avancement temporairement\n    setAutoAdvanceEnabled(false);\n    \n    // Effacer seulement les donn√©es de navigation (pas les contenus saisis par l'utilisateur)\n    switch (currentStep) {\n      case 2:\n        // En revenant de l'√©tape famille principale, on efface le type d'annonce\n        setFormData(prev => ({ ...prev, listingType: '' }));\n        break;\n      case 3:\n        // En revenant de l'√©tape sous-famille, on efface la famille principale\n        setFormData(prev => ({ ...prev, category: '' }));\n        break;\n      case 4:\n        // En revenant de l'√©tape √©tat du bien, on efface la sous-famille\n        setFormData(prev => ({ ...prev, subcategory: '', condition: undefined }));\n        break;\n      case 5:\n        // En revenant du titre, on efface l'√©tat du bien ou la sous-famille selon le cas\n        if (needsConditionStep()) {\n          setFormData(prev => ({ ...prev, condition: undefined }));\n        } else {\n          setFormData(prev => ({ ...prev, subcategory: '' }));\n        }\n        break;\n      // Pour les √©tapes 6 et suivantes, on ne supprime rien - on pr√©serve tout le contenu utilisateur\n    }\n    \n    const selectedCategory = getSelectedCategory();\n    \n    let previousStepNumber = currentStep - 1;\n    \n    // Nouvelle logique de navigation arri√®re selon le nouveau sch√©ma\n    const category = getSelectedCategory();\n    \n    if (currentStep === 4 && !needsConditionStep()) {\n      // Si on revient de l'√©tape titre et qu'il n'y a pas d'√©tape √©tat du bien, retourner √† sous-famille (√©tape 3)\n      previousStepNumber = 3;\n    } else if (currentStep === 5) {\n      // Depuis titre, revenir √† √©tat du bien (√©tape 4) ou √† sous-famille (√©tape 3) selon le cas\n      previousStepNumber = needsConditionStep() ? 4 : 3;\n    } else {\n      // Logique existante pour les √©tapes suivantes\n      if (isSearchForParts()) {\n        if (currentStep === 11) {\n          // Depuis les contacts (√©tape 11), revenir aux photos (√©tape 8)\n          previousStepNumber = 8;\n        } else if (currentStep === 8) {\n          // Depuis les photos (√©tape 8), revenir √† la description (√©tape 7)\n          previousStepNumber = 7;\n        } else if (currentStep === 7) {\n          // Depuis la description (√©tape 7), revenir au titre (√©tape 5)\n          previousStepNumber = 5;\n        }\n      } else if (isServiceCategory()) {\n        // Pour les services, g√©rer la navigation en arri√®re en sautant l'√©tape 6\n        if (currentStep === 7) {\n          // Depuis la description (√©tape 7), revenir au titre (√©tape 5)\n          previousStepNumber = 5;\n        }\n      } else if (isSearchListing()) {\n        // Pour les annonces de recherche, g√©rer la navigation en arri√®re en sautant l'√©tape 9\n        if (currentStep === 10) {\n          // Depuis la localisation (√©tape 10), revenir aux photos (√©tape 8)\n          previousStepNumber = 8;\n        }\n      }\n    }\n    \n    if (previousStepNumber >= 1) {\n      setCurrentStep(previousStepNumber);\n    }\n    \n    // R√©activer l'auto-avancement apr√®s un d√©lai\n    setTimeout(() => {\n      setAutoAdvanceEnabled(true);\n    }, 500);\n  };\n\n  const canProceed = () => {\n    const result = (() => {\n      switch (currentStep) {\n        case 1:\n          return formData.listingType !== '';\n        case 2:\n          return formData.category !== '';\n        case 3:\n          return formData.subcategory !== '';\n        case 4:\n          // √âtape √©tat du bien (seulement pour biens mat√©riels)\n          if (needsConditionStep()) {\n            return formData.condition !== undefined;\n          }\n          return true; // Si pas besoin d'√©tat, toujours valide\n        case 5:\n          return formData.title.trim() !== '';\n        case 6:\n          // D√©tails sp√©cifiques - ignorer pour les recherches de pi√®ces d√©tach√©es ET les services\n          if (isSearchForParts() || isServiceCategory()) {\n            return true;\n          }\n          // Validation sp√©cifique pour les pi√®ces d√©tach√©es\n          if (formData.subcategory === 'piece-moto' || formData.subcategory === 'piece-voiture' || formData.subcategory === 'autre-piece') {\n            return !!(formData.specificDetails.partCategory && formData.specificDetails.partCondition);\n          }\n          // Validation pour les services\n          if (formData.subcategory === 'reparation' || formData.subcategory === 'remorquage' || formData.subcategory === 'entretien' || formData.subcategory === 'autre-service') {\n            return !!(formData.specificDetails.serviceType && formData.specificDetails.serviceArea);\n          }\n          // Validation sp√©cifique pour les voitures\n          if (formData.subcategory === 'voiture') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year && \n                   formData.specificDetails.mileage && \n                   formData.specificDetails.fuelType &&\n                   formData.specificDetails.vehicleType &&\n                   formData.specificDetails.transmission);\n          }\n          // Validation pour les utilitaires\n          if (formData.subcategory === 'utilitaire') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year && \n                   formData.specificDetails.mileage && \n                   formData.specificDetails.fuelType &&\n                   formData.specificDetails.utilityType &&\n                   formData.specificDetails.transmission);\n          }\n          // Validation pour les motos et scooters\n          if (formData.subcategory === 'moto' || formData.subcategory === 'scooter') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year && \n                   formData.specificDetails.mileage &&\n                   formData.specificDetails.motorcycleType);\n          }\n          // Validation pour les caravanes\n          if (formData.subcategory === 'caravane') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year &&\n                   formData.specificDetails.caravanType &&\n                   formData.specificDetails.sleeps);\n          }\n          // Validation pour les remorques\n          if (formData.subcategory === 'remorque') {\n            return !!(formData.specificDetails.trailerType);\n          }\n          // Validation pour les bateaux\n          if (formData.subcategory === 'bateau') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year &&\n                   formData.specificDetails.boatType &&\n                   formData.specificDetails.length);\n          }\n          // Validation pour les autres sous-cat√©gories\n          return !!(formData.specificDetails.brand && \n                 formData.specificDetails.model && \n                 formData.specificDetails.year);\n        case 7:\n          return formData.description.trim().length >= 50;\n        case 8:\n          return true; // Photos optionnelles - toujours permettre de passer\n        case 9:\n          // Ignorer cette √©tape pour les recherches de pi√®ces d√©tach√©es ET les annonces de recherche\n          if (isSearchForParts() || isSearchListing()) {\n            return true;\n          }\n          return formData.price > 0;\n        case 10:\n          // Ignorer cette √©tape pour les recherches de pi√®ces d√©tach√©es\n          if (isSearchForParts()) {\n            return true;\n          }\n          const locationValid = formData.location.city !== '' && formData.location.postalCode !== '';\n          console.log('Step 10 validation:', {\n            city: formData.location.city,\n            postalCode: formData.location.postalCode,\n            locationValid\n          });\n          return locationValid;\n        case 11:\n          return formData.contact.phone !== '' && validatePhoneNumber(formData.contact.phone).isValid;\n        case 12:\n          return true; // √âtape de r√©capitulatif\n        case 13:\n          return formData.premiumPack !== '' && formData.premiumPack !== 'free'; // S√©lection pack premium payant\n        default:\n          return false;\n      }\n    })();\n    \n    // Debug log pour identifier le probl√®me\n    console.log(`Step ${currentStep}: canProceed = ${result}`, {\n      listingType: formData.listingType,\n      category: formData.category,\n      subcategory: formData.subcategory,\n      title: formData.title,\n      description: formData.description,\n      price: formData.price,\n      photosCount: formData.photos.length,\n      needsCondition: needsConditionStep(),\n      condition: formData.condition\n    });\n    \n    return result;\n  };\n\n  const getSelectedCategory = () => {\n    return CATEGORIES.find(cat => cat.id === formData.category);\n  };\n\n  const getSelectedSubcategory = () => {\n    const category = getSelectedCategory();\n    return category?.subcategories.find(sub => sub.id === formData.subcategory);\n  };\n\n  // V√©rifier si la sous-cat√©gorie n√©cessite un num√©ro d'immatriculation\n  const needsRegistrationNumber = () => {\n    const vehicleSubcategories = ['voiture', 'utilitaire', 'caravane', 'remorque', 'moto', 'scooter', 'quad', 'bateau', 'jetski', 'aerien'];\n    return vehicleSubcategories.includes(formData.subcategory);\n  };\n\n  // V√©rifier si la cat√©gorie n√©cessite une √©tape d'√©tat du bien (biens mat√©riels uniquement)\n  const needsConditionStep = () => {\n    const category = getSelectedCategory();\n    // Seulement pour les biens mat√©riels, excluant services et pi√®ces d√©tach√©es\n    return category?.isMaterial && category?.id !== 'services' && category?.id !== 'pieces';\n  };\n\n  // V√©rifier si on est dans le cas d'une recherche de pi√®ces d√©tach√©es\n  const isSearchForParts = () => {\n    return formData.listingType === 'search' && formData.category === 'spare-parts';\n  };\n\n  const isServiceCategory = () => {\n    return formData.category === 'services';\n  };\n\n  const isSearchListing = () => {\n    return formData.listingType === 'search';\n  };\n\n  // V√©rifier si on est dans le cas d'une recherche de v√©hicules moto/quad/marine qui n'ont pas besoin d'√©tape condition\n  const isSearchForMotorizedVehicles = () => {\n    return formData.listingType === 'search' && \n           ['motorcycle', 'scooter', 'quad', 'jetski', 'boat'].includes(formData.subcategory);\n  };\n\n  // Fonction pour publier l'annonce\n  const publishListing = async () => {\n    try {\n      console.log('Publier l\\'annonce:', formData);\n      \n      // Transformer les donn√©es pour l'API avec validation adapt√©e au type d'annonce\n      const isService = formData.category === 'services';\n      const isSearch = formData.listingType === 'search';\n      \n      const vehicleData = {\n        userId: dbUser?.id || user?.id,\n        title: formData.title || '',\n        description: formData.description || '',\n        category: formData.category || '',\n        subcategory: formData.subcategory || '',\n        // Tous les champs avec valeurs par d√©faut pour respecter les contraintes DB\n        brand: (formData as any).brand || 'Non sp√©cifi√©',\n        model: (formData as any).model || 'Non sp√©cifi√©',\n        year: (formData as any).year ? parseInt((formData as any).year.toString()) : new Date().getFullYear(),\n        mileage: (formData as any).mileage || 0,\n        fuelType: (formData as any).fuelType || 'Non sp√©cifi√©',\n        condition: (formData as any).condition || 'good',\n        price: formData.price || 0,\n        location: formData.location || '',\n        images: formData.photos?.map(photo => URL.createObjectURL(photo)) || [], \n        features: (formData as any).features || [],\n        isPremium: false,\n        status: 'approved',\n        listingType: formData.listingType || 'sale'\n      };\n\n      console.log('üîç FRONTEND - vehicleData avant envoi:', JSON.stringify(vehicleData, null, 2));\n\n      const response = await fetch('/api/vehicles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(vehicleData),\n      });\n\n      if (response.ok) {\n        const newVehicle = await response.json();\n        console.log('Annonce cr√©√©e avec succ√®s:', newVehicle);\n        \n        // SOLUTION: Forcer le rechargement de la page pour actualiser le cache\n        setShowSuccessModal(true);\n        \n        // Programmer le rechargement apr√®s l'affichage du modal de succ√®s\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        throw new Error('Erreur lors de la cr√©ation de l\\'annonce');\n      }\n    } catch (error) {\n      console.error('Erreur:', error);\n      alert('Erreur lors de la publication de l\\'annonce. Veuillez r√©essayer.');\n    }\n  };\n\n  // Fonction pour naviguer vers l'espace personnel\n  const navigateToDashboard = () => {\n    setShowSuccessModal(false);\n    if (onSuccess) {\n      onSuccess();\n    }\n    // TODO: Naviguer vers l'espace personnel/dashboard\n    // navigate('/dashboard');\n  };\n\n  const handlePhotoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    setFormData(prev => {\n      // Limiter √† 4 photos maximum\n      const remainingSlots = 4 - prev.photos.length;\n      const filesToAdd = files.slice(0, remainingSlots);\n      \n      return {\n        ...prev,\n        photos: [...prev.photos, ...filesToAdd]\n      };\n    });\n    \n    // R√©initialiser l'input pour permettre de choisir d'autres fichiers\n    e.target.value = '';\n  };\n\n  const removePhoto = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      photos: prev.photos.filter((_, i) => i !== index)\n    }));\n  };\n\n  const renderSpecificDetailsFields = () => {\n    const subcategory = getSelectedSubcategory();\n    if (!subcategory) return null;\n\n    const brands = getBrandsBySubcategory(subcategory.id);\n    // Mapper les sous-cat√©gories aux cl√©s d'√©quipement\n    const equipmentKey = (() => {\n      switch (subcategory.id) {\n        case 'voiture': return 'car';\n        case 'utilitaire': return 'utility';\n        case 'caravane': return 'caravan';\n        case 'remorque': return 'trailer';\n        case 'moto': return 'motorcycle';\n        case 'scooter': return 'scooter';\n        case 'quad': return 'quad';\n        case 'jetski': return 'jetski';\n        case 'bateau': return 'boat';\n        case 'aerien': return 'aircraft';\n        default: return null;\n      }\n    })();\n    \n    const equipment = equipmentKey ? VEHICLE_EQUIPMENT[equipmentKey as keyof typeof VEHICLE_EQUIPMENT] || [] : [];\n    const selectedEquipment = formData.specificDetails.equipment || [];\n\n    // Champs communs pour la plupart des v√©hicules\n    const renderCommonVehicleFields = () => (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Marque *\n          </label>\n          <select\n            value={formData.specificDetails.brand || ''}\n            onChange={(e) => updateSpecificDetails('brand', e.target.value)}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n          >\n            <option value=\"\">S√©lectionnez une marque</option>\n            {brands.map((brand) => (\n              <option key={brand} value={brand}>\n                {brand}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Mod√®le *\n          </label>\n          <input\n            type=\"text\"\n            value={formData.specificDetails.model || ''}\n            onChange={(e) => updateSpecificDetails('model', e.target.value)}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n            placeholder=\"Ex: 320d\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Ann√©e *\n          </label>\n          <input\n            type=\"number\"\n            value={formData.specificDetails.year || ''}\n            onChange={(e) => updateSpecificDetails('year', parseInt(e.target.value) || '')}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n            placeholder=\"2020\"\n            min=\"1990\"\n            max={new Date().getFullYear() + 1}\n          />\n        </div>\n      </div>\n    );\n\n    // √âquipements\n    const renderEquipment = () => (\n      equipment.length > 0 && (\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4\">\n            √âquipements (optionnel)\n          </label>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n            {equipment.map((item) => (\n              <label\n                key={item}\n                className=\"flex items-center space-x-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\"\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={selectedEquipment.includes(item)}\n                  onChange={() => toggleEquipment(item)}\n                  className=\"h-4 w-4 text-primary-bolt-500 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">{item}</span>\n              </label>\n            ))}\n          </div>\n          {selectedEquipment.length > 0 && (\n            <p className=\"text-sm text-gray-500 mt-2\">\n              {selectedEquipment.length} √©quipement{selectedEquipment.length > 1 ? 's' : ''} s√©lectionn√©{selectedEquipment.length > 1 ? 's' : ''}\n            </p>\n          )}\n        </div>\n      )\n    );\n\n    switch (subcategory.id) {\n      case 'voiture':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de v√©hicule *\n                </label>\n                <select\n                  value={formData.specificDetails.vehicleType || ''}\n                  onChange={(e) => updateSpecificDetails('vehicleType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.car?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"50000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Bo√Æte de vitesses *\n                </label>\n                <select\n                  value={formData.specificDetails.transmission || ''}\n                  onChange={(e) => updateSpecificDetails('transmission', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {TRANSMISSION_TYPES.map((type) => (\n                    <option key={type.value} value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Carburant *\n                </label>\n                <select\n                  value={formData.specificDetails.fuelType || ''}\n                  onChange={(e) => updateSpecificDetails('fuelType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un carburant</option>\n                  {fuelTypes.map((fuel) => (\n                    <option key={fuel.value} value={fuel.value}>{fuel.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance (CV)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.power || ''}\n                  onChange={(e) => updateSpecificDetails('power', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"150\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de portes <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <select\n                  value={formData.specificDetails.doors || ''}\n                  onChange={(e) => updateSpecificDetails('doors', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {DOORS.map((door) => (\n                    <option key={door} value={door}>{door} portes</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance fiscale (CV) <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.fiscalPower || ''}\n                  onChange={(e) => updateSpecificDetails('fiscalPower', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"7\"\n                  min=\"1\"\n                  max=\"50\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Sellerie\n                </label>\n                <select\n                  value={formData.specificDetails.upholstery || ''}\n                  onChange={(e) => updateSpecificDetails('upholstery', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {UPHOLSTERY_TYPES.map((type) => (\n                    <option key={type.value} value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Classe d'√©missions <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <select\n                  value={formData.specificDetails.emissionClass || ''}\n                  onChange={(e) => updateSpecificDetails('emissionClass', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {EMISSION_CLASSES.map((cls) => (\n                    <option key={cls.value} value={cls.value}>{cls.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'utilitaire':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type d'utilitaire *\n                </label>\n                <select\n                  value={formData.specificDetails.utilityType || ''}\n                  onChange={(e) => updateSpecificDetails('utilityType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.utility?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"50000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Bo√Æte de vitesses *\n                </label>\n                <select\n                  value={formData.specificDetails.transmission || ''}\n                  onChange={(e) => updateSpecificDetails('transmission', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {TRANSMISSION_TYPES.map((type) => (\n                    <option key={type.value} value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Carburant *\n                </label>\n                <select\n                  value={formData.specificDetails.fuelType || ''}\n                  onChange={(e) => updateSpecificDetails('fuelType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un carburant</option>\n                  {fuelTypes.map((fuel) => (\n                    <option key={fuel.value} value={fuel.value}>{fuel.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Charge utile (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.payload || ''}\n                  onChange={(e) => updateSpecificDetails('payload', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"1000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Volume utile (m¬≥)\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.specificDetails.volume || ''}\n                  onChange={(e) => updateSpecificDetails('volume', parseFloat(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"8.5\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de places\n                </label>\n                <select\n                  value={formData.specificDetails.seats || ''}\n                  onChange={(e) => updateSpecificDetails('seats', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((seat) => (\n                    <option key={seat} value={seat}>{seat} place{seat > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Classe d'√©missions\n                </label>\n                <select\n                  value={formData.specificDetails.emissionClass || ''}\n                  onChange={(e) => updateSpecificDetails('emissionClass', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {EMISSION_CLASSES.map((cls) => (\n                    <option key={cls.value} value={cls.value}>{cls.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'caravane':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de caravane *\n                </label>\n                <select\n                  value={formData.specificDetails.caravanType || ''}\n                  onChange={(e) => updateSpecificDetails('caravanType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.caravan.map((type) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de couchages *\n                </label>\n                <select\n                  value={formData.specificDetails.sleeps || ''}\n                  onChange={(e) => updateSpecificDetails('sleeps', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4, 5, 6, 7, 8].map((sleep) => (\n                    <option key={sleep} value={sleep}>{sleep} couchage{sleep > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Longueur (m)\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.specificDetails.length || ''}\n                  onChange={(e) => updateSpecificDetails('length', parseFloat(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"6.5\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Poids (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.weight || ''}\n                  onChange={(e) => updateSpecificDetails('weight', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"1200\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'remorque':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de remorque *\n                </label>\n                <select\n                  value={formData.specificDetails.trailerType || ''}\n                  onChange={(e) => updateSpecificDetails('trailerType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.trailer.map((type) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Ann√©e\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.year || ''}\n                  onChange={(e) => updateSpecificDetails('year', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"2020\"\n                  min=\"1990\"\n                  max={new Date().getFullYear() + 1}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Dimensions utiles (L x l)\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.dimensions || ''}\n                  onChange={(e) => updateSpecificDetails('dimensions', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: 3.0 x 1.5\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Poids √† vide (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.emptyWeight || ''}\n                  onChange={(e) => updateSpecificDetails('emptyWeight', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"300\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Poids max (PTAC) (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.maxWeight || ''}\n                  onChange={(e) => updateSpecificDetails('maxWeight', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"750\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'moto':\n      case 'scooter':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type {subcategory.id === 'moto' ? 'de moto' : 'de scooter'} *\n                </label>\n                <select\n                  value={formData.specificDetails.motorcycleType || ''}\n                  onChange={(e) => updateSpecificDetails('motorcycleType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {subcategory.id === 'moto' && VEHICLE_TYPES.motorcycle?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                  {subcategory.id === 'scooter' && VEHICLE_TYPES.scooter?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"15000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Cylindr√©e (cm¬≥) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.displacement || ''}\n                  onChange={(e) => updateSpecificDetails('displacement', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"600\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              {subcategory.id === 'moto' && (\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Type de permis requis\n                  </label>\n                  <select\n                    value={formData.specificDetails.licenseType || ''}\n                    onChange={(e) => updateSpecificDetails('licenseType', e.target.value)}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  >\n                    <option value=\"\">S√©lectionnez</option>\n                    {LICENSE_TYPES.map((type) => (\n                      <option key={type.value} value={type.value}>{type.label}</option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'quad':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de quad *\n                </label>\n                <select\n                  value={formData.specificDetails.quadType || ''}\n                  onChange={(e) => updateSpecificDetails('quadType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.quad?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"5000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Cylindr√©e (cm¬≥) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.displacement || ''}\n                  onChange={(e) => updateSpecificDetails('displacement', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"450\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Transmission\n                </label>\n                <select\n                  value={formData.specificDetails.transmission || ''}\n                  onChange={(e) => updateSpecificDetails('transmission', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  <option value=\"manual\">Manuelle</option>\n                  <option value=\"automatic\">Automatique</option>\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'jetski':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de jetski *\n                </label>\n                <select\n                  value={formData.specificDetails.jetskiType || ''}\n                  onChange={(e) => updateSpecificDetails('jetskiType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.jetski?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Heures d'utilisation\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.hours || ''}\n                  onChange={(e) => updateSpecificDetails('hours', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"50\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance (CV)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.power || ''}\n                  onChange={(e) => updateSpecificDetails('power', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"130\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de places\n                </label>\n                <select\n                  value={formData.specificDetails.seats || ''}\n                  onChange={(e) => updateSpecificDetails('seats', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4].map((seat) => (\n                    <option key={seat} value={seat}>{seat} place{seat > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'aerien':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type d'a√©ronef *\n                </label>\n                <select\n                  value={formData.specificDetails.aircraftType || ''}\n                  onChange={(e) => updateSpecificDetails('aircraftType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.aircraft?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Heures de vol\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.flightHours || ''}\n                  onChange={(e) => updateSpecificDetails('flightHours', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"200\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de places\n                </label>\n                <select\n                  value={formData.specificDetails.seats || ''}\n                  onChange={(e) => updateSpecificDetails('seats', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4].map((seat) => (\n                    <option key={seat} value={seat}>{seat} place{seat > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'bateau':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de bateau *\n                </label>\n                <select\n                  value={formData.specificDetails.boatType || ''}\n                  onChange={(e) => updateSpecificDetails('boatType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.boat?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Longueur (m) *\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.specificDetails.length || ''}\n                  onChange={(e) => updateSpecificDetails('length', parseFloat(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"6.5\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de moteur\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.engineType || ''}\n                  onChange={(e) => updateSpecificDetails('engineType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: Hors-bord, In-board\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance moteur (CV)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.enginePower || ''}\n                  onChange={(e) => updateSpecificDetails('enginePower', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"115\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de couchages\n                </label>\n                <select\n                  value={formData.specificDetails.sleeps || ''}\n                  onChange={(e) => updateSpecificDetails('sleeps', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((sleep) => (\n                    <option key={sleep} value={sleep}>\n                      {sleep === 0 ? 'Aucun couchage' : `${sleep} couchage${sleep > 1 ? 's' : ''}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'reparation':\n      case 'remorquage':\n      case 'entretien':\n      case 'autre-service':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de service *\n                </label>\n                <select\n                  value={formData.specificDetails.serviceType || ''}\n                  onChange={(e) => updateSpecificDetails('serviceType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {SERVICE_TYPES.map((type) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Zone d'intervention *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.serviceArea || ''}\n                  onChange={(e) => updateSpecificDetails('serviceArea', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: Paris et r√©gion parisienne\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Certificat / Agr√©ment (optionnel)\n              </label>\n              <input\n                type=\"text\"\n                value={formData.specificDetails.certification || ''}\n                onChange={(e) => updateSpecificDetails('certification', e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"Ex: Agr√©√© assurances, Certifi√© ISO\"\n              />\n            </div>\n          </div>\n        );\n\n      case 'piece-moto':\n      case 'piece-voiture':\n      case 'autre-piece':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de pi√®ce *\n                </label>\n                <select\n                  value={formData.specificDetails.partCategory || ''}\n                  onChange={(e) => updateSpecificDetails('partCategory', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {PART_CATEGORIES.map((category) => (\n                    <option key={category} value={category}>{category}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  √âtat *\n                </label>\n                <select\n                  value={formData.specificDetails.partCondition || ''}\n                  onChange={(e) => updateSpecificDetails('partCondition', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez l'√©tat</option>\n                  {PART_CONDITIONS.map((condition) => (\n                    <option key={condition.value} value={condition.value}>{condition.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  R√©f√©rence (si disponible)\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.partReference || ''}\n                  onChange={(e) => updateSpecificDetails('partReference', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: 11427788458\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                D√©tails sp√©cifiques pour {subcategory.name}\n              </label>\n              <textarea\n                value={formData.specificDetails.details || ''}\n                onChange={(e) => updateSpecificDetails('details', e.target.value)}\n                rows={6}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"Renseignez les d√©tails sp√©cifiques...\"\n              />\n              <p className=\"text-sm text-gray-500 mt-2\">\n                Renseignez les informations importantes pour votre {subcategory.name.toLowerCase()}.\n              </p>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  const renderStepContent = () => {\n    const selectedCategory = getSelectedCategory();\n    \n    // Pour les recherches de pi√®ces d√©tach√©es, rediriger automatiquement les √©tapes ignor√©es\n    if (isSearchForParts()) {\n      if (currentStep === 5) {\n        // Rediriger l'√©tape 5 vers l'√©tape 6 ou 7\n        setCurrentStep(needsConditionStep() ? 6 : 7);\n        return null;\n      }\n      if (currentStep === 9) {\n        // Rediriger l'√©tape 9 vers l'√©tape 8 (photos) ou 11 (contacts)\n        setCurrentStep(8);\n        return null;\n      }\n      if (currentStep === 10) {\n        // Rediriger l'√©tape 10 vers l'√©tape 11 (contacts)\n        setCurrentStep(11);\n        return null;\n      }\n      if (currentStep === 13) {\n        // Rediriger l'√©tape 13 (r√©capitulatif) vers l'√©tape 12 (pack premium)\n        setCurrentStep(12);\n        return null;\n      }\n    }\n    \n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Type d'annonce\n              </h2>\n              <p className=\"text-gray-600\">\n                Que souhaitez-vous faire ?\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto\">\n              <button\n                onClick={() => updateFormData('listingType', 'sale')}\n                className={`relative p-8 rounded-2xl border-2 transition-all duration-200 text-center ${\n                  formData.listingType === 'sale'\n                    ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                    : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"mb-4\">\n                  <div className=\"w-16 h-16 rounded-2xl flex items-center justify-center mx-auto\">\n                    <img \n                      src={vendreIcon} \n                      alt=\"Je vends\" \n                      className=\"w-18 h-18\"\n                    />\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  Je vends\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  D√©poser une annonce pour vendre un v√©hicule, une pi√®ce d√©tach√©e ou proposer un service\n                </p>\n                \n                {formData.listingType === 'sale' && (\n                  <div className=\"absolute top-4 right-4\">\n                    <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                      <Check className=\"h-4 w-4 text-white\" />\n                    </div>\n                  </div>\n                )}\n              </button>\n\n              <button\n                onClick={() => updateFormData('listingType', 'search')}\n                className={`relative p-8 rounded-2xl border-2 transition-all duration-200 text-center ${\n                  formData.listingType === 'search'\n                    ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                    : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"mb-4\">\n                  <div className=\"w-16 h-16 rounded-2xl flex items-center justify-center mx-auto\">\n                    <img \n                      src={chercherIcon} \n                      alt=\"Je cherche\" \n                      className=\"w-18 h-18\"\n                    />\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  Je cherche\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  Publier une demande de recherche pour trouver un v√©hicule, une pi√®ce ou un service sp√©cifique\n                </p>\n                \n                {formData.listingType === 'search' && (\n                  <div className=\"absolute top-4 right-4\">\n                    <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                      <Check className=\"h-4 w-4 text-white\" />\n                    </div>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Choisissez une cat√©gorie\n              </h2>\n              <p className=\"text-gray-600\">\n                S√©lectionnez la cat√©gorie qui correspond le mieux √† votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {CATEGORIES.map((category) => {\n                const IconComponent = category.icon;\n                return (\n                  <button\n                    key={category.id}\n                    onClick={() => updateFormData('category', category.id)}\n                    className={`relative p-6 rounded-2xl border-2 transition-all duration-200 text-left ${\n                      formData.category === category.id\n                        ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"p-3 flex items-center justify-center\">\n                        {category.image ? (\n                          <img \n                            src={category.image} \n                            alt={category.name}\n                            className=\"h-12 w-12 object-contain\"\n                          />\n                        ) : (\n                          <div className={`p-3 rounded-xl bg-gradient-to-r ${category.color} shadow-lg flex items-center justify-center`}>\n                            <IconComponent className=\"h-6 w-6 text-white\" />\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                          {category.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-600\">\n                          {category.subcategories.map(sub => sub.name).join(', ')}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {formData.category === category.id && (\n                      <div className=\"absolute top-4 right-4\">\n                        <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                          <Check className=\"h-4 w-4 text-white\" />\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        );\n\n      case 3:\n        // √âtape sous-cat√©gorie \n        if (!selectedCategory) return null;\n\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Choisissez une sous-famille\n              </h2>\n              <p className=\"text-gray-600\">\n                Pr√©cisez le type de {selectedCategory.name.toLowerCase()}\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {selectedCategory.subcategories.map((subcategory) => {\n                return (\n                  <button\n                    key={subcategory.id}\n                    onClick={() => updateFormData('subcategory', subcategory.id)}\n                    className={`relative p-4 rounded-xl border-2 transition-all duration-200 text-center ${\n                      formData.subcategory === subcategory.id\n                        ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                  >\n                    {/* Ic√¥ne ou image */}\n                    <div className=\"w-16 h-16 rounded-xl flex items-center justify-center mx-auto mb-3\">\n                      {subcategory.image ? (\n                        <img \n                          src={subcategory.image} \n                          alt={subcategory.name}\n                          className=\"h-14 w-14 object-contain\"\n                        />\n                      ) : (\n                        <div className={`w-12 h-12 ${subcategory.bgColor} rounded-xl flex items-center justify-center`}>\n                          {/* Ic√¥ne de substitution si pas d'image */}\n                          <div className={`h-6 w-6 ${subcategory.color}`}>\n                            ‚ö™\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <h3 className=\"font-semibold text-gray-900\">\n                      {subcategory.name}\n                    </h3>\n                    \n                    {formData.subcategory === subcategory.id && (\n                      <div className=\"absolute top-2 right-2\">\n                        <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                          <Check className=\"h-4 w-4 text-white\" />\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        );\n\n      case 4:\n        // √âtape √©tat du bien (seulement pour biens mat√©riels)\n        if (!needsConditionStep()) {\n          // Si pas besoin d'√©tat du bien, aller directement au titre\n          return null;\n        }\n\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                √âtat du bien\n              </h2>\n              <p className=\"text-gray-600\">\n                Pr√©cisez l'√©tat g√©n√©ral de votre {selectedCategory?.name.toLowerCase()}\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto\">\n              {[\n                {\n                  id: 'occasion',\n                  name: 'Occasion',\n                  description: 'V√©hicule d\\'occasion en √©tat de marche',\n                  bgColor: 'bg-blue-50',\n                  borderColor: 'border-blue-500',\n                  icon: 'üöó'\n                },\n                {\n                  id: 'accidente',\n                  name: 'Accident√©',\n                  description: 'V√©hicule accident√© ou endommag√©',\n                  bgColor: 'bg-orange-50',\n                  borderColor: 'border-orange-500',\n                  icon: '‚ö†Ô∏è'\n                }\n              ].map((condition) => (\n                <button\n                  key={condition.id}\n                  onClick={() => updateFormData('condition', condition.id)}\n                  className={`relative p-6 rounded-xl border-2 transition-all duration-200 text-center ${\n                    formData.condition === condition.id\n                      ? `${condition.borderColor} ${condition.bgColor}`\n                      : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                  }`}\n                >\n                  <div className=\"text-4xl mb-3\">\n                    {condition.icon}\n                  </div>\n                  \n                  <h3 className=\"font-semibold text-gray-900 mb-2\">\n                    {condition.name}\n                  </h3>\n                  \n                  <p className=\"text-sm text-gray-600\">\n                    {condition.description}\n                  </p>\n                  \n                  {formData.condition === condition.id && (\n                    <div className=\"absolute top-3 right-3\">\n                      <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                        <Check className=\"h-4 w-4 text-white\" />\n                      </div>\n                    </div>\n                  )}\n                </button>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 5:\n        // Ancienne √©tape 4 d√©plac√©e en √©tape 5 : Titre\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Titre de votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </h2>\n              <p className=\"text-gray-600\">\n                R√©digez un titre accrocheur et descriptif\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Titre *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.title}\n                  onChange={(e) => updateFormData('title', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all text-lg\"\n                  placeholder={formData.listingType === 'sale' \n                    ? \"Ex: BMW 320d excellent √©tat\" \n                    : \"Ex: Recherche BMW 320d\"\n                  }\n                  maxLength={50}\n                />\n                <div className=\"flex justify-between items-center mt-2\">\n                  <p className=\"text-sm text-gray-500\">\n                    Un bon titre augmente vos chances de {formData.listingType === 'sale' ? 'vente' : 'trouver ce que vous cherchez'}\n                  </p>\n                  <span className={`text-sm ${formData.title.length > 40 ? 'text-orange-500' : 'text-gray-400'}`}>\n                    {formData.title.length}/50\n                  </span>\n                </div>\n              </div>\n\n              {/* Champ d'immatriculation conditionnel */}\n              {needsRegistrationNumber() && formData.listingType === 'sale' && (\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Num√©ro d'immatriculation (optionnel)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.registrationNumber || ''}\n                    onChange={(e) => {\n                      const formatted = formatRegistrationNumber(e.target.value);\n                      updateFormData('registrationNumber', formatted);\n                    }}\n                    className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                      formData.registrationNumber && !validateRegistrationNumber(formData.registrationNumber).isValid\n                        ? 'border-red-300 bg-red-50'\n                        : 'border-gray-300'\n                    }`}\n                    placeholder=\"Ex: AB-123-CD ou 1234 AB 56\"\n                    maxLength={20}\n                  />\n                  <div className=\"mt-2 space-y-2\">\n                    {formData.registrationNumber && (\n                      <p className={`text-sm ${\n                        validateRegistrationNumber(formData.registrationNumber).isValid \n                          ? 'text-green-600' \n                          : 'text-red-600'\n                      }`}>\n                        {validateRegistrationNumber(formData.registrationNumber).message}\n                      </p>\n                    )}\n                    \n                    {/* Bouton pour r√©cup√©rer les donn√©es automatiquement */}\n                    {formData.registrationNumber && validateRegistrationNumber(formData.registrationNumber).isValid && (\n                      <div className=\"flex items-center space-x-3\">\n                        <button\n                          type=\"button\"\n                          onClick={() => fetchVehicleData(formData.registrationNumber!)}\n                          disabled={vehicleDataLoading}\n                          className=\"flex items-center px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                        >\n                          {vehicleDataLoading ? (\n                            <>\n                              <div className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2\"></div>\n                              R√©cup√©ration...\n                            </>\n                          ) : (\n                            <>\n                              <Search className=\"h-4 w-4 mr-2\" />\n                              Pr√©-remplir automatiquement\n                            </>\n                          )}\n                        </button>\n                      </div>\n                    )}\n                    \n                    {/* Message de retour */}\n                    {vehicleDataMessage && (\n                      <div className={`text-sm p-3 rounded-lg ${\n                        vehicleDataMessage.startsWith('‚úÖ') \n                          ? 'bg-green-50 text-green-700 border border-green-200' \n                          : vehicleDataMessage.startsWith('‚ö†Ô∏è')\n                          ? 'bg-yellow-50 text-yellow-700 border border-yellow-200'\n                          : 'bg-red-50 text-red-700 border border-red-200'\n                      }`}>\n                        {vehicleDataMessage}\n                      </div>\n                    )}\n                    \n                    <p className=\"text-sm text-gray-500\">\n                      Formats accept√©s : SIV (AA-123-AA) depuis 2009 ou FNI (1234 AB 56) avant 2009\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 6:\n        // √âtape 6 : D√©tails sp√©cifiques (ancienne √©tape 5)\n        // Ignorer cette √©tape pour les services - ne pas afficher\n        if (isServiceCategory()) {\n          return null;\n        }\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                D√©tails sp√©cifiques\n              </h2>\n              <p className=\"text-gray-600\">\n                Renseignez les caract√©ristiques importantes de votre {getSelectedSubcategory()?.name.toLowerCase()}\n              </p>\n            </div>\n\n            {renderSpecificDetailsFields()}\n          </div>\n        );\n\n      case 7:\n        // √âtape 7 : Description (ancienne √©tape 7 reste la m√™me)\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Description d√©taill√©e\n              </h2>\n              <p className=\"text-gray-600\">\n                D√©crivez votre {getSelectedSubcategory()?.name.toLowerCase()} en d√©tail\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Description * <span className=\"text-gray-500 font-normal\">(50-300 caract√®res)</span>\n              </label>\n              <textarea\n                value={formData.description}\n                onChange={(e) => updateFormData('description', e.target.value)}\n                rows={8}\n                className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                  formData.description.length > 0 && formData.description.length < 50 \n                    ? 'border-red-300 bg-red-50' \n                    : 'border-gray-300'\n                }`}\n                placeholder=\"D√©crivez l'√©tat, l'historique, les √©quipements, les points forts, etc. Soyez pr√©cis et d√©taill√© pour attirer les acheteurs.\"\n                minLength={50}\n                maxLength={300}\n              />\n              <div className=\"flex justify-between items-center mt-2\">\n                <p className=\"text-sm text-gray-500\">\n                  Plus votre description est d√©taill√©e, plus vous avez de chances d'attirer des acheteurs s√©rieux.\n                </p>\n                <div className=\"flex flex-col text-right\">\n                  <span className={`text-sm font-medium ${\n                    formData.description.length < 50 \n                      ? 'text-red-500' \n                      : formData.description.length > 280 \n                      ? 'text-orange-500'\n                      : 'text-green-600'\n                  }`}>\n                    {formData.description.length}/300 caract√®res\n                  </span>\n                  {formData.description.length < 50 && (\n                    <span className=\"text-xs text-red-500\">\n                      (minimum 50 caract√®res)\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 8:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Photos de votre {getSelectedSubcategory()?.name.toLowerCase()}\n              </h2>\n              <p className=\"text-gray-600\">\n                Ajoutez des photos de qualit√© pour attirer plus d'acheteurs (maximum 4 photos)\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              {/* Zone de upload */}\n              {formData.photos.length < 4 ? (\n                <div className=\"border-2 border-dashed border-gray-300 rounded-xl p-8 text-center hover:border-primary-bolt-500 transition-colors\">\n                  <input\n                    type=\"file\"\n                    multiple\n                    accept=\"image/*\"\n                    onChange={handlePhotoUpload}\n                    className=\"hidden\"\n                    id=\"photo-upload\"\n                  />\n                  <label htmlFor=\"photo-upload\" className=\"cursor-pointer\">\n                    <Camera className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                      Glissez vos photos ici\n                    </h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      ou cliquez pour s√©lectionner des fichiers\n                    </p>\n                    <div className=\"bg-primary-bolt-500 text-white px-6 py-2 rounded-lg hover:bg-primary-bolt-600 transition-colors inline-block\">\n                      Choisir des photos\n                    </div>\n                  </label>\n                </div>\n              ) : (\n                <div className=\"border-2 border-dashed border-gray-200 rounded-xl p-8 text-center bg-gray-50\">\n                  <Camera className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-semibold text-gray-500 mb-2\">\n                    Limite de 4 photos atteinte\n                  </h3>\n                  <p className=\"text-gray-400 mb-4\">\n                    Supprimez une photo pour en ajouter d'autres\n                  </p>\n                </div>\n              )}\n\n              {/* Aper√ßu des photos */}\n              {formData.photos.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                    Photos s√©lectionn√©es ({formData.photos.length})\n                  </h3>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                    {formData.photos.map((photo, index) => (\n                      <div key={index} className=\"relative group\">\n                        <img\n                          src={URL.createObjectURL(photo)}\n                          alt={`Photo ${index + 1}`}\n                          className=\"w-full h-32 object-cover rounded-lg\"\n                        />\n                        <button\n                          onClick={() => removePhoto(index)}\n                          className=\"absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition-colors opacity-0 group-hover:opacity-100\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 9:\n        // Masquer cette √©tape pour les annonces de recherche\n        if (isSearchListing()) {\n          return null;\n        }\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Prix de {formData.listingType === 'sale' ? 'vente' : 'budget maximum'}\n              </h2>\n              <p className=\"text-gray-600\">\n                {formData.listingType === 'sale' \n                  ? `Fixez un prix attractif pour votre ${getSelectedSubcategory()?.name.toLowerCase()}`\n                  : `Indiquez votre budget maximum pour votre recherche`\n                }\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                {formData.listingType === 'sale' ? 'Prix (‚Ç¨) *' : 'Budget maximum (‚Ç¨) *'}\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={formData.price || ''}\n                  onChange={(e) => updateFormData('price', parseInt(e.target.value) || 0)}\n                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all text-lg\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                />\n                <span className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-500 font-medium\">\n                  ‚Ç¨\n                </span>\n              </div>\n              <p className=\"text-sm text-gray-500 mt-2\">\n                {formData.listingType === 'sale' \n                  ? 'Consultez des annonces similaires pour fixer un prix comp√©titif'\n                  : 'Indiquez le budget maximum que vous √™tes pr√™t √† d√©penser'\n                }\n              </p>\n            </div>\n          </div>\n        );\n\n      case 10:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Localisation\n              </h2>\n              <p className=\"text-gray-600\">\n                O√π se trouve votre {getSelectedSubcategory()?.name.toLowerCase()} ?\n              </p>\n            </div>\n\n            <AddressInput\n              postalCode={formData.location.postalCode}\n              city={formData.location.city}\n              onPostalCodeChange={(postalCode) => {\n                console.log('Form updating postal code:', postalCode);\n                setFormData(prev => {\n                  const newLocation = { ...prev.location, postalCode };\n                  const newData = { ...prev, location: newLocation };\n                  console.log('Direct form update - new location:', newLocation);\n                  console.log('Direct form update - complete data:', newData);\n                  return newData;\n                });\n              }}\n              onCityChange={(city) => {\n                console.log('Form updating city:', city);\n                setFormData(prev => {\n                  const newLocation = { ...prev.location, city };\n                  const newData = { ...prev, location: newLocation };\n                  console.log('Direct form update - new location:', newLocation);\n                  console.log('Direct form update - complete data:', newData);\n                  return newData;\n                });\n              }}\n            />\n          </div>\n        );\n\n      case 11:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Informations de contact\n              </h2>\n              <p className=\"text-gray-600\">\n                Comment les {formData.listingType === 'sale' ? 'acheteurs' : 'vendeurs'} peuvent-ils vous contacter ?\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  T√©l√©phone * (avec indicatif international)\n                </label>\n                <div className=\"text-xs text-gray-500 mb-2\">\n                  Exemples : +33 (France), +1 (USA/Canada), +44 (UK), +49 (Allemagne), +34 (Espagne)\n                </div>\n                <input\n                  type=\"tel\"\n                  value={formData.contact.phone}\n                  onChange={(e) => {\n                    const formatted = formatPhoneNumber(e.target.value);\n                    const updatedContact = { ...formData.contact, phone: formatted };\n                    \n                    // Si \"m√™me num√©ro WhatsApp\" est coch√©, copier automatiquement\n                    if (formData.contact.sameAsPhone) {\n                      updatedContact.whatsapp = formatted;\n                    }\n                    \n                    updateFormData('contact', updatedContact);\n                  }}\n                  onBlur={(e) => {\n                    // Validation lors de la perte de focus\n                    const validation = validatePhoneNumber(e.target.value);\n                    if (!validation.isValid) {\n                      console.log('Erreur de validation t√©l√©phone:', validation.message);\n                    }\n                  }}\n                  className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                    formData.contact.phone && !validatePhoneNumber(formData.contact.phone).isValid\n                      ? 'border-red-300 bg-red-50'\n                      : 'border-gray-300'\n                  }`}\n                  placeholder=\"+33 6 12 34 56 78 (France par d√©faut)\"\n                  maxLength={25}\n                />\n                {formData.contact.phone && (\n                  <p className={`text-sm mt-1 ${\n                    validatePhoneNumber(formData.contact.phone).isValid\n                      ? 'text-green-600'\n                      : 'text-red-600'\n                  }`}>\n                    {validatePhoneNumber(formData.contact.phone).message}\n                  </p>\n                )}\n                \n                {/* Checkbox pour masquer le t√©l√©phone - d√©plac√©e ici */}\n                <div className=\"flex items-center mt-3\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"hidePhone\"\n                    checked={formData.contact.hidePhone}\n                    onChange={(e) => updateFormData('contact', {\n                      ...formData.contact,\n                      hidePhone: e.target.checked\n                    })}\n                    className=\"h-4 w-4 text-primary-bolt-600 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"hidePhone\" className=\"ml-2 text-sm text-gray-700\">\n                    Masquer mon num√©ro de t√©l√©phone dans l'annonce\n                  </label>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  WhatsApp\n                </label>\n                \n                <div className=\"mb-3\">\n                  <label className=\"flex items-center space-x-2 cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.contact.sameAsPhone}\n                      onChange={(e) => {\n                        const sameAsPhone = e.target.checked;\n                        updateFormData('contact', { \n                          ...formData.contact, \n                          sameAsPhone,\n                          whatsapp: sameAsPhone ? formData.contact.phone : ''\n                        });\n                      }}\n                      className=\"w-4 h-4 text-primary-bolt-600 border-gray-300 rounded focus:ring-primary-bolt-500\"\n                    />\n                    <span className=\"text-sm text-gray-700\">\n                      Mon num√©ro WhatsApp est le m√™me que mon num√©ro de t√©l√©phone\n                    </span>\n                  </label>\n                </div>\n\n                {!formData.contact.sameAsPhone && (\n                  <div>\n                    <input\n                      type=\"tel\"\n                      value={formData.contact.whatsapp}\n                      onChange={(e) => {\n                        const formatted = formatPhoneNumber(e.target.value);\n                        updateFormData('contact', { ...formData.contact, whatsapp: formatted });\n                      }}\n                      onBlur={(e) => {\n                        const validation = validatePhoneNumber(e.target.value);\n                        if (!validation.isValid && e.target.value) {\n                          console.log('Erreur de validation WhatsApp:', validation.message);\n                        }\n                      }}\n                      className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                        formData.contact.whatsapp && !validatePhoneNumber(formData.contact.whatsapp).isValid\n                          ? 'border-red-300 bg-red-50'\n                          : 'border-gray-300'\n                      }`}\n                      placeholder=\"+33 6 12 34 56 78 (WhatsApp)\"\n                      maxLength={25}\n                    />\n                    {formData.contact.whatsapp && (\n                      <p className={`text-sm mt-1 ${\n                        validatePhoneNumber(formData.contact.whatsapp).isValid\n                          ? 'text-green-600'\n                          : 'text-red-600'\n                      }`}>\n                        {validatePhoneNumber(formData.contact.whatsapp).message}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n                {formData.contact.sameAsPhone && formData.contact.phone && (\n                  <div className=\"bg-gray-50 p-3 rounded-xl\">\n                    <p className=\"text-sm text-gray-600\">\n                      <span className=\"font-medium\">WhatsApp :</span> {formData.contact.phone}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Email (optionnel)\n                </label>\n                <input\n                  type=\"email\"\n                  value={formData.contact.email}\n                  onChange={(e) => updateFormData('contact', { ...formData.contact, email: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"votre@email.com\"\n                />\n              </div>\n\n\n            </div>\n          </div>\n        );\n\n      case 12:\n        return (\n          <div className=\"space-y-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                R√©capitulatif de votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </h2>\n              <p className=\"text-gray-600\">\n                V√©rifiez les informations avant de publier votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </p>\n            </div>\n\n            {/* Affichage du r√©capitulatif */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Informations g√©n√©rales</h3>\n                  <dl className=\"space-y-3\">\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Type</dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {formData.listingType === 'sale' ? 'Vendre' : 'Rechercher'}\n                      </dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Cat√©gorie</dt>\n                      <dd className=\"text-sm text-gray-900\">{formData.category}</dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Titre</dt>\n                      <dd className=\"text-sm text-gray-900\">{formData.title}</dd>\n                    </div>\n                    {formData.price > 0 && (\n                      <div>\n                        <dt className=\"text-sm font-medium text-gray-500\">Prix</dt>\n                        <dd className=\"text-sm text-gray-900\">{formData.price}‚Ç¨</dd>\n                      </div>\n                    )}\n                  </dl>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Contact</h3>\n                  <dl className=\"space-y-3\">\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">T√©l√©phone</dt>\n                      <dd className=\"text-sm text-gray-900\">{formData.contact.phone}</dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">WhatsApp</dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {formData.contact.sameAsPhone \n                          ? `${formData.contact.phone} (m√™me que t√©l√©phone)`\n                          : formData.contact.whatsapp || 'Non renseign√©'\n                        }\n                      </dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Localisation</dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {formData.location.postalCode} {formData.location.city}\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Description</h3>\n                  <p className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n                    {formData.description}\n                  </p>\n                </div>\n\n                {/* Section √©quipements s√©lectionn√©s */}\n                {formData.specificDetails.equipment && formData.specificDetails.equipment.length > 0 && (\n                  <div className=\"bg-gray-50 rounded-xl p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">√âquipements</h3>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                      {formData.specificDetails.equipment.map((equipment: string, index: number) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                          <span className=\"text-sm text-gray-700\">{equipment}</span>\n                        </div>\n                      ))}\n                    </div>\n                    <p className=\"text-sm text-gray-500 mt-3\">\n                      {formData.specificDetails.equipment.length} √©quipement{formData.specificDetails.equipment.length > 1 ? 's' : ''} s√©lectionn√©{formData.specificDetails.equipment.length > 1 ? 's' : ''}\n                    </p>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Photos</h3>\n                  {formData.photos.length > 0 ? (\n                    <div className=\"space-y-3\">\n                      <p className=\"text-sm text-gray-600\">\n                        {formData.photos.length} photo{formData.photos.length !== 1 ? 's' : ''} ajout√©e{formData.photos.length !== 1 ? 's' : ''}\n                      </p>\n                      <div className=\"grid grid-cols-3 gap-2\">\n                        {formData.photos.map((photo, index) => (\n                          <div key={index} className=\"relative aspect-square\">\n                            <img\n                              src={URL.createObjectURL(photo)}\n                              alt={`Photo ${index + 1}`}\n                              className=\"w-full h-full object-cover rounded-lg border border-gray-200\"\n                            />\n                            {index === 0 && (\n                              <div className=\"absolute top-1 left-1 bg-primary-bolt-500 text-white text-xs px-2 py-1 rounded\">\n                                Principal\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-gray-600\">\n                      Aucune photo ajout√©e\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 13:\n        if (showPayment) {\n          return (\n            <PremiumPayment\n              selectedPack={formData.premiumPack}\n              onPaymentSuccess={() => {\n                setShowPayment(false);\n                // Publier l'annonce apr√®s paiement r√©ussi\n                console.log('Publier l\\'annonce avec pack premium:', formData);\n                setShowPayment(false);\n                publishListing();\n              }}\n              onBack={() => setShowPayment(false)}\n            />\n          );\n        }\n        return (\n          <PremiumPackSelector\n            selectedPack={formData.premiumPack}\n            onSelectPack={(packId) => updateFormData('premiumPack', packId)}\n          />\n        );\n\n      case 14:\n        return (\n          <div className=\"space-y-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                R√©capitulatif final\n              </h2>\n              <p className=\"text-gray-600\">\n                V√©rifiez les informations avant de publier votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              {/* Cat√©gorie et sous-cat√©gorie */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cat√©gorie</h3>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-medium\">\n                    {selectedCategory?.name}\n                  </span>\n                  <span className=\"text-gray-400\">‚Üí</span>\n                  <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-medium\">\n                    {getSelectedSubcategory()?.name}\n                  </span>\n                </div>\n              </div>\n\n              {/* Titre et prix */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Titre et prix</h3>\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"text-xl font-bold text-gray-900 mb-2\">{formData.title || 'Titre non renseign√©'}</h4>\n                    {formData.registrationNumber && (\n                      <p className=\"text-sm text-gray-600\">\n                        <span className=\"font-medium\">Immatriculation:</span> {formData.registrationNumber}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <div className=\"text-2xl font-bold text-primary-bolt-500\">\n                      {formData.price.toLocaleString('fr-FR')} ‚Ç¨\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* D√©tails sp√©cifiques */}\n              {Object.keys(formData.specificDetails).length > 0 && (\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">D√©tails sp√©cifiques</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {Object.entries(formData.specificDetails).map(([key, value]) => {\n                      if (key === 'equipment' && Array.isArray(value)) {\n                        return (\n                          <div key={key} className=\"md:col-span-2\">\n                            <span className=\"font-medium text-gray-900\">√âquipements:</span>\n                            <div className=\"flex flex-wrap gap-2 mt-2\">\n                              {value.map((equipment: string, index: number) => (\n                                <span key={index} className=\"px-2 py-1 bg-primary-bolt-100 text-primary-bolt-700 rounded-md text-sm\">\n                                  {equipment}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        );\n                      }\n                      \n                      if (value && value !== '') {\n                        const displayKey = (() => {\n                          switch(key) {\n                            case 'brand': return 'Marque';\n                            case 'model': return 'Mod√®le';\n                            case 'year': return 'Ann√©e';\n                            case 'mileage': return 'Kilom√©trage';\n                            case 'fuelType': return 'Carburant';\n                            case 'transmission': return 'Transmission';\n                            case 'color': return 'Couleur';\n                            case 'doors': return 'Portes';\n                            case 'power': return 'Puissance (CV)';\n                            case 'displacement': return 'Cylindr√©e (cm¬≥)';\n                            case 'motorcycleType': return 'Type de moto';\n                            case 'licenseType': return 'Permis requis';\n                            case 'length': return 'Longueur (m)';\n                            case 'engineType': return 'Type de moteur';\n                            case 'enginePower': return 'Puissance moteur (CV)';\n                            case 'boatType': return 'Type de bateau';\n                            case 'utilityType': return 'Type d\\'utilitaire';\n                            case 'gvw': return 'PTAC (kg)';\n                            case 'volume': return 'Volume utile (m¬≥)';\n                            default: return key;\n                          }\n                        })();\n                        \n                        const displayValue = (() => {\n                          if (key === 'fuelType') {\n                            const fuelLabels: Record<string, string> = {\n                              gasoline: 'Essence',\n                              diesel: 'Diesel',\n                              electric: '√âlectrique',\n                              hybrid: 'Hybride'\n                            };\n                            return fuelLabels[value as string] || value;\n                          }\n                          if (key === 'transmission') {\n                            const transmissionLabels: Record<string, string> = {\n                              manual: 'Manuelle',\n                              automatic: 'Automatique',\n                              'semi-automatic': 'Semi-automatique'\n                            };\n                            return transmissionLabels[value as string] || value;\n                          }\n                          return value;\n                        })();\n                        \n                        return (\n                          <div key={key}>\n                            <span className=\"font-medium text-gray-900\">{displayKey}:</span>\n                            <span className=\"text-gray-700 ml-2\">{displayValue}</span>\n                          </div>\n                        );\n                      }\n                      return null;\n                    })}\n                  </div>\n                </div>\n              )}\n\n              {/* √âtat g√©n√©ral */}\n              {formData.condition && needsConditionStep() && (\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">√âtat g√©n√©ral</h3>\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-medium\">\n                      {VEHICLE_CONDITIONS.find(c => c.value === formData.condition)?.label}\n                    </span>\n                  </div>\n                </div>\n              )}\n\n              {/* Description */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Description</h3>\n                <p className=\"text-gray-700 whitespace-pre-line\">{formData.description}</p>\n              </div>\n\n              {/* Photos */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Photos ({formData.photos.length})</h3>\n                {formData.photos.length > 0 ? (\n                  <div className=\"grid grid-cols-3 md:grid-cols-4 gap-4\">\n                    {formData.photos.map((photo, index) => (\n                      <div key={index} className=\"aspect-square\">\n                        <img\n                          src={URL.createObjectURL(photo)}\n                          alt={`Photo ${index + 1}`}\n                          className=\"w-full h-full object-cover rounded-lg\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500\">Aucune photo ajout√©e</p>\n                )}\n              </div>\n\n              {/* Localisation et contact */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Localisation</h3>\n                  <p className=\"text-gray-700\">\n                    {formData.location.postalCode} {formData.location.city}\n                  </p>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Contact</h3>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-gray-700\">\n                      <span className=\"font-medium\">T√©l√©phone:</span> {formData.contact.hidePhone ? 'Masqu√©' : formData.contact.phone}\n                    </p>\n                    <p className=\"text-gray-700\">\n                      <span className=\"font-medium\">WhatsApp:</span> {\n                        formData.contact.sameAsPhone \n                          ? `${formData.contact.phone} (m√™me que t√©l√©phone)`\n                          : formData.contact.whatsapp || 'Non renseign√©'\n                      }\n                    </p>\n                    {formData.contact.email && (\n                      <p className=\"text-gray-700\">\n                        <span className=\"font-medium\">Email:</span> {formData.contact.email}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  if (!user && !dbUser) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"text-center bg-gray-50 p-8 rounded-xl border border-gray-200\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-2xl\">üîí</span>\n          </div>\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Connexion requise</h3>\n          <p className=\"text-gray-600\">Vous devez √™tre connect√© pour d√©poser une annonce.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white\">\n      <div className=\"max-w-full mx-auto px-6 py-6\">\n        {/* Progress Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              {formData.listingType === 'sale' ? 'Vente' : formData.listingType === 'search' ? 'Recherche' : 'D√©poser une annonce'}\n              {formData.listingType && ' - D√©poser une annonce'}\n            </h1>\n            <span className=\"text-sm font-medium text-gray-600\">\n              √âtape {currentStep} sur {totalSteps}\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Form Content */}\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 mb-8\">\n          {renderStepContent()}\n        </div>\n\n        {/* Navigation */}\n        <div className=\"flex justify-between items-center\">\n          <button\n            onClick={() => {\n              if (currentStep === 13 && showPayment) {\n                // Retour depuis le paiement vers la s√©lection des packs\n                setShowPayment(false);\n              } else {\n                prevStepHandler();\n              }\n            }}\n            disabled={currentStep === 1}\n            className=\"flex items-center space-x-2 px-6 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Pr√©c√©dent</span>\n          </button>\n\n          {currentStep === 12 ? (\n            // √âtape r√©capitulatif - afficher les deux options\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <button\n                onClick={() => {\n                  // Publication gratuite directe\n                  publishListing();\n                }}\n                className=\"flex items-center justify-center space-x-2 bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                <Check className=\"h-4 w-4\" />\n                <span>Publier gratuitement</span>\n              </button>\n              \n              <button\n                onClick={() => {\n                  setCurrentStep(13);\n                }}\n                className=\"flex items-center justify-center space-x-2 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                <CreditCard className=\"h-4 w-4\" />\n                <span>Booster l'annonce</span>\n              </button>\n            </div>\n          ) : currentStep === 13 && !showPayment ? (\n            // √âtape s√©lection pack premium\n            <button\n              onClick={() => {\n                const selectedPackData = PREMIUM_PACKS.find(pack => pack.id === formData.premiumPack);\n                if (selectedPackData && selectedPackData.price > 0) {\n                  setShowPayment(true);\n                }\n              }}\n              disabled={!formData.premiumPack || formData.premiumPack === 'free'}\n              className=\"flex items-center space-x-2 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n            >\n              <CreditCard className=\"h-4 w-4\" />\n              <span>Proc√©der au paiement</span>\n            </button>\n          ) : currentStep < totalSteps ? (\n            <button\n              onClick={nextStepHandler}\n              disabled={!canProceed()}\n              className=\"flex items-center space-x-2 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n            >\n              <span>Suivant</span>\n              <ArrowRight className=\"h-4 w-4\" />\n            </button>\n          ) : (\n            <button\n              onClick={() => {\n                // Publication directe\n                publishListing();\n              }}\n              disabled={!canProceed()}\n              className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n            >\n              Publier l'annonce\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de succ√®s */}\n      <PublishSuccessModal\n        isOpen={showSuccessModal}\n        onClose={() => setShowSuccessModal(false)}\n        onNavigateToDashboard={navigateToDashboard}\n        listingType={formData.listingType as 'sale' | 'search'}\n      />\n    </div>\n  );\n};","size_bytes":154368},"components/client-components/Dashboard.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { Car, MessageCircle, User, BarChart3, Plus, Edit, Trash2, Eye, Heart, Crown, Settings, Calendar, MapPin, Euro, TrendingUp, Award, Bell, Filter, Search, Building2, Star } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { Vehicle } from '../types';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface DashboardTab {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  badge?: number;\n}\n\nconst dashboardTabs: DashboardTab[] = [\n  { id: 'overview', label: 'Vue d\\'ensemble', icon: <BarChart3 className=\"h-5 w-5\" /> },\n  { id: 'listings', label: 'Mes annonces', icon: <Car className=\"h-5 w-5\" /> },\n  { id: 'favorites', label: 'Mes favoris', icon: <Heart className=\"h-5 w-5\" /> },\n  { id: 'messages', label: 'Messages', icon: <MessageCircle className=\"h-5 w-5\" />, badge: 1 },\n  { id: 'profile', label: 'Mon profil', icon: <User className=\"h-5 w-5\" /> },\n  { id: 'premium', label: 'Premium', icon: <Crown className=\"h-5 w-5\" /> },\n];\n\ninterface DashboardProps {\n  initialTab?: string;\n  onCreateListing?: () => void;\n}\n\nexport const Dashboard: React.FC<DashboardProps> = ({ initialTab = 'overview', onCreateListing }) => {\n  const { vehicles, setVehicles } = useApp();\n  const { user, dbUser, isLoading } = useAuth();\n  const [activeTab, setActiveTab] = useState(initialTab);\n  const [editingProfile, setEditingProfile] = useState(false);\n  const [favoritesSubTab, setFavoritesSubTab] = useState('listings');\n  const [selectedConversation, setSelectedConversation] = useState<any>(null);\n\n  // Mettre √† jour l'onglet actif quand initialTab change\n  useEffect(() => {\n    setActiveTab(initialTab);\n  }, [initialTab]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\n        <div className=\"text-center bg-white p-12 rounded-2xl shadow-xl border border-gray-100\">\n          <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <div className=\"animate-spin w-8 h-8 border-4 border-primary-bolt-500 border-t-transparent rounded-full\"></div>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Chargement...</h2>\n          <p className=\"text-gray-600\">Acc√®s √† votre tableau de bord</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user && !dbUser) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\n        <div className=\"text-center bg-white p-12 rounded-2xl shadow-xl border border-gray-100\">\n          <div className=\"w-20 h-20 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <span className=\"text-4xl\">üîí</span>\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Acc√®s restreint</h2>\n          <p className=\"text-gray-600 text-lg\">Vous devez √™tre connect√© pour acc√©der √† votre tableau de bord.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const userVehicles = vehicles.filter(v => v.userId === dbUser?.id);\n  const totalViews = userVehicles.reduce((sum, v) => sum + v.views, 0);\n  const totalFavorites = userVehicles.reduce((sum, v) => sum + v.favorites, 0);\n  const premiumListings = userVehicles.filter(v => v.isPremium).length;\n\n  const handleDeleteListing = (vehicleId: string) => {\n    if (window.confirm('√ätes-vous s√ªr de vouloir supprimer cette annonce ?')) {\n      setVehicles(vehicles.filter(v => v.id !== vehicleId));\n    }\n  };\n\n  const handleCreateListing = () => {\n    if (onCreateListing) {\n      onCreateListing();\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const renderOverview = () => (\n    <div className=\"space-y-8\">\n      {/* Welcome Section */}\n      <div className=\"relative bg-gradient-to-r from-primary-bolt-500 via-primary-bolt-600 to-primary-bolt-700 rounded-2xl p-8 text-white overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black/10\"></div>\n        <div className=\"absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32\"></div>\n        <div className=\"absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full translate-y-24 -translate-x-24\"></div>\n        \n        <div className=\"relative z-10\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h1 className=\"text-4xl font-bold mb-2\">\n                Bonjour, {dbUser?.name || user?.email?.split('@')[0]} ! üëã\n              </h1>\n              <p className=\"text-cyan-100 text-lg font-medium\">\n                {dbUser?.type === 'professional' \n                  ? 'G√©rez votre activit√© professionnelle depuis votre tableau de bord'\n                  : 'Bienvenue sur votre espace personnel'\n                }\n              </p>\n            </div>\n            <div className=\"hidden md:block\">\n              <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-4\">\n                <Award className=\"h-12 w-12 text-white/80\" />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <div className=\"bg-white/20 backdrop-blur-sm rounded-lg px-4 py-2\">\n              <span className=\"text-sm font-medium\">Membre depuis</span>\n              <p className=\"text-lg font-bold\">\n                {dbUser?.createdAt ? new Date(dbUser.createdAt).toLocaleDateString('fr-FR', { \n                  month: 'long', \n                  year: 'numeric' \n                }) : 'R√©cemment'}\n              </p>\n            </div>\n            {dbUser?.verified && (\n              <div className=\"bg-green-500/20 backdrop-blur-sm rounded-lg px-4 py-2 border border-green-400/30\">\n                <span className=\"text-sm font-medium text-green-100\">‚úì Compte v√©rifi√©</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 p-3 rounded-xl shadow-lg\">\n              <Car className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-gray-900\">{userVehicles.length}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Mes annonces</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-green-600 font-semibold text-sm bg-green-50 px-2 py-1 rounded-full\">\n              {userVehicles.filter(v => v.status === 'approved').length} actives\n            </span>\n            <TrendingUp className=\"h-4 w-4 text-green-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-green-500 to-green-600 p-3 rounded-xl shadow-lg\">\n              <Eye className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-gray-900\">{totalViews.toLocaleString()}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Vues totales</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-gray-600 text-sm bg-gray-50 px-2 py-1 rounded-full\">\n              Moy: {userVehicles.length > 0 ? Math.round(totalViews / userVehicles.length) : 0}/annonce\n            </span>\n            <TrendingUp className=\"h-4 w-4 text-green-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-red-500 to-pink-600 p-3 rounded-xl shadow-lg\">\n              <Heart className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-gray-900\">{totalFavorites}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Favoris</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-pink-600 text-sm bg-pink-50 px-2 py-1 rounded-full font-medium\">\n              Int√©r√™t g√©n√©r√©\n            </span>\n            <Heart className=\"h-4 w-4 text-pink-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-3 rounded-xl shadow-lg\">\n              <Crown className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-orange-600\">{premiumListings}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Premium</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-orange-600 font-semibold text-sm bg-orange-50 px-2 py-1 rounded-full\">\n              Mises en avant\n            </span>\n            <Crown className=\"h-4 w-4 text-orange-500\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <button \n          onClick={onCreateListing}\n          className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white p-6 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\"\n        >\n          <Plus className=\"h-8 w-8 mb-3\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Nouvelle annonce</h3>\n          <p className=\"text-primary-bolt-100 text-sm\">Publiez votre v√©hicule en quelques clics</p>\n        </button>\n\n        <button className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white p-6 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <MessageCircle className=\"h-8 w-8 mb-3\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Messages</h3>\n          <p className=\"text-green-100 text-sm\">1 nouvelle conversation</p>\n        </button>\n\n        <button className=\"bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white p-6 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <Crown className=\"h-8 w-8 mb-3\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Booster mes annonces</h3>\n          <p className=\"text-orange-100 text-sm\">Augmentez votre visibilit√©</p>\n        </button>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Activit√© r√©cente</h2>\n            <button className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-medium text-sm\">\n              Voir tout\n            </button>\n          </div>\n        </div>\n        <div className=\"p-6\">\n          {userVehicles.length > 0 ? (\n            <div className=\"space-y-4\">\n              {userVehicles.slice(0, 5).map((vehicle) => (\n                <div key={vehicle.id} className=\"flex items-center justify-between p-4 bg-gradient-to-r from-gray-50 to-gray-100/50 rounded-xl hover:from-primary-bolt-50 hover:to-primary-bolt-100/50 transition-all duration-200\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-14 h-14 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-xl flex items-center justify-center shadow-lg\">\n                      <Car className=\"h-7 w-7 text-white\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 text-lg\">{vehicle.title}</h3>\n                      <p className=\"text-sm text-gray-500\">\n                        Cr√©√©e le {new Date(vehicle.createdAt).toLocaleDateString('fr-FR')}\n                      </p>\n                      <div className=\"flex items-center space-x-3 mt-1\">\n                        <span className=\"text-xs bg-primary-bolt-100 text-primary-bolt-500 px-2 py-1 rounded-full font-medium\">\n                          {vehicle.views} vues\n                        </span>\n                        <span className=\"text-xs bg-pink-100 text-pink-800 px-2 py-1 rounded-full font-medium\">\n                          {vehicle.favorites} ‚ù§Ô∏è\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-xl font-bold text-primary-bolt-500\">{formatPrice(vehicle.price)}</p>\n                    {vehicle.isPremium && (\n                      <span className=\"inline-flex items-center space-x-1 text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded-full font-medium\">\n                        <Crown className=\"h-3 w-3\" />\n                        <span>Premium</span>\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Car className=\"h-10 w-10 text-gray-400\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune annonce</h3>\n              <p className=\"text-gray-600 mb-6\">Vous n'avez pas encore publi√© d'annonce.</p>\n              <button className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-1\">\n                Publier ma premi√®re annonce\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderListings = () => (\n    <div className=\"space-y-8\">\n      <div className=\"flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Mes annonces</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">{userVehicles.length} annonce{userVehicles.length !== 1 ? 's' : ''} publi√©e{userVehicles.length !== 1 ? 's' : ''}</p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <button className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-xl hover:bg-gray-50 transition-colors\">\n            <Filter className=\"h-4 w-4\" />\n            <span>Filtrer</span>\n          </button>\n          <button \n            onClick={onCreateListing}\n            className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold flex items-center space-x-2 shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-1\"\n          >\n            <Plus className=\"h-5 w-5\" />\n            <span>Nouvelle annonce</span>\n          </button>\n        </div>\n      </div>\n\n      {userVehicles.length > 0 ? (\n        <div className=\"grid gap-8\">\n          {userVehicles.map((vehicle) => (\n            <div key={vehicle.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-xl transition-all duration-300\">\n              <div className=\"md:flex\">\n                <div className=\"md:w-80 h-64 bg-gradient-to-br from-gray-200 to-gray-300 relative overflow-hidden\">\n                  {vehicle.images.length > 0 ? (\n                    <img\n                      src={vehicle.images[0]}\n                      alt={vehicle.title}\n                      className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <img \n                        src={brandIcon} \n                        alt=\"Brand icon\" \n                        className=\"w-20 h-20 opacity-60\"\n                      />\n                    </div>\n                  )}\n                  {vehicle.isPremium && (\n                    <div className=\"absolute top-4 left-4 bg-gradient-to-r from-orange-500 to-orange-600 text-white px-3 py-1 rounded-full text-sm font-semibold flex items-center space-x-1 shadow-lg\">\n                      <Crown className=\"h-4 w-4\" />\n                      <span>Premium</span>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"flex-1 p-8\">\n                  <div className=\"flex justify-between items-start mb-6\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">{vehicle.title}</h3>\n                      <p className=\"text-3xl font-bold text-primary-bolt-500 mb-4\">{formatPrice(vehicle.price)}</p>\n                      <div className=\"flex items-center space-x-6 text-gray-600 mb-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Calendar className=\"h-5 w-5\" />\n                          <span className=\"font-medium\">{vehicle.year}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <MapPin className=\"h-5 w-5\" />\n                          <span className=\"font-medium\">{vehicle.location}</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-2\">\n                      <span className={`px-4 py-2 rounded-full text-sm font-semibold ${\n                        vehicle.status === 'approved' \n                          ? 'bg-green-100 text-green-800 border border-green-200'\n                          : vehicle.status === 'pending'\n                          ? 'bg-yellow-100 text-yellow-800 border border-yellow-200'\n                          : 'bg-red-100 text-red-800 border border-red-200'\n                      }`}>\n                        {vehicle.status === 'approved' ? '‚úì Approuv√©e' : \n                         vehicle.status === 'pending' ? '‚è≥ En attente' : '‚ùå Rejet√©e'}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-8\">\n                      <div className=\"flex items-center space-x-2 text-gray-600\">\n                        <Eye className=\"h-5 w-5\" />\n                        <span className=\"font-semibold\">{vehicle.views}</span>\n                        <span className=\"text-sm\">vues</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-gray-600\">\n                        <Heart className=\"h-5 w-5\" />\n                        <span className=\"font-semibold\">{vehicle.favorites}</span>\n                        <span className=\"text-sm\">favoris</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-gray-600\">\n                        <MessageCircle className=\"h-5 w-5\" />\n                        <span className=\"font-semibold\">3</span>\n                        <span className=\"text-sm\">messages</span>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-3\">\n                      {!vehicle.isPremium && (\n                        <button className=\"px-6 py-2 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white rounded-xl font-semibold transition-all duration-200 flex items-center space-x-2 shadow-lg hover:shadow-xl\">\n                          <Crown className=\"h-4 w-4\" />\n                          <span>Promouvoir</span>\n                        </button>\n                      )}\n                      <button className=\"p-3 text-gray-400 hover:text-primary-bolt-500 hover:bg-primary-bolt-50 rounded-xl transition-all duration-200\">\n                        <Edit className=\"h-5 w-5\" />\n                      </button>\n                      <button \n                        onClick={() => handleDeleteListing(vehicle.id)}\n                        className=\"p-3 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-xl transition-all duration-200\"\n                      >\n                        <Trash2 className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-16 text-center\">\n          <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-100 to-primary-bolt-200 rounded-full flex items-center justify-center mx-auto mb-8\">\n            <Car className=\"h-12 w-12 text-primary-bolt-500\" />\n          </div>\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Aucune annonce publi√©e</h3>\n          <p className=\"text-gray-600 mb-8 text-lg\">Commencez d√®s maintenant √† vendre vos v√©hicules ou pi√®ces d√©tach√©es.</p>\n          <button \n            onClick={onCreateListing}\n            className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-10 py-4 rounded-xl font-semibold flex items-center space-x-3 mx-auto shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-1\"\n          >\n            <Plus className=\"h-6 w-6\" />\n            <span>Publier une annonce</span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderMessages = () => {\n    const messages = [\n      {\n        id: '1',\n        fromUser: 'Pierre Martin',\n        vehicleTitle: 'BMW 320d Sport - Excellent √©tat',\n        lastMessage: 'Bonjour, le v√©hicule est-il toujours disponible ?',\n        timestamp: new Date('2024-01-15T14:30:00'),\n        unread: true,\n        avatar: 'PM'\n      }\n    ];\n\n    const currentConversation = {\n      id: '1',\n      fromUser: 'Pierre Martin',\n      vehicleTitle: 'BMW 320d Sport - Excellent √©tat',\n      messages: [\n        {\n          id: '1',\n          sender: 'Pierre Martin',\n          isOwn: false,\n          content: 'Bonjour, le v√©hicule est-il toujours disponible ?',\n          timestamp: new Date('2024-01-15T14:30:00')\n        },\n        {\n          id: '2',\n          sender: 'Pierre Martin',\n          isOwn: false,\n          content: 'Serait-il possible de le voir ce week-end ?',\n          timestamp: new Date('2024-01-15T14:32:00')\n        },\n        {\n          id: '3',\n          sender: 'Vous',\n          isOwn: true,\n          content: 'Bonjour Pierre, oui le v√©hicule est disponible. Nous pouvons convenir d\\'un rendez-vous samedi matin si cela vous convient.',\n          timestamp: new Date('2024-01-15T15:45:00')\n        },\n        {\n          id: '4',\n          sender: 'Pierre Martin',\n          isOwn: false,\n          content: 'Parfait ! Samedi 10h √ßa marche pour moi. √Ä quelle adresse exactement ?',\n          timestamp: new Date('2024-01-15T16:10:00')\n        }\n      ]\n    };\n\n    const activeConversation = selectedConversation || currentConversation;\n\n    return (\n      <div className=\"space-y-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Messages</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">G√©rez vos conversations avec les acheteurs</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 h-[600px]\">\n          {/* Liste des conversations */}\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h2 className=\"text-xl font-bold text-gray-900\">Conversations</h2>\n            </div>\n            <div className=\"overflow-y-auto\">\n              {messages.map((message) => (\n                <div \n                  key={message.id}\n                  onClick={() => setSelectedConversation(currentConversation)}\n                  className={`p-6 border-b border-gray-100 hover:bg-gray-50 cursor-pointer transition-colors ${\n                    activeConversation?.id === message.id ? 'bg-primary-bolt-50 border-r-4 border-r-primary-bolt-500' : ''\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center text-white font-semibold\">\n                      {message.avatar}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <h3 className=\"font-semibold text-gray-900\">{message.fromUser}</h3>\n                        {message.unread && (\n                          <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-gray-600 mb-1\">{message.vehicleTitle}</p>\n                      <p className=\"text-sm text-gray-500 truncate\">{message.lastMessage}</p>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        {message.timestamp.toLocaleDateString('fr-FR')} √† {message.timestamp.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Zone de conversation */}\n          <div className=\"lg:col-span-2 bg-white rounded-2xl shadow-lg border border-gray-100 flex flex-col\">\n            {activeConversation ? (\n              <div className=\"flex flex-col h-full\">\n                {/* Header de la conversation */}\n                <div className=\"p-6 border-b border-gray-200 bg-gradient-to-r from-primary-bolt-50 to-primary-bolt-100\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center text-white font-semibold\">\n                      PM\n                    </div>\n                    <div>\n                      <h3 className=\"font-bold text-gray-900\">{activeConversation.fromUser}</h3>\n                      <p className=\"text-sm text-gray-600\">{activeConversation.vehicleTitle}</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Messages */}\n                <div className=\"flex-1 p-6 overflow-y-auto space-y-4\">\n                  {activeConversation.messages.map((msg) => (\n                    <div \n                      key={msg.id}\n                      className={`flex ${msg.isOwn ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div className={`max-w-sm px-4 py-3 rounded-2xl ${\n                        msg.isOwn \n                          ? 'bg-primary-bolt-500 text-white' \n                          : 'bg-gray-100 text-gray-900'\n                      }`}>\n                        <p className=\"text-sm\">{msg.content}</p>\n                        <p className={`text-xs mt-2 ${\n                          msg.isOwn ? 'text-primary-bolt-100' : 'text-gray-500'\n                        }`}>\n                          {msg.timestamp.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Zone de saisie */}\n                <div className=\"p-6 border-t border-gray-200\">\n                  <div className=\"flex items-center space-x-4\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Tapez votre message...\"\n                      className=\"flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    />\n                    <button className=\"bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white px-6 py-3 rounded-xl font-semibold transition-colors\">\n                      Envoyer\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                    <MessageCircle className=\"h-10 w-10 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">S√©lectionnez une conversation</h3>\n                  <p className=\"text-gray-600\">Choisissez une conversation pour commencer √† √©changer.</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderProfile = () => (\n    <div className=\"space-y-8\">\n      <div className=\"flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Mon profil</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">G√©rez vos informations personnelles</p>\n        </div>\n        <button\n          onClick={() => setEditingProfile(!editingProfile)}\n          className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold flex items-center space-x-2 shadow-lg hover:shadow-xl transition-all duration-200\"\n        >\n          <Edit className=\"h-4 w-4\" />\n          <span>{editingProfile ? 'Annuler' : 'Modifier'}</span>\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8\">\n        <div className=\"flex items-center space-x-8 mb-10\">\n          <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center shadow-lg\">\n            <span className=\"text-white font-bold text-3xl\">\n              {(dbUser?.name || user?.email || 'U').charAt(0).toUpperCase()}\n            </span>\n          </div>\n          <div>\n            <h2 className=\"text-3xl font-bold text-gray-900\">{dbUser?.name || user?.email?.split('@')[0] || 'Utilisateur'}</h2>\n            <p className=\"text-gray-600 text-lg mt-1\">{user?.email || dbUser?.email}</p>\n            <div className=\"flex items-center space-x-3 mt-4\">\n              <span className={`px-4 py-2 rounded-full text-sm font-semibold ${\n                dbUser?.verified\n                  ? 'bg-green-100 text-green-800 border border-green-200'\n                  : 'bg-yellow-100 text-yellow-800 border border-yellow-200'\n              }`}>\n                {dbUser?.verified ? '‚úì Compte v√©rifi√©' : '‚è≥ En attente de v√©rification'}\n              </span>\n              <span className=\"px-4 py-2 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-semibold border border-primary-bolt-200\">\n                {dbUser?.type === 'professional' ? 'üè¢ Professionnel' : 'üë§ Particulier'}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Nom complet</label>\n            <input\n              type=\"text\"\n              value={dbUser?.name || user?.email?.split('@')[0] || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Email</label>\n            <input\n              type=\"email\"\n              value={user?.email || dbUser?.email || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">T√©l√©phone</label>\n            <input\n              type=\"tel\"\n              value={dbUser?.phone || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">WhatsApp</label>\n            <input\n              type=\"tel\"\n              value={dbUser?.whatsapp || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Code postal</label>\n            <input\n              type=\"text\"\n              value={dbUser?.postalCode || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Ville</label>\n            <input\n              type=\"text\"\n              value={dbUser?.city || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Type de compte</label>\n            <select\n              value={dbUser?.type || ''}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            >\n              <option value=\"individual\">Particulier</option>\n              <option value=\"professional\">Professionnel</option>\n            </select>\n          </div>\n\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Pr√©f√©rences de contact</label>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  id=\"contact-whatsapp\"\n                  checked={dbUser?.contactPreferences?.includes('whatsapp') || false}\n                  disabled={!editingProfile}\n                  className=\"w-5 h-5 text-primary-bolt-500 bg-gray-100 border-gray-300 rounded focus:ring-primary-bolt-500 focus:ring-2 disabled:opacity-50\"\n                />\n                <label htmlFor=\"contact-whatsapp\" className=\"text-gray-700 font-medium\">\n                  WhatsApp\n                </label>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  id=\"contact-phone\"\n                  checked={dbUser?.contactPreferences?.includes('phone') || false}\n                  disabled={!editingProfile}\n                  className=\"w-5 h-5 text-primary-bolt-500 bg-gray-100 border-gray-300 rounded focus:ring-primary-bolt-500 focus:ring-2 disabled:opacity-50\"\n                />\n                <label htmlFor=\"contact-phone\" className=\"text-gray-700 font-medium\">\n                  T√©l√©phone\n                </label>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  id=\"contact-email\"\n                  checked={dbUser?.contactPreferences?.includes('email') || false}\n                  disabled={!editingProfile}\n                  className=\"w-5 h-5 text-primary-bolt-500 bg-gray-100 border-gray-300 rounded focus:ring-primary-bolt-500 focus:ring-2 disabled:opacity-50\"\n                />\n                <label htmlFor=\"contact-email\" className=\"text-gray-700 font-medium\">\n                  Email\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {dbUser?.type === 'professional' && (\n            <div className=\"md:col-span-2 space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Nom de l'entreprise</label>\n                <input\n                  type=\"text\"\n                  value={dbUser?.companyName || ''}\n                  disabled={!editingProfile}\n                  className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n                />\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Adresse</label>\n                <textarea\n                  value={dbUser?.address || ''}\n                  disabled={!editingProfile}\n                  rows={4}\n                  className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {editingProfile && (\n          <div className=\"mt-10 flex justify-end space-x-4\">\n            <button\n              onClick={() => setEditingProfile(false)}\n              className=\"px-8 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors font-semibold\"\n            >\n              Annuler\n            </button>\n            <button className=\"px-8 py-3 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200\">\n              Sauvegarder\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPremium = () => (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900\">Options Premium</h1>\n        <p className=\"text-gray-600 mt-2 text-lg\">Boostez la visibilit√© de vos annonces</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n        {/* Daily Boost */}\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"text-center mb-8\">\n            <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n              <Crown className=\"h-10 w-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Remont√©e quotidienne</h3>\n            <div className=\"text-4xl font-bold text-primary-bolt-500 mb-3\">2‚Ç¨</div>\n            <p className=\"text-gray-600\">Remont√©e automatique pendant 24h</p>\n          </div>\n          <ul className=\"space-y-4 mb-8\">\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n              <span className=\"font-medium\">Remont√©e en t√™te de liste</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n              <span className=\"font-medium\">Badge \"Urgent\"</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n              <span className=\"font-medium\">Visibilit√© accrue</span>\n            </li>\n          </ul>\n          <button className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\">\n            Choisir\n          </button>\n        </div>\n\n        {/* Weekly Premium */}\n        <div className=\"bg-white rounded-2xl shadow-lg border-2 border-orange-200 p-8 relative hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n            <span className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white px-6 py-2 rounded-full text-sm font-bold shadow-lg\">\n              ‚≠ê Populaire\n            </span>\n          </div>\n          <div className=\"text-center mb-8 mt-4\">\n            <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n              <Crown className=\"h-10 w-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Pack Hebdomadaire</h3>\n            <div className=\"text-4xl font-bold text-orange-600 mb-3\">4,99‚Ç¨</div>\n            <p className=\"text-gray-600\">Mise en avant pendant 7 jours</p>\n          </div>\n          <ul className=\"space-y-4 mb-8\">\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n              <span className=\"font-medium\">Mise en avant 7 jours</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n              <span className=\"font-medium\">Badge \"Premium\"</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n              <span className=\"font-medium\">Statistiques d√©taill√©es</span>\n            </li>\n          </ul>\n          <button className=\"w-full bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\">\n            Choisir\n          </button>\n        </div>\n\n        {/* Monthly Pro */}\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"text-center mb-8\">\n            <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n              <Crown className=\"h-10 w-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Pack Pro Mensuel</h3>\n            <div className=\"text-4xl font-bold text-purple-600 mb-3\">19,99‚Ç¨</div>\n            <p className=\"text-gray-600\">Solution compl√®te pour pros</p>\n          </div>\n          <ul className=\"space-y-4 mb-8\">\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n              <span className=\"font-medium\">10 annonces en avant</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n              <span className=\"font-medium\">Statistiques avanc√©es</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n              <span className=\"font-medium\">Support prioritaire</span>\n            </li>\n          </ul>\n          <button className=\"w-full bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\">\n            Choisir\n          </button>\n        </div>\n      </div>\n\n      {/* Current Premium Status */}\n      {premiumListings > 0 && (\n        <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 border-2 border-orange-200 rounded-2xl p-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-4 rounded-full shadow-lg\">\n                <Crown className=\"h-8 w-8 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"text-2xl font-bold text-orange-900\">\n                  Statut Premium Actif\n                </h3>\n                <p className=\"text-orange-700 text-lg\">\n                  Vous avez {premiumListings} annonce{premiumListings > 1 ? 's' : ''} premium active{premiumListings > 1 ? 's' : ''}\n                </p>\n              </div>\n            </div>\n            <button className=\"bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200\">\n              G√©rer\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderFavorites = () => {\n    const favoritesSubTabs = [\n      { id: 'listings', label: 'Annonces favoris', icon: <Car className=\"h-4 w-4\" /> },\n      { id: 'searches', label: 'Recherches favoris', icon: <Search className=\"h-4 w-4\" /> },\n      { id: 'shops', label: 'Boutiques pro favoris', icon: <Building2 className=\"h-4 w-4\" /> }\n    ];\n\n    // Donn√©es de demo pour les favoris\n    const favoriteListings = [\n      {\n        id: '1',\n        title: 'BMW 320d Sport - Excellent √©tat',\n        price: 18500,\n        year: 2019,\n        mileage: 85000,\n        location: 'Paris 11e',\n        image: 'https://images.unsplash.com/photo-1555215695-3004980ad54e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80',\n        addedDate: new Date('2024-01-15')\n      },\n      {\n        id: '2',\n        title: 'Yamaha MT-07 - Parfait √©tat',\n        price: 5200,\n        year: 2020,\n        mileage: 12000,\n        location: 'Lyon 3e',\n        image: 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80',\n        addedDate: new Date('2024-01-10')\n      }\n    ];\n\n    const favoriteSearches = [\n      {\n        id: '1',\n        title: 'BMW S√©rie 3 Diesel',\n        filters: {\n          brand: 'BMW',\n          model: 'S√©rie 3',\n          fuelType: 'Diesel',\n          priceMax: 25000,\n          yearMin: 2018\n        },\n        alertsCount: 3,\n        createdDate: new Date('2024-01-12')\n      },\n      {\n        id: '2',\n        title: 'Motos sportives < 10000‚Ç¨',\n        filters: {\n          category: 'Motos',\n          type: 'Sport',\n          priceMax: 10000\n        },\n        alertsCount: 1,\n        createdDate: new Date('2024-01-08')\n      }\n    ];\n\n    const favoriteShops = [\n      {\n        id: '1',\n        name: 'Garage Auto Premium',\n        type: 'Concessionnaire BMW',\n        location: 'Paris 16e',\n        rating: 4.8,\n        reviewsCount: 127,\n        logo: 'https://images.unsplash.com/photo-1580273916550-e323be2ae537?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=80&h=80&q=80',\n        addedDate: new Date('2024-01-14')\n      },\n      {\n        id: '2',\n        name: 'Moto Sport Center',\n        type: 'Sp√©cialiste motos',\n        location: 'Marseille',\n        rating: 4.6,\n        reviewsCount: 89,\n        logo: 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=80&h=80&q=80',\n        addedDate: new Date('2024-01-09')\n      }\n    ];\n\n    const renderFavoriteListings = () => (\n      <div className=\"space-y-6\">\n        {favoriteListings.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Heart className=\"h-10 w-10 text-gray-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune annonce favorite</h3>\n            <p className=\"text-gray-600\">Ajoutez des annonces √† vos favoris pour les retrouver facilement ici.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {favoriteListings.map((listing) => (\n              <div key={listing.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                <div className=\"relative\">\n                  <img\n                    src={listing.image}\n                    alt={listing.title}\n                    className=\"w-full h-48 object-cover\"\n                  />\n                  <button className=\"absolute top-3 right-3 bg-red-500 hover:bg-red-600 text-white p-2 rounded-full shadow-lg transition-colors\">\n                    <Heart className=\"h-4 w-4 fill-current\" />\n                  </button>\n                </div>\n                <div className=\"p-6\">\n                  <h3 className=\"font-bold text-lg text-gray-900 mb-2\">{listing.title}</h3>\n                  <div className=\"space-y-2 mb-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-2xl font-bold text-primary-bolt-600\">{formatPrice(listing.price)}</span>\n                      <span className=\"text-sm text-gray-500\">{listing.year}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                      <span>{listing.mileage?.toLocaleString()} km</span>\n                      <span className=\"flex items-center\">\n                        <MapPin className=\"h-3 w-3 mr-1\" />\n                        {listing.location}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">\n                      Ajout√© le {listing.addedDate.toLocaleDateString('fr-FR')}\n                    </span>\n                    <button className=\"bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-colors\">\n                      Voir l'annonce\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n    const renderFavoriteSearches = () => (\n      <div className=\"space-y-6\">\n        {favoriteSearches.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Search className=\"h-10 w-10 text-gray-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune recherche favorite</h3>\n            <p className=\"text-gray-600\">Sauvegardez vos recherches pour recevoir des alertes automatiques.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {favoriteSearches.map((search) => (\n              <div key={search.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <h3 className=\"font-bold text-lg text-gray-900\">{search.title}</h3>\n                      {search.alertsCount > 0 && (\n                        <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-semibold\">\n                          {search.alertsCount} nouvelle{search.alertsCount > 1 ? 's' : ''}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"space-y-2 mb-4\">\n                      <div className=\"flex flex-wrap gap-2\">\n                        {Object.entries(search.filters).map(([key, value]) => (\n                          <span key={key} className=\"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm\">\n                            {key === 'priceMax' && `< ${formatPrice(value as number)}`}\n                            {key === 'yearMin' && `√Ä partir de ${value}`}\n                            {key !== 'priceMax' && key !== 'yearMin' && value}\n                          </span>\n                        ))}\n                      </div>\n                      <p className=\"text-sm text-gray-500\">\n                        Cr√©√©e le {search.createdDate.toLocaleDateString('fr-FR')}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button className=\"bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-colors\">\n                      Rechercher\n                    </button>\n                    <button className=\"text-red-500 hover:text-red-600 p-2 rounded-lg transition-colors\">\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n    const renderFavoriteShops = () => (\n      <div className=\"space-y-6\">\n        {favoriteShops.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Building2 className=\"h-10 w-10 text-gray-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune boutique favorite</h3>\n            <p className=\"text-gray-600\">Suivez vos professionnels pr√©f√©r√©s pour voir leurs nouvelles annonces.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {favoriteShops.map((shop) => (\n              <div key={shop.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                <div className=\"flex items-start space-x-4\">\n                  <img\n                    src={shop.logo}\n                    alt={shop.name}\n                    className=\"w-16 h-16 rounded-xl object-cover border-2 border-gray-100\"\n                  />\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-bold text-lg text-gray-900\">{shop.name}</h3>\n                    <p className=\"text-sm text-gray-600 mb-2\">{shop.type}</p>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"flex items-center\">\n                        <Star className=\"h-4 w-4 text-yellow-400 fill-current\" />\n                        <span className=\"text-sm font-semibold text-gray-700 ml-1\">{shop.rating}</span>\n                      </div>\n                      <span className=\"text-sm text-gray-500\">({shop.reviewsCount} avis)</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600 flex items-center\">\n                        <MapPin className=\"h-3 w-3 mr-1\" />\n                        {shop.location}\n                      </span>\n                      <button className=\"text-red-500 hover:text-red-600 transition-colors\">\n                        <Heart className=\"h-4 w-4 fill-current\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-4 pt-4 border-t border-gray-100\">\n                  <div className=\"flex space-x-2\">\n                    <button className=\"flex-1 bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-colors\">\n                      Voir les annonces\n                    </button>\n                    <button className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg text-sm font-semibold hover:bg-gray-50 transition-colors\">\n                      Contacter\n                    </button>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-2\">\n                    Ajout√© le {shop.addedDate.toLocaleDateString('fr-FR')}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n    return (\n      <div className=\"space-y-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8\">\n          <div className=\"flex items-center space-x-4 mb-6\">\n            <div className=\"bg-gradient-to-r from-red-500 to-pink-600 p-4 rounded-full shadow-lg\">\n              <Heart className=\"h-8 w-8 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Mes favoris</h1>\n              <p className=\"text-gray-600 text-lg\">Retrouvez tous vos contenus favoris</p>\n            </div>\n          </div>\n\n          {/* Sub-tabs horizontaux */}\n          <div className=\"flex space-x-1 bg-gray-100 rounded-xl p-1\">\n            {favoritesSubTabs.map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setFavoritesSubTab(tab.id)}\n                className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex-1 justify-center ${\n                  favoritesSubTab === tab.id\n                    ? 'bg-white text-primary-bolt-600 shadow-md'\n                    : 'text-gray-600 hover:text-gray-900'\n                }`}\n              >\n                {tab.icon}\n                <span>{tab.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Content based on active sub-tab */}\n        {favoritesSubTab === 'listings' && renderFavoriteListings()}\n        {favoritesSubTab === 'searches' && renderFavoriteSearches()}\n        {favoritesSubTab === 'shops' && renderFavoriteShops()}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Sidebar Navigation */}\n          <div className=\"lg:w-80 flex-shrink-0\">\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden sticky top-24\">\n              <div className=\"p-8 border-b border-gray-200 bg-gradient-to-r from-primary-bolt-50 to-primary-bolt-100\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center shadow-lg\">\n                    <span className=\"text-white font-bold text-xl\">\n                      {(dbUser?.name || user?.email || 'U').charAt(0).toUpperCase()}\n                    </span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-bold text-gray-900\">{dbUser?.name || user?.email?.split('@')[0] || 'Utilisateur'}</h3>\n                    <p className=\"text-sm text-gray-600 font-medium\">\n                      {dbUser?.type === 'professional' ? 'üè¢ Professionnel' : 'üë§ Particulier'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <nav className=\"p-4\">\n                {dashboardTabs.map((tab) => (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`w-full flex items-center justify-between px-6 py-4 rounded-xl text-left transition-all duration-200 mb-2 ${\n                      activeTab === tab.id\n                        ? 'bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 text-white shadow-lg transform scale-105'\n                        : 'text-gray-700 hover:bg-gray-50 hover:text-primary-bolt-500'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      {tab.icon}\n                      <span className=\"font-semibold\">{tab.label}</span>\n                    </div>\n                    {tab.badge && (\n                      <span className={`px-2 py-1 rounded-full text-xs font-bold ${\n                        activeTab === tab.id \n                          ? 'bg-white/20 text-white' \n                          : 'bg-red-500 text-white'\n                      }`}>\n                        {tab.badge}\n                      </span>\n                    )}\n                  </button>\n                ))}\n              </nav>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1\">\n            {activeTab === 'overview' && renderOverview()}\n            {activeTab === 'listings' && renderListings()}\n            {activeTab === 'favorites' && renderFavorites()}\n            {activeTab === 'messages' && renderMessages()}\n            {activeTab === 'profile' && renderProfile()}\n            {activeTab === 'premium' && (\n              <div className=\"space-y-8\">\n                {/* Header Section */}\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-24 h-24 bg-gradient-to-r from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                    <Crown className=\"h-12 w-12 text-white\" />\n                  </div>\n                  <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Options Premium</h1>\n                  <p className=\"text-gray-600 mt-2 text-lg\">Boostez la visibilit√© de vos annonces</p>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n                  {/* Daily Boost */}\n                  <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                    <div className=\"text-center mb-8\">\n                      <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                        <Crown className=\"h-10 w-10 text-white\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Remont√©e quotidienne</h3>\n                      <div className=\"text-4xl font-bold text-primary-bolt-500 mb-3\">0,99‚Ç¨</div>\n                      <p className=\"text-gray-600\">Remont√©e automatique pendant 24h</p>\n                    </div>\n                    <ul className=\"space-y-4 mb-8\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        <span className=\"font-medium\">Remont√©e en t√™te de liste</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        <span className=\"font-medium\">Badge \"Urgent\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        <span className=\"font-medium\">+300% de visibilit√©</span>\n                      </li>\n                    </ul>\n                    <button className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl\">\n                      Choisir\n                    </button>\n                  </div>\n\n                  {/* Weekly Premium */}\n                  <div className=\"bg-white rounded-2xl shadow-lg border-2 border-orange-200 p-8 relative hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                    <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                      <span className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white px-6 py-2 rounded-full text-sm font-bold shadow-lg\">\n                        ‚≠ê Populaire\n                      </span>\n                    </div>\n                    <div className=\"text-center mb-8 mt-4\">\n                      <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                        <Crown className=\"h-10 w-10 text-white\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Pack Hebdomadaire</h3>\n                      <div className=\"text-4xl font-bold text-orange-600 mb-3\">4,99‚Ç¨</div>\n                      <p className=\"text-gray-600\">Mise en avant pendant 7 jours</p>\n                    </div>\n                    <ul className=\"space-y-4 mb-8\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Mise en avant 7 jours</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Badge \"Premium\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">+500% de visibilit√©</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Priorit√© dans les recherches</span>\n                      </li>\n                    </ul>\n                    <button className=\"w-full bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl\">\n                      Choisir\n                    </button>\n                  </div>\n\n                  {/* Monthly VIP */}\n                  <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                    <div className=\"text-center mb-8\">\n                      <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                        <Crown className=\"h-10 w-10 text-white\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">VIP Mensuel</h3>\n                      <div className=\"text-4xl font-bold text-purple-600 mb-3\">19,90‚Ç¨</div>\n                      <p className=\"text-gray-600\">Visibilit√© maximale pendant 30 jours</p>\n                    </div>\n                    <ul className=\"space-y-4 mb-8\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Mise en avant 30 jours</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Badge \"VIP\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">+800% de visibilit√©</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Priorit√© Listes et recherches</span>\n                      </li>\n                    </ul>\n                    <button className=\"w-full bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl\">\n                      Choisir\n                    </button>\n                  </div>\n                </div>\n\n                {/* Current Premium Status */}\n                {premiumListings > 0 && (\n                  <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 border-2 border-orange-200 rounded-2xl p-8\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-6\">\n                        <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-4 rounded-full shadow-lg\">\n                          <Crown className=\"h-8 w-8 text-white\" />\n                        </div>\n                        <div>\n                          <h3 className=\"text-2xl font-bold text-orange-900\">\n                            Statut Premium Actif\n                          </h3>\n                          <p className=\"text-orange-700 text-lg\">\n                            Vous avez {premiumListings} annonce{premiumListings > 1 ? 's' : ''} premium active{premiumListings > 1 ? 's' : ''}\n                          </p>\n                        </div>\n                      </div>\n                      <button className=\"bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200\">\n                        G√©rer mes options\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Benefits Section */}\n                <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-8\">\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">Pourquoi choisir Premium ?</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <TrendingUp className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Plus de visibilit√©</h4>\n                      <p className=\"text-sm text-gray-600\">Vos annonces apparaissent en premier dans les r√©sultats</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <Award className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Badge distinctif</h4>\n                      <p className=\"text-sm text-gray-600\">Un badge Premium qui attire l'attention des acheteurs</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <BarChart3 className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Statistiques avanc√©es</h4>\n                      <p className=\"text-sm text-gray-600\">Suivez les performances de vos annonces en d√©tail</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-green-500 to-green-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <Bell className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Notifications prioritaires</h4>\n                      <p className=\"text-sm text-gray-600\">Soyez alert√© en premier des nouveaux contacts</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":75750},"components/client-components/DraggableModal.tsx":{"content":"import React, { useState, useRef, useEffect, ReactNode } from 'react';\nimport { X, Move } from 'lucide-react';\n\ninterface DraggableModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const DraggableModal: React.FC<DraggableModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  className = ''\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const modalRef = useRef<HTMLDivElement>(null);\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  // Reset position when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      setPosition({ x: 0, y: 0 });\n    }\n  }, [isOpen]);\n\n  // Ensure modal stays within viewport bounds\n  const constrainPosition = (x: number, y: number) => {\n    if (!modalRef.current) return { x, y };\n\n    const modal = modalRef.current;\n    const rect = modal.getBoundingClientRect();\n    const viewport = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    // Keep modal within bounds\n    const constrainedX = Math.max(\n      -rect.width / 2, \n      Math.min(x, viewport.width - rect.width / 2)\n    );\n    const constrainedY = Math.max(\n      -rect.height / 2,\n      Math.min(y, viewport.height - rect.height / 2)\n    );\n\n    return { x: constrainedX, y: constrainedY };\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (headerRef.current?.contains(e.target as Node)) {\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX - position.x,\n        y: e.clientY - position.y\n      });\n    }\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (!isDragging) return;\n    \n    const newPosition = constrainPosition(\n      e.clientX - dragStart.x,\n      e.clientY - dragStart.y\n    );\n    setPosition(newPosition);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = 'grabbing';\n      document.body.style.userSelect = 'none';\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = '';\n      document.body.style.userSelect = '';\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = '';\n      document.body.style.userSelect = '';\n    };\n  }, [isDragging, dragStart, position.x, position.y]);\n\n  // Handle escape key - D√©sactiv√© pour √©viter la fermeture accidentelle\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        // Optionnel : Afficher une confirmation avant fermeture\n        // Pour l'instant, on d√©sactive la fermeture par Escape\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\n      {/* Backdrop - Clic d√©sactiv√© pour √©viter la fermeture accidentelle */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={(e) => e.preventDefault()}\n      />\n      \n      {/* Modal */}\n      <div\n        ref={modalRef}\n        className={`\n          absolute top-1/2 left-1/2 \n          w-[95vw] max-w-4xl \n          max-h-[90vh] \n          bg-white rounded-xl shadow-2xl \n          transform -translate-x-1/2 -translate-y-1/2\n          ${className}\n        `}\n        style={{\n          transform: `translate(${position.x - 50}%, ${position.y - 50}%)`,\n          transition: isDragging ? 'none' : 'transform 0.1s ease-out'\n        }}\n        onMouseDown={handleMouseDown}\n      >\n        {/* Header with drag handle */}\n        <div\n          ref={headerRef}\n          className={`\n            flex items-center justify-between p-4 border-b border-gray-200 rounded-t-xl\n            bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 text-white\n            ${isDragging ? 'cursor-grabbing' : 'cursor-grab'}\n          `}\n        >\n          <div className=\"flex items-center space-x-2\">\n            <Move className=\"h-5 w-5 opacity-70\" />\n            <h2 className=\"text-lg font-semibold\">{title}</h2>\n          </div>\n          \n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n            type=\"button\"\n            title=\"Fermer (les donn√©es seront perdues)\"\n          >\n            <X className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"overflow-y-auto max-h-[calc(90vh-64px)]\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DraggableModal;","size_bytes":5170},"components/client-components/EmailVerification.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { CheckCircle, Mail, RefreshCw, ArrowLeft } from 'lucide-react';\n\ninterface EmailVerificationProps {\n  email: string;\n  onBack: () => void;\n  onVerified: () => void;\n}\n\nexport const EmailVerification: React.FC<EmailVerificationProps> = ({\n  email,\n  onBack,\n  onVerified\n}) => {\n  const [isResending, setIsResending] = useState(false);\n  const [resendCooldown, setResendCooldown] = useState(0);\n  const [verificationCode, setVerificationCode] = useState(['', '', '', '', '', '']);\n\n  useEffect(() => {\n    if (resendCooldown > 0) {\n      const timer = setTimeout(() => setResendCooldown(resendCooldown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [resendCooldown]);\n\n  const handleResendEmail = async () => {\n    setIsResending(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setIsResending(false);\n    setResendCooldown(60);\n  };\n\n  const handleCodeChange = (index: number, value: string) => {\n    if (value.length <= 1) {\n      const newCode = [...verificationCode];\n      newCode[index] = value;\n      setVerificationCode(newCode);\n\n      // Auto-focus next input\n      if (value && index < 5) {\n        const nextInput = document.getElementById(`code-${index + 1}`);\n        nextInput?.focus();\n      }\n\n      // Auto-verify when all fields are filled\n      if (newCode.every(digit => digit !== '') && newCode.join('') === '123456') {\n        setTimeout(() => onVerified(), 500);\n      }\n    }\n  };\n\n  const handleKeyDown = (index: number, e: React.KeyboardEvent) => {\n    if (e.key === 'Backspace' && !verificationCode[index] && index > 0) {\n      const prevInput = document.getElementById(`code-${index - 1}`);\n      prevInput?.focus();\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto bg-white rounded-2xl shadow-xl p-8\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <div className=\"w-16 h-16 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n          <Mail className=\"h-8 w-8 text-white\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          V√©rifiez votre email\n        </h2>\n        <p className=\"text-gray-600\">\n          Nous avons envoy√© un code de v√©rification √†\n        </p>\n        <p className=\"font-semibold text-primary-bolt-500\">{email}</p>\n      </div>\n\n      {/* Verification Code Input */}\n      <div className=\"mb-8\">\n        <label className=\"block text-sm font-semibold text-gray-700 mb-4 text-center\">\n          Entrez le code de v√©rification\n        </label>\n        <div className=\"flex justify-center space-x-3\">\n          {verificationCode.map((digit, index) => (\n            <input\n              key={index}\n              id={`code-${index}`}\n              type=\"text\"\n              maxLength={1}\n              value={digit}\n              onChange={(e) => handleCodeChange(index, e.target.value)}\n              onKeyDown={(e) => handleKeyDown(index, e)}\n              className=\"w-12 h-12 text-center text-xl font-bold border-2 border-gray-300 rounded-xl focus:border-primary-bolt-500 focus:ring-2 focus:ring-primary-bolt-500 focus:ring-opacity-20 transition-all\"\n            />\n          ))}\n        </div>\n        <p className=\"text-xs text-gray-500 text-center mt-3\">\n          Le code expire dans 10 minutes\n        </p>\n      </div>\n\n      {/* Resend Email */}\n      <div className=\"text-center mb-6\">\n        <p className=\"text-gray-600 mb-3\">Vous n'avez pas re√ßu le code ?</p>\n        <button\n          onClick={handleResendEmail}\n          disabled={isResending || resendCooldown > 0}\n          className=\"inline-flex items-center space-x-2 text-primary-bolt-500 hover:text-primary-bolt-600 font-semibold transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          <RefreshCw className={`h-4 w-4 ${isResending ? 'animate-spin' : ''}`} />\n          <span>\n            {resendCooldown > 0 \n              ? `Renvoyer dans ${resendCooldown}s`\n              : isResending \n                ? 'Envoi en cours...'\n                : 'Renvoyer le code'\n            }\n          </span>\n        </button>\n      </div>\n\n      {/* Back Button */}\n      <button\n        onClick={onBack}\n        className=\"w-full flex items-center justify-center space-x-2 py-3 px-4 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n      >\n        <ArrowLeft className=\"h-4 w-4\" />\n        <span>Retour</span>\n      </button>\n\n      {/* Help Text */}\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-xl\">\n        <p className=\"text-sm text-blue-800\">\n          <strong>Astuce :</strong> V√©rifiez votre dossier spam si vous ne trouvez pas l'email.\n          Pour tester, utilisez le code : <strong>123456</strong>\n        </p>\n      </div>\n    </div>\n  );\n};","size_bytes":4906},"components/client-components/Footer.tsx":{"content":"import React from 'react';\nimport { useApp } from '../contexts/AppContext';\n\ninterface FooterProps {\n  setCurrentView: (view: string) => void;\n}\n\nexport const Footer: React.FC<FooterProps> = ({ setCurrentView }) => {\n  const { currentUser, setAuthMode, setShowAuthModal } = useApp();\n\n  const handleCreateListing = () => {\n    if (!currentUser) {\n      setAuthMode('login');\n      setShowAuthModal(true);\n    } else {\n      setCurrentView('create-listing');\n    }\n  };\n\n  const handleMyAccountClick = () => {\n    if (!currentUser) {\n      setAuthMode('login');\n      setShowAuthModal(true);\n    } else {\n      setCurrentView('dashboard');\n    }\n  };\n\n  return (\n    <footer className=\"bg-gray-900 text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n          {/* Company Info */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <div>\n                <h3 className=\"text-xl font-bold\">PassionAuto2Roues</h3>\n              </div>\n            </div>\n            <p className=\"text-gray-400 mb-6\">\n              La marketplace de r√©f√©rence pour l'achat et la vente de v√©hicules d'occasion, accident√©s et les pi√®ces d√©tach√©es.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Liens rapides</h4>\n            <ul className=\"space-y-3\">\n              <li><button onClick={() => setCurrentView('listings')} className=\"text-gray-400 hover:text-white transition-colors\">Rechercher</button></li>\n              <li><button onClick={handleCreateListing} className=\"text-gray-400 hover:text-white transition-colors\">D√©poser une annonce</button></li>\n              <li><button onClick={handleMyAccountClick} className=\"text-gray-400 hover:text-white transition-colors\">Espace Pro</button></li>\n              <li><button onClick={handleMyAccountClick} className=\"text-gray-400 hover:text-white transition-colors\">Mon compte</button></li>\n            </ul>\n          </div>\n\n          {/* Support */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Support</h4>\n            <ul className=\"space-y-3\">\n              <li><button onClick={() => setCurrentView('help')} className=\"text-gray-400 hover:text-white transition-colors\">Centre d'aide</button></li>\n              <li><button onClick={() => setCurrentView('conseils')} className=\"text-gray-400 hover:text-white transition-colors\">Conseils</button></li>\n              <li><button onClick={() => setCurrentView('help')} className=\"text-gray-400 hover:text-white transition-colors\">Contact</button></li>\n              <li><button onClick={() => setCurrentView('help')} className=\"text-gray-400 hover:text-white transition-colors\">Signaler un probl√®me</button></li>\n              <li><button onClick={() => setCurrentView('safety')} className=\"text-gray-400 hover:text-white transition-colors\">Conseils s√©curit√©</button></li>\n            </ul>\n          </div>\n\n          {/* Legal */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">L√©gal</h4>\n            <ul className=\"space-y-3\">\n              <li><button onClick={() => setCurrentView('about')} className=\"text-gray-400 hover:text-white transition-colors\">√Ä propos</button></li>\n              <li><button onClick={() => setCurrentView('terms')} className=\"text-gray-400 hover:text-white transition-colors\">CGU</button></li>\n              <li><button onClick={() => setCurrentView('legal')} className=\"text-gray-400 hover:text-white transition-colors\">Mentions l√©gales</button></li>\n              <li><button onClick={() => setCurrentView('privacy')} className=\"text-gray-400 hover:text-white transition-colors\">Confidentialit√©</button></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-800 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-gray-400 mb-4 md:mb-0\">\n              ¬© 2025 PassionAuto2Roues.com. Tous droits r√©serv√©s. Design By Happy Agency\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};","size_bytes":4257},"components/client-components/Header.tsx":{"content":"import React, { useState } from 'react';\nimport { Search, Bell, Heart, MessageCircle, User, Menu, X, LogIn } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { AuthModal } from './auth/AuthModal';\nimport { UserMenu } from './auth/UserMenu';\nimport logoPath from '@assets/logo-transparent_1753108744744.png';\nimport accidentIcon from '@assets/accident_1753354197012.png';\n\ninterface HeaderProps {\n  currentView: string;\n  setCurrentView: (view: string) => void;\n  mobileMenuOpen: boolean;\n  setMobileMenuOpen: (open: boolean) => void;\n  setDashboardTab?: (tab: string) => void;\n  onSearch?: (query: string) => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ \n  currentView, \n  setCurrentView, \n  mobileMenuOpen, \n  setMobileMenuOpen,\n  setDashboardTab,\n  onSearch \n}) => {\n  const { setSearchFilters, setSelectedVehicle } = useApp();\n  const { user, dbUser, isAuthenticated, isLoading } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState('vehicles');\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [authMode, setAuthMode] = useState<'signin' | 'signup'>('signin');\n\n  const handleAuthClick = (mode: 'signin' | 'signup') => {\n    setAuthMode(mode);\n    setShowAuthModal(true);\n    setMobileMenuOpen(false);\n  };\n\n  const handleNavClick = (view: string) => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    setCurrentView(view);\n    setMobileMenuOpen(false);\n    setOpenDropdown(null); // Fermer le dropdown apr√®s clic\n  };\n\n  const handleDashboardNavClick = (tab: string) => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    if (setDashboardTab) {\n      setDashboardTab(tab);\n    }\n    setCurrentView('dashboard');\n    setMobileMenuOpen(false);\n  };\n\n  const handleCreateListingClick = () => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    if (isAuthenticated) {\n      setCurrentView('create-listing');\n    } else {\n      // Utilisateur non connect√© - afficher le modal de connexion\n      setAuthMode('signin');\n      setShowAuthModal(true);\n    }\n    setMobileMenuOpen(false);\n  };\n\n  const handleNavigate = (path: string) => {\n    setActiveCategory('');\n    setSelectedVehicle(null);\n    setCurrentView(path.replace('/', ''));\n    setMobileMenuOpen(false);\n    setOpenDropdown(null);\n  };\n\n  const handleSearch = () => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    if (searchTerm.trim() && onSearch) {\n      onSearch(searchTerm.trim());\n      setSearchTerm('');\n      setMobileMenuOpen(false);\n    } else if (searchTerm.trim()) {\n      // Fallback to old behavior if onSearch not provided\n      setSearchFilters({ category: searchTerm });\n      setCurrentView('listings');\n      setSearchTerm('');\n      setMobileMenuOpen(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  // Structure des cat√©gories et sous-cat√©gories\n  const categoryStructure = {\n    'voiture-utilitaire': {\n      label: 'Voitures - Utilitaires',\n      subcategories: [\n        { id: 'voiture', label: 'Voitures' },\n        { id: 'utilitaire', label: 'Utilitaires' },\n        { id: 'caravane', label: 'Caravanes' },\n        { id: 'remorque', label: 'Remorques' }\n      ]\n    },\n    'moto-scooter-quad': {\n      label: 'Motos, Scooters, Quads',\n      subcategories: [\n        { id: 'moto', label: 'Motos' },\n        { id: 'scooter', label: 'Scooters' },\n        { id: 'quad', label: 'Quads' }\n      ]\n    },\n    'nautisme-sport-aerien': {\n      label: 'Nautisme, Sport et Plein air',\n      subcategories: [\n        { id: 'bateau', label: 'Bateaux' },\n        { id: 'jetski', label: 'Jet-skis' },\n        { id: 'aerien', label: 'A√©rien' }\n      ]\n    },\n    'services': {\n      label: 'Services',\n      subcategories: [\n        { id: 'reparation', label: 'R√©paration' },\n        { id: 'remorquage', label: 'Remorquage' },\n        { id: 'entretien', label: 'Entretien' },\n        { id: 'autre-service', label: 'Autres services' }\n      ]\n    },\n    'pieces': {\n      label: 'Pi√®ces d√©tach√©es',\n      subcategories: [\n        { id: 'piece-voiture', label: 'Pi√®ces voiture' },\n        { id: 'piece-moto', label: 'Pi√®ces moto' },\n        { id: 'autre-piece', label: 'Autres pi√®ces' }\n      ]\n    }\n  };\n\n  const handleSubcategoryClick = (subcategoryId: string) => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    setSearchFilters({ category: subcategoryId });\n    setCurrentView('listings');\n    setMobileMenuOpen(false);\n    setOpenDropdown(null); // Fermer le dropdown apr√®s clic\n  };\n\n  const handleDamagedVehiclesClick = () => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    setSearchFilters({ condition: 'damaged' });\n    setCurrentView('listings');\n    setMobileMenuOpen(false);\n    setOpenDropdown(null); // Fermer le dropdown apr√®s clic\n  };\n\n  const handleCategoryClick = (category: string) => {\n    setActiveCategory(category);\n    setMobileMenuOpen(false);\n    \n    // Pour les cat√©gories principales, on va vers la premi√®re sous-cat√©gorie\n    const categoryData = categoryStructure[category as keyof typeof categoryStructure];\n    if (categoryData && categoryData.subcategories.length > 0) {\n      handleSubcategoryClick(categoryData.subcategories[0].id);\n    }\n  };\n\n  const categories = [\n    { id: 'voiture-utilitaire', label: 'Voitures - Utilitaires' },\n    { id: 'moto-scooter-quad', label: 'Motos, Scooters, Quads' },\n    { id: 'nautisme-sport-aerien', label: 'Nautisme, Sport et Plein air' },\n    { id: 'services', label: 'Services' },\n    { id: 'pieces', label: 'Pi√®ces d√©tach√©es' },\n  ];\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      {/* Main Header */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div \n            className=\"flex items-center cursor-pointer relative z-[105]\"\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              handleNavClick('home');\n            }}\n          >\n            <img \n              src={logoPath} \n              alt=\"Passion Auto2Roues\" \n              className=\"h-10 w-auto\"\n            />\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-6 flex-1 max-w-4xl mx-8\">\n            {/* Deposit Button */}\n            <button\n              onClick={handleCreateListingClick}\n              className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-2.5 rounded-xl font-medium transition-all duration-200 shadow-sm hover:shadow-md whitespace-nowrap\"\n            >\n              D√©poser une annonce\n            </button>\n\n            {/* Search Bar */}\n            <div className=\"flex-1 max-w-md\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Rechercher sur PassionAuto2Roues.com ... \"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  className=\"w-full pl-4 pr-12 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all text-gray-900 placeholder-gray-500\"\n                />\n                <button \n                  onClick={handleSearch}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n                >\n                  <Search className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Icons */}\n          <div className=\"hidden lg:flex items-center space-x-6\">\n            {isAuthenticated ? (\n              <div className=\"flex items-center space-x-6\">\n                {/* Mes recherches */}\n                <button \n                  onClick={() => handleDashboardNavClick('searches')}\n                  className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group\"\n                >\n                  <Bell className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                  <span className=\"text-xs\">Mes recherches</span>\n                </button>\n\n                {/* Favoris */}\n                <button \n                  onClick={() => handleDashboardNavClick('favorites')}\n                  className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group\"\n                >\n                  <Heart className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                  <span className=\"text-xs\">Favoris</span>\n                </button>\n\n                {/* Messages */}\n                <button \n                  onClick={() => handleDashboardNavClick('messages')}\n                  className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group relative\"\n                >\n                  <MessageCircle className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                  <span className=\"text-xs\">Messages</span>\n                  <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-4 w-4 flex items-center justify-center\">\n                    3\n                  </span>\n                </button>\n\n                {/* User Menu */}\n                <UserMenu onNavigate={handleNavigate} onDashboardNavigate={handleDashboardNavClick} />\n              </div>\n            ) : (\n              <button\n                onClick={() => handleAuthClick('login')}\n                className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group\"\n              >\n                <User className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                <span className=\"text-xs\">Se connecter</span>\n              </button>\n            )}\n          </div>\n\n          {/* Mobile menu button */}\n          <button\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"lg:hidden p-2 rounded-xl text-gray-600 hover:text-primary-bolt-500 hover:bg-gray-50 transition-all duration-200\"\n          >\n            {mobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </button>\n        </div>\n      </div>\n\n      {/* Categories Menu */}\n      <div className=\"hidden lg:block border-t border-gray-100 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center space-x-8 py-3\">\n            {categories.map((category, index) => (\n              <div key={category.id} className=\"flex items-center\">\n                {/* Cat√©gories principales avec dropdown */}\n                <div className=\"relative\">\n                  <div\n                    className={`text-sm transition-all duration-200 relative py-2 cursor-pointer ${\n                      activeCategory === category.id\n                        ? 'text-primary-bolt-500'\n                        : 'text-gray-700 hover:text-primary-bolt-500'\n                    }`}\n                    onMouseEnter={() => setOpenDropdown(category.id)}\n                    onMouseLeave={() => setOpenDropdown(null)}\n                  >\n                    {category.label}\n                    {activeCategory === category.id && (\n                      <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary-bolt-500 rounded-full\"></div>\n                    )}\n                  </div>\n                  \n                  {/* Dropdown Menu */}\n                  {categoryStructure[category.id as keyof typeof categoryStructure] && (\n                    <div \n                      className={`absolute left-0 top-full mt-2 w-56 bg-white rounded-xl shadow-lg border border-gray-200 transition-all duration-200 z-[110] ${\n                        openDropdown === category.id ? 'opacity-100 visible' : 'opacity-0 invisible'\n                      }`}\n                      onMouseEnter={() => setOpenDropdown(category.id)}\n                      onMouseLeave={() => setOpenDropdown(null)}\n                    >\n                      <div className=\"py-2\">\n                        {categoryStructure[category.id as keyof typeof categoryStructure].subcategories.map((subcategory) => (\n                          <button\n                            key={subcategory.id}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              handleSubcategoryClick(subcategory.id);\n                            }}\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-primary-bolt-50 hover:text-primary-bolt-600 transition-colors\"\n                          >\n                            {subcategory.label}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                {index < categories.length - 1 && (\n                  <span className=\"text-gray-300 text-sm ml-8\">‚Ä¢</span>\n                )}\n              </div>\n            ))}\n            \n            {/* S√©parateur avant Accident√©s */}\n            <span className=\"text-gray-300 text-sm\">‚Ä¢</span>\n            \n            {/* Bouton V√©hicules Accident√©s */}\n            <button\n              onClick={handleDamagedVehiclesClick}\n              className=\"text-gray-800 font-bold text-sm hover:text-gray-900 transition-colors duration-200\"\n            >\n              Accident√©s\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation */}\n      {mobileMenuOpen && (\n        <div className=\"lg:hidden bg-white border-t border-gray-200 shadow-lg\">\n          <div className=\"px-4 py-4 space-y-4\">\n            {/* Mobile Search */}\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Rechercher sur Passion Auto2Roues\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                onKeyPress={handleKeyPress}\n                className=\"w-full pl-4 pr-12 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n              />\n              <button \n                onClick={handleSearch}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n              >\n                <Search className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            {/* Mobile Deposit Button */}\n            <button\n              onClick={handleCreateListingClick}\n              className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-3 px-4 rounded-xl font-medium transition-all duration-200\"\n            >\n              D√©poser une annonce\n            </button>\n\n            {/* Mobile Categories */}\n            <div className=\"border-t border-gray-200 pt-4\">\n              <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Cat√©gories</h3>\n              <div className=\"grid grid-cols-1 gap-3\">\n                {categories.map((category) => (\n                  <div key={category.id}>\n                    {category.id === 'conseils' ? (\n                      // Conseils reste un simple bouton\n                      <button\n                        onClick={() => handleCategoryClick(category.id)}\n                        className={`w-full text-left py-2 px-3 rounded-xl text-sm transition-all duration-200 ${\n                          activeCategory === category.id\n                            ? 'bg-primary-bolt-50 text-primary-bolt-500'\n                            : 'text-gray-700 hover:bg-gray-50'\n                        }`}\n                      >\n                        {category.label}\n                      </button>\n                    ) : (\n                      // Cat√©gories avec sous-cat√©gories\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900 py-2 px-3\">\n                          {category.label}\n                        </div>\n                        <div className=\"ml-4 space-y-1\">\n                          {categoryStructure[category.id as keyof typeof categoryStructure]?.subcategories.map((subcategory) => (\n                            <button\n                              key={subcategory.id}\n                              onClick={() => handleSubcategoryClick(subcategory.id)}\n                              className=\"block w-full text-left py-2 px-3 rounded-lg text-sm text-gray-600 hover:bg-primary-bolt-50 hover:text-primary-bolt-600 transition-colors\"\n                            >\n                              {subcategory.label}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Mobile Bouton V√©hicules Accident√©s */}\n            <div className=\"border-t border-gray-200 pt-4\">\n              <button\n                onClick={handleDamagedVehiclesClick}\n                className=\"w-full bg-black hover:bg-gray-800 text-orange-500 hover:text-orange-400 px-4 py-3 rounded-xl text-sm font-medium transition-all duration-200\"\n              >\n                Accident√©s\n              </button>\n            </div>\n\n            {/* Mobile User Actions */}\n            <div className=\"border-t border-gray-200 pt-4 space-y-2\">\n              {isAuthenticated ? (\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-xl\">\n                    <div className=\"w-8 h-8 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center\">\n                      <span className=\"text-white font-semibold text-sm\">\n                        {user?.user_metadata?.name?.charAt(0) || user?.email?.charAt(0) || 'U'}\n                      </span>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{user?.user_metadata?.name || 'Utilisateur'}</p>\n                      <p className=\"text-sm text-gray-500\">Utilisateur</p>\n                    </div>\n                  </div>\n                  \n                  <button\n                    onClick={() => handleNavigate('profile')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors\"\n                  >\n                    Mon compte\n                  </button>\n                  \n                  <button\n                    onClick={() => handleNavigate('my-listings')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors\"\n                  >\n                    Mes annonces\n                  </button>\n                  \n                  <button\n                    onClick={() => handleDashboardNavClick('messages')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors flex items-center justify-between\"\n                  >\n                    <span>Messages</span>\n                    <span className=\"bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                      3\n                    </span>\n                  </button>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  <button\n                    onClick={() => handleAuthClick('signin')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors\"\n                  >\n                    Se connecter\n                  </button>\n                  <button\n                    onClick={() => handleAuthClick('signup')}\n                    className=\"w-full text-left py-3 px-4 bg-primary-bolt-50 text-primary-bolt-500 hover:bg-primary-bolt-100 rounded-xl transition-colors\"\n                  >\n                    S'inscrire\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Auth Modal */}\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        defaultTab={authMode}\n      />\n    </header>\n  );\n};","size_bytes":21758},"components/client-components/Hero.tsx":{"content":"import React, { useState, useEffect, useMemo } from 'react';\nimport { Search, MapPin, Filter, Car, Bike, Truck, Wrench, Star, Crown, Eye, Heart, ChevronRight, Smartphone, Store, Users, TrendingUp, Plus, MoreHorizontal, ChevronLeft } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { CategorySection } from './CategorySection';\nimport voituresImage from '@assets/voiture-2_1752056602701.png';\nimport motosImage from '@assets/motos-scooters_1752057126122.png';\nimport entretienImage from '@assets/services-entretien_1752056958533.png';\nimport piecesImage from '@assets/pieces-detachees_1752056832597.png';\nimport bateauImage from '@assets/bateau_1752249742336.png';\nimport appMobileImage from '@assets/mockups-mobile_1752062665109.webp';\nimport appStoreIcon from '@assets/AppStore_1752058292770.png';\nimport googlePlayIcon from '@assets/googlePlay_1752058332269.png';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface HeroProps {\n  setCurrentView: (view: string) => void;\n}\n\nexport const Hero: React.FC<HeroProps> = ({ setCurrentView }) => {\n  const { setSearchFilters, currentUser, setSelectedVehicle, setShowAuthModal, setAuthMode, vehicles } = useApp();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [currentAdIndex, setCurrentAdIndex] = useState(0);\n\n  const handleCategoryClick = (category: string) => {\n    setSearchFilters({ category });\n    setCurrentView('listings');\n  };\n\n  const handleViewAllCategory = (category: string) => {\n    setSearchFilters({ category });\n    setCurrentView('listings');\n  };\n\n  const handleViewDamagedVehicles = () => {\n    setSearchFilters({ condition: 'damaged' });\n    setCurrentView('listings');\n  };\n\n  const handleViewSearchListings = () => {\n    setSearchFilters({ listing_type: 'search' });\n    setCurrentView('listings');\n  };\n\n  const handleVehicleClick = (vehicle: any) => {\n    setSelectedVehicle(vehicle);\n  };\n\n  const handleCreateListing = () => {\n    if (!currentUser) {\n      setAuthMode('login');\n      setShowAuthModal(true);\n    } else {\n      setCurrentView('create-listing');\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  // Memoized category mapping to avoid recreating on each render\n  const categoryMap = useMemo(() => ({\n    'voiture-utilitaire': ['voiture', 'utilitaire', 'caravane', 'remorque'],\n    'moto-scooter-quad': ['moto', 'scooter', 'quad'],\n    'nautisme-sport-aerien': ['bateau', 'jetski', 'aerien'],\n    'services': ['reparation', 'remorquage', 'entretien', 'autre-service'],\n    'pieces': ['piece-voiture', 'piece-moto', 'autre-piece']\n  }), []);\n\n  // Get vehicles by category (using main categories) - memoized with limit\n  const getVehiclesByCategory = useMemo(() => {\n    return (mainCategory: string) => {\n      const subcategories = categoryMap[mainCategory as keyof typeof categoryMap] || [];\n      return vehicles\n        .filter(vehicle => subcategories.includes(vehicle.category))\n        .slice(0, 6); // Limit to 6 per category for faster loading\n    };\n  }, [categoryMap, vehicles]);\n\n  const mainCategories = [\n    {\n      id: 'voiture-utilitaire',\n      name: 'Voitures - Utilitaires',\n      description: 'Berlines, SUV, citadines, sportives, Fourgons, camions, v√©hicules pro',\n      image: voituresImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n    {\n      id: 'moto-scooter-quad',\n      name: 'Motos, Scooters, Quads',\n      description: 'Tous types de motos, scooters et quads',\n      image: motosImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n    {\n      id: 'nautisme-sport-aerien',\n      name: 'Nautisme, Sport et Plein air',\n      description: 'Bateaux, jetskis et √©quipements de sport',\n      image: bateauImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n    {\n      id: 'pieces',\n      name: 'Pi√®ces d√©tach√©es',\n      description: 'Pi√®ces auto, moto et accessoires',\n      image: piecesImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n  ];\n\n  // Memoized vehicle listings with reduced counts for faster loading - NOW USING SUPABASE DATA\n  const latestCarListings = useMemo(() => {\n    return vehicles\n      .filter(vehicle => ['voiture', 'utilitaire', 'caravane', 'remorque'].includes(vehicle.category) && vehicle.condition === 'used')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 6); // Reduced from 8 to 6 for faster loading\n  }, [vehicles]);\n\n  const latestMotorcycleListings = useMemo(() => {\n    return vehicles\n      .filter(vehicle => ['moto', 'scooter', 'quad'].includes(vehicle.category) && vehicle.condition === 'used')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 6); // Reduced from 8 to 6 for faster loading\n  }, [vehicles]);\n\n  const latestDamagedVehicles = useMemo(() => {\n    return vehicles\n      .filter(vehicle => vehicle.condition === 'damaged')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Reduced from 8 to 4 for faster loading\n  }, [vehicles]);\n\n  /*\n  const latestSearchRequests = useMemo(() => {\n    return vehicles\n      .filter(vehicle => vehicle.title.startsWith('RECHERCHE') || vehicle.title.includes('RECHERCHE'))\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Reduced from 8 to 4 for faster loading\n  }, [vehicles]);\n  */\n\n  const latestSearchRequests = useMemo(() => {\n    return vehicles\n      .filter(vehicle => vehicle.listing_type === 'search' || vehicle.listingType === 'search')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Toujours limit√© √† 4\n  }, [vehicles]);\n\n  const latestNautismeListings = useMemo(() => {\n    return vehicles\n      .filter(vehicle => ['bateau', 'jetski', 'aerien'].includes(vehicle.category) && vehicle.condition === 'used')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Reduced from 8 to 4 for faster loading\n  }, [vehicles]);\n\n  // Category sections configuration - memoized\n  const categorySections = useMemo(() => [\n    {\n      id: 'voiture-utilitaire',\n      title: 'Voitures et Utilitaires d\\'occasion',\n      vehicles: getVehiclesByCategory('voiture-utilitaire')\n    },\n    {\n      id: 'moto-scooter-quad',\n      title: 'Motos, Scooters et Quads',\n      vehicles: latestMotorcycleListings\n    },\n    {\n      id: 'nautisme-sport-aerien',\n      title: 'Nautisme, Sport et Plein air',\n      vehicles: latestNautismeListings\n    },\n    {\n      id: 'pieces',\n      title: 'Pi√®ces d√©tach√©es',\n      vehicles: getVehiclesByCategory('pieces')\n    }\n  ], [getVehiclesByCategory, latestMotorcycleListings, latestNautismeListings]);\n\n  // Advertising banners data\n  const advertisingBanners = [\n    {\n      id: 1,\n      type: 'garage',\n      title: 'GARAGE MARTIN',\n      subtitle: 'Depuis 1985 ‚Ä¢ Paris 11√®me',\n      mainOffer: '29‚Ç¨/mois',\n      offerTitle: 'FORFAIT VIDANGE',\n      features: [\n        '‚úì Huile moteur premium',\n        '‚úì Filtre √† huile neuf',\n        '‚úì Contr√¥le 20 points',\n        '‚úì Sans engagement'\n      ],\n      phone: '01 43 55 67 89',\n      address: '123 Avenue de la R√©publique, 75011 Paris ‚Ä¢ M√©tro R√©publique',\n      rating: '4.9/5 (2,847 avis)',\n      ctaText: 'üìû R√âSERVER MAINTENANT',\n      promoText: 'PROMO LIMIT√âE',\n      tickerItems: [\n        'SP√âCIALISTE TOUTES MARQUES',\n        '‚ö° INTERVENTION RAPIDE',\n        'üõ°Ô∏è GARANTIE PI√àCES & MAIN D\\'≈íUVRE',\n        'üí≥ PAIEMENT EN 3X SANS FRAIS',\n        'üèÜ GARAGE AGR√â√â PR√âFECTURE'\n      ],\n      gradient: 'from-red-600 via-red-700 to-red-800',\n      icon: Wrench,\n      iconColor: 'text-red-600'\n    },\n    {\n      id: 2,\n      type: 'tire',\n      title: 'PNEUS EXPRESS',\n      subtitle: 'Expert pneumatiques ‚Ä¢ Toute la France',\n      mainOffer: '2+2',\n      offerTitle: 'PNEUS OFFERTS',\n      offerSubtitle: '2 achet√©s = 2 offerts',\n      features: [\n        '‚úì Montage gratuit inclus',\n        '‚úì √âquilibrage offert',\n        '‚úì Garantie 2 ans',\n        '‚úì Livraison 24h'\n      ],\n      phone: '0800 123 456',\n      address: 'Plus de 500 centres en France ‚Ä¢ Trouvez le v√¥tre',\n      rating: '4.8/5 (15,234 avis)',\n      ctaText: 'üîç TROUVER MON CENTRE',\n      promoText: 'OFFRE LIMIT√âE',\n      tickerItems: [\n        'üèÅ TOUTES MARQUES DISPONIBLES',\n        '‚ö° MONTAGE EN 30 MINUTES',\n        'üõ°Ô∏è GARANTIE CONSTRUCTEUR',\n        'üí≥ PAIEMENT 4X SANS FRAIS',\n        'üöö LIVRAISON GRATUITE',\n        'üèÜ N¬∞1 DU PNEU EN FRANCE'\n      ],\n      gradient: 'from-slate-600 via-slate-700 to-slate-800',\n      icon: Car,\n      iconColor: 'text-slate-600'\n    }\n  ];\n\n  // Auto-rotate carousel every 8 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentAdIndex((prev) => (prev + 1) % advertisingBanners.length);\n    }, 8000);\n\n    return () => clearInterval(interval);\n  }, [advertisingBanners.length]);\n\n  const nextAd = () => {\n    setCurrentAdIndex((prev) => (prev + 1) % advertisingBanners.length);\n  };\n\n  const prevAd = () => {\n    setCurrentAdIndex((prev) => (prev - 1 + advertisingBanners.length) % advertisingBanners.length);\n  };\n\n  const currentBanner = advertisingBanners[currentAdIndex];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Hero Section - Now Boxed */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-3xl p-8 lg:p-12 relative overflow-hidden shadow-2xl\">\n            {/* Background decorative elements */}\n            <div className=\"absolute inset-0 bg-black/10\"></div>\n            <div className=\"absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32\"></div>\n            <div className=\"absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full translate-y-24 -translate-x-24\"></div>\n            \n            <div className=\"relative z-10\">\n              <div className=\"text-center text-white mb-12\">\n                <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\">\n                  Vendre avec Passion Auto2Roues\n                </h1>\n                <p className=\"text-xl mb-8 max-w-3xl mx-auto\">\n                  Publiez votre annonce gratuitement et vendez rapidement gr√¢ce √† notre audience de plus de 45,000 acheteurs qualifi√©s.\n                </p>\n                \n                <button\n                  onClick={handleCreateListing}\n                  className=\"bg-white text-primary-bolt-500 hover:bg-gray-50 px-8 py-4 rounded-xl font-semibold text-lg shadow-lg hover:shadow-xl transition-all duration-200 flex items-center space-x-2 mx-auto mb-12\"\n                >\n                  <Plus className=\"h-5 w-5\" />\n                  <span>D√©poser une annonce</span>\n                </button>\n                \n                {/* Three feature boxes */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n                  <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/20\">\n                    <div className=\"text-4xl mb-4\">üöÄ</div>\n                    <h3 className=\"text-lg font-bold mb-2\">Publication gratuite</h3>\n                    <p className=\"text-sm text-cyan-100\">Publiez vos annonces sans frais et atteignez des milliers d'acheteurs</p>\n                  </div>\n                  <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/20\">\n                    <div className=\"text-4xl mb-4\">‚ö°</div>\n                    <h3 className=\"text-lg font-bold mb-2\">Vente rapide</h3>\n                    <p className=\"text-sm text-cyan-100\">85% de nos annonces trouvent un acheteur en moins de 30 jours</p>\n                  </div>\n                  <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/20\">\n                    <div className=\"text-4xl mb-4\">üîí</div>\n                    <h3 className=\"text-lg font-bold mb-2\">S√©curis√©</h3>\n                    <p className=\"text-sm text-cyan-100\">Transactions s√©curis√©es et support client d√©di√©</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* V√©hicules Section - Redesigned to match the image */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {mainCategories.map((category) => (\n              <button\n                key={category.id}\n                onClick={() => handleCategoryClick(category.id)}\n                className=\"group bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 overflow-hidden p-8 text-center hover:scale-105 transform relative\"\n              >\n                {/* Category Image - White background without shadow */}\n                <div className=\"w-24 h-24 mx-auto mb-6 flex items-center justify-center relative bg-white rounded-2xl\">\n                  <img \n                    src={category.image} \n                    alt={category.name}\n                    className=\"w-16 h-16 object-contain group-hover:scale-110 transition-transform duration-300\"\n                  />\n                </div>\n                \n                {/* Category Title */}\n                <h3 className=\"text-xl font-bold text-gray-900 mb-3 group-hover:text-primary-bolt-500 transition-colors\">\n                  {category.name}\n                </h3>\n                \n                {/* Category Description */}\n                <p className=\"text-sm text-gray-600 leading-relaxed\">\n                  {category.description}\n                </p>\n                \n                {/* Hover Effect Border */}\n                <div className=\"absolute inset-0 border-2 border-transparent group-hover:border-primary-bolt-500 rounded-2xl transition-all duration-300\"></div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Advertising Carousel */}\n      <section className=\"py-8 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"relative\">\n            {/* Carousel Container */}\n            <div className={`relative bg-gradient-to-r ${currentBanner.gradient} rounded-2xl overflow-hidden shadow-2xl transition-all duration-500`}>\n              {/* Animated background elements */}\n              <div className=\"absolute inset-0 bg-black/20\"></div>\n              <div className=\"absolute top-0 left-0 w-full h-full\">\n                <div className=\"absolute top-4 left-4 w-8 h-8 bg-yellow-400 rounded-full animate-pulse\"></div>\n                <div className=\"absolute top-8 right-8 w-6 h-6 bg-white/30 rounded-full animate-bounce\"></div>\n                <div className=\"absolute bottom-6 left-12 w-4 h-4 bg-yellow-300 rounded-full animate-ping\"></div>\n                <div className=\"absolute bottom-4 right-16 w-5 h-5 bg-white/40 rounded-full animate-pulse delay-300\"></div>\n              </div>\n              \n              {/* Sliding banner */}\n              <div className=\"absolute top-0 left-0 w-full h-2 bg-gradient-to-r from-yellow-400 via-white to-yellow-400 animate-pulse\"></div>\n              \n              <div className=\"relative z-10 p-8 lg:p-12\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 items-center\">\n                  {/* Logo and Brand */}\n                  <div className=\"text-center lg:text-left\">\n                    <div className=\"inline-flex items-center space-x-3 mb-4\">\n                      <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center shadow-lg\">\n                        <currentBanner.icon className={`h-8 w-8 ${currentBanner.iconColor}`} />\n                      </div>\n                      <div className=\"text-white\">\n                        <h3 className=\"text-2xl font-bold\">{currentBanner.title}</h3>\n                        <p className={`${currentBanner.type === 'garage' ? 'text-red-200' : 'text-slate-200'} text-sm`}>\n                          {currentBanner.subtitle}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-center lg:justify-start space-x-1 text-yellow-400\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star key={i} className=\"h-4 w-4 fill-current\" />\n                      ))}\n                      <span className=\"text-white text-sm ml-2\">{currentBanner.rating}</span>\n                    </div>\n                  </div>\n\n                  {/* Main Offer */}\n                  <div className=\"text-center\">\n                    <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 relative\">\n                      {/* Pulsing effect */}\n                      <div className=\"absolute inset-0 bg-yellow-400/20 rounded-2xl animate-pulse\"></div>\n                      \n                      <div className=\"relative z-10\">\n                        <div className=\"text-yellow-400 text-sm font-bold mb-2 uppercase tracking-wide\">\n                          üî• Offre Sp√©ciale üî•\n                        </div>\n                        \n                        {currentBanner.type === 'garage' ? (\n                          <div>\n                            <h2 className=\"text-4xl lg:text-5xl font-black text-white mb-2\">\n                              {currentBanner.mainOffer}<span className=\"text-xl\">/mois</span>\n                            </h2>\n                            <div className=\"text-xl font-bold text-yellow-300 mb-3\">\n                              {currentBanner.offerTitle}\n                            </div>\n                          </div>\n                        ) : (\n                          <div>\n                            <h2 className=\"text-4xl lg:text-5xl font-black text-white mb-2\">\n                              {currentBanner.mainOffer}\n                            </h2>\n                            <div className=\"text-xl font-bold text-yellow-300 mb-1\">\n                              {currentBanner.offerTitle}\n                            </div>\n                            <div className=\"text-lg font-semibold text-white mb-3\">\n                              {currentBanner.offerSubtitle}\n                            </div>\n                          </div>\n                        )}\n                        \n                        <div className=\"text-white text-sm\">\n                          {currentBanner.features.map((feature, index) => (\n                            <div key={index}>{feature}</div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Call to Action */}\n                  <div className=\"text-center lg:text-right\">\n                    <div className=\"space-y-4\">\n                      <button className=\"w-full lg:w-auto bg-yellow-400 hover:bg-yellow-300 text-gray-800 font-black py-4 px-8 rounded-xl text-lg shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105 animate-bounce\">\n                        {currentBanner.ctaText}\n                      </button>\n                      \n                      <div className=\"text-white\">\n                        <div className=\"text-2xl font-bold\">{currentBanner.phone}</div>\n                        <div className={`${currentBanner.type === 'garage' ? 'text-red-200' : 'text-slate-200'} text-sm`}>\n                          {currentBanner.type === 'garage' ? 'Ouvert 7j/7 ‚Ä¢ 8h-19h' : 'Service client 24h/7j'}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-3 border border-white/20\">\n                        <div className=\"text-yellow-300 text-xs font-bold mb-1\">{currentBanner.promoText}</div>\n                        <div className=\"text-white text-sm\">\n                          üìç {currentBanner.address}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Bottom ticker */}\n                <div className=\"mt-8 pt-6 border-t border-white/20\">\n                  <div className=\"overflow-hidden\">\n                    <div className=\"animate-marquee whitespace-nowrap text-white text-sm\">\n                      {currentBanner.tickerItems.map((item, index) => (\n                        <span key={index} className=\"mx-8\">{item}</span>\n                      ))}\n                      {/* Duplicate for seamless loop */}\n                      {currentBanner.tickerItems.map((item, index) => (\n                        <span key={`dup-${index}`} className=\"mx-8\">{item}</span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Carousel Navigation */}\n            <button\n              onClick={prevAd}\n              className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-3 rounded-full transition-all duration-200 z-20\"\n            >\n              <ChevronLeft className=\"h-6 w-6\" />\n            </button>\n            \n            <button\n              onClick={nextAd}\n              className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-3 rounded-full transition-all duration-200 z-20\"\n            >\n              <ChevronRight className=\"h-6 w-6\" />\n            </button>\n\n            {/* Carousel Indicators */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20\">\n              {advertisingBanners.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentAdIndex(index)}\n                  className={`w-3 h-3 rounded-full transition-all duration-200 ${\n                    index === currentAdIndex \n                      ? 'bg-white' \n                      : 'bg-white/50 hover:bg-white/70'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Category Sections */}\n      <div className=\"bg-gray-50\">\n        {categorySections.map((section) => (\n          <CategorySection\n            key={section.id}\n            title={section.title}\n            vehicles={section.vehicles}\n            onViewAll={() => handleViewAllCategory(section.id)}\n            onVehicleClick={handleVehicleClick}\n          />\n        ))}\n      </div>\n\n      {/* Professional Space CTA - Now Boxed */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-3xl p-8 lg:p-12 relative overflow-hidden shadow-2xl\">\n            {/* Background decorative elements */}\n            <div className=\"absolute inset-0 bg-black/10\"></div>\n            <div className=\"absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32\"></div>\n            <div className=\"absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full translate-y-24 -translate-x-24\"></div>\n            \n            <div className=\"relative z-10\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center text-white\">\n                <div>\n                  <div className=\"inline-flex items-center space-x-2 bg-white/20 backdrop-blur-sm rounded-full px-4 py-2 mb-6\">\n                    <Store className=\"h-5 w-5\" />\n                    <span className=\"font-semibold\">Espace Professionnel</span>\n                  </div>\n                  <h2 className=\"text-4xl lg:text-5xl font-bold mb-6 leading-tight\">\n                    D√©veloppez votre activit√© avec Passion Auto2Roues\n                  </h2>\n                  <p className=\"text-xl mb-8 leading-relaxed\">\n                    Rejoignez plus de 2,500 professionnels qui font confiance √† notre plateforme \n                    pour d√©velopper leur business automobile.\n                  </p>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-white/20 p-2 rounded-xl\">\n                        <TrendingUp className=\"h-6 w-6\" />\n                      </div>\n                      <div>\n                        <div className=\"font-bold text-lg\">Visibilit√© maximale</div>\n                        <div className=\"text-cyan-200 text-sm\">Annonces illimit√©es</div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-white/20 p-2 rounded-xl\">\n                        <Users className=\"h-6 w-6\" />\n                      </div>\n                      <div>\n                        <div className=\"font-bold text-lg\">45,000+ clients</div>\n                        <div className=\"text-cyan-200 text-sm\">Audience qualifi√©e</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <button className=\"bg-white text-primary-bolt-500 hover:bg-gray-50 px-8 py-4 rounded-xl font-bold text-lg shadow-lg hover:shadow-xl transition-all duration-200\">\n                    Ouvrir ma boutique pro\n                  </button>\n                </div>\n\n                <div className=\"relative\">\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20\">\n                    <h3 className=\"text-2xl font-bold mb-6\">Avantages Pro</h3>\n                    <ul className=\"space-y-4 text-primary-bolt-100\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Annonces illimit√©es et mises en avant</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Statistiques d√©taill√©es et analytics</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Badge \"Professionnel v√©rifi√©\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Support client prioritaire</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Outils de gestion avanc√©s</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Latest Damaged Vehicles Section */}\n      <div className=\"bg-gray-50\">\n        <CategorySection\n          key=\"damaged\"\n          title=\"V√©hicules accident√©s\"\n          vehicles={latestDamagedVehicles}\n          onViewAll={handleViewDamagedVehicles}\n          onVehicleClick={handleVehicleClick}\n        />\n      </div>\n\n      {/* Latest Search Requests Section */}\n      <div className=\"bg-gray-50\">\n        <CategorySection\n          key=\"latest-searches\"\n          title=\"Annonces de recherches\"\n          vehicles={latestSearchRequests}\n          onViewAll={handleViewSearchListings}\n          onVehicleClick={handleVehicleClick}\n        />\n      </div>\n\n      {/* Mobile App Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <div className=\"inline-flex items-center space-x-2 bg-green-100 rounded-full px-4 py-2 mb-6\">\n                <Smartphone className=\"h-5 w-5 text-green-700\" />\n                <span className=\"font-semibold text-green-700\">Disponible maintenant</span>\n              </div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 mb-6\">\n                L'application mobile Passion Auto2Roues\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Achetez et vendez vos v√©hicules directement depuis votre smartphone. \n                T√©l√©chargez l'application d√®s maintenant !\n              </p>\n\n              {/* App Store Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <button className=\"bg-black text-white px-6 py-3 rounded-xl flex items-center space-x-3 hover:bg-gray-800 transition-colors\">\n                  <img src={appStoreIcon} alt=\"App Store\" className=\"w-6 h-6\" />\n                  <div className=\"text-left\">\n                    <div className=\"text-xs\">T√©l√©charger sur</div>\n                    <div className=\"text-lg font-semibold\">App Store</div>\n                  </div>\n                </button>\n                \n                <button className=\"bg-black text-white px-6 py-3 rounded-xl flex items-center space-x-3 hover:bg-gray-800 transition-colors\">\n                  <img src={googlePlayIcon} alt=\"Google Play\" className=\"w-6 h-6\" />\n                  <div className=\"text-left\">\n                    <div className=\"text-xs\">Disponible sur</div>\n                    <div className=\"text-lg font-semibold\">Google Play</div>\n                  </div>\n                </button>\n              </div>\n            </div>\n\n            {/* Mobile App Image */}\n            <div className=\"text-center\">\n              <div className=\"relative mx-auto max-w-lg\">\n                <img \n                  src={appMobileImage} \n                  alt=\"Application mobile Passion Auto2Roues\"\n                  className=\"w-full h-auto object-contain mx-auto\"\n                  style={{ backgroundColor: 'transparent' }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n    </div>\n  );\n};","size_bytes":31778},"components/client-components/OptimizedImage.tsx":{"content":"import React, { useState, useCallback } from 'react';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  className?: string;\n  fallbackIcon?: React.ReactNode;\n  loading?: 'lazy' | 'eager';\n}\n\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  className = '',\n  fallbackIcon,\n  loading = 'lazy'\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleLoad = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n\n  const handleError = useCallback(() => {\n    setHasError(true);\n    setIsLoaded(true);\n  }, []);\n\n  // If there's an error or no src, show fallback\n  if (hasError || !src) {\n    return (\n      <div className={`${className} bg-gray-200 flex items-center justify-center`}>\n        {fallbackIcon || (\n          <div className=\"text-gray-400 text-xs\">Image non disponible</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative w-full h-full\">\n      {/* Loading placeholder */}\n      {!isLoaded && (\n        <div className={`absolute inset-0 bg-gray-200 animate-pulse flex items-center justify-center ${className}`}>\n          <div className=\"w-8 h-8 rounded-full bg-gray-300 animate-pulse\"></div>\n        </div>\n      )}\n      \n      {/* Main image */}\n      <img\n        src={src}\n        alt={alt}\n        loading={loading}\n        onLoad={handleLoad}\n        onError={handleError}\n        className={`${className} transition-opacity duration-300 ${\n          isLoaded ? 'opacity-100' : 'opacity-0'\n        }`}\n        style={{\n          // Add DNS prefetch for external domains\n          visibility: isLoaded ? 'visible' : 'hidden'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default OptimizedImage;","size_bytes":1752},"components/client-components/PremiumPackSelector.tsx":{"content":"import React from 'react';\nimport { Check, Crown, Zap, Star } from 'lucide-react';\nimport { PREMIUM_PACKS, PremiumPack } from '@/types/premium';\n\ninterface PremiumPackSelectorProps {\n  selectedPack: string;\n  onSelectPack: (packId: string) => void;\n}\n\nexport const PremiumPackSelector: React.FC<PremiumPackSelectorProps> = ({\n  selectedPack,\n  onSelectPack,\n}) => {\n  const getPackIcon = (packId: string) => {\n    switch (packId) {\n      case 'daily':\n        return <Zap className=\"h-6 w-6 text-white\" />;\n      case 'weekly':\n        return <Star className=\"h-6 w-6 text-white\" />;\n      case 'monthly':\n        return <Crown className=\"h-6 w-6 text-white\" />;\n      default:\n        return <Check className=\"h-6 w-6 text-white\" />;\n    }\n  };\n\n  const getPackColor = (packId: string) => {\n    switch (packId) {\n      case 'daily':\n        return 'from-blue-500 to-blue-600';\n      case 'weekly':\n        return 'from-purple-500 to-purple-600';\n      case 'monthly':\n        return 'from-yellow-500 to-yellow-600';\n      default:\n        return 'from-green-500 to-green-600';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          Options de visibilit√©\n        </h2>\n        <p className=\"text-gray-600\">\n          Choisissez votre pack premium pour augmenter la visibilit√© de votre annonce\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\n        {PREMIUM_PACKS.filter(pack => pack.id !== 'free').map((pack) => (\n          <div\n            key={pack.id}\n            className={`relative rounded-2xl border-2 transition-all duration-200 cursor-pointer ${\n              selectedPack === pack.id\n                ? 'border-primary-bolt-500 bg-primary-bolt-50 shadow-lg'\n                : 'border-gray-200 hover:border-gray-300 hover:shadow-md'\n            } ${pack.mostPopular ? 'ring-2 ring-purple-500 ring-opacity-50 mt-6' : ''}`}\n            onClick={() => onSelectPack(pack.id)}\n          >\n            {pack.mostPopular && (\n              <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 z-10\">\n                <span className=\"bg-purple-500 text-white text-xs font-semibold px-4 py-1.5 rounded-full whitespace-nowrap shadow-lg\">\n                  LE PLUS POPULAIRE\n                </span>\n              </div>\n            )}\n\n            <div className=\"p-6\">\n              {/* Ic√¥ne */}\n              <div className={`w-12 h-12 bg-gradient-to-r ${getPackColor(pack.id)} rounded-xl flex items-center justify-center mx-auto mb-4 shadow-lg`}>\n                {getPackIcon(pack.id)}\n              </div>\n\n              {/* Nom du pack */}\n              <h3 className=\"text-lg font-semibold text-gray-900 text-center mb-2\">\n                {pack.name}\n              </h3>\n\n              {/* Prix */}\n              <div className=\"text-center mb-4\">\n                {pack.price === 0 ? (\n                  <span className=\"text-2xl font-bold text-green-600\">Gratuit</span>\n                ) : (\n                  <div>\n                    <span className=\"text-3xl font-bold text-gray-900\">{pack.price}‚Ç¨</span>\n                    {pack.duration > 1 && (\n                      <span className=\"text-sm text-gray-500 ml-1\">\n                        / {pack.duration} jour{pack.duration > 1 ? 's' : ''}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n\n              {/* Description */}\n              <p className=\"text-sm text-gray-600 text-center mb-4\">\n                {pack.description}\n              </p>\n\n              {/* Fonctionnalit√©s */}\n              <ul className=\"space-y-2\">\n                {pack.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-center text-sm text-gray-700\">\n                    <Check className=\"h-4 w-4 text-green-500 mr-2 flex-shrink-0\" />\n                    {feature}\n                  </li>\n                ))}\n              </ul>\n\n              {/* √âconomies */}\n              {pack.id === 'weekly' && (\n                <div className=\"mt-4 text-center\">\n                  <span className=\"text-xs text-green-600 font-semibold bg-green-100 px-2 py-1 rounded-full\">\n                    √âconomie de 28% vs quotidien\n                  </span>\n                </div>\n              )}\n              {pack.id === 'monthly' && (\n                <div className=\"mt-4 text-center\">\n                  <span className=\"text-xs text-green-600 font-semibold bg-green-100 px-2 py-1 rounded-full\">\n                    √âconomie de 33% vs quotidien\n                  </span>\n                </div>\n              )}\n            </div>\n\n            {/* Indicateur de s√©lection */}\n            {selectedPack === pack.id && (\n              <div className=\"absolute top-4 right-4\">\n                <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                  <Check className=\"h-4 w-4 text-white\" />\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Information additionnelle */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4 mt-6\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n            <Check className=\"h-4 w-4 text-white\" />\n          </div>\n          <div>\n            <h4 className=\"font-semibold text-blue-900 mb-1\">\n              Comment fonctionne la remont√©e ?\n            </h4>\n            <p className=\"text-sm text-blue-800\">\n              Les annonces avec remont√©e apparaissent en premier dans les r√©sultats de recherche, \n              augmentant significativement leur visibilit√© et les chances de contact.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":5983},"components/client-components/PremiumPayment.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, PaymentElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { Check, CreditCard, Lock } from 'lucide-react';\nimport { PREMIUM_PACKS } from '@/types/premium';\n\n// Chargement de Stripe (sera disponible quand les cl√©s seront fournies)\nconst stripePromise = import.meta.env.VITE_STRIPE_PUBLIC_KEY \n  ? loadStripe(import.meta.env.VITE_STRIPE_PUBLIC_KEY)\n  : null;\n\ninterface PremiumPaymentProps {\n  selectedPack: string;\n  onPaymentSuccess: () => void;\n  onBack: () => void;\n}\n\nconst PaymentForm: React.FC<{ onPaymentSuccess: () => void }> = ({ onPaymentSuccess }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setIsProcessing(true);\n    setErrorMessage('');\n\n    try {\n      const { error } = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n          return_url: window.location.origin,\n        },\n      });\n\n      if (error) {\n        setErrorMessage(error.message || 'Une erreur est survenue lors du paiement');\n      } else {\n        onPaymentSuccess();\n      }\n    } catch (err) {\n      setErrorMessage('Une erreur inattendue est survenue');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n        <PaymentElement />\n      </div>\n      \n      <button\n        type=\"submit\"\n        disabled={!stripe || isProcessing}\n        className=\"w-full bg-primary-bolt-500 text-white py-4 px-6 rounded-xl font-semibold hover:bg-primary-bolt-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2\"\n      >\n        {isProcessing ? (\n          <>\n            <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            <span>Traitement en cours...</span>\n          </>\n        ) : (\n          <>\n            <Lock className=\"h-5 w-5\" />\n            <span>Payer maintenant</span>\n          </>\n        )}\n      </button>\n\n      {errorMessage && (\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-4\">\n          <p className=\"text-red-800 text-sm\">{errorMessage}</p>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport const PremiumPayment: React.FC<PremiumPaymentProps> = ({\n  selectedPack,\n  onPaymentSuccess,\n  onBack,\n}) => {\n  const [clientSecret, setClientSecret] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const selectedPackData = PREMIUM_PACKS.find(pack => pack.id === selectedPack);\n\n  useEffect(() => {\n    if (selectedPackData && selectedPackData.price > 0) {\n      createPaymentIntent();\n    }\n  }, [selectedPackData]);\n\n  const createPaymentIntent = async () => {\n    if (!selectedPackData) return;\n\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          amount: selectedPackData.price,\n          packId: selectedPackData.id,\n          description: `Pack ${selectedPackData.name}`,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erreur lors de la cr√©ation du paiement');\n      }\n\n      const { clientSecret } = await response.json();\n      setClientSecret(clientSecret);\n    } catch (error) {\n      console.error('Erreur:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Pack gratuit - pas de paiement n√©cessaire\n  if (!selectedPackData || selectedPackData.price === 0) {\n    return (\n      <div className=\"text-center space-y-6\">\n        <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n          <Check className=\"h-8 w-8 text-green-600\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900\">Publication gratuite</h2>\n        <p className=\"text-gray-600\">\n          Votre annonce sera publi√©e gratuitement et sera visible dans les r√©sultats de recherche.\n        </p>\n        <button\n          onClick={onPaymentSuccess}\n          className=\"bg-green-600 text-white py-3 px-8 rounded-xl font-semibold hover:bg-green-700 transition-colors\"\n        >\n          Continuer\n        </button>\n      </div>\n    );\n  }\n\n  // Pas de cl√©s Stripe configur√©es\n  if (!stripePromise) {\n    return (\n      <div className=\"text-center space-y-6\">\n        <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto\">\n          <CreditCard className=\"h-8 w-8 text-yellow-600\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900\">Paiement temporairement indisponible</h2>\n        <p className=\"text-gray-600\">\n          Le syst√®me de paiement n'est pas encore configur√©. Vous pouvez publier votre annonce gratuitement en attendant.\n        </p>\n        <div className=\"flex space-x-4 justify-center\">\n          <button\n            onClick={onBack}\n            className=\"bg-gray-500 text-white py-3 px-6 rounded-xl font-semibold hover:bg-gray-600 transition-colors\"\n          >\n            Retour\n          </button>\n          <button\n            onClick={onPaymentSuccess}\n            className=\"bg-primary-bolt-500 text-white py-3 px-6 rounded-xl font-semibold hover:bg-primary-bolt-600 transition-colors\"\n          >\n            Publier gratuitement\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Chargement du paiement\n  if (isLoading || !clientSecret) {\n    return (\n      <div className=\"text-center space-y-6\">\n        <div className=\"w-16 h-16 border-4 border-primary-bolt-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n        <h2 className=\"text-2xl font-bold text-gray-900\">Pr√©paration du paiement...</h2>\n        <p className=\"text-gray-600\">Veuillez patienter</p>\n      </div>\n    );\n  }\n\n  // Interface de paiement\n  return (\n    <div className=\"space-y-8\">\n      {/* R√©capitulatif du pack */}\n      <div className=\"bg-gray-50 rounded-xl p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">R√©capitulatif de votre commande</h3>\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <p className=\"font-medium text-gray-900\">{selectedPackData.name}</p>\n            <p className=\"text-sm text-gray-600\">{selectedPackData.description}</p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"text-2xl font-bold text-gray-900\">{selectedPackData.price}‚Ç¨</p>\n            <p className=\"text-sm text-gray-600\">\n              {selectedPackData.duration} jour{selectedPackData.duration > 1 ? 's' : ''}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Informations de s√©curit√© */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4\">\n        <div className=\"flex items-center space-x-3\">\n          <Lock className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <p className=\"font-medium text-blue-900\">Paiement s√©curis√©</p>\n            <p className=\"text-sm text-blue-800\">\n              Vos informations de paiement sont prot√©g√©es par le chiffrement SSL et trait√©es par Stripe.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Formulaire de paiement */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Informations de paiement</h3>\n        <Elements \n          stripe={stripePromise} \n          options={{ \n            clientSecret,\n            appearance: {\n              theme: 'stripe',\n              variables: {\n                colorPrimary: '#059669',\n              },\n            },\n          }}\n        >\n          <PaymentForm onPaymentSuccess={onPaymentSuccess} />\n        </Elements>\n      </div>\n\n      <button\n        onClick={onBack}\n        className=\"w-full bg-gray-500 text-white py-3 px-6 rounded-xl font-semibold hover:bg-gray-600 transition-colors\"\n      >\n        Retour √† la s√©lection des packs\n      </button>\n    </div>\n  );\n};","size_bytes":8387},"components/client-components/PublishSuccessModal.tsx":{"content":"import React, { useEffect, useState } from 'react';\nimport { CheckCircle, Clock, ArrowRight } from 'lucide-react';\n\ninterface PublishSuccessModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onNavigateToDashboard: () => void;\n  listingType: 'sell' | 'search';\n}\n\nexport const PublishSuccessModal: React.FC<PublishSuccessModalProps> = ({\n  isOpen,\n  onClose,\n  onNavigateToDashboard,\n  listingType\n}) => {\n  const [countdown, setCountdown] = useState(5);\n\n  useEffect(() => {\n    if (isOpen && countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (countdown === 0) {\n      // Redirection automatique apr√®s 5 secondes\n      onNavigateToDashboard();\n    }\n  }, [isOpen, countdown, onNavigateToDashboard]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setCountdown(5); // R√©initialiser le compteur quand la modal s'ouvre\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const isSearch = listingType === 'search';\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl max-w-md w-full p-8 text-center transform animate-in fade-in zoom-in duration-300\">\n        {/* Ic√¥ne de succ√®s */}\n        <div className=\"mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-6\">\n          <CheckCircle className=\"w-8 h-8 text-green-500\" />\n        </div>\n\n        {/* Titre */}\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-3\">\n          {isSearch ? 'Recherche publi√©e !' : 'Annonce publi√©e !'}\n        </h2>\n\n        {/* Message principal */}\n        <p className=\"text-gray-600 mb-6 leading-relaxed\">\n          Votre {isSearch ? 'recherche' : 'annonce'} a √©t√© re√ßue avec succ√®s et sera valid√©e dans quelques instants.\n        </p>\n\n        {/* Informations suppl√©mentaires */}\n        <div className=\"bg-blue-50 rounded-xl p-4 mb-6\">\n          <div className=\"flex items-center justify-center text-blue-600 mb-2\">\n            <Clock className=\"w-5 h-5 mr-2\" />\n            <span className=\"font-medium\">Validation en cours</span>\n          </div>\n          <p className=\"text-sm text-blue-700\">\n            Notre √©quipe v√©rifie votre {isSearch ? 'recherche' : 'annonce'} pour s'assurer qu'elle respecte nos conditions.\n            Vous recevrez une notification d√®s qu'elle sera en ligne.\n          </p>\n        </div>\n\n        {/* Boutons d'action */}\n        <div className=\"space-y-3\">\n          <button\n            onClick={onNavigateToDashboard}\n            className=\"w-full bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white font-semibold py-3 px-6 rounded-xl transition-colors flex items-center justify-center\"\n          >\n            <span>Voir mes annonces</span>\n            <ArrowRight className=\"w-5 h-5 ml-2\" />\n          </button>\n          \n          <button\n            onClick={onClose}\n            className=\"w-full text-gray-500 hover:text-gray-700 font-medium py-2 transition-colors\"\n          >\n            Continuer √† naviguer\n          </button>\n        </div>\n\n        {/* Compteur de redirection */}\n        <p className=\"text-xs text-gray-400 mt-4\">\n          Redirection automatique dans {countdown} seconde{countdown !== 1 ? 's' : ''}\n        </p>\n      </div>\n    </div>\n  );\n};","size_bytes":3376},"components/client-components/SearchFilters.tsx":{"content":"import React, { useState, useMemo } from 'react';\nimport { Filter, X, ChevronDown } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { brands, fuelTypes, conditions, categories } from '../utils/mockData';\n\ninterface SearchFiltersProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const SearchFilters: React.FC<SearchFiltersProps> = ({ isOpen, onClose }) => {\n  const { searchFilters, setSearchFilters, vehicles } = useApp();\n  const [localFilters, setLocalFilters] = useState(searchFilters);\n\n  // Mapping des cat√©gories principales vers sous-cat√©gories\n  const categoryMapping = {\n    'voiture-utilitaire': {\n      label: 'Voitures - Utilitaires',\n      subcategories: [\n        { id: 'voiture', label: 'Voitures' },\n        { id: 'utilitaire', label: 'Utilitaires' },\n        { id: 'caravane', label: 'Caravanes' },\n        { id: 'remorque', label: 'Remorques' }\n      ]\n    },\n    'moto-scooter-quad': {\n      label: 'Motos, Scooters, Quads',\n      subcategories: [\n        { id: 'moto', label: 'Motos' },\n        { id: 'scooter', label: 'Scooters' },\n        { id: 'quad', label: 'Quads' }\n      ]\n    },\n    'nautisme-sport-aerien': {\n      label: 'Nautisme, Sport et Plein air',\n      subcategories: [\n        { id: 'bateau', label: 'Bateaux' },\n        { id: 'jetski', label: 'Jet-skis' },\n        { id: 'aerien', label: 'A√©rien' }\n      ]\n    },\n    'services': {\n      label: 'Services',\n      subcategories: [\n        { id: 'reparation', label: 'R√©paration' },\n        { id: 'remorquage', label: 'Remorquage' },\n        { id: 'entretien', label: 'Entretien' },\n        { id: 'autre-service', label: 'Autres services' }\n      ]\n    },\n    'pieces': {\n      label: 'Pi√®ces d√©tach√©es',\n      subcategories: [\n        { id: 'piece-voiture', label: 'Pi√®ces voiture' },\n        { id: 'piece-moto', label: 'Pi√®ces moto' },\n        { id: 'autre-piece', label: 'Autres pi√®ces' }\n      ]\n    }\n  };\n\n  // D√©terminer les sous-cat√©gories disponibles selon la cat√©gorie principale active\n  const availableSubcategories = useMemo(() => {\n    if (!searchFilters.category) return [];\n    \n    // Si c'est une cat√©gorie principale, montrer ses sous-cat√©gories\n    if (categoryMapping[searchFilters.category as keyof typeof categoryMapping]) {\n      return categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories;\n    }\n    \n    // Si c'est d√©j√† une sous-cat√©gorie, ne pas afficher de sous-cat√©gories\n    // (pas de \"Type sp√©cifique\" si on est d√©j√† dans une sous-cat√©gorie)\n    return [];\n  }, [searchFilters.category]);\n\n  // Obtenir les marques disponibles selon la cat√©gorie active et la sous-cat√©gorie s√©lectionn√©e\n  const availableBrands = useMemo(() => {\n    if (!searchFilters.category) return brands;\n\n    // Obtenir les sous-cat√©gories concern√©es\n    let relevantSubcategories: string[] = [];\n    \n    // Si une sous-cat√©gorie sp√©cifique est s√©lectionn√©e dans les filtres locaux, l'utiliser\n    if (localFilters.subcategory) {\n      relevantSubcategories = [localFilters.subcategory];\n    } else if (categoryMapping[searchFilters.category as keyof typeof categoryMapping]) {\n      // Sinon, utiliser toutes les sous-cat√©gories de la cat√©gorie principale\n      relevantSubcategories = categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories.map(sub => sub.id);\n    } else {\n      // Sous-cat√©gorie directe\n      relevantSubcategories = [searchFilters.category];\n    }\n\n    // Filtrer les v√©hicules et extraire les marques uniques\n    const categoryVehicles = vehicles.filter(vehicle => \n      relevantSubcategories.includes(vehicle.category)\n    );\n    \n    const uniqueBrands = Array.from(new Set(\n      categoryVehicles.map(vehicle => vehicle.brand)\n        .filter(brand => !brand.includes(',')) // Exclure les marques avec plusieurs noms (ex: \"Honda, Yamaha, Kawasaki\")\n    )).sort();\n    \n    return uniqueBrands;\n  }, [searchFilters.category, localFilters.subcategory, vehicles]);\n\n  const handleFilterChange = (key: string, value: any) => {\n    const newFilters = { ...localFilters, [key]: value };\n    \n    // Si on change de sous-cat√©gorie, r√©initialiser la marque si elle n'est plus disponible\n    if (key === 'subcategory') {\n      // Recalculer les marques disponibles pour la nouvelle sous-cat√©gorie\n      const newRelevantSubcategories = value ? [value] : \n        (categoryMapping[searchFilters.category as keyof typeof categoryMapping]?.subcategories.map(sub => sub.id) || []);\n      \n      const newCategoryVehicles = vehicles.filter(vehicle => \n        newRelevantSubcategories.includes(vehicle.category)\n      );\n      \n      const newAvailableBrands = Array.from(new Set(\n        newCategoryVehicles.map(vehicle => vehicle.brand)\n          .filter(brand => !brand.includes(',')) // Exclure les marques avec plusieurs noms\n      ));\n      \n      // Si la marque actuellement s√©lectionn√©e n'est plus disponible, la r√©initialiser\n      if (localFilters.brand && !newAvailableBrands.includes(localFilters.brand)) {\n        newFilters.brand = undefined;\n      }\n    }\n    \n    setLocalFilters(newFilters);\n  };\n\n  const applyFilters = () => {\n    setSearchFilters(localFilters);\n    onClose();\n  };\n\n  const clearFilters = () => {\n    // Conserver la cat√©gorie d'origine lors de l'effacement\n    // Qu'elle soit une cat√©gorie principale ou une sous-cat√©gorie directe\n    const clearedFilters = searchFilters.category ? { category: searchFilters.category } : {};\n    setLocalFilters(clearedFilters);\n    setSearchFilters(clearedFilters);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div className=\"flex items-center space-x-3\">\n            <Filter className=\"h-6 w-6 text-primary-bolt-500\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">Filtres de recherche</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Filters Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Current Category Display */}\n          {searchFilters.category && (\n            <div className=\"bg-primary-bolt-50 border border-primary-bolt-200 rounded-lg p-4\">\n              <h3 className=\"text-sm font-medium text-primary-bolt-700 mb-2\">\n                Cat√©gorie actuelle\n              </h3>\n              <p className=\"text-primary-bolt-600\">\n                {categoryMapping[searchFilters.category as keyof typeof categoryMapping]?.label || searchFilters.category}\n              </p>\n            </div>\n          )}\n\n          {/* Subcategory and Brand */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Sous-cat√©gories dynamiques */}\n            {availableSubcategories.length > 0 && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Type sp√©cifique\n                </label>\n                <select\n                  value={localFilters.subcategory || ''}\n                  onChange={(e) => handleFilterChange('subcategory', e.target.value || undefined)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                >\n                  <option value=\"\">Tous types</option>\n                  {availableSubcategories.map((sub) => (\n                    <option key={sub.id} value={sub.id}>\n                      {sub.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Marque {availableBrands.length > 0 && `(${availableBrands.length} disponibles)`}\n              </label>\n              <select\n                value={localFilters.brand || ''}\n                onChange={(e) => handleFilterChange('brand', e.target.value || undefined)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              >\n                <option value=\"\">Toutes marques</option>\n                {availableBrands.map((brand) => (\n                  <option key={brand} value={brand}>\n                    {brand}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Price Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Prix (‚Ç¨)\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Prix min\"\n                value={localFilters.priceFrom || ''}\n                onChange={(e) => handleFilterChange('priceFrom', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Prix max\"\n                value={localFilters.priceTo || ''}\n                onChange={(e) => handleFilterChange('priceTo', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n            </div>\n          </div>\n\n          {/* Year Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Ann√©e\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Ann√©e min\"\n                value={localFilters.yearFrom || ''}\n                onChange={(e) => handleFilterChange('yearFrom', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Ann√©e max\"\n                value={localFilters.yearTo || ''}\n                onChange={(e) => handleFilterChange('yearTo', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n            </div>\n          </div>\n\n          {/* Mileage Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Kilom√©trage\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Km min\"\n                value={localFilters.mileageFrom || ''}\n                onChange={(e) => handleFilterChange('mileageFrom', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Km max\"\n                value={localFilters.mileageTo || ''}\n                onChange={(e) => handleFilterChange('mileageTo', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n            </div>\n          </div>\n\n          {/* Fuel Type and Condition */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Carburant\n              </label>\n              <select\n                value={localFilters.fuelType || ''}\n                onChange={(e) => handleFilterChange('fuelType', e.target.value || undefined)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              >\n                <option value=\"\">Tous carburants</option>\n                {fuelTypes.map((fuel) => (\n                  <option key={fuel.value} value={fuel.value}>\n                    {fuel.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                √âtat\n              </label>\n              <select\n                value={localFilters.condition || ''}\n                onChange={(e) => handleFilterChange('condition', e.target.value || undefined)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              >\n                <option value=\"\">Tous √©tats</option>\n                {conditions.map((condition) => (\n                  <option key={condition.value} value={condition.value}>\n                    {condition.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Location */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Localisation\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Ville, d√©partement, r√©gion...\"\n              value={localFilters.location || ''}\n              onChange={(e) => handleFilterChange('location', e.target.value || undefined)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n            />\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-between items-center p-6 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={clearFilters}\n            className=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors\"\n          >\n            Effacer les filtres\n          </button>\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={onClose}\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n            >\n              Annuler\n            </button>\n            <button\n              onClick={applyFilters}\n              className=\"px-6 py-2 bg-primary-bolt-500 text-white rounded-xl hover:bg-primary-bolt-600 transition-colors font-medium\"\n            >\n              Appliquer les filtres\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":15410},"components/client-components/SearchResults.tsx":{"content":"import { useApp } from '../contexts/AppContext';\nimport { Vehicle } from '../types';\nimport { VehicleCard } from './VehicleCard';\nimport { ArrowLeft, Search } from 'lucide-react';\nimport { useMemo } from 'react';\n\ninterface SearchResultsProps {\n  searchQuery: string;\n  onBack: () => void;\n  onVehicleSelect: (vehicle: Vehicle) => void;\n}\n\nexport const SearchResults = ({ searchQuery, onBack, onVehicleSelect }: SearchResultsProps) => {\n  const { vehicles } = useApp();\n\n  // Fonction de recherche avanc√©e\n  const searchResults = useMemo(() => {\n    if (!searchQuery.trim()) return [];\n\n    const query = searchQuery.toLowerCase().trim();\n    const keywords = query.split(/\\s+/);\n\n    return vehicles.filter(vehicle => {\n      const searchableText = [\n        vehicle.title,\n        vehicle.description,\n        vehicle.brand,\n        vehicle.model,\n        vehicle.location,\n        vehicle.features?.join(' ') || '',\n        vehicle.category\n      ].join(' ').toLowerCase();\n\n      // V√©rifier si tous les mots-cl√©s sont pr√©sents\n      return keywords.every(keyword => \n        searchableText.includes(keyword)\n      );\n    }).sort((a, b) => {\n      // Trier par pertinence : les titres qui contiennent la recherche en premier\n      const aTitle = a.title.toLowerCase();\n      const bTitle = b.title.toLowerCase();\n      \n      if (aTitle.includes(query) && !bTitle.includes(query)) return -1;\n      if (!aTitle.includes(query) && bTitle.includes(query)) return 1;\n      \n      // Puis par date de cr√©ation (plus r√©cent en premier)\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    });\n  }, [vehicles, searchQuery]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n              <span>Retour</span>\n            </button>\n            <div className=\"flex items-center gap-3\">\n              <Search className=\"w-5 h-5 text-gray-400\" />\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">\n                  R√©sultats de recherche\n                </h1>\n                <p className=\"text-gray-600\">\n                  pour \"<span className=\"font-medium text-gray-900\">{searchQuery}</span>\"\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Contenu principal */}\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        {/* Statistiques de recherche */}\n        <div className=\"mb-6\">\n          <p className=\"text-gray-600\">\n            {searchResults.length > 0 ? (\n              <>\n                <span className=\"font-semibold text-gray-900\">{searchResults.length}</span>\n                {' '}r√©sultat{searchResults.length > 1 ? 's' : ''} trouv√©{searchResults.length > 1 ? 's' : ''}\n              </>\n            ) : (\n              'Aucun r√©sultat trouv√©'\n            )}\n          </p>\n        </div>\n\n        {/* R√©sultats */}\n        {searchResults.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {searchResults.map((vehicle) => (\n              <div key={vehicle.id} onClick={() => onVehicleSelect(vehicle)} className=\"cursor-pointer\">\n                <VehicleCard\n                  vehicle={vehicle}\n                />\n              </div>\n            ))}\n          </div>\n        ) : (\n          /* √âtat vide */\n          <div className=\"text-center py-16\">\n            <div className=\"mb-6\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Search className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Aucun r√©sultat trouv√©\n              </h3>\n              <p className=\"text-gray-600 max-w-md mx-auto mb-8\">\n                Nous n'avons trouv√© aucun v√©hicule correspondant √† votre recherche \"{searchQuery}\".\n                Essayez avec des mots-cl√©s diff√©rents ou v√©rifiez l'orthographe.\n              </p>\n            </div>\n            \n            {/* Suggestions */}\n            <div className=\"bg-white rounded-lg p-6 max-w-lg mx-auto border\">\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Suggestions pour am√©liorer votre recherche :</h4>\n              <ul className=\"text-left text-gray-600 space-y-2\">\n                <li>‚Ä¢ V√©rifiez l'orthographe des mots-cl√©s</li>\n                <li>‚Ä¢ Utilisez des termes plus g√©n√©raux (ex: \"BMW\" au lieu de \"BMW Serie 3\")</li>\n                <li>‚Ä¢ Essayez diff√©rentes combinaisons de mots</li>\n                <li>‚Ä¢ Recherchez par marque, mod√®le ou type de v√©hicule</li>\n              </ul>\n              <button\n                onClick={onBack}\n                className=\"mt-6 px-6 py-3 bg-primary-bolt-500 text-white rounded-lg hover:bg-primary-bolt-600 transition-colors\"\n              >\n                Nouvelle recherche\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","size_bytes":5427},"components/client-components/TestInput.tsx":{"content":"import React, { useState } from 'react';\n\nexport const TestInput: React.FC = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"p-4 border border-red-500 bg-red-50\">\n      <h3 className=\"text-red-800 font-bold mb-2\">Test Input - Si celui-ci fonctionne, le probl√®me vient d'ailleurs</h3>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => {\n          console.log('TestInput onChange:', e.target.value);\n          setValue(e.target.value);\n        }}\n        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl\"\n        placeholder=\"Test de saisie directe\"\n      />\n      <p className=\"mt-2 text-sm text-red-700\">Valeur: {value}</p>\n    </div>\n  );\n};","size_bytes":720},"components/client-components/VehicleCard.tsx":{"content":"import React, { useState } from 'react';\nimport { Calendar, Gauge, MapPin, Eye, Heart, Crown, MessageCircle } from 'lucide-react';\nimport { Vehicle } from '../types';\nimport brandIcon from '@assets/Brand_1752260033631.png';\nimport { OptimizedImage } from './OptimizedImage';\n\ninterface VehicleCardProps {\n  vehicle: Vehicle;\n  onClick: () => void;\n}\n\nconst VehicleCardComponent: React.FC<VehicleCardProps> = ({ vehicle, onClick }) => {\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatMileage = (mileage: number) => {\n    return new Intl.NumberFormat('fr-FR').format(mileage) + ' km';\n  };\n\n  const getCategoryIcon = (category: string) => {\n    return (\n      <img \n        src={brandIcon} \n        alt=\"Brand icon\" \n        className=\"w-16 h-16 opacity-60\"\n      />\n    );\n  };\n\n  return (\n    <div \n      onClick={onClick}\n      className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-200 transform hover:scale-[1.02] cursor-pointer overflow-hidden border border-gray-100\"\n    >\n      {/* Premium Badge */}\n      {vehicle.isPremium && (\n        <div className=\"relative\">\n          <div className=\"absolute top-3 left-3 z-10 bg-gradient-to-r from-orange-500 to-orange-600 text-white px-3 py-1 rounded-full text-xs font-semibold flex items-center space-x-1 shadow-lg\">\n            <Crown className=\"h-3 w-3\" />\n            <span>Premium</span>\n          </div>\n        </div>\n      )}\n\n      {/* Image */}\n      <div className=\"relative h-48 bg-gray-200 overflow-hidden\">\n        {vehicle.images.length > 0 ? (\n          <OptimizedImage\n            src={vehicle.images[0]}\n            alt={vehicle.title}\n            className=\"w-full h-full object-cover transition-transform duration-200 hover:scale-105\"\n            fallbackIcon={getCategoryIcon(vehicle.category)}\n            loading=\"lazy\"\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center text-6xl\">\n            {getCategoryIcon(vehicle.category)}\n          </div>\n        )}\n        \n        {/* Image count */}\n        {vehicle.images.length > 1 && (\n          <div className=\"absolute bottom-3 right-3 bg-black bg-opacity-70 text-white px-2 py-1 rounded text-xs\">\n            +{vehicle.images.length - 1} photos\n          </div>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {/* Title and Price */}\n        <div className=\"flex justify-between items-start mb-3\">\n          <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-2 flex-1 mr-4\">\n            {vehicle.title}\n          </h3>\n          <div className=\"text-right\">\n            <div className=\"text-xl font-bold text-primary-bolt-500\">\n              {formatPrice(vehicle.price)}\n            </div>\n            {vehicle.user?.type === 'professional' && (\n              <div className=\"text-xs text-orange-600 font-medium\">PRO</div>\n            )}\n          </div>\n        </div>\n\n        {/* Vehicle Details */}\n        <div className=\"grid grid-cols-2 gap-3 mb-4 text-sm text-gray-600\">\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-4 w-4 text-gray-400\" />\n            <span>{vehicle.year}</span>\n          </div>\n          \n          {vehicle.mileage && (\n            <div className=\"flex items-center space-x-2\">\n              <Gauge className=\"h-4 w-4 text-gray-400\" />\n              <span>{formatMileage(vehicle.mileage)}</span>\n            </div>\n          )}\n          \n          <div className=\"flex items-center space-x-2\">\n            <MapPin className=\"h-4 w-4 text-gray-400\" />\n            <span className=\"truncate\">{vehicle.location}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"px-2 py-1 bg-gray-100 rounded text-xs font-medium\">\n              {vehicle.brand}\n            </span>\n          </div>\n        </div>\n\n        {/* Features */}\n        {vehicle.features.length > 0 && (\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-1\">\n              {vehicle.features.slice(0, 3).map((feature, index) => (\n                <span\n                  key={index}\n                  className=\"px-2 py-1 bg-primary-bolt-50 text-primary-bolt-500 text-xs rounded font-medium\"\n                >\n                  {feature}\n                </span>\n              ))}\n              {vehicle.features.length > 3 && (\n                <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded font-medium\">\n                  +{vehicle.features.length - 3}\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Stats and Actions */}\n        <div className=\"flex justify-between items-center pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n            <div className=\"flex items-center space-x-1\">\n              <Eye className=\"h-4 w-4\" />\n              <span>{vehicle.views}</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Heart className=\"h-4 w-4\" />\n              <span>{vehicle.favorites}</span>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button \n              className=\"p-2 text-gray-400 hover:text-red-500 transition-colors\"\n              onClick={(e) => {\n                e.stopPropagation();\n                // Handle favorite\n              }}\n            >\n              <Heart className=\"h-4 w-4\" />\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n              onClick={(e) => {\n                e.stopPropagation();\n                // Handle message\n              }}\n            >\n              <MessageCircle className=\"h-4 w-4\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const VehicleCard = React.memo(VehicleCardComponent);","size_bytes":6164},"components/client-components/VehicleDetail.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, Calendar, Gauge, MapPin, Heart, MessageCircle, Share2, Crown, Eye, Phone, Mail, CheckCircle, X, Send } from 'lucide-react';\nimport { Vehicle } from '../types';\nimport { WhatsAppContact } from './WhatsAppContact';\nimport { VehicleCard } from './VehicleCard';\nimport { Breadcrumb } from './Breadcrumb';\nimport { useApp } from '../contexts/AppContext';\nimport { AuthModal } from './AuthModal';\nimport { Footer } from './Footer';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface VehicleDetailProps {\n  vehicle: Vehicle;\n  onBack: () => void;\n  onVehicleSelect?: (vehicle: Vehicle) => void;\n  onNavigate?: (path: string) => void;\n  setCurrentView?: (view: string) => void;\n}\n\nexport const VehicleDetail: React.FC<VehicleDetailProps> = ({ vehicle, onBack, onVehicleSelect, onNavigate, setCurrentView }) => {\n  const { currentUser, setShowAuthModal: setGlobalAuthModal, vehicles } = useApp();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [showContactInfo, setShowContactInfo] = useState(false);\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [messageText, setMessageText] = useState('');\n\n  // Function to handle navigation from footer links\n  const handleFooterNavigation = (view: string) => {\n    onBack(); // Close vehicle detail\n    if (setCurrentView) {\n      setCurrentView(view); // Navigate to requested view\n      // Scroll to top after navigation\n      setTimeout(() => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }, 100);\n    }\n  };\n\n  // Scroll to top when vehicle changes\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [vehicle.id]);\n\n  // Function to find similar vehicles\n  const getSimilarVehicles = (currentVehicle: Vehicle, limit: number = 4): Vehicle[] => {\n    // Get all vehicles in the same subcategory (excluding current)\n    const sameSubcategoryVehicles = vehicles.filter(v => \n      v.id !== currentVehicle.id && \n      v.category === currentVehicle.category\n    );\n\n    // If no other vehicles in subcategory, return empty array\n    if (sameSubcategoryVehicles.length === 0) {\n      return [];\n    }\n\n    // Sort vehicles by multiple criteria with priority scoring\n    const scoredVehicles = sameSubcategoryVehicles.map(v => {\n      let score = 0;\n      \n      // Same brand gets highest priority (100 points)\n      if (v.brand === currentVehicle.brand) {\n        score += 100;\n      }\n\n      // Price similarity (0-50 points based on price difference)\n      const priceDiff = Math.abs(v.price - currentVehicle.price);\n      const maxPriceDiff = Math.max(currentVehicle.price, 10000); // Avoid division by 0\n      const priceScore = Math.max(0, 50 - (priceDiff / maxPriceDiff) * 50);\n      score += priceScore;\n\n      // Same type gets bonus points (30 points)\n      if (v.type === currentVehicle.type) {\n        score += 30;\n      }\n\n      // Same condition gets bonus points (20 points)\n      if (v.condition === currentVehicle.condition) {\n        score += 20;\n      }\n\n      // Year similarity (0-20 points)\n      if (v.year && currentVehicle.year) {\n        const yearDiff = Math.abs(v.year - currentVehicle.year);\n        const yearScore = Math.max(0, 20 - yearDiff);\n        score += yearScore;\n      }\n\n      // Mileage similarity for used vehicles (0-15 points)\n      if (v.mileage && currentVehicle.mileage && currentVehicle.condition === 'used') {\n        const mileageDiff = Math.abs(v.mileage - currentVehicle.mileage);\n        const maxMileageDiff = Math.max(currentVehicle.mileage, 50000);\n        const mileageScore = Math.max(0, 15 - (mileageDiff / maxMileageDiff) * 15);\n        score += mileageScore;\n      }\n\n      return { vehicle: v, score };\n    });\n\n    // Sort by score (highest first) and return top vehicles\n    return scoredVehicles\n      .sort((a, b) => b.score - a.score)\n      .slice(0, limit)\n      .map(item => item.vehicle);\n  };\n\n  const similarVehicles = getSimilarVehicles(vehicle);\n\n  // Function to find compatible spare parts for damaged vehicles\n  const getCompatibleSpareParts = (currentVehicle: Vehicle): Vehicle[] => {\n    if (currentVehicle.condition !== 'damaged') return [];\n    \n    return vehicles.filter(v => \n      v.category === 'piece-voiture' && // Only spare parts\n      v.brand === currentVehicle.brand && // Same brand\n      (\n        v.model.toLowerCase().includes(currentVehicle.model.toLowerCase()) || // Model matches\n        v.description.toLowerCase().includes(currentVehicle.model.toLowerCase()) || // Description mentions model\n        v.features?.some(feature => \n          feature.toLowerCase().includes(currentVehicle.model.toLowerCase())\n        ) // Features mention model\n      )\n    );\n  };\n\n  const compatibleParts = getCompatibleSpareParts(vehicle);\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatMileage = (mileage: number) => {\n    return new Intl.NumberFormat('fr-FR').format(mileage) + ' km';\n  };\n\n  const nextImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === vehicle.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const prevImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === 0 ? vehicle.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleBreadcrumbNavigation = (path: string) => {\n    if (onNavigate) {\n      onNavigate(path);\n    } else {\n      onBack(); // Fallback to going back\n    }\n  };\n\n  const handleMessageClick = () => {\n    if (currentUser) {\n      setShowMessageForm(true);\n    } else {\n      setGlobalAuthModal(true);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (!messageText.trim()) return;\n    \n    // Ici on enverrait le message via une API\n    console.log('Message envoy√©:', {\n      from: currentUser?.id,\n      to: vehicle.userId,\n      vehicleId: vehicle.id,\n      message: messageText\n    });\n    \n    setMessageText('');\n    setShowMessageForm(false);\n    // Afficher une confirmation\n    alert('Message envoy√© avec succ√®s !');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 relative z-0\">\n      {/* Breadcrumb */}\n      <Breadcrumb vehicle={vehicle} onNavigate={handleBreadcrumbNavigation} />\n      \n      {/* Back Button */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-gray-600 hover:text-primary-bolt-500 transition-colors\"\n          >\n            <ArrowLeft className=\"h-5 w-5\" />\n            <span>Retour aux annonces</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Left Column - Images and Details */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Image Gallery */}\n            {vehicle.images.length > 0 && (\n              <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\n                <div className=\"relative h-96 bg-gray-200\">\n                  <img\n                    src={vehicle.images[currentImageIndex]}\n                    alt={vehicle.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                  \n                  {vehicle.images.length > 1 && (\n                    <div>\n                      <button\n                        onClick={prevImage}\n                        className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-all\"\n                      >\n                        ‚Üê\n                      </button>\n                      <button\n                        onClick={nextImage}\n                        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-all\"\n                      >\n                        ‚Üí\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Premium Badge */}\n                  {vehicle.isPremium && (\n                    <div className=\"absolute top-4 left-4 bg-gradient-to-r from-orange-500 to-orange-600 text-white px-3 py-1 rounded-full text-sm font-semibold flex items-center space-x-1\">\n                      <Crown className=\"h-4 w-4\" />\n                      <span>Premium</span>\n                    </div>\n                  )}\n\n                  {/* Favoris et Partage Icons */}\n                  <div className=\"absolute top-4 right-4 flex space-x-2\">\n                    <button className=\"bg-white bg-opacity-90 hover:bg-opacity-100 p-2 rounded-full shadow-lg transition-all\">\n                      <Heart className=\"h-5 w-5 text-gray-600 hover:text-red-500\" />\n                    </button>\n                    <button className=\"bg-white bg-opacity-90 hover:bg-opacity-100 p-2 rounded-full shadow-lg transition-all\">\n                      <Share2 className=\"h-5 w-5 text-gray-600 hover:text-blue-500\" />\n                    </button>\n                  </div>\n\n                  {/* Image Counter */}\n                  {vehicle.images.length > 1 && (\n                    <div className=\"absolute bottom-4 right-4 bg-black bg-opacity-70 text-white px-3 py-1 rounded-full text-sm\">\n                      {currentImageIndex + 1} / {vehicle.images.length}\n                    </div>\n                  )}\n                </div>\n\n                {/* Image Thumbnails */}\n                {vehicle.images.length > 1 && (\n                  <div className=\"p-4 flex space-x-2 overflow-x-auto\">\n                    {vehicle.images.map((image, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setCurrentImageIndex(index)}\n                        className={`flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden border-2 transition-all ${\n                          currentImageIndex === index\n                            ? 'border-[#0CBFDE]'\n                            : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                      >\n                        <img\n                          src={image}\n                          alt={`${vehicle.title} ${index + 1}`}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Vehicle Details */}\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\n              <div className=\"flex justify-between items-start mb-6\">\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">{vehicle.title}</h1>\n                  <div className=\"flex items-center space-x-4 text-gray-600\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Eye className=\"h-4 w-4\" />\n                      <span>{vehicle.views} vues</span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <Heart className=\"h-4 w-4\" />\n                      <span>{vehicle.favorites} favoris</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-3xl font-bold text-primary-bolt-500 mb-1\">\n                    {formatPrice(vehicle.price)}\n                  </div>\n                  {vehicle.user?.type === 'professional' && (\n                    <span className=\"bg-orange-100 text-orange-800 px-2 py-1 rounded text-sm font-medium\">\n                      Professionnel\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              {/* Key Information - Conditional based on category */}\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                {/* Localisation - toujours affich√©e */}\n                <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                  <MapPin className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <div className=\"text-sm text-gray-600\">Localisation</div>\n                    <div className=\"font-semibold\">{vehicle.location}</div>\n                  </div>\n                </div>\n\n                {/* Ann√©e - seulement pour les v√©hicules, pas pour les services */}\n                {vehicle.category !== 'services' && (\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <Calendar className=\"h-5 w-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Ann√©e</div>\n                      <div className=\"font-semibold\">{vehicle.year}</div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Kilom√©trage - seulement pour les v√©hicules avec kilom√©trage */}\n                {vehicle.category !== 'services' && vehicle.mileage && vehicle.mileage > 0 && (\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <Gauge className=\"h-5 w-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Kilom√©trage</div>\n                      <div className=\"font-semibold\">{formatMileage(vehicle.mileage)}</div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Marque - seulement pour les v√©hicules, pas pour les services */}\n                {vehicle.category !== 'services' && vehicle.brand !== 'Non sp√©cifi√©' && (\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <img \n                      src={brandIcon} \n                      alt=\"Brand icon\" \n                      className=\"w-6 h-6 opacity-60\"\n                    />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Marque</div>\n                      <div className=\"font-semibold\">{vehicle.brand}</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Description */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Description</h3>\n                <p className=\"text-gray-700 whitespace-pre-line leading-relaxed\">\n                  {vehicle.description}\n                </p>\n              </div>\n\n              {/* Features */}\n              {vehicle.features.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">√âquipements</h3>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                    {vehicle.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center space-x-2 p-2 bg-cyan-50 text-[#0CBFDE] rounded-lg\">\n                        <CheckCircle className=\"h-4 w-4\" />\n                        <span className=\"text-sm font-medium\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right Column - Contact and Actions */}\n          <div className=\"space-y-6\">\n            {/* Contact Card */}\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-cyan-100 rounded-full flex items-center justify-center\">\n                  <span className=\"text-[#0CBFDE] font-semibold text-lg\">\n                    {vehicle.user?.name.charAt(0)}\n                  </span>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">{vehicle.user?.name}</h3>\n                  {vehicle.user?.type === 'professional' && vehicle.user?.companyName && (\n                    <p className=\"text-sm text-gray-600\">{vehicle.user.companyName}</p>\n                  )}\n                  <div className=\"flex items-center space-x-1 text-green-600 text-sm\">\n                    <CheckCircle className=\"h-4 w-4\" />\n                    <span>Compte v√©rifi√©</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Contact Actions */}\n              <div className=\"space-y-3\">\n                <button\n                  onClick={() => setShowContactInfo(!showContactInfo)}\n                  className=\"w-full bg-primary-bolt-500 text-white py-3 px-4 rounded-xl hover:bg-primary-bolt-600 transition-colors font-semibold flex items-center justify-center space-x-2\"\n                >\n                  <Phone className=\"h-5 w-5\" />\n                  <span>Voir le t√©l√©phone</span>\n                </button>\n\n                {showContactInfo && vehicle.user?.phone && (\n                  <div className=\"p-3 bg-primary-bolt-50 rounded-xl text-center\">\n                    <a\n                      href={`tel:${vehicle.user.phone}`}\n                      className=\"text-lg font-semibold text-primary-bolt-500 hover:text-primary-bolt-600\"\n                    >\n                      {vehicle.user.phone}\n                    </a>\n                  </div>\n                )}\n\n                {/* WhatsApp Button - Mobile Only */}\n                {vehicle.user?.whatsapp && (\n                  <button\n                    onClick={() => {\n                      const cleanNumber = vehicle.user!.whatsapp!.replace(/[\\s\\-\\(\\)]/g, '').replace(/^\\+/, '');\n                      const message = `Bonjour, je suis int√©ress√© par votre annonce ${vehicle.title}.`;\n                      const whatsappUrl = `https://wa.me/${cleanNumber}?text=${encodeURIComponent(message)}`;\n                      window.open(whatsappUrl, '_blank');\n                    }}\n                    className=\"w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-xl transition-colors font-semibold flex items-center justify-center space-x-2 md:hidden\"\n                  >\n                    <svg className=\"h-5 w-5 fill-current\" viewBox=\"0 0 24 24\">\n                      <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                    </svg>\n                    <span>Contacter sur WhatsApp</span>\n                  </button>\n                )}\n\n                <button \n                  onClick={handleMessageClick}\n                  className=\"w-full bg-gray-600 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition-colors font-semibold flex items-center justify-center space-x-2\"\n                >\n                  <MessageCircle className=\"h-5 w-5\" />\n                  <span>Envoyer un message</span>\n                </button>\n\n\n              </div>\n            </div>\n\n            {/* WhatsApp Contact Component - Desktop/Tablet Only */}\n            {vehicle.user?.whatsapp && (\n              <div className=\"hidden md:block\">\n                <WhatsAppContact\n                  whatsappNumber={vehicle.user.whatsapp}\n                  listingTitle={vehicle.title}\n                  ownerName={vehicle.user.name}\n                />\n              </div>\n            )}\n\n\n\n            {/* Safety Tips */}\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-xl p-6\">\n              <h3 className=\"font-semibold text-yellow-800 mb-3\">üõ°Ô∏è Conseils de s√©curit√©</h3>\n              <ul className=\"text-sm text-yellow-700 space-y-2\">\n                <li>‚Ä¢ Rencontrez le vendeur en personne</li>\n                <li>‚Ä¢ Inspectez le v√©hicule avant l'achat</li>\n                <li>‚Ä¢ V√©rifiez les papiers du v√©hicule</li>\n                <li>‚Ä¢ M√©fiez-vous des prix trop attractifs</li>\n                <li>‚Ä¢ Pr√©f√©rez un paiement s√©curis√©</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Compatible Spare Parts Section - Only for damaged vehicles */}\n        {compatibleParts.length > 0 && vehicle.condition === 'damaged' && (\n          <div className=\"mt-12\">\n            <div className=\"flex items-center mb-6\">\n              <div className=\"bg-orange-100 p-3 rounded-full mr-4\">\n                <CheckCircle className=\"h-6 w-6 text-orange-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-900\">Pi√®ces d√©tach√©es compatibles propos√©es sur le site</h2>\n                <p className=\"text-gray-600 mt-1\">Pi√®ces disponibles compatibles avec ce v√©hicule</p>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {compatibleParts.map((part) => (\n                <div key={part.id} className=\"bg-white rounded-lg shadow-md border border-gray-200 p-4\">\n                  <h3 className=\"font-semibold text-base text-gray-900 mb-2\">{part.title}</h3>\n                  \n                  <div className=\"text-xl font-bold text-primary-bolt-600 mb-2\">\n                    {formatPrice(part.price)}\n                  </div>\n                  \n                  <div className=\"flex items-center text-sm text-gray-500 mb-4\">\n                    <MapPin className=\"h-4 w-4 mr-1\" />\n                    <span>{part.location}</span>\n                  </div>\n\n                  <button\n                    onClick={() => onVehicleSelect?.(part)}\n                    className=\"w-full bg-primary-bolt-500 text-white px-4 py-2 rounded-lg hover:bg-primary-bolt-600 transition-colors text-sm font-medium\"\n                  >\n                    Voir l'annonce\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Similar Products Section */}\n        {similarVehicles.length > 0 && (\n          <div className=\"mt-12\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Ces annonces peuvent vous int√©resser</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {similarVehicles.map((similarVehicle) => (\n                <VehicleCard\n                  key={similarVehicle.id}\n                  vehicle={similarVehicle}\n                  onClick={() => onVehicleSelect?.(similarVehicle)}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Message Form Modal */}\n      {showMessageForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl shadow-xl max-w-md w-full p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Envoyer un message</h3>\n              <button\n                onClick={() => setShowMessageForm(false)}\n                className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            \n            <div className=\"mb-4\">\n              <p className=\"text-sm text-gray-600 mb-2\">\n                Message √† <span className=\"font-semibold\">{vehicle.user?.name}</span> concernant :\n              </p>\n              <p className=\"text-sm font-medium text-gray-900 bg-gray-50 p-2 rounded\">{vehicle.title}</p>\n            </div>\n\n            <div className=\"mb-4\">\n              <textarea\n                value={messageText}\n                onChange={(e) => setMessageText(e.target.value)}\n                placeholder=\"Tapez votre message ici...\"\n                className=\"w-full h-32 p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-primary-bolt-500 focus:border-transparent\"\n                maxLength={500}\n              />\n              <div className=\"text-right text-xs text-gray-500 mt-1\">\n                {messageText.length}/500 caract√®res\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowMessageForm(false)}\n                className=\"flex-1 px-4 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors\"\n              >\n                Annuler\n              </button>\n              <button\n                onClick={handleSendMessage}\n                disabled={!messageText.trim()}\n                className=\"flex-1 px-4 py-2 bg-primary-bolt-500 text-white rounded-lg hover:bg-primary-bolt-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2\"\n              >\n                <Send className=\"h-4 w-4\" />\n                <span>Envoyer</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Footer with custom navigation handler */}\n      <Footer setCurrentView={handleFooterNavigation} />\n    </div>\n  );\n};","size_bytes":26328},"components/client-components/VehicleListings.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { Filter, Grid, List, SortAsc, X } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { VehicleCard } from './VehicleCard';\nimport { SearchFilters } from './SearchFilters';\nimport { VehicleDetail } from './VehicleDetail';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\nexport const VehicleListings: React.FC = () => {\n  const { filteredVehicles, searchFilters, setSearchFilters, selectedVehicle, setSelectedVehicle } = useApp();\n  const [showFilters, setShowFilters] = useState(false);\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n\n  // Scroll to top when component mounts or when filters change\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [searchFilters]);\n\n  const handleSortChange = (sortBy: string) => {\n    setSearchFilters({ ...searchFilters, sortBy: sortBy as any });\n  };\n\n  // Fonction pour supprimer un filtre sp√©cifique\n  const removeFilter = (filterKey: string) => {\n    const newFilters = { ...searchFilters };\n    delete newFilters[filterKey as keyof typeof newFilters];\n    setSearchFilters(newFilters);\n  };\n\n  // Fonction pour obtenir le label lisible d'un filtre\n  const getFilterLabel = (key: string, value: any) => {\n    const labels: { [key: string]: string } = {\n      category: 'cat√©gorie',\n      subcategory: 'subcat√©gorie', \n      brand: 'marque',\n      model: 'mod√®le',\n      yearFrom: 'ann√©e min',\n      yearTo: 'ann√©e max',\n      priceFrom: 'prix min',\n      priceTo: 'prix max',\n      mileageFrom: 'km min',\n      mileageTo: 'km max',\n      fuelType: 'carburant',\n      condition: '√©tat',\n      location: 'localisation',\n      sortBy: 'tri'\n    };\n\n    // Traduction des valeurs sp√©ciales\n    let displayValue = value;\n    if (key === 'condition') {\n      const conditionLabels: { [key: string]: string } = {\n        'used': 'Occasion',\n        'damaged': 'Accident√©'\n      };\n      displayValue = conditionLabels[value] || value;\n    } else if (key === 'fuelType') {\n      const fuelLabels: { [key: string]: string } = {\n        'essence': 'Essence',\n        'diesel': 'Diesel',\n        'electric': '√âlectrique',\n        'hybrid': 'Hybride'\n      };\n      displayValue = fuelLabels[value] || value;\n    } else if (key === 'sortBy') {\n      const sortLabels: { [key: string]: string } = {\n        'date': 'Plus r√©centes',\n        'price_asc': 'Prix croissant',\n        'price_desc': 'Prix d√©croissant',\n        'mileage': 'Kilom√©trage'\n      };\n      displayValue = sortLabels[value] || value;\n    }\n\n    return `${labels[key] || key}: ${displayValue}`;\n  };\n\n\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"flex flex-col lg:flex-row lg:justify-between lg:items-center mb-8\">\n          <div className=\"mb-4 lg:mb-0\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Annonces disponibles</h1>\n            <p className=\"text-gray-600 mt-2\">\n              {filteredVehicles.length} r√©sultat{filteredVehicles.length !== 1 ? 's' : ''} trouv√©{filteredVehicles.length !== 1 ? 's' : ''}\n            </p>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            {/* Sort */}\n            <select\n              value={searchFilters.sortBy || 'date'}\n              onChange={(e) => handleSortChange(e.target.value)}\n              className=\"px-4 py-2 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n            >\n              <option value=\"date\">Plus r√©centes</option>\n              <option value=\"price_asc\">Prix croissant</option>\n              <option value=\"price_desc\">Prix d√©croissant</option>\n              <option value=\"mileage\">Kilom√©trage</option>\n            </select>\n\n            {/* View Mode */}\n            <div className=\"flex bg-white border border-gray-300 rounded-xl\">\n              <button\n                onClick={() => setViewMode('grid')}\n                className={`p-2 ${viewMode === 'grid' ? 'bg-primary-bolt-50 text-primary-bolt-500' : 'text-gray-600'} hover:bg-gray-50 transition-colors`}\n              >\n                <Grid className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={() => setViewMode('list')}\n                className={`p-2 ${viewMode === 'list' ? 'bg-primary-bolt-50 text-primary-bolt-500' : 'text-gray-600'} hover:bg-gray-50 transition-colors border-l border-gray-300`}\n              >\n                <List className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            {/* Filters Button */}\n            <button\n              onClick={() => setShowFilters(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-primary-bolt-500 text-white rounded-xl hover:bg-primary-bolt-600 transition-colors\"\n            >\n              <Filter className=\"h-5 w-5\" />\n              <span>Filtres</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Active Filters */}\n        {Object.keys(searchFilters).filter(key => searchFilters[key as keyof typeof searchFilters] && key !== 'sortBy').length > 0 && (\n          <div className=\"mb-6 p-4 bg-white rounded-xl border border-gray-200\">\n            <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Filtres actifs:</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {Object.entries(searchFilters).map(([key, value]) => {\n                if (!value || key === 'sortBy') return null; // Exclure le tri des filtres actifs\n                return (\n                  <span\n                    key={key}\n                    className=\"inline-flex items-center px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 text-sm rounded-full\"\n                  >\n                    {getFilterLabel(key, value)}\n                    <button\n                      onClick={() => removeFilter(key)}\n                      className=\"ml-2 p-0.5 hover:bg-primary-bolt-200 rounded-full transition-colors\"\n                      title=\"Supprimer ce filtre\"\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </button>\n                  </span>\n                );\n              })}\n              <button\n                onClick={() => setSearchFilters({})}\n                className=\"text-sm text-red-600 hover:text-red-800 font-medium\"\n              >\n                Effacer tous les filtres\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Vehicle Grid */}\n        {filteredVehicles.length > 0 ? (\n          <div className={\n            viewMode === 'grid' \n              ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"\n              : \"space-y-6\"\n          }>\n            {filteredVehicles.map((vehicle) => (\n              <VehicleCard\n                key={vehicle.id}\n                vehicle={vehicle}\n                onClick={() => setSelectedVehicle(vehicle)}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <div className=\"mb-4 flex justify-center\">\n              <img \n                src={brandIcon} \n                alt=\"Brand icon\" \n                className=\"w-16 h-16 opacity-40\"\n              />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Aucun r√©sultat trouv√©\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Essayez de modifier vos crit√®res de recherche ou consultez toutes nos annonces.\n            </p>\n            <button\n              onClick={() => setSearchFilters({})}\n              className=\"px-6 py-3 bg-primary-bolt-500 text-white rounded-lg hover:bg-primary-bolt-600 transition-colors\"\n            >\n              Voir toutes les annonces\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Search Filters Modal */}\n      <SearchFilters isOpen={showFilters} onClose={() => setShowFilters(false)} />\n    </div>\n  );\n};","size_bytes":8151},"components/client-components/WhatsAppContact.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { MessageCircle, QrCode, Smartphone } from 'lucide-react';\n\ninterface WhatsAppContactProps {\n  whatsappNumber: string;\n  listingTitle: string;\n  ownerName: string;\n}\n\nexport const WhatsAppContact: React.FC<WhatsAppContactProps> = ({\n  whatsappNumber,\n  listingTitle,\n  ownerName\n}) => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n\n  // Nettoyer le num√©ro WhatsApp (enlever espaces, tirets, etc.)\n  const cleanWhatsAppNumber = (number: string): string => {\n    return number.replace(/[\\s\\-\\(\\)]/g, '').replace(/^\\+/, '');\n  };\n\n  // Pr√©parer le message WhatsApp\n  const whatsappMessage = `Bonjour, je suis int√©ress√© par votre annonce ${listingTitle}.`;\n  const encodedMessage = encodeURIComponent(whatsappMessage);\n  const cleanNumber = cleanWhatsAppNumber(whatsappNumber);\n  \n  // URL WhatsApp\n  const whatsappUrl = `https://wa.me/${cleanNumber}?text=${encodedMessage}`;\n\n  // D√©tecter si l'utilisateur est sur mobile\n  useEffect(() => {\n    const checkIsMobile = () => {\n      setIsMobile(window.innerWidth < 768); // Tablette = 768px et plus\n    };\n\n    checkIsMobile();\n    window.addEventListener('resize', checkIsMobile);\n    return () => window.removeEventListener('resize', checkIsMobile);\n  }, []);\n\n  // G√©n√©rer l'URL du QR code\n  useEffect(() => {\n    if (!isMobile) {\n      // Utiliser l'API QR Server pour g√©n√©rer le QR code (taille plus grande pour meilleure scanabilit√© : 150x150)\n      const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&format=png&bgcolor=ffffff&color=000000&qzone=1&data=${encodeURIComponent(whatsappUrl)}`;\n      setQrCodeUrl(qrUrl);\n    }\n  }, [whatsappUrl, isMobile]);\n\n  const handleWhatsAppClick = () => {\n    window.open(whatsappUrl, '_blank');\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-6\">\n\n      {/* Version Desktop/Tablette - Bouton d'abord, puis QR Code */}\n      {!isMobile && (\n        <div className=\"text-center space-y-4\">\n          {/* Bouton WhatsApp Web en premier */}\n          <div>\n            <button\n              onClick={handleWhatsAppClick}\n              className=\"w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 px-6 rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2\"\n            >\n              <MessageCircle className=\"h-5 w-5\" />\n              <span>Contacter sur WhatsApp Web</span>\n            </button>\n          </div>\n\n          {/* Sous-titre pour le QR Code */}\n          <div className=\"pt-2\">\n            <h4 className=\"text-sm font-medium text-gray-600 mb-3\">Ou scanner le QR Code depuis votre t√©l√©phone</h4>\n            <p className=\"text-xs text-gray-500 mb-2\">Contact : {ownerName} ({whatsappNumber})</p>\n          </div>\n\n          {/* QR Code en second */}\n          <div className=\"flex justify-center\">\n            <div className=\"bg-white p-3 rounded-2xl shadow-lg border border-gray-200\">\n              {qrCodeUrl ? (\n                <img \n                  src={qrCodeUrl} \n                  alt=\"QR Code WhatsApp\"\n                  className=\"w-36 h-36 object-contain\"\n                  loading=\"lazy\"\n                />\n              ) : (\n                <div className=\"w-36 h-36 bg-gray-100 rounded-lg flex items-center justify-center\">\n                  <QrCode className=\"h-8 w-8 text-gray-400\" />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Version Mobile - Bouton direct */}\n      {isMobile && (\n        <div className=\"space-y-4\">\n          <div className=\"bg-gray-50 rounded-xl p-4 border border-gray-200\">\n            <p className=\"text-sm text-gray-600 mb-2\">Message qui sera envoy√© :</p>\n            <p className=\"text-sm text-gray-800 italic\">\"{whatsappMessage}\"</p>\n          </div>\n\n          <button\n            onClick={handleWhatsAppClick}\n            className=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-4 px-6 rounded-xl transition-all duration-200 flex items-center justify-center space-x-3 shadow-lg hover:shadow-xl transform hover:scale-105\"\n          >\n            <div className=\"flex items-center space-x-2\">\n              <Smartphone className=\"h-6 w-6\" />\n              <MessageCircle className=\"h-6 w-6\" />\n            </div>\n            <span className=\"text-lg\">Contacter sur WhatsApp</span>\n          </button>\n\n          <p className=\"text-center text-xs text-gray-500 mt-2\">\n            Ouvrira WhatsApp avec le message pr√©rempli\n          </p>\n        </div>\n      )}\n\n\n    </div>\n  );\n};","size_bytes":4657},"components/ui/toast.tsx":{"content":"\"use client\";\n\nimport * as React from \"react\";\nimport * as ToastPrimitives from \"@radix-ui/react-toast\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nconst ToastProvider = ToastPrimitives.Provider;\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n));\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  );\n});\nToast.displayName = ToastPrimitives.Root.displayName;\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n));\nToastAction.displayName = ToastPrimitives.Action.displayName;\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n));\nToastClose.displayName = ToastPrimitives.Close.displayName;\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nToastTitle.displayName = ToastPrimitives.Title.displayName;\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n));\nToastDescription.displayName = ToastPrimitives.Description.displayName;\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>;\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n};","size_bytes":4875},"components/ui/toaster.tsx":{"content":"\"use client\";\n\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\";\n\nexport function Toaster() {\n  const { toasts } = useToast();\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        );\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  );\n}","size_bytes":791},"server/auth/google-oauth.ts":{"content":"// Configuration Google OAuth pour Supabase\nexport const googleOAuthConfig = {\n  // Configuration sera ajout√©e apr√®s setup Supabase Dashboard\n  provider: 'google',\n  redirectUrl: `${process.env.VITE_SUPABASE_URL}/auth/v1/callback`,\n  scopes: ['email', 'profile'],\n  \n  // Configuration PKCE pour s√©curit√© renforc√©e\n  pkce: true,\n  \n  // Fonction helper pour extraire les donn√©es du profil Google\n  extractUserData: (user: any) => ({\n    id: user.id,\n    email: user.email,\n    name: user.user_metadata?.full_name || user.user_metadata?.name || extractNameFromEmail(user.email),\n    avatarUrl: user.user_metadata?.avatar_url || user.user_metadata?.picture,\n    emailVerified: user.email_confirmed_at ? true : false,\n    provider: 'google'\n  })\n};\n\nfunction extractNameFromEmail(email: string): string {\n  return email.split('@')[0].replace(/[._]/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n}","size_bytes":900},"server/lib/supabase.ts":{"content":"import { createClient } from '@supabase/supabase-js'\n\n// Utilisation des variables d'environnement Node.js c√¥t√© serveur\nconst supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://qfcmwdbopwbymljjkdyb.supabase.co'\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFmY213ZGJvcHdieW1samps2R5YiIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNzUyMTI4NjEzLCJleHAiOjIwNjc3MDQ2MTN9.Rn7sGCVfv0W_SX4T_DfDXGhjAV_jjLo3EhOWzSUf3ZI'\n\nif (!supabaseServiceKey) {\n  console.error('SUPABASE_SERVICE_ROLE_KEY not found, using anon key for server operations')\n} else {\n  console.log('üîó Connexion Supabase initialis√©e avec le client serveur')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseServiceKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n})","size_bytes":888},"server/routes/admin.ts":{"content":"import { Router } from 'express';\nimport { supabase } from '../lib/supabase';\n\nconst router = Router();\n\n// Middleware pour v√©rifier les droits admin\nconst requireAdmin = async (req: any, res: any, next: any) => {\n  const userEmail = req.headers['x-user-email'];\n  \n  if (!userEmail) {\n    return res.status(401).json({ error: 'Non authentifi√©' });\n  }\n\n  try {\n    // V√©rifier si l'utilisateur est admin\n    const { data: user } = await supabase\n      .from('users')\n      .select('id')\n      .eq('email', userEmail)\n      .single();\n\n    if (!user) {\n      return res.status(404).json({ error: 'Utilisateur non trouv√©' });\n    }\n\n    const { data: admin } = await supabase\n      .from('admins')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n\n    if (!admin) {\n      return res.status(403).json({ error: 'Acc√®s refus√© - Droits administrateur requis' });\n    }\n\n    (req as any).admin = admin;\n    (req as any).userId = user.id;\n    next();\n  } catch (error) {\n    console.error('Erreur v√©rification admin:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n};\n\n// GET /api/admin/users - R√©cup√©rer tous les utilisateurs\nrouter.get('/users', requireAdmin, async (req, res) => {\n  try {\n    const { data: users, error } = await supabase\n      .from('users')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n\n    res.json(users);\n  } catch (error) {\n    console.error('Erreur r√©cup√©ration utilisateurs:', error);\n    res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des utilisateurs' });\n  }\n});\n\n// GET /api/admin/annonces - R√©cup√©rer toutes les annonces\nrouter.get('/annonces', requireAdmin, async (req, res) => {\n  try {\n    const { data: annonces, error } = await supabase\n      .from('annonces')\n      .select(`\n        *,\n        users:user_id (\n          id,\n          name,\n          email\n        )\n      `)\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n\n    // Transformer pour correspondre au format attendu\n    const formattedAnnonces = annonces.map(annonce => ({\n      id: annonce.id,\n      title: annonce.title,\n      price: annonce.price,\n      status: annonce.status || 'active',\n      createdAt: annonce.created_at,\n      user: Array.isArray(annonce.users) ? annonce.users[0] : annonce.users\n    }));\n\n    res.json(formattedAnnonces);\n  } catch (error) {\n    console.error('Erreur r√©cup√©ration annonces:', error);\n    res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des annonces' });\n  }\n});\n\n// PATCH /api/admin/users/:id - Actions sur les utilisateurs\nrouter.patch('/users/:id', requireAdmin, async (req, res) => {\n  const { id } = req.params;\n  const { action } = req.body;\n\n  try {\n    let updateData: any = {};\n\n    switch (action) {\n      case 'activate':\n        updateData = { verified: true };\n        break;\n      case 'suspend':\n        updateData = { verified: false };\n        break;\n      default:\n        return res.status(400).json({ error: 'Action non reconnue' });\n    }\n\n    const { error } = await supabase\n      .from('users')\n      .update(updateData)\n      .eq('id', id);\n\n    if (error) throw error;\n\n    // Log de l'action admin\n    await supabase\n      .from('admin_logs')\n      .insert({\n        admin_user_id: (req as any).userId,\n        action: `user_${action}`,\n        target_type: 'user',\n        target_id: id,\n        details: { action, timestamp: new Date().toISOString() }\n      });\n\n    res.json({ success: true, message: `Utilisateur ${action === 'activate' ? 'activ√©' : 'suspendu'}` });\n  } catch (error) {\n    console.error('Erreur action utilisateur:', error);\n    res.status(500).json({ error: 'Erreur lors de l\\'action sur l\\'utilisateur' });\n  }\n});\n\n// PATCH /api/admin/annonces/:id - Actions sur les annonces\nrouter.patch('/annonces/:id', requireAdmin, async (req, res) => {\n  const { id } = req.params;\n  const { action } = req.body;\n\n  try {\n    let updateData: any = {};\n\n    switch (action) {\n      case 'approve':\n        updateData = { status: 'active' };\n        break;\n      case 'reject':\n      case 'suspend':\n        updateData = { status: 'suspended' };\n        break;\n      default:\n        return res.status(400).json({ error: 'Action non reconnue' });\n    }\n\n    const { error } = await supabase\n      .from('annonces')\n      .update(updateData)\n      .eq('id', id);\n\n    if (error) throw error;\n\n    // Log de l'action admin\n    await supabase\n      .from('admin_logs')\n      .insert({\n        admin_user_id: (req as any).userId,\n        action: `annonce_${action}`,\n        target_type: 'annonce',\n        target_id: id,\n        details: { action, timestamp: new Date().toISOString() }\n      });\n\n    res.json({ success: true, message: `Annonce ${action === 'approve' ? 'approuv√©e' : 'suspendue'}` });\n  } catch (error) {\n    console.error('Erreur action annonce:', error);\n    res.status(500).json({ error: 'Erreur lors de l\\'action sur l\\'annonce' });\n  }\n});\n\n// GET /api/admin/stats - Statistiques pour le dashboard\nrouter.get('/stats', requireAdmin, async (req, res) => {\n  try {\n    const [\n      { count: totalUsers },\n      { count: totalAnnonces },\n      { count: pendingReports }\n    ] = await Promise.all([\n      supabase.from('users').select('*', { count: 'exact', head: true }),\n      supabase.from('annonces').select('*', { count: 'exact', head: true }),\n      supabase.from('reports').select('*', { count: 'exact', head: true }).eq('status', 'pending')\n    ]);\n\n    res.json({\n      totalUsers: totalUsers || 0,\n      totalAnnonces: totalAnnonces || 0,\n      pendingReports: pendingReports || 0,\n      monthlyGrowth: 12 // Placeholder - calculer r√©ellement\n    });\n  } catch (error) {\n    console.error('Erreur r√©cup√©ration stats:', error);\n    res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des statistiques' });\n  }\n});\n\nexport default router;","size_bytes":5926},"server/routes/auth-sync.ts":{"content":"// Routes pour synchronisation manuelle des utilisateurs\nimport { Router } from 'express';\nimport { supabaseServer } from '../supabase.js';\n\nconst router = Router();\n\n// Endpoint pour synchroniser un utilisateur apr√®s inscription/connexion\nrouter.post('/sync', async (req, res) => {\n  try {\n    const { userId, userData } = req.body;\n    \n    if (!userId) {\n      return res.status(400).json({ error: 'userId required' });\n    }\n    \n    console.log(`üîÑ Synchronisation manuelle utilisateur: ${userId}`);\n    \n    // 1. R√©cup√©rer les donn√©es depuis auth.users\n    const { data: authUser, error: authError } = await supabaseServer.auth.admin.getUserById(userId);\n    \n    if (authError || !authUser.user) {\n      console.error('‚ùå Utilisateur auth introuvable:', authError);\n      return res.status(404).json({ error: 'Auth user not found' });\n    }\n    \n    const user = authUser.user;\n    const metadata = user.user_metadata || {};\n    \n    // 2. Synchroniser dans public.users\n    const { data: syncedUser, error: userError } = await supabaseServer\n      .from('users')\n      .upsert({\n        id: user.id,\n        email: user.email || '',\n        name: metadata.name || metadata.full_name || user.email?.split('@')[0] || 'Utilisateur',\n        type: metadata.type || 'individual',\n        phone: metadata.phone || null,\n        company_name: metadata.companyName || null,\n        created_at: user.created_at,\n        email_verified: user.email_confirmed_at ? true : false\n      })\n      .select()\n      .single();\n      \n    if (userError) {\n      console.error('‚ùå Erreur sync users:', userError);\n      return res.status(500).json({ error: 'Failed to sync user' });\n    }\n    \n    // 3. Synchroniser dans profiles\n    const { data: profile, error: profileError } = await supabaseServer\n      .from('profiles')\n      .upsert({\n        id: user.id,\n        account_type: metadata.type || 'individual',\n        phone: metadata.phone || null,\n        onboarding_completed: false, // Nouveau utilisateur\n        marketing_consent: metadata.acceptNewsletter || false,\n        created_at: user.created_at\n      })\n      .select()\n      .single();\n      \n    if (profileError) {\n      console.error('‚ùå Erreur sync profiles:', profileError);\n      return res.status(500).json({ error: 'Failed to sync profile' });\n    }\n    \n    console.log(`‚úÖ Utilisateur synchronis√©: ${syncedUser.name}`);\n    \n    res.json({\n      success: true,\n      user: syncedUser,\n      profile: profile\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur synchronisation:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// Endpoint pour v√©rifier le statut de synchronisation\nrouter.get('/status/:userId', async (req, res) => {\n  try {\n    const { userId } = req.params;\n    \n    // V√©rifier dans public.users\n    const { data: user } = await supabaseServer\n      .from('users')\n      .select('*')\n      .eq('id', userId)\n      .single();\n      \n    // V√©rifier dans profiles\n    const { data: profile } = await supabaseServer\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n      \n    res.json({\n      synced: !!user,\n      hasProfile: !!profile,\n      user,\n      profile\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur status:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\nexport default router;","size_bytes":3415},"server/routes/conversations.ts":{"content":"import { Router } from 'express';\nimport { supabaseServer } from '../supabase';\n\nconst router = Router();\n\n// Middleware pour r√©cup√©rer l'utilisateur actuel (temporaire)\nconst getCurrentUser = (req: any, res: any, next: any) => {\n  const userId = req.headers['x-user-id'] || 'demo';\n  req.currentUserId = userId;\n  next();\n};\n\n// GET /api/conversations - R√©cup√©rer les conversations de l'utilisateur\nrouter.get('/', getCurrentUser, async (req: any, res) => {\n  try {\n    const userId = req.currentUserId;\n\n    // R√©cup√©rer les messages de l'utilisateur (structure simplifi√©e)\n    const { data: messages, error } = await supabaseServer\n      .from('messages')\n      .select(`\n        *,\n        from_users:users!from_user_id(id, name, email),\n        to_users:users!to_user_id(id, name, email)\n      `)\n      .or(`from_user_id.eq.${userId},to_user_id.eq.${userId}`)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Erreur r√©cup√©ration messages:', error);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration conversations' });\n    }\n\n    // Grouper les messages par autre utilisateur\n    const conversationMap = new Map();\n    \n    messages?.forEach((message) => {\n      const otherUser = message.from_user_id === userId ? message.to_users : message.from_users;\n      const key = otherUser.id;\n      \n      // Extraire vehicleId du contenu si pr√©sent\n      const vehicleMatch = message.content.match(/\\[V√©hicule ID: (\\d+)\\]/);\n      const vehicleId = vehicleMatch ? vehicleMatch[1] : null;\n      const cleanContent = message.content.replace(/\\[V√©hicule ID: \\d+\\]\\s*/, '');\n      \n      if (!conversationMap.has(key)) {\n        conversationMap.set(key, {\n          id: key,\n          vehicle_id: vehicleId,\n          vehicle_title: vehicleId ? `V√©hicule #${vehicleId}` : 'Discussion g√©n√©rale',\n          other_user: {\n            id: otherUser.id,\n            name: otherUser.name,\n            email: otherUser.email\n          },\n          last_message_at: message.created_at,\n          unread_count: 0,\n          last_message: cleanContent.substring(0, 50) + (cleanContent.length > 50 ? '...' : '')\n        });\n      }\n    });\n\n    const conversations = Array.from(conversationMap.values());\n    res.json(conversations);\n\n  } catch (error) {\n    console.error('Erreur API conversations:', error);\n    res.status(500).json({ error: 'Erreur interne' });\n  }\n});\n\n// GET /api/conversations/:id/messages - R√©cup√©rer les messages d'une conversation\nrouter.get('/:conversationId/messages', getCurrentUser, async (req: any, res) => {\n  try {\n    const { conversationId } = req.params;\n    const userId = req.currentUserId;\n    \n    // Extraire vehicle_id et other_user_id du conversationId\n    const [vehicleId, otherUserId] = conversationId.split('_');\n\n    const { data: messages, error } = await supabaseServer\n      .from('messages')\n      .select(`\n        *,\n        from_users:users!from_user_id(name)\n      `)\n      .eq('vehicle_id', vehicleId)\n      .or(`and(from_user_id.eq.${userId},to_user_id.eq.${otherUserId}),and(from_user_id.eq.${otherUserId},to_user_id.eq.${userId})`)\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      console.error('Erreur r√©cup√©ration messages:', error);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration messages' });\n    }\n\n    const formattedMessages = messages?.map((message) => ({\n      id: message.id,\n      content: message.content,\n      sender_id: message.from_user_id,\n      sender_name: message.from_users?.name || 'Utilisateur',\n      created_at: message.created_at\n    })) || [];\n\n    res.json(formattedMessages);\n\n  } catch (error) {\n    console.error('Erreur API messages:', error);\n    res.status(500).json({ error: 'Erreur interne' });\n  }\n});\n\n// POST /api/conversations/:id/messages - Envoyer un message\nrouter.post('/:conversationId/messages', getCurrentUser, async (req: any, res) => {\n  try {\n    const { conversationId } = req.params;\n    const { content } = req.body;\n    const userId = req.currentUserId;\n\n    if (!content?.trim()) {\n      return res.status(400).json({ error: 'Le contenu du message est requis' });\n    }\n\n    // Extraire vehicle_id et other_user_id du conversationId\n    const [vehicleId, otherUserId] = conversationId.split('_');\n\n    const messageId = `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    const { data: message, error } = await supabaseServer\n      .from('messages')\n      .insert({\n        id: messageId,\n        from_user_id: userId,\n        to_user_id: otherUserId,\n        vehicle_id: vehicleId,\n        content: content.trim(),\n        created_at: new Date().toISOString()\n      })\n      .select('id')\n      .single();\n\n    if (error) {\n      console.error('Erreur envoi message:', error);\n      return res.status(500).json({ error: 'Erreur envoi message' });\n    }\n\n    res.json({ id: message.id, success: true });\n\n  } catch (error) {\n    console.error('Erreur API envoi message:', error);\n    res.status(500).json({ error: 'Erreur interne' });\n  }\n});\n\nexport default router;","size_bytes":5099},"server/routes/favorites.ts":{"content":"import { Router } from 'express';\nimport { storage } from '../storage';\n\nconst router = Router();\n\n// R√©cup√©rer les favoris d'un utilisateur\nrouter.get('/user/:userId', async (req, res) => {\n  try {\n    const { userId } = req.params;\n    \n    console.log('üîÑ R√©cup√©ration favoris pour utilisateur:', userId);\n    \n    // Utiliser la nouvelle m√©thode getUserFavorites qui fait le JOIN\n    const favorites = await storage.getUserFavorites(userId);\n\n    console.log('‚úÖ Favoris r√©cup√©r√©s:', favorites.length);\n    res.json(favorites);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur favoris:', error);\n    console.error('‚ùå Stack trace:', error.stack);\n    console.error('‚ùå Message d√©taill√©:', error.message);\n    res.status(500).json({ error: 'Erreur serveur', details: error.message });\n  }\n});\n\n// Ajouter un v√©hicule aux favoris\nrouter.post('/add', async (req, res) => {\n  try {\n    const { userId, vehicleId } = req.body;\n    \n    console.log('üîÑ Ajout favori:', { userId, vehicleId });\n    \n    const wishlistItem = {\n      userId,\n      vehicleId\n    };\n    const result = await storage.addToWishlist(wishlistItem);\n\n    console.log('‚úÖ Favori ajout√©');\n    res.json({ success: true, id: result.id });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur ajout favori:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Supprimer un v√©hicule des favoris\nrouter.delete('/remove', async (req, res) => {\n  try {\n    const { userId, vehicleId } = req.body;\n    \n    console.log('üîÑ Suppression favori:', { userId, vehicleId });\n    \n    await storage.removeFromWishlist(userId, vehicleId);\n\n    console.log('‚úÖ Favori supprim√©');\n    res.json({ success: true });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur suppression favori:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\nexport default router;","size_bytes":1919},"server/routes/images.ts":{"content":"import express from 'express';\nimport { supabaseServer } from '../supabase';\nimport multer from 'multer';\nimport { v4 as uuidv4 } from 'uuid';\nimport sharp from 'sharp';\nimport type { Request, Response } from 'express';\n\nconst router = express.Router();\n\n// Configuration multer pour g√©rer les uploads\nconst upload = multer({ \n  storage: multer.memoryStorage(),\n  limits: { \n    fileSize: 5 * 1024 * 1024, // 5MB par fichier\n    files: 4 // Maximum 4 fichiers par upload\n  },\n  fileFilter: (req, file, cb) => {\n    // V√©rifier que c'est bien une image\n    if (file.mimetype.startsWith('image/')) {\n      cb(null, true);\n    } else {\n      cb(new Error('Seules les images sont autoris√©es') as any, false);\n    }\n  }\n});\n\n// Upload multiple images pour une annonce\nrouter.post('/upload/:userId/:annonceId?', upload.array('images', 4), async (req: Request, res: Response) => {\n  try {\n    const { userId, annonceId } = req.params;\n    const files = req.files as Express.Multer.File[];\n    \n    if (!files || files.length === 0) {\n      return res.status(400).json({ error: 'Aucune image fournie' });\n    }\n\n    console.log(`üì∏ Upload de ${files.length} images pour utilisateur ${userId}`);\n\n    const uploadedImages: Array<{\n      id: string;\n      url: string;\n      path: string;\n      originalName: string;\n      size: number;\n    }> = [];\n\n    for (const file of files) {\n      // G√©n√©rer un nom unique pour l'image\n      const imageId = uuidv4();\n      const extension = file.originalname.split('.').pop()?.toLowerCase() || 'jpg';\n      const fileName = `${imageId}.webp`; // Forcer extension WebP\n      const filePath = `annonces/${userId}/${fileName}`;\n\n      try {\n        // Optimiser l'image : WebP + Redimensionnement + Filigrane\n        console.log(`üìä Traitement image: ${file.originalname} (${Math.round(file.size / 1024)}KB)`);\n        \n        const image = sharp(file.buffer);\n        const metadata = await image.metadata();\n        \n        // D√©terminer les dimensions optimales\n        const isMainImage = file.originalname.toLowerCase().includes('main') || file.originalname.toLowerCase().includes('principal');\n        const maxWidth = isMainImage ? 1200 : 800;\n        const maxHeight = isMainImage ? 900 : 600;\n        \n        let processedImage = image;\n        \n        // 1. Redimensionnement si n√©cessaire\n        if (metadata.width && metadata.height && (metadata.width > maxWidth || metadata.height > maxHeight)) {\n          console.log(`üîß Redimensionnement: ${metadata.width}x${metadata.height} ‚Üí max ${maxWidth}x${maxHeight}`);\n          processedImage = processedImage.resize(maxWidth, maxHeight, { \n            fit: 'inside', \n            withoutEnlargement: true \n          });\n        }\n        \n        // 2. Ajout du filigrane \"PassionAuto2Roues.com\" au centre\n        console.log('üè∑Ô∏è  Ajout du filigrane au centre...');\n        const watermarkSvg = `\n          <svg width=\"400\" height=\"80\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"400\" height=\"80\" fill=\"black\" fill-opacity=\"0.3\" rx=\"10\"/>\n            <text x=\"200\" y=\"45\" \n                  font-family=\"Arial, sans-serif\" \n                  font-size=\"28\" \n                  font-weight=\"bold\"\n                  text-anchor=\"middle\" \n                  fill=\"white\" \n                  fill-opacity=\"1\">PassionAuto2Roues.com</text>\n          </svg>`;\n        \n        const watermarkBuffer = Buffer.from(watermarkSvg);\n        \n        // 3. Conversion WebP avec filigrane au centre (position absolue)\n        const processedBuffer = await processedImage\n          .composite([{\n            input: watermarkBuffer,\n            left: Math.max(0, Math.floor((maxWidth - 400) / 2)),\n            top: Math.max(0, Math.floor((maxHeight - 80) / 2)),\n            blend: 'over'\n          }])\n          .webp({ \n            quality: 85,\n            effort: 6,\n            smartSubsample: true\n          })\n          .toBuffer();\n        \n        const savings = Math.round((1 - processedBuffer.length / file.size) * 100);\n        const newSize = Math.round(processedBuffer.length / 1024);\n        \n        console.log(`‚úÖ Image optimis√©e: ${newSize}KB WebP avec filigrane (${savings}% de r√©duction)`);\n\n        // Upload vers Supabase Storage\n        const { data, error } = await supabaseServer.storage\n          .from('vehicle-images')\n          .upload(filePath, processedBuffer, {\n            contentType: 'image/webp', // Type WebP\n            cacheControl: '31536000', // Cache 1 an\n          });\n\n        if (error) {\n          console.error(`‚ùå Erreur upload image ${fileName}:`, error);\n          continue;\n        }\n\n        // Obtenir l'URL publique\n        const { data: publicUrlData } = supabaseServer.storage\n          .from('vehicle-images')\n          .getPublicUrl(filePath);\n\n        uploadedImages.push({\n          id: imageId,\n          url: publicUrlData.publicUrl,\n          path: filePath,\n          originalName: file.originalname,\n          size: processedBuffer.length\n        });\n\n        console.log(`‚úÖ Image upload√©e: ${fileName}`);\n      } catch (imageError) {\n        console.error(`‚ùå Erreur traitement image ${file.originalname}:`, imageError);\n      }\n    }\n\n    if (uploadedImages.length === 0) {\n      return res.status(500).json({ error: '√âchec de l\\'upload de toutes les images' });\n    }\n\n    res.json({ \n      success: true,\n      images: uploadedImages,\n      message: `${uploadedImages.length}/${files.length} images upload√©es avec succ√®s`\n    });\n\n  } catch (error) {\n    console.error('‚ùå Erreur upload images:', error);\n    res.status(500).json({ error: 'Erreur serveur lors de l\\'upload' });\n  }\n});\n\n// Supprimer une image\nrouter.delete('/delete/:userId/:imagePath', async (req, res) => {\n  try {\n    const { userId, imagePath } = req.params;\n    const fullPath = `annonces/${userId}/${imagePath}`;\n\n    console.log(`üóëÔ∏è Suppression image: ${fullPath}`);\n\n    const { error } = await supabaseServer.storage\n      .from('vehicle-images')\n      .remove([fullPath]);\n\n    if (error) {\n      console.error('‚ùå Erreur suppression image:', error);\n      return res.status(500).json({ error: 'Erreur lors de la suppression' });\n    }\n\n    console.log(`‚úÖ Image supprim√©e: ${fullPath}`);\n    res.json({ success: true, message: 'Image supprim√©e avec succ√®s' });\n\n  } catch (error) {\n    console.error('‚ùå Erreur suppression image:', error);\n    res.status(500).json({ error: 'Erreur serveur lors de la suppression' });\n  }\n});\n\n// Obtenir les images d'une annonce\nrouter.get('/annonce/:annonceId', async (req, res) => {\n  try {\n    const { annonceId } = req.params;\n\n    // R√©cup√©rer l'annonce pour obtenir les images\n    const { data: annonce, error } = await supabaseServer\n      .from('annonces')\n      .select('images, userId')\n      .eq('id', annonceId)\n      .single();\n\n    if (error || !annonce) {\n      return res.status(404).json({ error: 'Annonce non trouv√©e' });\n    }\n\n    const images = annonce.images || [];\n    \n    // Transformer les chemins en URLs publiques si n√©cessaire\n    const imageUrls = images.map((imagePath: string) => {\n      if (imagePath.startsWith('http')) {\n        return imagePath; // D√©j√† une URL compl√®te\n      }\n      \n      // Construire l'URL publique Supabase\n      const { data: publicUrlData } = supabaseServer.storage\n        .from('vehicle-images')\n        .getPublicUrl(imagePath);\n        \n      return publicUrlData.publicUrl;\n    });\n\n    res.json({ success: true, images: imageUrls });\n\n  } catch (error) {\n    console.error('‚ùå Erreur r√©cup√©ration images:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\nexport default router;","size_bytes":7693},"server/routes/messages-simple.ts":{"content":"import { Router } from 'express';\nimport { supabaseServer } from '../supabase';\nimport { randomUUID } from 'crypto';\n\nconst router = Router();\n\nconsole.log('üîß Route messages-simple charg√©e');\n\n// Cr√©er un message simple avec mapping IDs num√©riques\nrouter.post('/send', async (req, res) => {\n  try {\n    const { fromUserId, toUserId, content, vehicleId } = req.body;\n    \n    console.log('üì¨ Envoi message avec IDs:', { fromUserId, toUserId, vehicleId });\n    \n    // Plus besoin de mapping - utilisation directe des IDs string\n    console.log('üìù IDs utilis√©s directement:', { \n      from: fromUserId,\n      to: toUserId\n    });\n    \n    // V√©rifier les utilisateurs originaux\n    const { data: fromUser } = await supabaseServer\n      .from('users')\n      .select('id, name')\n      .eq('id', fromUserId)\n      .single();\n      \n    const { data: toUser } = await supabaseServer\n      .from('users')\n      .select('id, name')\n      .eq('id', toUserId)\n      .single();\n      \n    if (!fromUser || !toUser) {\n      return res.status(404).json({ \n        error: 'Utilisateur introuvable',\n        fromUser: fromUser?.name,\n        toUser: toUser?.name\n      });\n    }\n    \n    // Cr√©er le message sans pr√©fixe - le vehicleId est d√©j√† stock√© dans annonce_id\n    const messageContent = content;\n    \n    // Insertion avec IDs num√©riques\n    let messageCreated = false;\n    let messageId = null;\n    \n    try {\n      // G√©n√©rer un ID unique pour contourner la contrainte NOT NULL\n      const uniqueId = Date.now() + Math.floor(Math.random() * 1000);\n      \n      const { data: newMessage, error } = await supabaseServer\n        .from('messages')\n        .insert([{\n          id: uniqueId,\n          from_user_id: fromUserId,\n          to_user_id: toUserId,\n          annonce_id: vehicleId ? parseInt(vehicleId) : null,\n          content: messageContent,\n          read: false\n        }])\n        .select('id')\n        .single();\n        \n      if (!error) {\n        messageCreated = true;\n        messageId = newMessage.id;\n        console.log('‚úÖ Message sauvegard√© dans Supabase!', messageId);\n      } else {\n        console.log('‚ùå Erreur cr√©ation message:', error.message);\n      }\n    } catch (err) {\n      console.log('‚ùå Erreur insertion:', err);\n    }\n    \n    // Si √©chec, retourner erreur explicite\n    if (!messageCreated) {\n      console.log('‚ùå Impossible de cr√©er le message dans Supabase');\n      return res.status(500).json({\n        error: 'Erreur cr√©ation message',\n        debug: {\n          fromUser: fromUser.name,\n          toUser: toUser.name,\n          contentLength: messageContent.length\n        }\n      });\n    }\n    \n    if (messageCreated) {\n      res.status(201).json({\n        success: true,\n        messageId,\n        message: 'Message envoy√© avec succ√®s'\n      });\n    } else {\n      res.status(500).json({\n        error: 'Impossible de cr√©er le message',\n        debug: {\n          fromUser: fromUser.name,\n          toUser: toUser.name,\n          contentLength: messageContent.length\n        }\n      });\n    }\n    \n  } catch (error) {\n    console.error('‚ùå Erreur envoi message:', error);\n    res.status(500).json({ \n      error: 'Erreur serveur',\n      details: error.message \n    });\n  }\n});\n\n// Marquer les messages comme lus\nrouter.post('/mark-read', async (req, res) => {\n  try {\n    const { messageIds, userId } = req.body;\n    \n    console.log('üìñ Marquage messages comme lus:', { messageIds, userId });\n    \n    if (!messageIds || !Array.isArray(messageIds) || messageIds.length === 0) {\n      return res.status(400).json({ error: 'IDs de messages requis' });\n    }\n    \n    // Marquer seulement les messages dont l'utilisateur est destinataire\n    const { error } = await supabaseServer\n      .from('messages')\n      .update({ read: true })\n      .in('id', messageIds)\n      .eq('to_user_id', userId);\n    \n    if (error) {\n      console.error('‚ùå Erreur marquage lecture:', error);\n      return res.status(500).json({ error: 'Erreur marquage lecture' });\n    }\n    \n    console.log('‚úÖ Messages marqu√©s comme lus');\n    return res.json({ success: true });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur marquage lecture:', error);\n    return res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// R√©cup√©rer les messages d'une conversation\nrouter.get('/conversation/:userId1/:userId2', async (req, res) => {\n  try {\n    const { userId1, userId2 } = req.params;\n    \n    const { data: messages, error } = await supabaseServer\n      .from('messages')\n      .select(`\n        *,\n        from_user:users!from_user_id(id, name, email),\n        to_user:users!to_user_id(id, name, email)\n      `)\n      .or(`and(from_user_id.eq.${userId1},to_user_id.eq.${userId2}),and(from_user_id.eq.${userId2},to_user_id.eq.${userId1})`)\n      .order('created_at', { ascending: true });\n      \n    if (error) {\n      console.error('‚ùå Erreur r√©cup√©ration messages:', error);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration messages' });\n    }\n    \n    // Messages pr√™ts pour l'affichage (plus de nettoyage n√©cessaire)\n    const cleanMessages = messages?.map(msg => ({\n      id: msg.id,\n      content: msg.content,\n      vehicleId: msg.annonce_id,\n      fromUser: msg.from_user,\n      toUser: msg.to_user,\n      createdAt: msg.created_at,\n      read: msg.read\n    })) || [];\n    \n    res.json(cleanMessages);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur conversation:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// R√©cup√©rer les messages d'un utilisateur pour son dashboard\nrouter.get('/user/:userId', async (req, res) => {\n  try {\n    const { userId } = req.params;\n    \n    console.log('üì¨ R√©cup√©ration messages pour utilisateur:', userId);\n    \n    // Plus besoin de mapping - utilisation directe de l'ID string\n    console.log('üìù ID utilis√© directement:', userId);\n    \n    // R√©cup√©rer tous les messages o√π l'utilisateur est exp√©diteur ou destinataire\n    const { data: messages, error } = await supabaseServer\n      .from('messages')\n      .select(`\n        id,\n        from_user_id,\n        to_user_id,\n        annonce_id,\n        content,\n        read,\n        created_at\n      `)\n      .or(`from_user_id.eq.${userId},to_user_id.eq.${userId}`)\n      .order('created_at', { ascending: false });\n      \n    if (error) {\n      console.error('‚ùå Erreur r√©cup√©ration messages:', error.message);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration messages' });\n    }\n    \n    console.log(`‚úÖ Messages trouv√©s: ${messages.length}`);\n    \n    // Grouper par conversation et enrichir avec les infos utilisateurs/v√©hicules\n    const conversationsMap = new Map();\n    \n    for (const message of messages) {\n      const isFromCurrentUser = message.from_user_id === userId;\n      const otherUserId = isFromCurrentUser ? message.to_user_id : message.from_user_id;\n      const conversationKey = `${Math.min(message.from_user_id, message.to_user_id)}-${Math.max(message.from_user_id, message.to_user_id)}-vehicle-${message.annonce_id}`;\n      \n      if (!conversationsMap.has(conversationKey)) {\n        // R√©cup√©rer les infos de l'autre utilisateur directement\n        const { data: otherUser } = await supabaseServer\n          .from('users')\n          .select('id, name, email')\n          .eq('id', otherUserId)\n          .single();\n        \n        // R√©cup√©rer les infos du v√©hicule si disponible\n        let vehicleInfo = null;\n        if (message.annonce_id) {\n          const { data: vehicle } = await supabaseServer\n            .from('annonces')\n            .select('id, title')\n            .eq('id', message.annonce_id)\n            .single();\n          vehicleInfo = vehicle;\n        }\n        \n        conversationsMap.set(conversationKey, {\n          id: conversationKey,\n          vehicle_id: message.annonce_id,\n          vehicle_title: vehicleInfo?.title || 'V√©hicule non sp√©cifi√©',\n          other_user: otherUser || { id: otherUserId, name: 'Utilisateur inconnu', email: '' },\n          last_message_at: message.created_at,\n          last_message: message.content,\n          unread_count: 0,\n          messages: []\n        });\n      }\n      \n      const conversation = conversationsMap.get(conversationKey);\n      conversation.messages.push({\n        id: message.id,\n        content: message.content,\n        sender_id: message.from_user_id,\n        is_from_current_user: isFromCurrentUser,\n        created_at: message.created_at,\n        read: message.read\n      });\n      \n      // Compter les messages non lus (seulement ceux re√ßus par l'utilisateur actuel)\n      if (!isFromCurrentUser && !message.read) {\n        conversation.unread_count++;\n      }\n    }\n    \n    const conversations = Array.from(conversationsMap.values());\n    \n    res.json({\n      conversations,\n      total_messages: messages.length\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur messages utilisateur:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Route pour nettoyer les pr√©fixes des anciens messages\nrouter.post('/clean-prefixes', async (req, res) => {\n  try {\n    // R√©cup√©rer tous les messages avec pr√©fixes\n    const { data: messages, error: fetchError } = await supabaseServer\n      .from('messages')\n      .select('id, content')\n      .like('content', '[V√©hicule ID:%');\n      \n    if (fetchError) {\n      console.error('‚ùå Erreur r√©cup√©ration messages:', fetchError);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration' });\n    }\n    \n    console.log(`üßπ Nettoyage de ${messages?.length || 0} messages avec pr√©fixes`);\n    \n    // Nettoyer chaque message\n    if (messages && messages.length > 0) {\n      for (const message of messages) {\n        const cleanContent = message.content.replace(/^\\[V√©hicule ID: \\d+\\]\\s*/, '');\n        \n        const { error: updateError } = await supabaseServer\n          .from('messages')\n          .update({ content: cleanContent })\n          .eq('id', message.id);\n          \n        if (updateError) {\n          console.error('‚ùå Erreur mise √† jour message:', updateError);\n        }\n      }\n    }\n    \n    console.log('‚úÖ Messages nettoy√©s avec succ√®s');\n    res.json({ success: true, cleaned: messages?.length || 0 });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur nettoyage:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Route de d√©veloppement pour vider la table messages\nrouter.delete('/clear-all', async (req, res) => {\n  try {\n    const { error } = await supabaseServer\n      .from('messages')\n      .delete()\n      .neq('id', 0); // Supprime tous les messages\n      \n    if (error) {\n      console.error('‚ùå Erreur suppression messages:', error);\n      return res.status(500).json({ error: 'Erreur suppression' });\n    }\n    \n    console.log('üóëÔ∏è Tous les messages supprim√©s');\n    res.json({ success: true, message: 'Messages supprim√©s' });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Route de migration pour convertir tous les IDs num√©riques vers UUIDs\nrouter.post('/migrate-users-to-uuid', async (req, res) => {\n  try {\n    console.log('üîÑ D√©but migration utilisateurs vers UUIDs...');\n    \n    // 1. R√©cup√©rer tous les utilisateurs avec ID num√©rique\n    const { data: numericUsers, error: fetchError } = await supabaseServer\n      .from('users')\n      .select('*')\n      .not('id', 'like', '%-%'); // Exclut les UUIDs (contiennent des tirets)\n      \n    if (fetchError) {\n      console.error('‚ùå Erreur r√©cup√©ration users:', fetchError);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration utilisateurs' });\n    }\n    \n    console.log(`üìä ${numericUsers.length} utilisateurs √† migrer`);\n    const migrationResults = [];\n    \n    for (const user of numericUsers) {\n      try {\n        // G√©n√©rer un UUID unique\n        const newUuid = randomUUID();\n        console.log(`üîÑ Migration ${user.id} ‚Üí ${newUuid}`);\n        \n        // 2. Cr√©er le nouvel utilisateur avec UUID\n        const { data: newUser, error: insertError } = await supabaseServer\n          .from('users')\n          .insert({\n            id: newUuid,\n            email: user.email,\n            name: user.name,\n            phone: user.phone,\n            whatsapp: user.whatsapp,\n            type: user.type,\n            company_name: user.company_name,\n            company_logo: user.company_logo,\n            address: user.address,\n            city: user.city,\n            postal_code: user.postal_code,\n            website: user.website,\n            siret: user.siret,\n            bio: user.bio,\n            avatar: user.avatar,\n            specialties: user.specialties,\n            verified: user.verified,\n            email_verified: user.email_verified,\n            contact_preferences: user.contact_preferences,\n            created_at: user.created_at\n          })\n          .select()\n          .single();\n          \n        if (insertError) {\n          console.error(`‚ùå Erreur cr√©ation user ${newUuid}:`, insertError);\n          continue;\n        }\n        \n        // 3. Mettre √† jour les annonces\n        const { error: annoncesError } = await supabaseServer\n          .from('annonces')\n          .update({ user_id: newUuid })\n          .eq('user_id', user.id);\n          \n        if (annoncesError) {\n          console.error(`‚ö†Ô∏è Erreur maj annonces pour ${newUuid}:`, annoncesError);\n        }\n        \n        // 4. Mettre √† jour les messages (from_user_id)\n        const { error: messagesFromError } = await supabaseServer\n          .from('messages')\n          .update({ from_user_id: newUuid })\n          .eq('from_user_id', user.id);\n          \n        // 5. Mettre √† jour les messages (to_user_id)  \n        const { error: messagesToError } = await supabaseServer\n          .from('messages')\n          .update({ to_user_id: newUuid })\n          .eq('to_user_id', user.id);\n          \n        if (messagesFromError || messagesToError) {\n          console.error(`‚ö†Ô∏è Erreur maj messages pour ${newUuid}:`, messagesFromError, messagesToError);\n        }\n        \n        // 6. Supprimer l'ancien utilisateur\n        const { error: deleteError } = await supabaseServer\n          .from('users')\n          .delete()\n          .eq('id', user.id);\n          \n        if (deleteError) {\n          console.error(`‚ö†Ô∏è Erreur suppression ancien user ${user.id}:`, deleteError);\n        }\n        \n        migrationResults.push({\n          oldId: user.id,\n          newUuid: newUuid,\n          name: user.name,\n          success: true\n        });\n        \n        console.log(`‚úÖ Migration r√©ussie: ${user.name} (${user.id} ‚Üí ${newUuid})`);\n        \n      } catch (error) {\n        console.error(`‚ùå Erreur migration user ${user.id}:`, error);\n        migrationResults.push({\n          oldId: user.id,\n          name: user.name,\n          success: false,\n          error: error.message\n        });\n      }\n    }\n    \n    console.log('üéâ Migration termin√©e !');\n    res.json({\n      success: true,\n      message: 'Migration utilisateurs termin√©e',\n      results: migrationResults,\n      migrated: migrationResults.filter(r => r.success).length,\n      failed: migrationResults.filter(r => !r.success).length\n    });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur migration:', error);\n    res.status(500).json({ error: 'Erreur migration' });\n  }\n});\n\nexport default router;","size_bytes":15555},"server/routes/messaging-simple.ts":{"content":"import { Router } from 'express';\nimport { supabase } from '../lib/supabase.js';\n\nconst router = Router();\n\n// Middleware simple pour l'authentification\nconst requireAuth = (req: any, res: any, next: any) => {\n  const userId = req.headers['x-user-id'] || req.query.userId;\n  if (!userId) {\n    return res.status(401).json({ error: 'Authentification requise' });\n  }\n  req.userId = userId;\n  next();\n};\n\n// POST /api/messages/send - Envoyer un message simple\nrouter.post('/messages/send', requireAuth, async (req: any, res) => {\n  try {\n    const { vehicle_id, to_user_id, content } = req.body;\n    const from_user_id = req.userId;\n\n    if (!vehicle_id || !to_user_id || !content) {\n      return res.status(400).json({ error: 'vehicle_id, to_user_id et content sont requis' });\n    }\n\n    // Validation anti-abus\n    if (content.length > 1000) {\n      return res.status(400).json({ error: 'Message trop long (max 1000 caract√®res)' });\n    }\n\n    // V√©rifier que les utilisateurs existent\n    const { data: fromUser } = await supabase\n      .from('users')\n      .select('id, name, email')\n      .eq('id', from_user_id)\n      .single();\n\n    const { data: toUser } = await supabase\n      .from('users') \n      .select('id, name, email')\n      .eq('id', to_user_id)\n      .single();\n\n    const { data: vehicle } = await supabase\n      .from('annonces')\n      .select('id, title')\n      .eq('id', vehicle_id)\n      .single();\n\n    if (!fromUser || !toUser || !vehicle) {\n      return res.status(404).json({ error: 'Utilisateur ou v√©hicule non trouv√©' });\n    }\n\n    // Ins√©rer le message dans l'ancienne table messages\n    const { data: message, error } = await supabase\n      .from('messages')\n      .insert({\n        from_user_id,\n        to_user_id,\n        vehicle_id,\n        content,\n        read: false,\n        created_at: new Date().toISOString()\n      })\n      .select('*')\n      .single();\n\n    if (error) {\n      console.error('Erreur insertion message:', error);\n      return res.status(500).json({ error: 'Erreur lors de l\\'envoi du message' });\n    }\n\n    res.status(201).json({\n      id: message.id,\n      from_user: {\n        id: fromUser.id,\n        name: fromUser.name,\n        email: fromUser.email\n      },\n      to_user: {\n        id: toUser.id,\n        name: toUser.name,\n        email: toUser.email\n      },\n      vehicle: {\n        id: vehicle.id,\n        title: vehicle.title\n      },\n      content: message.content,\n      created_at: message.created_at,\n      read: message.read\n    });\n\n  } catch (error) {\n    console.error('Erreur API envoi message:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// GET /api/messages/conversations/:userId - Liste des conversations d'un utilisateur\nrouter.get('/messages/conversations/:userId', requireAuth, async (req: any, res) => {\n  try {\n    const userId = req.params.userId;\n    const currentUserId = req.userId;\n\n    // V√©rifier que l'utilisateur peut acc√©der √† ces conversations\n    if (userId !== currentUserId) {\n      return res.status(403).json({ error: 'Acc√®s interdit' });\n    }\n\n    // R√©cup√©rer toutes les conversations (messages group√©s par v√©hicule et utilisateur)\n    const { data: messages, error } = await supabase\n      .from('messages')\n      .select(`\n        id,\n        from_user_id,\n        to_user_id, \n        vehicle_id,\n        content,\n        created_at,\n        read,\n        vehicles!inner(title, images),\n        from_user:users!messages_from_user_id_fkey(id, name, email),\n        to_user:users!messages_to_user_id_fkey(id, name, email)\n      `)\n      .or(`from_user_id.eq.${userId},to_user_id.eq.${userId}`)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Erreur r√©cup√©ration conversations:', error);\n      return res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des conversations' });\n    }\n\n    // Grouper par v√©hicule et par interlocuteur\n    const conversationsMap = new Map();\n\n    messages.forEach((msg: any) => {\n      const otherUserId = msg.from_user_id === userId ? msg.to_user_id : msg.from_user_id;\n      const conversationKey = `${msg.vehicle_id}-${otherUserId}`;\n      \n      if (!conversationsMap.has(conversationKey) || \n          new Date(msg.created_at) > new Date(conversationsMap.get(conversationKey).last_message_at)) {\n        \n        const otherUser = msg.from_user_id === userId ? msg.to_user : msg.from_user;\n        \n        conversationsMap.set(conversationKey, {\n          vehicle_id: msg.vehicle_id,\n          vehicle_title: msg.vehicles.title,\n          vehicle_image: msg.vehicles.images?.[0] || null,\n          other_user: {\n            id: otherUser.id,\n            name: otherUser.name,\n            email: otherUser.email\n          },\n          last_message: msg.content,\n          last_message_at: msg.created_at,\n          unread_count: 0 // √Ä calculer\n        });\n      }\n    });\n\n    // Calculer les messages non lus pour chaque conversation\n    const conversations = Array.from(conversationsMap.values());\n    \n    for (const conv of conversations) {\n      const { count } = await supabase\n        .from('messages')\n        .select('id', { count: 'exact' })\n        .eq('vehicle_id', conv.vehicle_id)\n        .eq('from_user_id', conv.other_user.id)\n        .eq('to_user_id', userId)\n        .eq('read', false);\n      \n      conv.unread_count = count || 0;\n    }\n\n    res.json(conversations);\n\n  } catch (error) {\n    console.error('Erreur API conversations:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// GET /api/messages/conversation/:vehicleId/:otherUserId - Messages d'une conversation\nrouter.get('/messages/conversation/:vehicleId/:otherUserId', requireAuth, async (req: any, res) => {\n  try {\n    const { vehicleId, otherUserId } = req.params;\n    const userId = req.userId;\n    const limit = parseInt(req.query.limit as string) || 50;\n    const offset = parseInt(req.query.offset as string) || 0;\n\n    // R√©cup√©rer les messages entre ces deux utilisateurs pour ce v√©hicule\n    const { data: messages, error } = await supabase\n      .from('messages')\n      .select(`\n        id,\n        from_user_id,\n        to_user_id,\n        content,\n        created_at,\n        read,\n        from_user:users!messages_from_user_id_fkey(id, name, email)\n      `)\n      .eq('vehicle_id', vehicleId)\n      .or(`and(from_user_id.eq.${userId},to_user_id.eq.${otherUserId}),and(from_user_id.eq.${otherUserId},to_user_id.eq.${userId})`)\n      .order('created_at', { ascending: true })\n      .range(offset, offset + limit - 1);\n\n    if (error) {\n      console.error('Erreur r√©cup√©ration messages:', error);\n      return res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des messages' });\n    }\n\n    // Marquer comme lus les messages re√ßus\n    await supabase\n      .from('messages')\n      .update({ read: true })\n      .eq('vehicle_id', vehicleId)\n      .eq('from_user_id', otherUserId)\n      .eq('to_user_id', userId)\n      .eq('read', false);\n\n    const formattedMessages = messages.map((msg: any) => ({\n      id: msg.id,\n      sender: {\n        id: msg.from_user.id,\n        name: msg.from_user.name,\n        email: msg.from_user.email\n      },\n      content: msg.content,\n      created_at: msg.created_at,\n      is_own: msg.from_user_id === userId,\n      read: msg.read\n    }));\n\n    res.json({\n      messages: formattedMessages,\n      has_more: messages.length === limit\n    });\n\n  } catch (error) {\n    console.error('Erreur API messages conversation:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// GET /api/messages/unread-count/:userId - Nombre total de messages non lus\nrouter.get('/messages/unread-count/:userId', requireAuth, async (req: any, res) => {\n  try {\n    const userId = req.params.userId;\n    const currentUserId = req.userId;\n\n    if (userId !== currentUserId) {\n      return res.status(403).json({ error: 'Acc√®s interdit' });\n    }\n\n    const { count, error } = await supabase\n      .from('messages')\n      .select('id', { count: 'exact' })\n      .eq('to_user_id', userId)\n      .eq('read', false);\n\n    if (error) {\n      console.error('Erreur comptage messages non lus:', error);\n      return res.status(500).json({ error: 'Erreur lors du comptage des messages non lus' });\n    }\n\n    res.json({ unread_count: count || 0 });\n\n  } catch (error) {\n    console.error('Erreur API comptage messages:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\nexport default router;","size_bytes":8518},"server/routes/messaging.ts":{"content":"import { Router } from 'express';\nimport { supabase } from '../lib/supabase.js';\n\nconst router = Router();\n\n// Interface pour les r√©ponses\ninterface ConversationResponse {\n  id: string;\n  vehicle_id: string;\n  vehicle_title?: string;\n  participants: {\n    id: string;\n    name: string;\n    email: string;\n  }[];\n  last_message_at: string;\n  unread_count: number;\n}\n\ninterface MessageResponse {\n  id: string;\n  conversation_id: string;\n  sender_id: string;\n  sender_name?: string;\n  content: string;\n  message_type: string;\n  file_url?: string;\n  created_at: string;\n}\n\n// Middleware pour v√©rifier l'authentification\nconst requireAuth = (req: any, res: any, next: any) => {\n  // Pour l'instant on simule avec un userId en query/header\n  // Plus tard on utilisera Supabase Auth\n  const userId = req.headers['x-user-id'] || req.query.userId || 'demo';\n  if (!userId) {\n    return res.status(401).json({ error: 'Authentification requise' });\n  }\n  req.userId = userId;\n  next();\n};\n\n// POST /api/conversations - Cr√©er ou r√©cup√©rer une conversation\nrouter.post('/conversations', requireAuth, async (req: any, res) => {\n  try {\n    const { vehicle_id, seller_id } = req.body;\n    const buyer_id = req.userId;\n\n    if (!vehicle_id || !seller_id) {\n      return res.status(400).json({ error: 'vehicle_id et seller_id sont requis' });\n    }\n\n    // Utiliser la fonction PostgreSQL pour cr√©er/r√©cup√©rer la conversation\n    const { data, error } = await supabase.rpc('create_conversation_if_not_exists', {\n      p_vehicle_id: vehicle_id,\n      p_buyer_id: buyer_id,\n      p_seller_id: seller_id\n    });\n\n    if (error) {\n      console.error('Erreur cr√©ation conversation:', error);\n      return res.status(500).json({ error: 'Erreur lors de la cr√©ation de la conversation' });\n    }\n\n    // R√©cup√©rer les d√©tails de la conversation cr√©√©e\n    const { data: conversation, error: fetchError } = await supabase\n      .from('conversations')\n      .select(`\n        id,\n        vehicle_id,\n        last_message_at,\n        vehicles!inner(title),\n        conversation_participants!inner(\n          user_id,\n          users!inner(id, email, firstName, lastName)\n        )\n      `)\n      .eq('id', data)\n      .single();\n\n    if (fetchError) {\n      console.error('Erreur r√©cup√©ration conversation:', fetchError);\n      return res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration de la conversation' });\n    }\n\n    res.json({\n      id: conversation.id,\n      vehicle_id: conversation.vehicle_id,\n      vehicle_title: conversation.vehicles.title,\n      participants: conversation.conversation_participants.map((p: any) => ({\n        id: p.users.id,\n        name: `${p.users.firstName || ''} ${p.users.lastName || ''}`.trim() || p.users.email,\n        email: p.users.email\n      })),\n      last_message_at: conversation.last_message_at\n    });\n\n  } catch (error) {\n    console.error('Erreur API conversations:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// GET /api/conversations - Liste des conversations de l'utilisateur\nrouter.get('/conversations', requireAuth, async (req: any, res) => {\n  try {\n    const userId = req.userId;\n\n    const { data: conversations, error } = await supabase\n      .from('conversations')\n      .select(`\n        id,\n        vehicle_id,\n        last_message_at,\n        vehicles!inner(title, images),\n        conversation_participants!inner(\n          user_id,\n          last_read_message_id,\n          users!inner(id, email, firstName, lastName)\n        )\n      `)\n      .eq('conversation_participants.user_id', userId)\n      .order('last_message_at', { ascending: false });\n\n    if (error) {\n      console.error('Erreur r√©cup√©ration conversations:', error);\n      return res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des conversations' });\n    }\n\n    // Calculer les messages non lus pour chaque conversation\n    const conversationsWithUnread = await Promise.all(\n      conversations.map(async (conv: any) => {\n        // Compter les messages non lus\n        const userParticipant = conv.conversation_participants.find((p: any) => p.user_id === userId);\n        const lastReadMessageId = userParticipant?.last_read_message_id;\n\n        let unreadCount = 0;\n        if (lastReadMessageId) {\n          const { count } = await supabase\n            .from('messages')\n            .select('id', { count: 'exact' })\n            .eq('vehicle_id', conv.vehicle_id)\n            .gt('created_at', \n              await supabase\n                .from('messages')\n                .select('created_at')\n                .eq('id', lastReadMessageId)\n                .single()\n                .then(r => r.data?.created_at || '1970-01-01')\n            );\n          unreadCount = count || 0;\n        } else {\n          // Si pas de message lu, tous sont non lus\n          const { count } = await supabase\n            .from('messages')\n            .select('id', { count: 'exact' })\n            .eq('vehicle_id', conv.vehicle_id);\n          unreadCount = count || 0;\n        }\n\n        return {\n          id: conv.id,\n          vehicle_id: conv.vehicle_id,\n          vehicle_title: conv.vehicles.title,\n          vehicle_image: conv.vehicles.images?.[0] || null,\n          participants: conv.conversation_participants\n            .filter((p: any) => p.user_id !== userId)\n            .map((p: any) => ({\n              id: p.users.id,\n              name: `${p.users.firstName || ''} ${p.users.lastName || ''}`.trim() || p.users.email,\n              email: p.users.email\n            })),\n          last_message_at: conv.last_message_at,\n          unread_count: unreadCount\n        };\n      })\n    );\n\n    res.json(conversationsWithUnread);\n\n  } catch (error) {\n    console.error('Erreur API liste conversations:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// GET /api/conversations/:id/messages - Messages d'une conversation avec pagination\nrouter.get('/conversations/:id/messages', requireAuth, async (req: any, res) => {\n  try {\n    const conversationId = req.params.id;\n    const userId = req.userId;\n    const limit = parseInt(req.query.limit) || 50;\n    const cursor = req.query.cursor; // Pour pagination keyset\n\n    // V√©rifier que l'utilisateur fait partie de la conversation\n    const { data: participant, error: authError } = await supabase\n      .from('conversation_participants')\n      .select('id')\n      .eq('conversation_id', conversationId)\n      .eq('user_id', userId)\n      .single();\n\n    if (authError || !participant) {\n      return res.status(403).json({ error: 'Acc√®s interdit √† cette conversation' });\n    }\n\n    // Construire la requ√™te avec pagination keyset\n    let query = supabase\n      .from('messages')\n      .select(`\n        id,\n        from_user_id,\n        to_user_id,\n        content,\n        created_at,\n        users!messages_from_user_id_fkey(firstName, lastName, email)\n      `)\n      .eq('vehicle_id', conversationId) // Note: besoin d'adapter selon la structure\n      .order('created_at', { ascending: false })\n      .limit(limit);\n\n    // Pagination keyset\n    if (cursor) {\n      query = query.lt('created_at', cursor);\n    }\n\n    const { data: messages, error } = await query;\n\n    if (error) {\n      console.error('Erreur r√©cup√©ration messages:', error);\n      return res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des messages' });\n    }\n\n    const messagesWithSender = messages.map((msg: any) => ({\n      id: msg.id,\n      sender_id: msg.from_user_id,\n      sender_name: `${msg.users.firstName || ''} ${msg.users.lastName || ''}`.trim() || msg.users.email,\n      content: msg.content,\n      created_at: msg.created_at,\n      is_own: msg.from_user_id === userId\n    }));\n\n    // Marquer les messages comme lus\n    await supabase\n      .from('conversation_participants')\n      .update({ last_read_message_id: messages[0]?.id })\n      .eq('conversation_id', conversationId)\n      .eq('user_id', userId);\n\n    res.json({\n      messages: messagesWithSender,\n      has_more: messages.length === limit,\n      next_cursor: messages.length > 0 ? messages[messages.length - 1].created_at : null\n    });\n\n  } catch (error) {\n    console.error('Erreur API messages:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// POST /api/messages - Envoyer un message\nrouter.post('/messages', requireAuth, async (req: any, res) => {\n  try {\n    const { vehicle_id, to_user_id, content, message_type = 'text', file_url } = req.body;\n    const from_user_id = req.userId;\n\n    if (!vehicle_id || !to_user_id || !content) {\n      return res.status(400).json({ error: 'vehicle_id, to_user_id et content sont requis' });\n    }\n\n    // Validation anti-abus\n    if (content.length > 1000) {\n      return res.status(400).json({ error: 'Message trop long (max 1000 caract√®res)' });\n    }\n\n    // V√©rifier que l'utilisateur peut envoyer des messages pour ce v√©hicule\n    // (il doit faire partie d'une conversation existante ou √™tre autoris√© √† en cr√©er une)\n    \n    const { data: message, error } = await supabase\n      .from('messages')\n      .insert({\n        from_user_id,\n        to_user_id,\n        vehicle_id,\n        content,\n        created_at: new Date().toISOString()\n      })\n      .select(`\n        id,\n        from_user_id,\n        to_user_id,\n        content,\n        created_at,\n        users!messages_from_user_id_fkey(firstName, lastName, email)\n      `)\n      .single();\n\n    if (error) {\n      console.error('Erreur envoi message:', error);\n      return res.status(500).json({ error: 'Erreur lors de l\\'envoi du message' });\n    }\n\n    res.status(201).json({\n      id: message.id,\n      sender_id: message.from_user_id,\n      sender_name: `${message.users.firstName || ''} ${message.users.lastName || ''}`.trim() || message.users.email,\n      content: message.content,\n      created_at: message.created_at\n    });\n\n  } catch (error) {\n    console.error('Erreur API envoi message:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\nexport default router;","size_bytes":10061},"server/routes/profile.ts":{"content":"import { Router } from 'express';\nimport { supabaseServer } from '../supabase';\n\nconst router = Router();\n\n// Mettre √† jour le profil utilisateur\nrouter.put('/update/:userId', async (req, res) => {\n  try {\n    const { userId } = req.params;\n    const { \n      name,\n      phone, \n      whatsapp, \n      postalCode, \n      city, \n      type, \n      contactPreferences, \n      companyName, \n      address,\n      website,\n      siret,\n      bio\n    } = req.body;\n    \n    // Construire l'objet de mise √† jour (email exclu)\n    const updateData: any = {};\n    \n    if (name !== undefined) updateData.name = name;\n    if (phone !== undefined) updateData.phone = phone;\n    if (whatsapp !== undefined) updateData.whatsapp = whatsapp;\n    if (postalCode !== undefined) updateData.postal_code = postalCode || null;\n    if (city !== undefined) updateData.city = city;\n    if (type !== undefined) updateData.type = type;\n    if (contactPreferences !== undefined) updateData.contact_preferences = contactPreferences;\n    if (companyName !== undefined) updateData.company_name = companyName;\n    if (address !== undefined) updateData.address = address;\n    if (website !== undefined) updateData.website = website;\n    if (siret !== undefined) updateData.siret = siret;\n    if (bio !== undefined) updateData.bio = bio;\n    \n    if (Object.keys(updateData).length === 0) {\n      return res.status(400).json({ error: 'Aucune donn√©e √† mettre √† jour' });\n    }\n    \n    const { data, error } = await supabaseServer\n      .from('users')\n      .update(updateData)\n      .eq('id', userId)\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('‚ùå Erreur mise √† jour profil:', error);\n      return res.status(500).json({ error: 'Erreur mise √† jour profil' });\n    }\n    \n    res.json(data);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur mise √† jour profil:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Obtenir le profil complet d'un utilisateur\nrouter.get('/:userId', async (req, res) => {\n  try {\n    const { userId } = req.params;\n    \n    const { data, error } = await supabaseServer\n      .from('users')\n      .select('*')\n      .eq('id', userId)\n      .single();\n    \n    if (error) {\n      console.error('‚ùå Erreur r√©cup√©ration profil:', error);\n      return res.status(500).json({ error: 'Erreur r√©cup√©ration profil' });\n    }\n    \n    res.json(data);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur r√©cup√©ration profil:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\nexport default router;","size_bytes":2604},"server/routes/saved-searches.ts":{"content":"import { Router } from 'express';\nimport { storage } from '../storage';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst router = Router();\n\n// R√©cup√©rer les recherches sauvegard√©es d'un utilisateur\nrouter.get('/user/:userId', async (req, res) => {\n  try {\n    const { userId } = req.params;\n    \n    console.log('üîÑ R√©cup√©ration recherches sauvegard√©es pour utilisateur:', userId);\n    \n    const searches = await storage.getUserSavedSearches(userId);\n\n    console.log('‚úÖ Recherches r√©cup√©r√©es:', searches.length);\n    res.json(searches);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur recherches:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Sauvegarder une nouvelle recherche\nrouter.post('/save', async (req, res) => {\n  try {\n    const { userId, name, filters, alertsEnabled } = req.body;\n    \n    console.log('üîÑ Sauvegarde recherche:', { userId, name, alertsEnabled });\n    \n    if (!name || !filters) {\n      return res.status(400).json({ error: 'Nom et filtres requis' });\n    }\n\n    const searchData = {\n      id: uuidv4(),\n      userId: userId,\n      name,\n      filters,\n      alertsEnabled: alertsEnabled || false\n    };\n\n    const result = await storage.createSavedSearch(searchData);\n\n    console.log('‚úÖ Recherche sauvegard√©e:', result.id);\n    res.json(result);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur sauvegarde recherche:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Supprimer une recherche sauvegard√©e\nrouter.delete('/:searchId', async (req, res) => {\n  try {\n    const { searchId } = req.params;\n    \n    console.log('üîÑ Suppression recherche:', { searchId });\n    \n    const success = await storage.deleteSavedSearch(searchId);\n\n    if (!success) {\n      return res.status(404).json({ error: 'Recherche non trouv√©e' });\n    }\n\n    console.log('‚úÖ Recherche supprim√©e');\n    res.json({ success: true });\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur suppression recherche:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\n// Activer/d√©sactiver les alertes pour une recherche\nrouter.patch('/:searchId/alerts', async (req, res) => {\n  try {\n    const { searchId } = req.params;\n    const { alertsEnabled } = req.body;\n    \n    console.log('üîÑ Mise √† jour alertes:', { searchId, alertsEnabled });\n    \n    const result = await storage.updateSavedSearch(searchId, { \n      alertsEnabled: alertsEnabled\n    });\n\n    if (!result) {\n      return res.status(404).json({ error: 'Recherche non trouv√©e' });\n    }\n\n    console.log('‚úÖ Alertes mises √† jour');\n    res.json(result);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur serveur mise √† jour alertes:', error);\n    res.status(500).json({ error: 'Erreur serveur' });\n  }\n});\n\nexport default router;","size_bytes":2841},"server/routes/wishlist-direct.ts":{"content":"import type { Express } from \"express\";\nimport { supabaseServer } from \"../supabase.js\";\n\nexport async function setupWishlistDirect(app: Express) {\n  // Route pour cr√©er et tester la table wishlist directement\n  app.post('/api/admin/setup-wishlist', async (req, res) => {\n    console.log('üîÑ Configuration compl√®te de la table wishlist...');\n    \n    try {\n      // 1. V√©rifier si la table existe d√©j√†\n      console.log('üîç V√©rification existence table wishlist...');\n      const { data: existingTable, error: checkError } = await supabaseServer\n        .from('wishlist')\n        .select('id')\n        .limit(1);\n        \n      if (!checkError) {\n        console.log('‚úÖ Table wishlist existe d√©j√†');\n        res.json({ \n          success: true, \n          message: 'Table wishlist existe d√©j√† et est accessible',\n          tableExists: true\n        });\n        return;\n      }\n      \n      console.log('‚ÑπÔ∏è Table wishlist n\\'existe pas encore, message:', checkError.message);\n      \n      // 2. Si la table n'existe pas, on ne peut pas la cr√©er via l'API Supabase client\n      // Informer l'utilisateur qu'il faut la cr√©er via l'interface Supabase\n      res.json({\n        success: false,\n        message: 'La table wishlist doit √™tre cr√©√©e manuellement dans Supabase',\n        error: checkError.message,\n        instructions: {\n          step1: 'Aller sur https://supabase.com/dashboard',\n          step2: 'Ouvrir l\\'√©diteur SQL',\n          step3: 'Ex√©cuter le script SQL fourni',\n          sql: `\n-- Table wishlist pour la gestion des favoris\nCREATE TABLE public.wishlist (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID NOT NULL,\n  vehicle_id TEXT NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n  CONSTRAINT wishlist_user_vehicle_unique UNIQUE (user_id, vehicle_id)\n);\n\n-- Index pour optimiser les performances\nCREATE INDEX idx_wishlist_user_id ON public.wishlist(user_id);\nCREATE INDEX idx_wishlist_vehicle_id ON public.wishlist(vehicle_id);\nCREATE INDEX idx_wishlist_created_at ON public.wishlist(created_at DESC);\n\n-- Donner les permissions n√©cessaires\nGRANT ALL ON public.wishlist TO postgres;\nGRANT ALL ON public.wishlist TO authenticated;\nGRANT ALL ON public.wishlist TO service_role;\n          `\n        }\n      });\n      \n    } catch (error) {\n      console.error('‚ùå Erreur configuration wishlist:', error);\n      res.status(500).json({ error: 'Erreur serveur' });\n    }\n  });\n\n  // Route pour migrer les favoris existants (uniquement si table existe)\n  app.post('/api/admin/migrate-favorites-safe', async (req, res) => {\n    console.log('üîÑ Migration s√©curis√©e favoris ‚Üí table wishlist...');\n    \n    try {\n      // 1. V√©rifier que la table wishlist existe\n      const { data: testWishlist, error: wishlistError } = await supabaseServer\n        .from('wishlist')\n        .select('id')\n        .limit(1);\n        \n      if (wishlistError) {\n        return res.status(400).json({ \n          error: 'Table wishlist n\\'existe pas',\n          message: 'Cr√©ez d\\'abord la table wishlist avec /api/admin/setup-wishlist'\n        });\n      }\n      \n      console.log('‚úÖ Table wishlist confirm√©e, d√©but migration...');\n      \n      // 2. R√©cup√©rer tous les utilisateurs avec des favoris dans bio\n      const { data: users, error: usersError } = await supabaseServer\n        .from('users')\n        .select('id, bio')\n        .not('bio', 'is', null);\n\n      if (usersError) {\n        console.error('‚ùå Erreur r√©cup√©ration utilisateurs:', usersError);\n        return res.status(500).json({ error: 'Erreur r√©cup√©ration utilisateurs' });\n      }\n\n      let migratedCount = 0;\n      const results = [];\n      \n      for (const user of users || []) {\n        try {\n          if (!user.bio) continue;\n          \n          const bioData = JSON.parse(user.bio);\n          const favorites = bioData.favorites || [];\n          \n          if (favorites.length === 0) continue;\n          \n          console.log(`üîÑ Migration ${favorites.length} favoris pour utilisateur ${user.id}`);\n          \n          // 3. Ins√©rer les favoris dans la table wishlist un par un avec gestion d'erreur\n          for (const vehicleId of favorites) {\n            try {\n              const { data: insertData, error: insertError } = await supabaseServer\n                .from('wishlist')\n                .insert({\n                  user_id: user.id,\n                  vehicle_id: vehicleId.toString()\n                })\n                .select()\n                .single();\n                \n              if (insertError) {\n                // Si erreur de contrainte unique, c'est normal (d√©j√† existant)\n                if (insertError.code === '23505') {\n                  console.log(`‚ÑπÔ∏è Favori ${vehicleId} d√©j√† existant pour utilisateur ${user.id}`);\n                } else {\n                  console.error(`‚ùå Erreur insertion favori ${vehicleId}:`, insertError);\n                }\n              } else {\n                migratedCount++;\n                console.log(`‚úÖ Favori ${vehicleId} migr√© avec succ√®s`);\n              }\n            } catch (e) {\n              console.error(`‚ùå Exception insertion favori ${vehicleId}:`, e);\n            }\n          }\n          \n          results.push({\n            userId: user.id,\n            favoritesCount: favorites.length,\n            status: 'processed'\n          });\n          \n        } catch (e) {\n          console.error(`‚ùå Erreur parsing bio utilisateur ${user.id}:`, e);\n          results.push({\n            userId: user.id,\n            status: 'error',\n            error: e.message\n          });\n        }\n      }\n      \n      console.log(`‚úÖ Migration termin√©e: ${migratedCount} favoris migr√©s`);\n      \n      res.json({ \n        success: true, \n        migratedCount,\n        results,\n        message: `${migratedCount} favoris migr√©s avec succ√®s`\n      });\n      \n    } catch (error) {\n      console.error('‚ùå Erreur migration favoris:', error);\n      res.status(500).json({ error: 'Erreur migration' });\n    }\n  });\n\n  // Route pour tester la table wishlist\n  app.get('/api/admin/test-wishlist', async (req, res) => {\n    console.log('üß™ Test de la table wishlist...');\n    \n    try {\n      // Test lecture\n      const { data: wishlistData, error: readError } = await supabaseServer\n        .from('wishlist')\n        .select('*')\n        .limit(5);\n        \n      if (readError) {\n        return res.status(400).json({ \n          error: 'Erreur lecture table wishlist',\n          details: readError\n        });\n      }\n      \n      // Test √©criture avec donn√©es de test\n      const testUserId = '2158eafa-0e52-44f3-b894-1abb82a39d77';\n      const testVehicleId = 'test-999';\n      \n      const { data: insertData, error: insertError } = await supabaseServer\n        .from('wishlist')\n        .insert({\n          user_id: testUserId,\n          vehicle_id: testVehicleId\n        })\n        .select()\n        .single();\n        \n      if (insertError && insertError.code !== '23505') {\n        return res.status(400).json({ \n          error: 'Erreur √©criture table wishlist',\n          details: insertError\n        });\n      }\n      \n      // Nettoyer le test\n      if (insertData) {\n        await supabaseServer\n          .from('wishlist')\n          .delete()\n          .eq('id', insertData.id);\n      }\n      \n      res.json({\n        success: true,\n        message: 'Table wishlist fonctionne parfaitement',\n        currentRecords: wishlistData?.length || 0,\n        sampleData: wishlistData?.slice(0, 3)\n      });\n      \n    } catch (error) {\n      console.error('‚ùå Erreur test wishlist:', error);\n      res.status(500).json({ error: 'Erreur test' });\n    }\n  });\n}","size_bytes":7710},"server/routes/wishlist-migration.ts":{"content":"import type { Express } from \"express\";\nimport { supabaseServer } from \"../supabase.js\";\n\nexport async function setupWishlistMigration(app: Express) {\n  // Route pour cr√©er la table wishlist\n  app.post('/api/admin/create-wishlist-table', async (req, res) => {\n    console.log('üîÑ Cr√©ation table wishlist via API...');\n    \n    const createTableSQL = `\n      -- Table wishlist pour la gestion des favoris\n      CREATE TABLE IF NOT EXISTS public.wishlist (\n        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n        user_id UUID NOT NULL,\n        vehicle_id TEXT NOT NULL,\n        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n        CONSTRAINT wishlist_user_vehicle_unique UNIQUE (user_id, vehicle_id)\n      );\n\n      -- Index pour optimiser les performances\n      CREATE INDEX IF NOT EXISTS idx_wishlist_user_id ON public.wishlist(user_id);\n      CREATE INDEX IF NOT EXISTS idx_wishlist_vehicle_id ON public.wishlist(vehicle_id);\n      CREATE INDEX IF NOT EXISTS idx_wishlist_created_at ON public.wishlist(created_at DESC);\n    `;\n\n    try {\n      // Cr√©er directement via une requ√™te SQL simple\n      const { error } = await supabaseServer\n        .rpc('exec_sql', { sql: createTableSQL });\n      \n      if (error) {\n        console.error('‚ùå Erreur cr√©ation table wishlist:', error);\n        return res.status(500).json({ error: 'Erreur cr√©ation table' });\n      }\n\n      console.log('‚úÖ Table wishlist cr√©√©e avec succ√®s');\n      \n      // Test de v√©rification\n      const { data: testData, error: testError } = await supabaseServer\n        .from('wishlist')\n        .select('id')\n        .limit(1);\n        \n      if (testError) {\n        console.error('‚ùå Erreur test table:', testError);\n        return res.status(500).json({ error: 'Table non accessible' });\n      }\n\n      res.json({ \n        success: true, \n        message: 'Table wishlist cr√©√©e et v√©rifi√©e avec succ√®s' \n      });\n      \n    } catch (error) {\n      console.error('‚ùå Erreur compl√®te:', error);\n      res.status(500).json({ error: 'Erreur serveur' });\n    }\n  });\n\n  // Route pour migrer les favoris existants\n  app.post('/api/admin/migrate-favorites', async (req, res) => {\n    console.log('üîÑ Migration favoris bio ‚Üí table wishlist...');\n    \n    try {\n      // R√©cup√©rer tous les utilisateurs avec des favoris dans bio\n      const { data: users, error: usersError } = await supabaseServer\n        .from('users')\n        .select('id, bio')\n        .not('bio', 'is', null);\n\n      if (usersError) {\n        console.error('‚ùå Erreur r√©cup√©ration utilisateurs:', usersError);\n        return res.status(500).json({ error: 'Erreur r√©cup√©ration utilisateurs' });\n      }\n\n      let migratedCount = 0;\n      const results = [];\n      \n      for (const user of users || []) {\n        try {\n          if (!user.bio) continue;\n          \n          const bioData = JSON.parse(user.bio);\n          const favorites = bioData.favorites || [];\n          \n          if (favorites.length === 0) continue;\n          \n          console.log(`üîÑ Migration ${favorites.length} favoris pour utilisateur ${user.id}`);\n          \n          // Ins√©rer les favoris dans la table wishlist\n          for (const vehicleId of favorites) {\n            const { error: insertError } = await supabaseServer\n              .from('wishlist')\n              .upsert({\n                user_id: user.id,\n                vehicle_id: vehicleId.toString()\n              }, {\n                onConflict: 'user_id,vehicle_id'\n              });\n              \n            if (insertError) {\n              console.error(`‚ùå Erreur insertion favori ${vehicleId}:`, insertError);\n            } else {\n              migratedCount++;\n            }\n          }\n          \n          results.push({\n            userId: user.id,\n            favoritesCount: favorites.length,\n            status: 'migrated'\n          });\n          \n        } catch (e) {\n          console.error(`‚ùå Erreur parsing bio utilisateur ${user.id}:`, e);\n          results.push({\n            userId: user.id,\n            status: 'error',\n            error: e.message\n          });\n        }\n      }\n      \n      console.log(`‚úÖ Migration termin√©e: ${migratedCount} favoris migr√©s`);\n      \n      res.json({ \n        success: true, \n        migratedCount,\n        results,\n        message: `${migratedCount} favoris migr√©s avec succ√®s`\n      });\n      \n    } catch (error) {\n      console.error('‚ùå Erreur migration favoris:', error);\n      res.status(500).json({ error: 'Erreur migration' });\n    }\n  });\n}","size_bytes":4556},"server/routes/wishlist.ts":{"content":"import { Router } from \"express\";\nimport { storage } from \"../storage\";\nimport { insertWishlistSchema } from \"../../shared/schema.js\";\nimport { z } from \"zod\";\n\nconst router = Router();\n\n// Get user's wishlist\nrouter.get(\"/:userId\", async (req, res) => {\n  try {\n    const { userId } = req.params;\n    const wishlist = await storage.getUserWishlist(userId);\n    res.json(wishlist);\n  } catch (error) {\n    console.error(\"Error fetching wishlist:\", error);\n    res.status(500).json({ error: \"Failed to fetch wishlist\" });\n  }\n});\n\n// Add to wishlist\nrouter.post(\"/\", async (req, res) => {\n  try {\n    const validatedData = insertWishlistSchema.parse(req.body);\n    const wishlistItem = await storage.addToWishlist(validatedData);\n    res.json(wishlistItem);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      res.status(400).json({ error: \"Invalid data\", details: error.errors });\n    } else {\n      console.error(\"Error adding to wishlist:\", error);\n      res.status(500).json({ error: \"Failed to add to wishlist\" });\n    }\n  }\n});\n\n// Remove from wishlist\nrouter.delete(\"/:userId/:vehicleId\", async (req, res) => {\n  try {\n    const { userId, vehicleId } = req.params;\n    const success = await storage.removeFromWishlist(userId, vehicleId);\n    if (success) {\n      res.json({ message: \"Removed from wishlist\" });\n    } else {\n      res.status(404).json({ error: \"Item not found in wishlist\" });\n    }\n  } catch (error) {\n    console.error(\"Error removing from wishlist:\", error);\n    res.status(500).json({ error: \"Failed to remove from wishlist\" });\n  }\n});\n\n// Check if item is in wishlist\nrouter.get(\"/:userId/:vehicleId/check\", async (req, res) => {\n  try {\n    const { userId, vehicleId } = req.params;\n    const isInWishlist = await storage.isInWishlist(userId, vehicleId);\n    res.json({ isInWishlist });\n  } catch (error) {\n    console.error(\"Error checking wishlist:\", error);\n    res.status(500).json({ error: \"Failed to check wishlist\" });\n  }\n});\n\nexport default router;","size_bytes":1999},"server/services/vehicleDataService.ts":{"content":"// Service pour r√©cup√©rer les donn√©es v√©hicule via API d'immatriculation\nexport interface VehicleData {\n  brand: string;\n  model: string;\n  year: number;\n  fuelType: string;\n  power: number;\n  co2Emission: number;\n  displacement: number;\n  transmission: string;\n  doors: number;\n  color: string;\n  vehicleType: string;\n  emissionClass: string;\n  firstRegistrationDate: string;\n  critAir: string;\n  // Donn√©es suppl√©mentaires disponibles selon l'API\n  vin?: string;\n  weight?: number;\n  maxSpeed?: number;\n  engineCode?: string;\n}\n\nexport interface VehicleDataResponse {\n  success: boolean;\n  data?: VehicleData;\n  error?: string;\n  source: 'api' | 'cache' | 'manual';\n}\n\nclass VehicleDataService {\n  private apiKey: string;\n  private apiUrl: string;\n  private cache: Map<string, { data: VehicleData; timestamp: number }> = new Map();\n  private cacheExpiry = 24 * 60 * 60 * 1000; // 24 heures\n\n  constructor() {\n    this.apiKey = process.env.VEHICLE_API_KEY || '';\n    this.apiUrl = process.env.VEHICLE_API_URL || 'https://api-plaque-immatriculation.com/v1';\n  }\n\n  /**\n   * R√©cup√®re les donn√©es d'un v√©hicule par son num√©ro d'immatriculation\n   */\n  async getVehicleData(registrationNumber: string): Promise<VehicleDataResponse> {\n    if (!this.apiKey) {\n      return {\n        success: false,\n        error: 'Cl√© API non configur√©e',\n        source: 'manual'\n      };\n    }\n\n    // Nettoyer le num√©ro d'immatriculation\n    const cleanedRegNumber = this.cleanRegistrationNumber(registrationNumber);\n    \n    // V√©rifier le cache d'abord\n    const cached = this.getFromCache(cleanedRegNumber);\n    if (cached) {\n      return {\n        success: true,\n        data: cached,\n        source: 'cache'\n      };\n    }\n\n    try {\n      // Appel √† l'API externe\n      const response = await fetch(`${this.apiUrl}/vehicle`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`,\n        },\n        body: JSON.stringify({\n          registration: cleanedRegNumber\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status}`);\n      }\n\n      const apiData = await response.json();\n      \n      if (!apiData.success) {\n        return {\n          success: false,\n          error: apiData.message || 'V√©hicule non trouv√©',\n          source: 'api'\n        };\n      }\n\n      // Transformer les donn√©es API vers notre format\n      const vehicleData = this.transformApiData(apiData.data);\n      \n      // Mettre en cache\n      this.saveToCache(cleanedRegNumber, vehicleData);\n\n      return {\n        success: true,\n        data: vehicleData,\n        source: 'api'\n      };\n\n    } catch (error) {\n      console.error('Erreur API v√©hicule:', error);\n      return {\n        success: false,\n        error: 'Service temporairement indisponible',\n        source: 'manual'\n      };\n    }\n  }\n\n  /**\n   * Nettoie le num√©ro d'immatriculation\n   */\n  private cleanRegistrationNumber(regNumber: string): string {\n    return regNumber.replace(/[\\s-]/g, '').toUpperCase();\n  }\n\n  /**\n   * R√©cup√®re depuis le cache si disponible et valide\n   */\n  private getFromCache(regNumber: string): VehicleData | null {\n    const cached = this.cache.get(regNumber);\n    if (cached && Date.now() - cached.timestamp < this.cacheExpiry) {\n      return cached.data;\n    }\n    if (cached) {\n      this.cache.delete(regNumber);\n    }\n    return null;\n  }\n\n  /**\n   * Sauvegarde en cache\n   */\n  private saveToCache(regNumber: string, data: VehicleData): void {\n    this.cache.set(regNumber, {\n      data,\n      timestamp: Date.now()\n    });\n  }\n\n  /**\n   * Transforme les donn√©es de l'API vers notre format\n   */\n  private transformApiData(apiData: any): VehicleData {\n    return {\n      brand: apiData.marque || '',\n      model: apiData.modele || '',\n      year: parseInt(apiData.annee) || new Date().getFullYear(),\n      fuelType: this.mapFuelType(apiData.energie),\n      power: parseInt(apiData.puissance_fiscale) || 0,\n      co2Emission: parseInt(apiData.emission_co2) || 0,\n      displacement: parseInt(apiData.cylindree) || 0,\n      transmission: this.mapTransmission(apiData.boite_vitesse),\n      doors: parseInt(apiData.nombre_portes) || 5,\n      color: apiData.couleur || '',\n      vehicleType: this.mapVehicleType(apiData.genre),\n      emissionClass: apiData.norme_euro || '',\n      firstRegistrationDate: apiData.date_premiere_immatriculation || '',\n      critAir: apiData.vignette_crit_air || '',\n      vin: apiData.numero_vin,\n      weight: parseInt(apiData.poids_vide) || undefined,\n      maxSpeed: parseInt(apiData.vitesse_max) || undefined,\n      engineCode: apiData.code_moteur\n    };\n  }\n\n  /**\n   * Mapping des types de carburant\n   */\n  private mapFuelType(apiEnergy: string): string {\n    const mapping: { [key: string]: string } = {\n      'ESSENCE': 'gasoline',\n      'DIESEL': 'diesel',\n      'ELECTRIQUE': 'electric',\n      'HYBRIDE': 'hybrid',\n      'GAZ': 'gasoline', // GPL/GNV -> gasoline pour simplifier\n    };\n    return mapping[apiEnergy?.toUpperCase()] || 'gasoline';\n  }\n\n  /**\n   * Mapping des transmissions\n   */\n  private mapTransmission(apiTransmission: string): string {\n    const mapping: { [key: string]: string } = {\n      'MANUELLE': 'manual',\n      'AUTOMATIQUE': 'automatic',\n      'SEMI-AUTOMATIQUE': 'semi-automatic',\n    };\n    return mapping[apiTransmission?.toUpperCase()] || 'manual';\n  }\n\n  /**\n   * Mapping des types de v√©hicule\n   */\n  private mapVehicleType(apiGenre: string): string {\n    const mapping: { [key: string]: string } = {\n      'BERLINE': 'berline',\n      'BREAK': 'break',\n      'COUPE': 'coupe',\n      'CABRIOLET': 'cabriolet',\n      'MONOSPACE': 'monospace',\n      'SUV': 'suv',\n      'CITADINE': 'citadine',\n    };\n    return mapping[apiGenre?.toUpperCase()] || 'berline';\n  }\n}\n\nexport const vehicleDataService = new VehicleDataService();","size_bytes":5915},"app/api/vehicles/route.ts":{"content":"import { NextRequest, NextResponse } from 'next/server';\nimport { SupabaseStorage } from '../../../server/storage';\n\nconst storage = new SupabaseStorage();\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const category = searchParams.get('category');\n    const search = searchParams.get('search');\n    const sort = searchParams.get('sort');\n    const damaged = searchParams.get('damaged') === 'true';\n\n    const vehicles = await storage.getAllVehicles();\n    \n    let filteredVehicles = vehicles;\n\n    if (category && category !== 'all') {\n      filteredVehicles = filteredVehicles.filter(vehicle => \n        vehicle.category === category\n      );\n    }\n\n    if (search) {\n      const searchLower = search.toLowerCase();\n      filteredVehicles = filteredVehicles.filter(vehicle =>\n        vehicle.title?.toLowerCase().includes(searchLower) ||\n        vehicle.brand?.toLowerCase().includes(searchLower) ||\n        vehicle.model?.toLowerCase().includes(searchLower)\n      );\n    }\n\n    if (damaged) {\n      filteredVehicles = filteredVehicles.filter(vehicle => \n        vehicle.condition === 'damaged'\n      );\n    }\n\n    // Sort logic\n    if (sort === 'price-asc') {\n      filteredVehicles.sort((a, b) => (a.price || 0) - (b.price || 0));\n    } else if (sort === 'price-desc') {\n      filteredVehicles.sort((a, b) => (b.price || 0) - (a.price || 0));\n    } else if (sort === 'date-desc') {\n      filteredVehicles.sort((a, b) => \n        new Date(b.createdAt || 0).getTime() - new Date(a.createdAt || 0).getTime()\n      );\n    }\n\n    return NextResponse.json(filteredVehicles);\n  } catch (error) {\n    console.error('Error fetching vehicles:', error);\n    return NextResponse.json({ error: 'Failed to fetch vehicles' }, { status: 500 });\n  }\n}","size_bytes":1807},"client/src/components/AccountSetup.tsx":{"content":"import React, { useState } from 'react';\nimport { User, Building, MapPin, Camera, CheckCircle, ArrowRight } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\n\ninterface AccountSetupProps {\n  onComplete: () => void;\n}\n\nexport const AccountSetup: React.FC<AccountSetupProps> = ({ onComplete }) => {\n  const { currentUser, setCurrentUser } = useApp();\n  const [step, setStep] = useState(1);\n  const [profileData, setProfileData] = useState({\n    avatar: '',\n    bio: '',\n    address: '',\n    city: '',\n    postalCode: '',\n    website: '',\n    siret: '',\n    specialties: [] as string[],\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setProfileData({ ...profileData, [e.target.name]: e.target.value });\n  };\n\n  const handleSpecialtyToggle = (specialty: string) => {\n    const newSpecialties = profileData.specialties.includes(specialty)\n      ? profileData.specialties.filter(s => s !== specialty)\n      : [...profileData.specialties, specialty];\n    setProfileData({ ...profileData, specialties: newSpecialties });\n  };\n\n  const handleComplete = () => {\n    // Update user profile with additional data\n    if (currentUser) {\n      setCurrentUser({\n        ...currentUser,\n        ...profileData,\n      });\n    }\n    onComplete();\n  };\n\n  const specialtyOptions = [\n    'Voitures d\\'occasion',\n    'V√©hicules de luxe',\n    'Motos sportives',\n    'Scooters urbains',\n    'V√©hicules utilitaires',\n    'Pi√®ces d√©tach√©es',\n    'R√©paration',\n    'Carrosserie',\n    'M√©canique',\n    '√âlectronique auto',\n  ];\n\n  return (\n    <div className=\"max-w-2xl mx-auto bg-white rounded-2xl shadow-xl p-8\">\n      {/* Progress Bar */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <span className=\"text-sm font-medium text-gray-600\">√âtape {step} sur 3</span>\n          <span className=\"text-sm font-medium text-[#0CBFDE]\">{Math.round((step / 3) * 100)}%</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${(step / 3) * 100}%` }}\n          ></div>\n        </div>\n      </div>\n\n      {/* Step 1: Basic Profile */}\n      {step === 1 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Compl√©tez votre profil\n            </h2>\n            <p className=\"text-gray-600\">\n              Ajoutez quelques informations pour personnaliser votre compte\n            </p>\n          </div>\n\n          {/* Avatar Upload */}\n          <div className=\"text-center\">\n            <div className=\"relative inline-block\">\n              <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                {profileData.avatar ? (\n                  <img src={profileData.avatar} alt=\"Avatar\" className=\"w-full h-full rounded-full object-cover\" />\n                ) : (\n                  <User className=\"h-12 w-12 text-white\" />\n                )}\n              </div>\n              <button className=\"absolute bottom-0 right-0 bg-white border-2 border-gray-300 rounded-full p-2 hover:bg-gray-50 transition-colors\">\n                <Camera className=\"h-4 w-4 text-gray-600\" />\n              </button>\n            </div>\n            <p className=\"text-sm text-gray-600\">Ajoutez une photo de profil</p>\n          </div>\n\n          {/* Bio */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Pr√©sentation\n            </label>\n            <textarea\n              name=\"bio\"\n              value={profileData.bio}\n              onChange={handleInputChange}\n              rows={4}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n              placeholder={currentUser?.type === 'professional' \n                ? \"Pr√©sentez votre entreprise et vos services...\"\n                : \"Parlez-nous de vous...\"\n              }\n            />\n          </div>\n\n          <button\n            onClick={() => setStep(2)}\n            className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2\"\n          >\n            <span>Continuer</span>\n            <ArrowRight className=\"h-5 w-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Step 2: Location */}\n      {step === 2 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-8\">\n            <MapPin className=\"h-12 w-12 text-primary-bolt-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Votre localisation\n            </h2>\n            <p className=\"text-gray-600\">\n              Aidez les acheteurs √† vous trouver facilement\n            </p>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Adresse compl√®te\n            </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={profileData.address}\n              onChange={handleInputChange}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n              placeholder=\"123 Rue de la R√©publique\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Ville\n              </label>\n              <input\n                type=\"text\"\n                name=\"city\"\n                value={profileData.city}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"Paris\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Code postal\n              </label>\n              <input\n                type=\"text\"\n                name=\"postalCode\"\n                value={profileData.postalCode}\n                onChange={handleInputChange}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"75001\"\n              />\n            </div>\n          </div>\n\n          {currentUser?.type === 'professional' && (\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Site web\n                </label>\n                <input\n                  type=\"url\"\n                  name=\"website\"\n                  value={profileData.website}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"https://mongarage.com\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  SIRET (optionnel)\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"siret\"\n                  value={profileData.siret}\n                  onChange={handleInputChange}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"12345678901234\"\n                />\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() => setStep(1)}\n              className=\"flex-1 py-3 px-6 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n            >\n              Retour\n            </button>\n            <button\n              onClick={() => setStep(3)}\n              className=\"flex-1 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2\"\n            >\n              <span>Continuer</span>\n              <ArrowRight className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Step 3: Specialties (for professionals) */}\n      {step === 3 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-8\">\n            <Building className=\"h-12 w-12 text-primary-bolt-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              {currentUser?.type === 'professional' ? 'Vos sp√©cialit√©s' : 'Presque termin√© !'}\n            </h2>\n            <p className=\"text-gray-600\">\n              {currentUser?.type === 'professional' \n                ? 'S√©lectionnez vos domaines d\\'expertise'\n                : 'Votre compte est pr√™t √† √™tre utilis√©'\n              }\n            </p>\n          </div>\n\n          {currentUser?.type === 'professional' ? (\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-4\">\n                S√©lectionnez vos sp√©cialit√©s\n              </label>\n              <div className=\"grid grid-cols-2 gap-3\">\n                {specialtyOptions.map((specialty) => (\n                  <button\n                    key={specialty}\n                    onClick={() => handleSpecialtyToggle(specialty)}\n                    className={`p-3 text-left border-2 rounded-xl transition-all ${\n                      profileData.specialties.includes(specialty)\n                        ? 'border-primary-bolt-500 bg-primary-bolt-50 text-primary-bolt-500'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">{specialty}</span>\n                      {profileData.specialties.includes(specialty) && (\n                        <CheckCircle className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                F√©licitations !\n              </h3>\n              <p className=\"text-gray-600\">\n                Votre compte est maintenant configur√© et pr√™t √† √™tre utilis√©.\n              </p>\n            </div>\n          )}\n\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() => setStep(2)}\n              className=\"flex-1 py-3 px-6 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n            >\n              Retour\n            </button>\n            <button\n              onClick={handleComplete}\n              className=\"flex-1 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-200 flex items-center justify-center space-x-2\"\n            >\n              <CheckCircle className=\"h-5 w-5\" />\n              <span>Terminer</span>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","size_bytes":12228},"client/src/components/AddressInput.tsx":{"content":"import React, { useState, useEffect, useRef } from 'react';\nimport { MapPin, Check, AlertCircle, Loader } from 'lucide-react';\n\ninterface City {\n  nom: string;\n  code: string;\n  codePostal: string;\n  codeDepartement: string;\n  population: number;\n}\n\ninterface AddressInputProps {\n  postalCode: string;\n  city: string;\n  onPostalCodeChange: (postalCode: string) => void;\n  onCityChange: (city: string) => void;\n  className?: string;\n}\n\nexport const AddressInput: React.FC<AddressInputProps> = ({\n  postalCode,\n  city,\n  onPostalCodeChange,\n  onCityChange,\n  className = ''\n}) => {\n  const [cities, setCities] = useState<City[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  // Valider le format du code postal fran√ßais\n  const isValidPostalCodeFormat = (code: string): boolean => {\n    return /^\\d{5}$/.test(code);\n  };\n\n  // Rechercher les villes par code postal\n  const searchCitiesByPostalCode = async (code: string) => {\n    if (!isValidPostalCodeFormat(code)) {\n      setError('Le code postal doit contenir 5 chiffres');\n      setCities([]);\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch(`https://geo.api.gouv.fr/communes?codePostal=${code}&fields=nom,code,codesPostaux,codeDepartement,population&format=json&geometry=centre`);\n      \n      if (!response.ok) {\n        throw new Error('Erreur lors de la recherche');\n      }\n\n      const data: City[] = await response.json();\n      \n      if (data.length === 0) {\n        setError('Code postal non trouv√©');\n        setCities([]);\n      } else {\n        setCities(data);\n        setError('');\n        \n        // Si une seule ville correspond, la s√©lectionner automatiquement\n        if (data.length === 1) {\n          console.log('Auto-selecting city:', data[0].nom);\n          onCityChange(data[0].nom);\n          setShowDropdown(false);\n        } else {\n          // Plusieurs villes, afficher le dropdown\n          setShowDropdown(true);\n        }\n      }\n    } catch (err) {\n      setError('Erreur lors de la recherche des villes');\n      setCities([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // √âtat local pour l'input du code postal pour √©viter les conflits de controlled input\n  const [localPostalCode, setLocalPostalCode] = useState(postalCode);\n\n  // Synchroniser avec la prop postalCode seulement si elle change de l'ext√©rieur\n  useEffect(() => {\n    if (postalCode !== localPostalCode) {\n      setLocalPostalCode(postalCode);\n    }\n  }, [postalCode]);\n\n  // G√©rer le changement du code postal\n  const handlePostalCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    console.log('Input event value:', value, 'length:', value.length);\n    \n    // Permettre uniquement les chiffres et limiter √† EXACTEMENT 5 caract√®res\n    const numericValue = value.replace(/\\D/g, '').substring(0, 5);\n    console.log('Processed numeric value:', numericValue, 'length:', numericValue.length);\n    \n    // Mettre √† jour l'√©tat local imm√©diatement pour l'affichage\n    setLocalPostalCode(numericValue);\n    \n    // Mettre √† jour le parent IMM√âDIATEMENT\n    onPostalCodeChange(numericValue);\n    \n    // R√©initialiser la ville si le code postal change\n    if (numericValue !== localPostalCode) {\n      onCityChange('');\n      setCities([]);\n      setShowDropdown(false);\n      setError('');\n    }\n\n    // Rechercher automatiquement si EXACTEMENT 5 chiffres saisis\n    if (numericValue.length === 5) {\n      console.log('Searching for postal code:', numericValue);\n      searchCitiesByPostalCode(numericValue);\n    }\n  };\n\n  // S√©lectionner une ville\n  const selectCity = (selectedCity: City) => {\n    console.log('Sending to parent - city:', selectedCity.nom);\n    onCityChange(selectedCity.nom);\n    setShowDropdown(false);\n  };\n\n  // Fermer le dropdown si on clique √† l'ext√©rieur\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setShowDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getStatusIcon = () => {\n    if (loading) {\n      return <Loader className=\"h-4 w-4 text-blue-500 animate-spin\" />;\n    }\n    if (error) {\n      return <AlertCircle className=\"h-4 w-4 text-red-500\" />;\n    }\n    if (city && postalCode.length === 5) {\n      return <Check className=\"h-4 w-4 text-green-500\" />;\n    }\n    return <MapPin className=\"h-4 w-4 text-gray-400\" />;\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n\n      \n      {/* Code Postal */}\n      <div>\n        <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n          Code postal *\n        </label>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            value={localPostalCode}\n            onChange={handlePostalCodeChange}\n            className={`w-full px-4 py-3 pr-10 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n              error ? 'border-red-300 bg-red-50' : 'border-gray-300'\n            }`}\n            placeholder=\"Tapez votre code postal (ex: 75001)\"\n            maxLength={5}\n          />\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            {getStatusIcon()}\n          </div>\n        </div>\n        \n        {error && (\n          <p className=\"mt-1 text-sm text-red-600 flex items-center space-x-1\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <span>{error}</span>\n          </p>\n        )}\n      </div>\n\n      {/* Ville */}\n      <div className=\"relative\" ref={dropdownRef}>\n        <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n          Ville *\n        </label>\n        <input\n          type=\"text\"\n          value={city}\n          onChange={(e) => onCityChange(e.target.value)}\n          className={`w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n            (!postalCode || postalCode.length !== 5) ? 'bg-gray-50 text-gray-500' : ''\n          }`}\n          placeholder=\"Saisissez d'abord le code postal\"\n          disabled={!postalCode || postalCode.length !== 5}\n        />\n\n        {/* Dropdown des villes multiples */}\n        {showDropdown && cities.length > 1 && (\n          <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-xl shadow-lg max-h-60 overflow-auto\">\n            <div className=\"p-2 text-xs text-gray-500 border-b border-gray-100\">\n              Plusieurs villes trouv√©es pour ce code postal :\n            </div>\n            {cities.map((cityOption, index) => (\n              <button\n                key={`${cityOption.code}-${index}`}\n                onClick={() => selectCity(cityOption)}\n                className=\"w-full text-left px-4 py-3 hover:bg-primary-bolt-50 focus:bg-primary-bolt-50 focus:outline-none transition-colors\"\n              >\n                <div className=\"font-medium text-gray-900\">{cityOption.nom}</div>\n                <div className=\"text-sm text-gray-500\">\n                  {cityOption.population.toLocaleString()} habitants\n                </div>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Informations sur la ville s√©lectionn√©e */}\n      {city && cities.length > 0 && !showDropdown && (\n        <div className=\"p-3 bg-green-50 border border-green-200 rounded-xl\">\n          <div className=\"flex items-center space-x-2 text-green-800\">\n            <Check className=\"h-4 w-4\" />\n            <span className=\"text-sm font-medium\">Adresse valid√©e</span>\n          </div>\n          <div className=\"mt-1 text-sm text-green-700\">\n            {city} ({postalCode})\n            {cities[0]?.population && (\n              <span className=\"ml-2\">‚Ä¢ {cities[0].population.toLocaleString()} habitants</span>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","size_bytes":8288},"client/src/components/AdminDashboard.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { \n  Users, \n  FileText, \n  AlertTriangle, \n  TrendingUp,\n  Settings,\n  BarChart3,\n  Shield,\n  MessageSquare,\n  Eye,\n  CheckCircle,\n  XCircle,\n  Clock\n} from 'lucide-react';\n\ninterface AdminStats {\n  totalUsers: number;\n  totalAnnonces: number;\n  pendingReports: number;\n  recentActivity: number;\n  monthlyGrowth: number;\n}\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  type: string;\n  verified: boolean;\n  createdAt: string;\n}\n\ninterface Annonce {\n  id: string;\n  title: string;\n  user?: {\n    name: string;\n  };\n  status: string;\n  price: number;\n  createdAt: string;\n}\n\nexport const AdminDashboard: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'users' | 'annonces' | 'reports'>('dashboard');\n  const [stats, setStats] = useState<AdminStats>({\n    totalUsers: 0,\n    totalAnnonces: 0,\n    pendingReports: 0,\n    recentActivity: 0,\n    monthlyGrowth: 0\n  });\n  const [users, setUsers] = useState<User[]>([]);\n  const [annonces, setAnnonces] = useState<Annonce[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    try {\n      // Pour le moment, utiliser les donn√©es publiques disponibles\n      // TODO: Impl√©menter l'authentification admin compl√®te\n      const vehiclesRes = await fetch('/api/vehicles');\n      const vehiclesData = await vehiclesRes.json();\n      \n      // Extraire les utilisateurs uniques des v√©hicules\n      const uniqueUsers = vehiclesData.reduce((acc: any[], vehicle: any) => {\n        if (vehicle.user && !acc.find(u => u.id === vehicle.user.id)) {\n          acc.push({\n            id: vehicle.user.id,\n            name: vehicle.user.name,\n            email: vehicle.user.email || `${vehicle.user.id}@auto2roues.com`,\n            type: vehicle.user.type || 'individual',\n            verified: true,\n            createdAt: vehicle.user.createdAt || vehicle.created_at || new Date().toISOString()\n          });\n        }\n        return acc;\n      }, []);\n\n      // Convertir les v√©hicules en format annonces\n      const annoncesData = vehiclesData.map((vehicle: any) => ({\n        id: vehicle.id,\n        title: vehicle.title,\n        user: vehicle.user,\n        status: 'active',\n        price: vehicle.price || 0,\n        createdAt: vehicle.created_at || vehicle.createdAt || new Date().toISOString()\n      }));\n\n      setUsers(uniqueUsers);\n      setAnnonces(annoncesData);\n\n      // Calculer les statistiques\n      setStats({\n        totalUsers: uniqueUsers.length,\n        totalAnnonces: annoncesData.length,\n        pendingReports: 0, // √Ä impl√©menter\n        recentActivity: uniqueUsers.filter((u: User) => \n          new Date(u.createdAt) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n        ).length,\n        monthlyGrowth: 12 // Placeholder\n      });\n\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur chargement admin:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleUserAction = async (userId: string, action: 'activate' | 'suspend') => {\n    try {\n      await fetch(`/api/admin/users/${userId}`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ action })\n      });\n      \n      loadDashboardData(); // Recharger les donn√©es\n    } catch (error) {\n      console.error('Erreur action utilisateur:', error);\n    }\n  };\n\n  const handleAnnonceAction = async (annonceId: string, action: 'approve' | 'reject' | 'suspend') => {\n    try {\n      await fetch(`/api/admin/annonces/${annonceId}`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ action })\n      });\n      \n      loadDashboardData(); // Recharger les donn√©es\n    } catch (error) {\n      console.error('Erreur action annonce:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-bolt-500 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Chargement du tableau de bord...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header Admin */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Shield className=\"h-8 w-8 text-primary-bolt-500\" />\n                <h1 className=\"text-2xl font-bold text-gray-900\">Administration</h1>\n              </div>\n              <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-700 rounded-full text-sm font-medium\">\n                Super Admin\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-600\">Derni√®re connexion: Aujourd'hui</span>\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\">\n                <Settings className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <nav className=\"w-64 bg-white shadow-sm h-screen\">\n          <div className=\"p-6\">\n            <div className=\"space-y-2\">\n              {[\n                { id: 'dashboard', label: 'Tableau de bord', icon: BarChart3 },\n                { id: 'users', label: 'Utilisateurs', icon: Users },\n                { id: 'annonces', label: 'Annonces', icon: FileText },\n                { id: 'reports', label: 'Signalements', icon: AlertTriangle },\n              ].map((item) => {\n                const Icon = item.icon;\n                return (\n                  <button\n                    key={item.id}\n                    onClick={() => setActiveTab(item.id as any)}\n                    className={`w-full flex items-center space-x-3 px-4 py-3 rounded-xl transition-colors ${\n                      activeTab === item.id\n                        ? 'bg-primary-bolt-50 text-primary-bolt-700 border border-primary-bolt-200'\n                        : 'text-gray-600 hover:bg-gray-50'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">{item.label}</span>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </nav>\n\n        {/* Main Content */}\n        <main className=\"flex-1 p-6\">\n          {activeTab === 'dashboard' && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">Tableau de bord</h2>\n              \n              {/* Stats Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Utilisateurs</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{stats.totalUsers}</p>\n                    </div>\n                    <div className=\"p-3 bg-blue-100 rounded-full\">\n                      <Users className=\"h-6 w-6 text-blue-600\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Annonces</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{stats.totalAnnonces}</p>\n                    </div>\n                    <div className=\"p-3 bg-green-100 rounded-full\">\n                      <FileText className=\"h-6 w-6 text-green-600\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Signalements</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{stats.pendingReports}</p>\n                    </div>\n                    <div className=\"p-3 bg-red-100 rounded-full\">\n                      <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Croissance</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">+{stats.monthlyGrowth}%</p>\n                    </div>\n                    <div className=\"p-3 bg-purple-100 rounded-full\">\n                      <TrendingUp className=\"h-6 w-6 text-purple-600\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Activit√© r√©cente */}\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n                <div className=\"p-6 border-b border-gray-100\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Activit√© r√©cente</h3>\n                </div>\n                <div className=\"p-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"p-2 bg-green-100 rounded-full\">\n                        <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">Nouvelle inscription: {users[0]?.name || 'N/A'}</p>\n                        <p className=\"text-xs text-gray-500\">Il y a 2 heures</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"p-2 bg-blue-100 rounded-full\">\n                        <FileText className=\"h-4 w-4 text-blue-600\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">Nouvelle annonce publi√©e</p>\n                        <p className=\"text-xs text-gray-500\">Il y a 4 heures</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'users' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Gestion des utilisateurs</h2>\n                <div className=\"text-sm text-gray-600\">\n                  {users.length} utilisateur(s) au total\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Utilisateur</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Type</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Statut</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Inscription</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-100\">\n                      {users.map((user) => (\n                        <tr key={user.id} className=\"hover:bg-gray-50\">\n                          <td className=\"py-4 px-6\">\n                            <div>\n                              <div className=\"font-medium text-gray-900\">{user.name}</div>\n                              <div className=\"text-sm text-gray-500\">{user.email}</div>\n                            </div>\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              user.type === 'professional' \n                                ? 'bg-orange-100 text-orange-700' \n                                : 'bg-blue-100 text-blue-700'\n                            }`}>\n                              {user.type === 'professional' ? 'Pro' : 'Particulier'}\n                            </span>\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              user.verified \n                                ? 'bg-green-100 text-green-700' \n                                : 'bg-yellow-100 text-yellow-700'\n                            }`}>\n                              {user.verified ? 'V√©rifi√©' : 'En attente'}\n                            </span>\n                          </td>\n                          <td className=\"py-4 px-6 text-sm text-gray-600\">\n                            {new Date(user.createdAt).toLocaleDateString('fr-FR')}\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <div className=\"flex space-x-2\">\n                              <button\n                                onClick={() => handleUserAction(user.id, 'activate')}\n                                className=\"p-1 text-green-600 hover:text-green-700 transition-colors\"\n                                title=\"Activer\"\n                              >\n                                <CheckCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button\n                                onClick={() => handleUserAction(user.id, 'suspend')}\n                                className=\"p-1 text-red-600 hover:text-red-700 transition-colors\"\n                                title=\"Suspendre\"\n                              >\n                                <XCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button className=\"p-1 text-blue-600 hover:text-blue-700 transition-colors\" title=\"Voir d√©tails\">\n                                <Eye className=\"h-4 w-4\" />\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'annonces' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Gestion des annonces</h2>\n                <div className=\"text-sm text-gray-600\">\n                  {annonces.length} annonce(s) au total\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Annonce</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Vendeur</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Prix</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Statut</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Date</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-100\">\n                      {annonces.map((annonce) => (\n                        <tr key={annonce.id} className=\"hover:bg-gray-50\">\n                          <td className=\"py-4 px-6\">\n                            <div className=\"font-medium text-gray-900\">{annonce.title}</div>\n                          </td>\n                          <td className=\"py-4 px-6 text-sm text-gray-600\">\n                            {annonce.user?.name || 'N/A'}\n                          </td>\n                          <td className=\"py-4 px-6 text-sm font-medium text-gray-900\">\n                            {annonce.price.toLocaleString('fr-FR')} ‚Ç¨\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              annonce.status === 'active' \n                                ? 'bg-green-100 text-green-700' \n                                : annonce.status === 'pending'\n                                ? 'bg-yellow-100 text-yellow-700'\n                                : 'bg-red-100 text-red-700'\n                            }`}>\n                              {annonce.status === 'active' ? 'Active' : \n                               annonce.status === 'pending' ? 'En attente' : 'Suspendue'}\n                            </span>\n                          </td>\n                          <td className=\"py-4 px-6 text-sm text-gray-600\">\n                            {new Date(annonce.createdAt).toLocaleDateString('fr-FR')}\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <div className=\"flex space-x-2\">\n                              <button\n                                onClick={() => handleAnnonceAction(annonce.id, 'approve')}\n                                className=\"p-1 text-green-600 hover:text-green-700 transition-colors\"\n                                title=\"Approuver\"\n                              >\n                                <CheckCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button\n                                onClick={() => handleAnnonceAction(annonce.id, 'suspend')}\n                                className=\"p-1 text-red-600 hover:text-red-700 transition-colors\"\n                                title=\"Suspendre\"\n                              >\n                                <XCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button className=\"p-1 text-blue-600 hover:text-blue-700 transition-colors\" title=\"Voir d√©tails\">\n                                <Eye className=\"h-4 w-4\" />\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'reports' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Signalements</h2>\n                <div className=\"text-sm text-gray-600\">\n                  0 signalement(s) en attente\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-12 text-center\">\n                <AlertTriangle className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Aucun signalement</h3>\n                <p className=\"text-gray-500\">Les signalements d'utilisateurs appara√Ætront ici.</p>\n              </div>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};","size_bytes":20740},"client/src/components/AdminDashboardClean.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { \n  Users, \n  FileText, \n  AlertTriangle, \n  TrendingUp,\n  Settings,\n  BarChart3,\n  Shield,\n  Eye,\n  CheckCircle,\n  XCircle,\n  Clock,\n  ArrowLeft\n} from 'lucide-react';\n\ninterface AdminStats {\n  totalUsers: number;\n  totalAnnonces: number;\n  pendingReports: number;\n  recentActivity: number;\n  monthlyGrowth: number;\n}\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  type: string;\n  verified: boolean;\n  createdAt: string;\n}\n\ninterface Annonce {\n  id: string;\n  title: string;\n  user?: {\n    name: string;\n  };\n  status: string;\n  price: number;\n  createdAt: string;\n}\n\ninterface AdminDashboardProps {\n  onBack?: () => void;\n}\n\nexport const AdminDashboardClean: React.FC<AdminDashboardProps> = ({ onBack }) => {\n  // V√©rifier l'authentification admin\n  const isAdminAuthenticated = () => {\n    const authenticated = localStorage.getItem('admin_authenticated');\n    const loginTime = localStorage.getItem('admin_login_time');\n    \n    if (!authenticated || !loginTime) return false;\n    \n    // V√©rifier si la session n'a pas expir√© (24h)\n    const loginDate = new Date(loginTime);\n    const now = new Date();\n    const diffHours = (now.getTime() - loginDate.getTime()) / (1000 * 60 * 60);\n    \n    return diffHours < 24;\n  };\n\n  // D√©connexion admin\n  const handleLogout = () => {\n    localStorage.removeItem('admin_authenticated');\n    localStorage.removeItem('admin_email');\n    localStorage.removeItem('admin_login_time');\n    if (onBack) onBack();\n  };\n\n  // Rediriger si pas authentifi√©\n  if (!isAdminAuthenticated()) {\n    if (onBack) onBack();\n    return null;\n  }\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'users' | 'annonces' | 'reports'>('dashboard');\n  const [stats, setStats] = useState<AdminStats>({\n    totalUsers: 0,\n    totalAnnonces: 0,\n    pendingReports: 0,\n    recentActivity: 0,\n    monthlyGrowth: 0\n  });\n  const [users, setUsers] = useState<User[]>([]);\n  const [annonces, setAnnonces] = useState<Annonce[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    try {\n      console.log('üîÑ Chargement des donn√©es admin...');\n      const vehiclesRes = await fetch('/api/vehicles');\n      const vehiclesData = await vehiclesRes.json();\n      console.log('üìä Donn√©es v√©hicules re√ßues:', vehiclesData.length);\n      \n      // Extraire les utilisateurs uniques des v√©hicules\n      const uniqueUsers = vehiclesData.reduce((acc: User[], vehicle: any) => {\n        if (vehicle.user && !acc.find(u => u.id === vehicle.user.id)) {\n          acc.push({\n            id: vehicle.user.id,\n            name: vehicle.user.name || 'Utilisateur',\n            email: vehicle.user.email || `${vehicle.user.id}@auto2roues.com`,\n            type: vehicle.user.type || 'individual',\n            verified: true,\n            createdAt: vehicle.user.createdAt || vehicle.created_at || new Date().toISOString()\n          });\n        }\n        return acc;\n      }, []);\n\n      // Convertir les v√©hicules en format annonces\n      const annoncesData = vehiclesData.map((vehicle: any) => ({\n        id: vehicle.id,\n        title: vehicle.title,\n        user: vehicle.user,\n        status: 'active',\n        price: vehicle.price || 0,\n        createdAt: vehicle.created_at || vehicle.createdAt || new Date().toISOString()\n      }));\n\n      console.log('üë• Utilisateurs uniques:', uniqueUsers.length);\n      console.log('üìÑ Annonces:', annoncesData.length);\n\n      setUsers(uniqueUsers);\n      setAnnonces(annoncesData);\n\n      setStats({\n        totalUsers: uniqueUsers.length,\n        totalAnnonces: annoncesData.length,\n        pendingReports: 0,\n        recentActivity: 2,\n        monthlyGrowth: 15\n      });\n\n      setLoading(false);\n    } catch (error) {\n      console.error('‚ùå Erreur chargement admin:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleUserAction = async (userId: string, action: 'activate' | 'suspend') => {\n    console.log(`Action utilisateur: ${action} pour ${userId}`);\n    // Simulation d'action - √† impl√©menter avec l'API admin\n  };\n\n  const handleAnnonceAction = async (annonceId: string, action: 'approve' | 'reject' | 'suspend') => {\n    console.log(`Action annonce: ${action} pour ${annonceId}`);\n    // Simulation d'action - √† impl√©menter avec l'API admin\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-500 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Chargement du tableau de bord administrateur...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header Admin - SANS le header normal */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              {onBack && (\n                <button\n                  onClick={onBack}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n                >\n                  <ArrowLeft className=\"h-5 w-5\" />\n                </button>\n              )}\n              <div className=\"flex items-center space-x-2\">\n                <Shield className=\"h-8 w-8 text-purple-500\" />\n                <h1 className=\"text-2xl font-bold text-gray-900\">Administration Passion Auto2Roues</h1>\n              </div>\n              <span className=\"px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-medium\">\n                Super Admin\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm text-gray-600\">\n                Connect√© en tant que : {localStorage.getItem('admin_email')}\n              </span>\n              <button \n                onClick={handleLogout}\n                className=\"px-3 py-1 bg-red-100 text-red-700 rounded text-sm hover:bg-red-200 transition-colors\"\n              >\n                D√©connexion\n              </button>\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\">\n                <Settings className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <nav className=\"w-64 bg-white shadow-sm h-screen\">\n          <div className=\"p-6\">\n            <div className=\"space-y-2\">\n              {[\n                { id: 'dashboard', label: 'Tableau de bord', icon: BarChart3 },\n                { id: 'users', label: 'Utilisateurs', icon: Users },\n                { id: 'annonces', label: 'Annonces', icon: FileText },\n                { id: 'reports', label: 'Signalements', icon: AlertTriangle },\n              ].map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveTab(item.id as any)}\n                  className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-colors ${\n                    activeTab === item.id\n                      ? 'bg-purple-50 text-purple-700 border-purple-200'\n                      : 'text-gray-600 hover:bg-gray-50'\n                  }`}\n                >\n                  <item.icon className=\"h-5 w-5\" />\n                  <span className=\"font-medium\">{item.label}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        </nav>\n\n        {/* Main Content */}\n        <main className=\"flex-1 p-8\">\n          {activeTab === 'dashboard' && (\n            <div className=\"space-y-8\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-2\">Tableau de bord</h2>\n                <p className=\"text-gray-600\">Vue d'ensemble de la plateforme</p>\n              </div>\n\n              {/* Stats Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Utilisateurs</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{stats.totalUsers}</p>\n                    </div>\n                    <div className=\"p-3 bg-blue-100 rounded-lg\">\n                      <Users className=\"h-6 w-6 text-blue-600\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Annonces</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{stats.totalAnnonces}</p>\n                    </div>\n                    <div className=\"p-3 bg-green-100 rounded-lg\">\n                      <FileText className=\"h-6 w-6 text-green-600\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Signalements</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">{stats.pendingReports}</p>\n                    </div>\n                    <div className=\"p-3 bg-red-100 rounded-lg\">\n                      <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">Croissance</p>\n                      <p className=\"text-3xl font-bold text-gray-900\">+{stats.monthlyGrowth}%</p>\n                    </div>\n                    <div className=\"p-3 bg-purple-100 rounded-lg\">\n                      <TrendingUp className=\"h-6 w-6 text-purple-600\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Activit√© r√©cente */}\n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n                <div className=\"p-6 border-b border-gray-100\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Activit√© r√©cente</h3>\n                </div>\n                <div className=\"p-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"p-2 bg-green-100 rounded-lg\">\n                        <Users className=\"h-4 w-4 text-green-600\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">Nouvelle inscription: User D√©mo</p>\n                        <p className=\"text-xs text-gray-500\">Il y a 2 heures</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"p-2 bg-blue-100 rounded-lg\">\n                        <FileText className=\"h-4 w-4 text-blue-600\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900\">Nouvelle annonce publi√©e</p>\n                        <p className=\"text-xs text-gray-500\">Il y a 4 heures</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'users' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Gestion des utilisateurs</h2>\n                <div className=\"text-sm text-gray-600\">\n                  {users.length} utilisateur(s) au total\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Utilisateur</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Type</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Statut</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Inscription</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-100\">\n                      {users.map((user) => (\n                        <tr key={user.id} className=\"hover:bg-gray-50\">\n                          <td className=\"py-4 px-6\">\n                            <div>\n                              <div className=\"font-medium text-gray-900\">{user.name}</div>\n                              <div className=\"text-sm text-gray-500\">{user.email}</div>\n                            </div>\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              user.type === 'professional' \n                                ? 'bg-orange-100 text-orange-700' \n                                : 'bg-blue-100 text-blue-700'\n                            }`}>\n                              {user.type === 'professional' ? 'Pro' : 'Particulier'}\n                            </span>\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              user.verified \n                                ? 'bg-green-100 text-green-700' \n                                : 'bg-yellow-100 text-yellow-700'\n                            }`}>\n                              {user.verified ? 'V√©rifi√©' : 'En attente'}\n                            </span>\n                          </td>\n                          <td className=\"py-4 px-6 text-sm text-gray-600\">\n                            {new Date(user.createdAt).toLocaleDateString('fr-FR')}\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <div className=\"flex space-x-2\">\n                              <button\n                                onClick={() => handleUserAction(user.id, 'activate')}\n                                className=\"p-1 text-green-600 hover:text-green-700 transition-colors\"\n                                title=\"Activer\"\n                              >\n                                <CheckCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button\n                                onClick={() => handleUserAction(user.id, 'suspend')}\n                                className=\"p-1 text-red-600 hover:text-red-700 transition-colors\"\n                                title=\"Suspendre\"\n                              >\n                                <XCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button\n                                className=\"p-1 text-blue-600 hover:text-blue-700 transition-colors\"\n                                title=\"Voir d√©tails\"\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'annonces' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Gestion des annonces</h2>\n                <div className=\"text-sm text-gray-600\">\n                  {annonces.length} annonce(s) au total\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Annonce</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Vendeur</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Prix</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Statut</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Date</th>\n                        <th className=\"text-left py-3 px-6 font-medium text-gray-600\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-100\">\n                      {annonces.map((annonce) => (\n                        <tr key={annonce.id} className=\"hover:bg-gray-50\">\n                          <td className=\"py-4 px-6\">\n                            <div className=\"font-medium text-gray-900\">{annonce.title}</div>\n                          </td>\n                          <td className=\"py-4 px-6 text-sm text-gray-600\">\n                            {annonce.user?.name || 'N/A'}\n                          </td>\n                          <td className=\"py-4 px-6 text-sm font-medium text-gray-900\">\n                            {annonce.price ? `${annonce.price.toLocaleString('fr-FR')} ‚Ç¨` : 'N/A'}\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              annonce.status === 'active' \n                                ? 'bg-green-100 text-green-700' \n                                : annonce.status === 'pending'\n                                ? 'bg-yellow-100 text-yellow-700'\n                                : 'bg-red-100 text-red-700'\n                            }`}>\n                              {annonce.status === 'active' ? 'Active' : \n                               annonce.status === 'pending' ? 'En attente' : 'Suspendue'}\n                            </span>\n                          </td>\n                          <td className=\"py-4 px-6 text-sm text-gray-600\">\n                            {new Date(annonce.createdAt).toLocaleDateString('fr-FR')}\n                          </td>\n                          <td className=\"py-4 px-6\">\n                            <div className=\"flex space-x-2\">\n                              <button\n                                onClick={() => handleAnnonceAction(annonce.id, 'approve')}\n                                className=\"p-1 text-green-600 hover:text-green-700 transition-colors\"\n                                title=\"Approuver\"\n                              >\n                                <CheckCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button\n                                onClick={() => handleAnnonceAction(annonce.id, 'reject')}\n                                className=\"p-1 text-red-600 hover:text-red-700 transition-colors\"\n                                title=\"Rejeter\"\n                              >\n                                <XCircle className=\"h-4 w-4\" />\n                              </button>\n                              <button\n                                className=\"p-1 text-blue-600 hover:text-blue-700 transition-colors\"\n                                title=\"Voir d√©tails\"\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                              </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'reports' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Signalements</h2>\n                <div className=\"text-sm text-gray-600\">\n                  0 signalement(s) en attente\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-12 text-center\">\n                <AlertTriangle className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucun signalement</h3>\n                <p className=\"text-gray-600\">Tous les signalements ont √©t√© trait√©s</p>\n              </div>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};","size_bytes":22019},"client/src/components/AdminLogin.tsx":{"content":"import React, { useState } from 'react';\nimport { Shield, Eye, EyeOff, AlertCircle } from 'lucide-react';\n\ninterface AdminLoginProps {\n  onLoginSuccess: () => void;\n  onBack: () => void;\n}\n\nexport const AdminLogin: React.FC<AdminLoginProps> = ({ onLoginSuccess, onBack }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      // V√©rification des identifiants admin\n      if (email === 'admin@passionauto2roues.com' && password === 'Admin123456!') {\n        // Stocker la session admin\n        localStorage.setItem('admin_authenticated', 'true');\n        localStorage.setItem('admin_email', email);\n        localStorage.setItem('admin_login_time', new Date().toISOString());\n        \n        onLoginSuccess();\n      } else {\n        setError('Email ou mot de passe incorrect');\n      }\n    } catch (error) {\n      setError('Erreur de connexion. Veuillez r√©essayer.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"max-w-md w-full space-y-8 p-8\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <div className=\"flex justify-center mb-4\">\n              <div className=\"p-3 bg-purple-100 rounded-full\">\n                <Shield className=\"h-8 w-8 text-purple-600\" />\n              </div>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Administration</h2>\n            <p className=\"text-gray-600 mt-2\">Acc√®s r√©serv√© aux administrateurs</p>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {error && (\n              <div className=\"flex items-center space-x-2 text-red-600 bg-red-50 p-3 rounded-lg\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span className=\"text-sm\">{error}</span>\n              </div>\n            )}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email administrateur\n              </label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                placeholder=\"admin@passionauto2roues.com\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Mot de passe\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  className=\"w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n                  placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"w-full bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Connexion...' : 'Se connecter'}\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={onBack}\n                className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg font-medium transition-colors\"\n              >\n                Retour √† l'accueil\n              </button>\n            </div>\n          </form>\n\n          {/* Credentials info for demo */}\n          <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n            <p className=\"text-xs text-gray-600 text-center\">\n              <strong>Identifiants de test :</strong><br />\n              Email : admin@auto2roues.com<br />\n              Mot de passe : admin123\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":5179},"client/src/components/AdminTest.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { \n  Users, \n  FileText, \n  AlertTriangle, \n  TrendingUp,\n  Settings,\n  BarChart3,\n  Shield,\n  MessageSquare,\n  Eye,\n  CheckCircle,\n  XCircle,\n  Clock\n} from 'lucide-react';\n\n// Composant de test pour acc√©der directement au dashboard admin\nexport const AdminTest: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'users' | 'annonces' | 'reports'>('dashboard');\n  const [users, setUsers] = useState<any[]>([]);\n  const [annonces, setAnnonces] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadTestData();\n  }, []);\n\n  const loadTestData = async () => {\n    try {\n      // Utilisation des routes de test\n      const [usersRes, annoncesRes] = await Promise.all([\n        fetch('/api/admin/test-users'),\n        fetch('/api/admin/test-annonces')\n      ]);\n\n      const usersData = await usersRes.json();\n      const annoncesData = await annoncesRes.json();\n\n      setUsers(usersData);\n      setAnnonces(annoncesData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erreur chargement test:', error);\n      setLoading(false);\n    }\n  };\n\n  const stats = {\n    totalUsers: users.length,\n    totalAnnonces: annonces.length,\n    pendingReports: 0,\n    recentActivity: users.filter(u => \n      new Date(u.created_at) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n    ).length,\n    monthlyGrowth: 12\n  };\n\n  const tabItems = [\n    { id: 'dashboard', label: 'Tableau de bord', icon: BarChart3 },\n    { id: 'users', label: 'Utilisateurs', icon: Users },\n    { id: 'annonces', label: 'Annonces', icon: FileText },\n    { id: 'reports', label: 'Signalements', icon: AlertTriangle },\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-bolt-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Chargement du dashboard admin...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header de test */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200 p-4 mb-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">\n            üîß Mode Test - Dashboard Administrateur\n          </h1>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            Interface de test pour valider les fonctionnalit√©s admin\n          </p>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex bg-white rounded-lg shadow-sm border border-gray-200 min-h-[600px]\">\n          {/* Sidebar */}\n          <nav className=\"w-64 border-r border-gray-200 p-6\">\n            <div className=\"flex items-center space-x-3 mb-8\">\n              <div className=\"p-2 bg-primary-bolt-100 rounded-lg\">\n                <Shield className=\"h-6 w-6 text-primary-bolt-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-lg font-semibold text-gray-900\">Admin</h2>\n                <p className=\"text-sm text-gray-500\">Dashboard</p>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              {tabItems.map((item) => {\n                const Icon = item.icon;\n                return (\n                  <button\n                    key={item.id}\n                    onClick={() => setActiveTab(item.id as any)}\n                    className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg transition-colors ${\n                      activeTab === item.id\n                        ? 'bg-primary-bolt-50 text-primary-bolt-700 border border-primary-bolt-200'\n                        : 'text-gray-600 hover:bg-gray-50'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">{item.label}</span>\n                  </button>\n                );\n              })}\n            </div>\n          </nav>\n\n          {/* Main Content */}\n          <main className=\"flex-1 p-6\">\n            {activeTab === 'dashboard' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Tableau de bord</h2>\n                \n                {/* Stats Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                  <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600\">Utilisateurs</p>\n                        <p className=\"text-3xl font-bold text-gray-900\">{stats.totalUsers}</p>\n                      </div>\n                      <div className=\"p-3 bg-blue-100 rounded-full\">\n                        <Users className=\"h-6 w-6 text-blue-600\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600\">Annonces</p>\n                        <p className=\"text-3xl font-bold text-gray-900\">{stats.totalAnnonces}</p>\n                      </div>\n                      <div className=\"p-3 bg-green-100 rounded-full\">\n                        <FileText className=\"h-6 w-6 text-green-600\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600\">Signalements</p>\n                        <p className=\"text-3xl font-bold text-gray-900\">{stats.pendingReports}</p>\n                      </div>\n                      <div className=\"p-3 bg-red-100 rounded-full\">\n                        <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white rounded-xl shadow-sm p-6 border border-gray-100\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600\">Croissance</p>\n                        <p className=\"text-3xl font-bold text-gray-900\">+{stats.monthlyGrowth}%</p>\n                      </div>\n                      <div className=\"p-3 bg-purple-100 rounded-full\">\n                        <TrendingUp className=\"h-6 w-6 text-purple-600\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Recent Activity */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n                  <div className=\"p-6 border-b border-gray-100\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Activit√© r√©cente</h3>\n                  </div>\n                  <div className=\"p-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"p-2 bg-green-100 rounded-full\">\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                        </div>\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            Nouvelle inscription: {users[0]?.name || 'N/A'}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">Il y a 2 heures</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"p-2 bg-blue-100 rounded-full\">\n                          <FileText className=\"h-4 w-4 text-blue-600\" />\n                        </div>\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            Nouvelle annonce: {annonces[0]?.title || 'N/A'}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">Il y a 4 heures</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'users' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Gestion des utilisateurs</h2>\n                \n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-gray-50 border-b border-gray-200\">\n                        <tr>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Utilisateur\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Type\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Status\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Inscription\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Actions\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200\">\n                        {users.slice(0, 10).map((user) => (\n                          <tr key={user.id} className=\"hover:bg-gray-50\">\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"flex items-center\">\n                                <div className=\"h-10 w-10 bg-primary-bolt-100 rounded-full flex items-center justify-center\">\n                                  <span className=\"text-sm font-medium text-primary-bolt-700\">\n                                    {user.name?.charAt(0) || user.email?.charAt(0) || 'U'}\n                                  </span>\n                                </div>\n                                <div className=\"ml-4\">\n                                  <div className=\"text-sm font-medium text-gray-900\">{user.name || 'Sans nom'}</div>\n                                  <div className=\"text-sm text-gray-500\">{user.email}</div>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                user.type === 'professional' \n                                  ? 'bg-blue-100 text-blue-800' \n                                  : 'bg-gray-100 text-gray-800'\n                              }`}>\n                                {user.type === 'professional' ? 'Professionnel' : 'Particulier'}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                                user.verified \n                                  ? 'bg-green-100 text-green-800' \n                                  : 'bg-yellow-100 text-yellow-800'\n                              }`}>\n                                {user.verified ? 'V√©rifi√©' : 'En attente'}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              {new Date(user.created_at).toLocaleDateString('fr-FR')}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\n                              <button className=\"text-blue-600 hover:text-blue-900\">Voir</button>\n                              <button className=\"text-yellow-600 hover:text-yellow-900\">Suspendre</button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'annonces' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Gestion des annonces</h2>\n                \n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-gray-50 border-b border-gray-200\">\n                        <tr>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Annonce\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Auteur\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Prix\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Status\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Actions\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200\">\n                        {annonces.slice(0, 10).map((annonce) => (\n                          <tr key={annonce.id} className=\"hover:bg-gray-50\">\n                            <td className=\"px-6 py-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">{annonce.title}</div>\n                              <div className=\"text-sm text-gray-500\">{annonce.category}</div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">{annonce.users?.name || 'Anonyme'}</div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                {annonce.price ? `${annonce.price}‚Ç¨` : 'Prix non affich√©'}\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800\">\n                                Publi√©\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\n                              <button className=\"text-blue-600 hover:text-blue-900\">Voir</button>\n                              <button className=\"text-red-600 hover:text-red-900\">Suspendre</button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'reports' && (\n              <div className=\"space-y-6\">\n                <h2 className=\"text-2xl font-bold text-gray-900\">Signalements</h2>\n                \n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-8 text-center\">\n                  <AlertTriangle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Aucun signalement</h3>\n                  <p className=\"text-gray-500\">\n                    Aucun signalement en attente de traitement pour le moment.\n                  </p>\n                </div>\n              </div>\n            )}\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":17418},"client/src/components/AuthModal.tsx":{"content":"import React, { useState } from 'react';\nimport { X, Mail, Lock, User, Building, Phone, Eye, EyeOff, CheckCircle, AlertCircle } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { mockUsers } from '../utils/mockData';\n\ninterface FormErrors {\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  name?: string;\n  phone?: string;\n  companyName?: string;\n  terms?: string;\n}\n\nexport const AuthModal: React.FC = () => {\n  const { showAuthModal, setShowAuthModal, authMode, setAuthMode, setCurrentUser } = useApp();\n  const auth = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    phone: '',\n    type: 'individual' as 'individual' | 'professional',\n    companyName: '',\n    acceptTerms: false,\n    acceptNewsletter: false,\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1); // For multi-step registration\n\n  if (!showAuthModal) return null;\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email) {\n      newErrors.email = 'L\\'email est requis';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Format d\\'email invalide';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Le mot de passe doit contenir au moins 8 caract√®res';\n    }\n\n    // Registration-specific validations\n    if (authMode === 'register') {\n      if (!formData.name) {\n        newErrors.name = 'Le nom est requis';\n      }\n\n      if (!formData.confirmPassword) {\n        newErrors.confirmPassword = 'Confirmez votre mot de passe';\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Les mots de passe ne correspondent pas';\n      }\n\n      if (formData.type === 'professional' && !formData.companyName) {\n        newErrors.companyName = 'Le nom de l\\'entreprise est requis';\n      }\n\n      if (!formData.acceptTerms) {\n        newErrors.terms = 'Vous devez accepter les conditions d\\'utilisation';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleGoogleSignIn = async () => {\n    setIsLoading(true);\n    try {\n      const result = await auth.signInWithGoogle();\n      if (result.success) {\n        // Google OAuth redirige automatiquement, mais on peut quand m√™me fermer la modal\n        console.log('üîÑ Redirection Google OAuth...');\n        setShowAuthModal(false); // Fermer la modal apr√®s connexion r√©ussie\n      } else {\n        setErrors({ email: result.error || 'Erreur de connexion Google' });\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setErrors({ email: 'Erreur de connexion Google' });\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      if (authMode === 'login') {\n        // Connexion via Supabase Auth\n        const result = await auth.signIn(formData.email, formData.password);\n        \n        if (result.success) {\n          resetForm();\n          setShowAuthModal(false); // Fermer la modal apr√®s connexion r√©ussie\n          // Importer et utiliser useAuthService quand cette fonctionnalit√© sera impl√©ment√©e\n          // const authService = useAuthService();\n          // authService.handleAuthSuccess();\n        } else {\n          setErrors({ email: result.error || 'Email ou mot de passe incorrect' });\n        }\n      } else {\n        // Inscription via Supabase Auth\n        console.log('üîÑ D√©but inscription pour:', formData.email);\n        \n        const result = await auth.signUp(formData.email, formData.password, {\n          name: formData.name,\n          type: formData.type,\n          phone: formData.phone,\n          companyName: formData.type === 'professional' ? formData.companyName : undefined,\n        });\n\n        if (result.success) {\n          setShowAuthModal(false);\n          resetForm();\n          alert('Compte cr√©√© avec succ√®s ! Un email de v√©rification a √©t√© envoy√©.');\n        } else {\n          console.error('‚ùå Erreur inscription:', result.error);\n          setErrors({ email: result.error || 'Erreur lors de la cr√©ation du compte' });\n        }\n      }\n    } catch (error: any) {\n      console.error('Auth error:', error);\n      setErrors({ \n        email: error.message || 'Une erreur est survenue. Veuillez r√©essayer.' \n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      phone: '',\n      type: 'individual',\n      companyName: '',\n      acceptTerms: false,\n      acceptNewsletter: false,\n    });\n    setErrors({});\n    setStep(1);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    const checked = (e.target as HTMLInputElement).checked;\n    \n    setFormData({ \n      ...formData, \n      [name]: type === 'checkbox' ? checked : value \n    });\n    \n    // Clear error when user starts typing\n    if (errors[name as keyof FormErrors]) {\n      setErrors({ ...errors, [name]: undefined });\n    }\n  };\n\n  const handleClose = () => {\n    setShowAuthModal(false);\n    resetForm();\n  };\n\n  const switchMode = () => {\n    setAuthMode(authMode === 'login' ? 'register' : 'login');\n    resetForm();\n  };\n\n  const getPasswordStrength = (password: string) => {\n    let strength = 0;\n    if (password.length >= 8) strength++;\n    if (/[A-Z]/.test(password)) strength++;\n    if (/[a-z]/.test(password)) strength++;\n    if (/[0-9]/.test(password)) strength++;\n    if (/[^A-Za-z0-9]/.test(password)) strength++;\n    return strength;\n  };\n\n  const passwordStrength = getPasswordStrength(formData.password);\n  const strengthColors = ['bg-red-500', 'bg-orange-500', 'bg-yellow-500', 'bg-blue-500', 'bg-green-500'];\n  const strengthLabels = ['Tr√®s faible', 'Faible', 'Moyen', 'Fort', 'Tr√®s fort'];\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-2xl max-w-md w-full max-h-[95vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {authMode === 'login' ? 'Connexion' : 'Cr√©er un compte'}\n            </h2>\n            <p className=\"text-gray-600 text-sm mt-1\">\n              {authMode === 'login' \n                ? 'Connectez-vous √† votre compte' \n                : 'Rejoignez la communaut√© Passion Auto2Roues'\n              }\n            </p>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors rounded-lg hover:bg-gray-100\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* OAuth Section */}\n        <div className=\"p-6 pb-0\">\n          <button\n            onClick={handleGoogleSignIn}\n            disabled={isLoading}\n            className=\"w-full flex items-center justify-center space-x-3 bg-white border-2 border-gray-200 hover:border-gray-300 text-gray-700 py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-md hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n              <path fill=\"#4285f4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n              <path fill=\"#34a853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n              <path fill=\"#fbbc05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n              <path fill=\"#ea4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n            </svg>\n            <span>\n              {authMode === 'login' ? 'Se connecter avec Google' : 'S\\'inscrire avec Google'}\n            </span>\n          </button>\n          \n          <div className=\"flex items-center my-6\">\n            <div className=\"flex-1 border-t border-gray-200\"></div>\n            <span className=\"px-4 text-sm text-gray-500 bg-white\">ou</span>\n            <div className=\"flex-1 border-t border-gray-200\"></div>\n          </div>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"px-6 pb-6 space-y-5\">\n          {authMode === 'register' && (\n            <div>\n              {/* Account Type */}\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                  Type de compte\n                </label>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <label className={`relative flex items-center p-4 border-2 rounded-xl cursor-pointer transition-all ${\n                    formData.type === 'individual' \n                      ? 'border-[#0CBFDE] bg-cyan-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}>\n                    <input\n                      type=\"radio\"\n                      name=\"type\"\n                      value=\"individual\"\n                      checked={formData.type === 'individual'}\n                      onChange={handleInputChange}\n                      className=\"sr-only\"\n                    />\n                    <div className=\"flex flex-col items-center text-center\">\n                      <User className=\"h-6 w-6 mb-2 text-gray-600\" />\n                      <span className=\"text-sm font-medium\">Particulier</span>\n                    </div>\n                    {formData.type === 'individual' && (\n                      <CheckCircle className=\"absolute top-2 right-2 h-5 w-5 text-[#0CBFDE]\" />\n                    )}\n                  </label>\n                  \n                  <label className={`relative flex items-center p-4 border-2 rounded-xl cursor-pointer transition-all ${\n                    formData.type === 'professional' \n                      ? 'border-[#0CBFDE] bg-cyan-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}>\n                    <input\n                      type=\"radio\"\n                      name=\"type\"\n                      value=\"professional\"\n                      checked={formData.type === 'professional'}\n                      onChange={handleInputChange}\n                      className=\"sr-only\"\n                    />\n                    <div className=\"flex flex-col items-center text-center\">\n                      <Building className=\"h-6 w-6 mb-2 text-gray-600\" />\n                      <span className=\"text-sm font-medium\">Professionnel</span>\n                    </div>\n                    {formData.type === 'professional' && (\n                      <CheckCircle className=\"absolute top-2 right-2 h-5 w-5 text-[#0CBFDE]\" />\n                    )}\n                  </label>\n                </div>\n              </div>\n\n              {/* Name */}\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  {formData.type === 'professional' ? 'Nom du responsable' : 'Nom complet'}\n                </label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleInputChange}\n                    className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                      errors.name ? 'border-red-500' : 'border-gray-300'\n                    }`}\n                    placeholder=\"Votre nom complet\"\n                  />\n                </div>\n                {errors.name && (\n                  <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\n                    {errors.name}\n                  </p>\n                )}\n              </div>\n\n              {/* Company Name for Professionals */}\n              {formData.type === 'professional' && (\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Nom de l'entreprise\n                  </label>\n                  <div className=\"relative\">\n                    <Building className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                    <input\n                      type=\"text\"\n                      name=\"companyName\"\n                      value={formData.companyName}\n                      onChange={handleInputChange}\n                      className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                        errors.companyName ? 'border-red-500' : 'border-gray-300'\n                      }`}\n                      placeholder=\"Nom de votre entreprise\"\n                    />\n                  </div>\n                  {errors.companyName && (\n                    <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                      <AlertCircle className=\"h-4 w-4 mr-1\" />\n                      {errors.companyName}\n                    </p>\n                  )}\n                </div>\n              )}\n\n              {/* Phone */}\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  T√©l√©phone\n                </label>\n                <div className=\"relative\">\n                  <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleInputChange}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                    placeholder=\"+33 6 12 34 56 78\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Email */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Adresse email\n            </label>\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                  errors.email ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"votre@email.com\"\n                required\n              />\n            </div>\n            {errors.email && (\n              <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                <AlertCircle className=\"h-4 w-4 mr-1\" />\n                {errors.email}\n              </p>\n            )}\n          </div>\n\n          {/* Password */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Mot de passe\n            </label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n              <input\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                className={`w-full pl-10 pr-12 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                  errors.password ? 'border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Votre mot de passe\"\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n              >\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n              </button>\n            </div>\n            {errors.password && (\n              <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                <AlertCircle className=\"h-4 w-4 mr-1\" />\n                {errors.password}\n              </p>\n            )}\n            \n            {/* Password Strength Indicator */}\n            {authMode === 'register' && formData.password && (\n              <div className=\"mt-2\">\n                <div className=\"flex space-x-1 mb-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <div\n                      key={i}\n                      className={`h-1 flex-1 rounded ${\n                        i < passwordStrength ? strengthColors[passwordStrength - 1] : 'bg-gray-200'\n                      }`}\n                    />\n                  ))}\n                </div>\n                <p className=\"text-xs text-gray-600\">\n                  Force du mot de passe: {strengthLabels[passwordStrength - 1] || 'Tr√®s faible'}\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Confirm Password for Registration */}\n          {authMode === 'register' && (\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Confirmer le mot de passe\n              </label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className={`w-full pl-10 pr-12 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                    errors.confirmPassword ? 'border-red-500' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Confirmez votre mot de passe\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                >\n                  {showConfirmPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                </button>\n              </div>\n              {errors.confirmPassword && (\n                <p className=\"mt-1 text-sm text-red-600 flex items-center\">\n                  <AlertCircle className=\"h-4 w-4 mr-1\" />\n                  {errors.confirmPassword}\n                </p>\n              )}\n            </div>\n          )}\n\n          {/* Terms and Newsletter for Registration */}\n          {authMode === 'register' && (\n            <div className=\"space-y-3\">\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  name=\"acceptTerms\"\n                  checked={formData.acceptTerms}\n                  onChange={handleInputChange}\n                  className=\"mt-1 h-4 w-4 text-primary-bolt-500 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">\n                  J'accepte les{' '}\n                  <a href=\"#\" className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-medium\">\n                    conditions d'utilisation\n                  </a>{' '}\n                  et la{' '}\n                  <a href=\"#\" className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-medium\">\n                    politique de confidentialit√©\n                  </a>\n                </span>\n              </label>\n              {errors.terms && (\n                <p className=\"text-sm text-red-600 flex items-center\">\n                  <AlertCircle className=\"h-4 w-4 mr-1\" />\n                  {errors.terms}\n                </p>\n              )}\n\n              <label className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  name=\"acceptNewsletter\"\n                  checked={formData.acceptNewsletter}\n                  onChange={handleInputChange}\n                  className=\"mt-1 h-4 w-4 text-primary-bolt-500 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">\n                  Je souhaite recevoir les offres et actualit√©s d'Auto2Roues par email\n                </span>\n              </label>\n            </div>\n          )}\n\n          {/* Submit Button */}\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n          >\n            {isLoading ? (\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <span>{authMode === 'login' ? 'Connexion...' : 'Cr√©ation du compte...'}</span>\n              </div>\n            ) : (\n              authMode === 'login' ? 'Se connecter' : 'Cr√©er mon compte'\n            )}\n          </button>\n        </form>\n\n        {/* Footer */}\n        <div className=\"p-6 border-t border-gray-200 bg-gray-50 rounded-b-2xl\">\n          <div className=\"text-center\">\n            <p className=\"text-gray-600 mb-3\">\n              {authMode === 'login' ? \"Pas encore de compte ?\" : \"D√©j√† un compte ?\"}\n            </p>\n            <button\n              onClick={switchMode}\n              className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-semibold transition-colors\"\n            >\n              {authMode === 'login' ? \"Cr√©er un compte\" : \"Se connecter\"}\n            </button>\n          </div>\n          \n          {authMode === 'login' && (\n            <div className=\"mt-4 text-center\">\n              <a\n                href=\"#\"\n                className=\"text-sm text-gray-600 hover:text-primary-bolt-500 transition-colors\"\n              >\n                Mot de passe oubli√© ?\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":24102},"client/src/components/Breadcrumb.tsx":{"content":"import React from 'react';\nimport { ChevronRight, Home } from 'lucide-react';\nimport { Vehicle } from '../types';\n\ninterface BreadcrumbItem {\n  label: string;\n  path?: string;\n}\n\ninterface BreadcrumbProps {\n  vehicle: Vehicle;\n  onNavigate?: (path: string) => void;\n}\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({ vehicle, onNavigate }) => {\n  // Mapping des cat√©gories vers leurs structures hi√©rarchiques\n  const getCategoryHierarchy = (category: string): BreadcrumbItem[] => {\n    const hierarchies: { [key: string]: BreadcrumbItem[] } = {\n      'voiture': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'utilitaire': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'caravane': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'remorque': [\n        { label: 'Voitures - Utilitaires', path: 'voiture-utilitaire' }\n      ],\n      'moto': [\n        { label: 'Motos, Scooters, Quads', path: 'moto-scooter-quad' },\n        { label: 'Motos', path: 'moto' }\n      ],\n      'scooter': [\n        { label: 'Motos, Scooters, Quads', path: 'moto-scooter-quad' },\n        { label: 'Scooters', path: 'scooter' }\n      ],\n      'quad': [\n        { label: 'Motos, Scooters, Quads', path: 'moto-scooter-quad' },\n        { label: 'Quads', path: 'quad' }\n      ],\n      'bateau': [\n        { label: 'Nautisme, Sport et Plein air', path: 'nautisme-sport-aerien' },\n        { label: 'Bateaux', path: 'bateau' }\n      ],\n      'jetski': [\n        { label: 'Nautisme, Sport et Plein air', path: 'nautisme-sport-aerien' },\n        { label: 'Jet-ski', path: 'jetski' }\n      ],\n      'aerien': [\n        { label: 'Nautisme, Sport et Plein air', path: 'nautisme-sport-aerien' },\n        { label: 'A√©rien', path: 'aerien' }\n      ],\n      'reparation': [\n        { label: 'Services', path: 'services' },\n        { label: 'R√©paration', path: 'reparation' }\n      ],\n      'remorquage': [\n        { label: 'Services', path: 'services' },\n        { label: 'Remorquage', path: 'remorquage' }\n      ],\n      'entretien': [\n        { label: 'Services', path: 'services' },\n        { label: 'Entretien', path: 'entretien' }\n      ],\n      'autre-service': [\n        { label: 'Services', path: 'services' },\n        { label: 'Autre service', path: 'autre-service' }\n      ],\n      'piece-voiture': [\n        { label: 'Pi√®ces d√©tach√©es', path: 'pieces' },\n        { label: 'Pi√®ces voiture', path: 'piece-voiture' }\n      ],\n      'piece-moto': [\n        { label: 'Pi√®ces d√©tach√©es', path: 'pieces' },\n        { label: 'Pi√®ces moto', path: 'piece-moto' }\n      ],\n      'autre-piece': [\n        { label: 'Pi√®ces d√©tach√©es', path: 'pieces' },\n        { label: 'Autre pi√®ce', path: 'autre-piece' }\n      ]\n    };\n\n    return hierarchies[category] || [{ label: 'Autres', path: 'other' }];\n  };\n\n  // Construction du fil d'ariane\n  const buildBreadcrumb = (): BreadcrumbItem[] => {\n    const breadcrumbItems: BreadcrumbItem[] = [\n      { label: 'Accueil', path: 'home' }\n    ];\n\n    // Ajouter la hi√©rarchie de cat√©gories\n    const categoryHierarchy = getCategoryHierarchy(vehicle.category);\n    breadcrumbItems.push(...categoryHierarchy);\n\n    // Ajouter la marque si disponible\n    if (vehicle.brand) {\n      breadcrumbItems.push({\n        label: vehicle.brand,\n        path: `${vehicle.category}/${vehicle.brand.toLowerCase()}`\n      });\n    }\n\n    // Ajouter le titre du v√©hicule (sans lien car c'est la page actuelle)\n    breadcrumbItems.push({\n      label: vehicle.title\n    });\n\n    return breadcrumbItems;\n  };\n\n  const breadcrumbItems = buildBreadcrumb();\n\n  const handleClick = (path?: string) => {\n    if (path && onNavigate) {\n      onNavigate(path);\n    }\n  };\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200 py-3\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <ol className=\"flex items-center space-x-2 text-sm\">\n          {breadcrumbItems.map((item, index) => (\n            <li key={index} className=\"flex items-center\">\n              {index === 0 && (\n                <Home className=\"h-4 w-4 mr-1 text-gray-400\" />\n              )}\n              \n              {item.path ? (\n                <button\n                  onClick={() => handleClick(item.path)}\n                  className=\"text-primary-bolt-500 hover:text-primary-bolt-600 hover:underline transition-colors font-medium\"\n                >\n                  {item.label}\n                </button>\n              ) : (\n                <span className=\"text-gray-900 font-medium\">{item.label}</span>\n              )}\n              \n              {index < breadcrumbItems.length - 1 && (\n                <ChevronRight className=\"h-4 w-4 mx-2 text-gray-400\" />\n              )}\n            </li>\n          ))}\n        </ol>\n      </div>\n    </nav>\n  );\n};","size_bytes":4886},"client/src/components/CategorySection.tsx":{"content":"import React from 'react';\nimport { Heart, ChevronRight, ChevronLeft, MapPin, Calendar } from 'lucide-react';\nimport { Vehicle } from '../types';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface CategorySectionProps {\n  title: string;\n  vehicles: Vehicle[];\n  onViewAll: () => void;\n  onVehicleClick: (vehicle: Vehicle) => void;\n}\n\nconst CategorySectionComponent: React.FC<CategorySectionProps> = ({\n  title,\n  vehicles,\n  onViewAll,\n  onVehicleClick\n}) => {\n  const scrollRef = React.useRef<HTMLDivElement>(null);\n\n  const scrollLeft = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({ left: -300, behavior: 'smooth' });\n    }\n  };\n\n  const scrollRight = () => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollBy({ left: 300, behavior: 'smooth' });\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatDate = (date: string | Date) => {\n    try {\n      const dateObj = typeof date === 'string' ? new Date(date) : date;\n      if (!dateObj || isNaN(dateObj.getTime())) {\n        return 'Date inconnue';\n      }\n      \n      const now = new Date();\n      const diffTime = Math.abs(now.getTime() - dateObj.getTime());\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      \n      if (diffDays === 1) return \"aujourd'hui\";\n      if (diffDays === 2) return \"hier\";\n      return `il y a ${diffDays} jours`;\n    } catch (error) {\n      return 'Date inconnue';\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    return (\n      <img \n        src={brandIcon} \n        alt=\"Brand icon\" \n        className=\"w-12 h-12 opacity-60\"\n      />\n    );\n  };\n\n  if (vehicles.length === 0) return null;\n\n  return (\n    <section className=\"py-12 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Container with background and padding */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n          {/* Header */}\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-primary-bolt-500\">{title}</h2>\n            <button\n              onClick={onViewAll}\n              className=\"flex items-center space-x-1 text-primary-bolt-500 hover:text-primary-bolt-600 font-medium transition-colors\"\n            >\n              <span>Voir plus d'annonces</span>\n              <ChevronRight className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* Listings Grid - Wider cards with better spacing */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n            {vehicles.slice(0, 4).map((vehicle, index) => (\n              <div\n                key={vehicle.id}\n                onClick={() => onVehicleClick(vehicle)}\n                className=\"bg-gray-50 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-200 cursor-pointer group overflow-hidden hover:scale-105 transform\"\n              >\n                {/* Image */}\n                <div className=\"relative h-48 bg-gray-100 overflow-hidden\">\n                  {vehicle.images.length > 0 ? (\n                    <img\n                      src={vehicle.images[0]}\n                      alt={vehicle.title}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-200\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center text-4xl\">\n                      {getCategoryIcon(vehicle.category)}\n                    </div>\n                  )}\n                  \n                  {/* Favorite Button */}\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      // Handle favorite\n                    }}\n                    className=\"absolute top-3 right-3 p-2 bg-white rounded-full shadow-sm hover:shadow-md transition-all opacity-0 group-hover:opacity-100\"\n                  >\n                    <Heart className=\"h-4 w-4 text-gray-600 hover:text-red-500 transition-colors\" />\n                  </button>\n\n                  {/* Pro Badge */}\n                  {vehicle.user?.type === 'professional' && (\n                    <div className=\"absolute top-3 left-3 bg-primary-bolt-500 text-white px-2 py-1 rounded text-xs font-medium\">\n                      Pro\n                    </div>\n                  )}\n                </div>\n\n                {/* Content */}\n                <div className=\"p-6\">\n                  {/* Title */}\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3 line-clamp-2 leading-tight\">\n                    {vehicle.title}\n                  </h3>\n\n                  {/* Price */}\n                  <div className=\"text-xl font-bold text-primary-bolt-500 mb-4\">\n                    {formatPrice(vehicle.price)}\n                  </div>\n\n                  {/* Location and Date */}\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <MapPin className=\"h-4 w-4 mr-2 flex-shrink-0\" />\n                      <span className=\"truncate\">{vehicle.location}</span>\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-500\">\n                      <Calendar className=\"h-4 w-4 mr-2 flex-shrink-0\" />\n                      <span>{formatDate(vehicle.createdAt)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport const CategorySection = React.memo(CategorySectionComponent);","size_bytes":5868},"client/src/components/Conseils.tsx":{"content":"import React from 'react';\nimport { BookOpen, Lightbulb, Shield, Wrench, Car, Bike, AlertTriangle, CheckCircle } from 'lucide-react';\n\nexport const Conseils: React.FC = () => {\n  const conseils = [\n    {\n      id: 1,\n      category: 'Achat',\n      title: 'Comment bien acheter un v√©hicule d\\'occasion',\n      description: 'Tous nos conseils pour √©viter les pi√®ges lors de l\\'achat d\\'un v√©hicule d\\'occasion.',\n      icon: Car,\n      color: 'from-blue-500 to-blue-600',\n      tips: [\n        'V√©rifiez les papiers du v√©hicule',\n        'Inspectez l\\'√©tat g√©n√©ral',\n        'Testez tous les √©quipements',\n        'N√©gociez le prix'\n      ]\n    },\n    {\n      id: 2,\n      category: 'Vente',\n      title: 'Optimiser la vente de votre v√©hicule',\n      description: 'Maximisez vos chances de vendre rapidement et au meilleur prix.',\n      icon: Lightbulb,\n      color: 'from-green-500 to-green-600',\n      tips: [\n        'Prenez de belles photos',\n        'R√©digez une description d√©taill√©e',\n        'Fixez un prix juste',\n        'Pr√©parez votre v√©hicule'\n      ]\n    },\n    {\n      id: 3,\n      category: 'S√©curit√©',\n      title: 'Transactions s√©curis√©es',\n      description: 'Prot√©gez-vous des arnaques et effectuez des transactions en toute s√©curit√©.',\n      icon: Shield,\n      color: 'from-red-500 to-red-600',\n      tips: [\n        'Rencontrez en personne',\n        'V√©rifiez l\\'identit√©',\n        'Utilisez un paiement s√©curis√©',\n        'M√©fiez-vous des prix trop bas'\n      ]\n    },\n    {\n      id: 4,\n      category: 'Entretien',\n      title: 'Maintenir votre v√©hicule en bon √©tat',\n      description: 'Conseils d\\'entretien pour prolonger la dur√©e de vie de votre v√©hicule.',\n      icon: Wrench,\n      color: 'from-purple-500 to-purple-600',\n      tips: [\n        'Respectez les r√©visions',\n        'Contr√¥lez r√©guli√®rement',\n        'Changez les consommables',\n        'Surveillez les t√©moins'\n      ]\n    },\n    {\n      id: 5,\n      category: 'Moto',\n      title: 'Sp√©cificit√©s des deux-roues',\n      description: 'Conseils sp√©cifiques pour l\\'achat et la vente de motos et scooters.',\n      icon: Bike,\n      color: 'from-orange-500 to-orange-600',\n      tips: [\n        'V√©rifiez l\\'√©tat des pneus',\n        'Testez les freins',\n        'Contr√¥lez la cha√Æne',\n        'V√©rifiez l\\'√©clairage'\n      ]\n    },\n    {\n      id: 6,\n      category: 'L√©gal',\n      title: 'Aspects juridiques et administratifs',\n      description: 'Tout ce qu\\'il faut savoir sur les d√©marches administratives.',\n      icon: AlertTriangle,\n      color: 'from-yellow-500 to-yellow-600',\n      tips: [\n        'Changement de propri√©taire',\n        'Contr√¥le technique',\n        'Assurance obligatoire',\n        'Certificat de cession'\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <div className=\"inline-flex items-center space-x-3 bg-primary-bolt-100 rounded-full px-6 py-3 mb-6\">\n            <BookOpen className=\"h-6 w-6 text-primary-bolt-500\" />\n            <span className=\"font-semibold text-primary-bolt-500\">Centre d'aide</span>\n          </div>\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-gray-900 mb-6\">\n            Conseils et guides pratiques\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            D√©couvrez nos conseils d'experts pour acheter, vendre et entretenir vos v√©hicules en toute s√©r√©nit√©.\n          </p>\n        </div>\n\n        {/* Conseils Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {conseils.map((conseil) => {\n            const IconComponent = conseil.icon;\n            return (\n              <div\n                key={conseil.id}\n                className=\"bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 overflow-hidden border border-gray-100\"\n              >\n                {/* Header with gradient */}\n                <div className={`bg-gradient-to-r ${conseil.color} p-6 text-white`}>\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-3\">\n                      <IconComponent className=\"h-6 w-6\" />\n                    </div>\n                    <span className=\"bg-white/20 backdrop-blur-sm rounded-full px-3 py-1 text-sm font-medium\">\n                      {conseil.category}\n                    </span>\n                  </div>\n                  <h3 className=\"text-xl font-bold mb-2\">{conseil.title}</h3>\n                  <p className=\"text-white/90 text-sm\">{conseil.description}</p>\n                </div>\n\n                {/* Content */}\n                <div className=\"p-6\">\n                  <h4 className=\"font-semibold text-gray-900 mb-4 flex items-center space-x-2\">\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                    <span>Points cl√©s</span>\n                  </h4>\n                  <ul className=\"space-y-3\">\n                    {conseil.tips.map((tip, index) => (\n                      <li key={index} className=\"flex items-start space-x-3\">\n                        <div className=\"w-2 h-2 bg-primary-bolt-500 rounded-full mt-2 flex-shrink-0\"></div>\n                        <span className=\"text-gray-700 text-sm\">{tip}</span>\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  <button className=\"w-full mt-6 bg-gray-100 hover:bg-gray-200 text-gray-800 py-3 px-4 rounded-xl font-semibold transition-colors\">\n                    Lire le guide complet\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* FAQ Section */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-16\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Questions fr√©quentes</h2>\n            <p className=\"text-gray-600\">Les r√©ponses aux questions les plus courantes</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"space-y-6\">\n              <div className=\"border-l-4 border-primary-bolt-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Comment publier une annonce ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Cliquez sur \"D√©poser une annonce\", remplissez le formulaire √©tape par √©tape, \n                  ajoutez des photos et publiez gratuitement.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-green-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Combien co√ªte une annonce ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  La publication d'annonces est enti√®rement gratuite. Seules les options premium \n                  de mise en avant sont payantes.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-blue-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Comment contacter un vendeur ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Utilisez le bouton \"Voir le t√©l√©phone\" ou \"Envoyer un message\" sur la page \n                  de l'annonce pour contacter directement le vendeur.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"space-y-6\">\n              <div className=\"border-l-4 border-orange-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Comment √©viter les arnaques ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Rencontrez toujours le vendeur en personne, v√©rifiez les papiers du v√©hicule \n                  et m√©fiez-vous des prix anormalement bas.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-purple-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Puis-je modifier mon annonce ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Oui, vous pouvez modifier votre annonce √† tout moment depuis votre tableau \n                  de bord en cliquant sur l'ic√¥ne de modification.\n                </p>\n              </div>\n\n              <div className=\"border-l-4 border-red-500 pl-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Que faire en cas de probl√®me ?</h3>\n                <p className=\"text-gray-600 text-sm\">\n                  Contactez notre support client via le formulaire de contact ou par t√©l√©phone. \n                  Nous vous aiderons √† r√©soudre votre probl√®me.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Contact Support */}\n        <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-2xl p-8 text-white text-center\">\n          <h2 className=\"text-2xl font-bold mb-4\">Besoin d'aide suppl√©mentaire ?</h2>\n          <p className=\"text-primary-bolt-100 mb-6\">\n            Notre √©quipe support est l√† pour vous accompagner dans toutes vos d√©marches.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <button className=\"bg-white text-primary-bolt-500 hover:bg-gray-50 px-8 py-3 rounded-xl font-semibold transition-colors\">\n              Contacter le support\n            </button>\n            <button className=\"bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white px-8 py-3 rounded-xl font-semibold transition-colors border border-white/20\">\n              Centre d'aide complet\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":10003},"client/src/components/ContactSellerModal.tsx":{"content":"import { useState } from 'react';\nimport { Send, MessageCircle, Phone, X } from 'lucide-react';\nimport { useMessaging } from '../hooks/useMessaging';\nimport { useAuth } from '../contexts/AuthContext';\nimport { supabase } from '../lib/supabase';\n\ninterface ContactSellerModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  vehicle: {\n    id: string;\n    title: string;\n    price: number;\n    user_id: string;\n  };\n  currentUserId?: string;\n}\n\nexport function ContactSellerModal({ \n  isOpen, \n  onClose, \n  vehicle, \n  currentUserId \n}: ContactSellerModalProps) {\n  const { user } = useAuth();\n  const actualUserId = currentUserId || user?.id;\n  const [message, setMessage] = useState(\n    `Bonjour, je suis int√©ress√©(e) par votre annonce \"${vehicle.title}\". Pourriez-vous me donner plus d'informations ?`\n  );\n  const { startConversation, loading, error } = useMessaging();\n  // Simple toast alternative\n  const showToast = (message: string, isError: boolean = false) => {\n    const toastDiv = document.createElement('div');\n    toastDiv.className = `fixed top-4 right-4 z-50 p-4 rounded-lg text-white ${isError ? 'bg-red-500' : 'bg-green-500'} shadow-lg`;\n    toastDiv.textContent = message;\n    document.body.appendChild(toastDiv);\n    setTimeout(() => document.body.removeChild(toastDiv), 3000);\n  };\n\n  const handleSendMessage = async () => {\n    if (!actualUserId) {\n      showToast(\"Vous devez √™tre connect√© pour envoyer un message\", true);\n      return;\n    }\n\n    if (!message.trim()) {\n      showToast(\"Veuillez saisir un message\", true);\n      return;\n    }\n\n    try {\n      console.log('üì§ Tentative envoi message:', {\n        from: actualUserId,\n        to: vehicle.user_id,\n        vehicle: vehicle.id,\n        message: message.substring(0, 50) + '...'\n      });\n\n      // Obtenir le token d'acc√®s depuis la session Supabase\n      const { data: { session } } = await supabase.auth.getSession();\n      if (!session || !session.access_token) {\n        console.error('‚ùå Pas de session active');\n        showToast(\"Erreur d'authentification. Veuillez vous reconnecter.\", true);\n        return;\n      }\n      \n      // Synchroniser l'utilisateur avec Supabase Auth\n      const syncResponse = await fetch('/api/users/sync-auth', {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${session.access_token}`\n        },\n        body: JSON.stringify({\n          supabaseId: actualUserId,\n          email: user?.email || 'utilisateur@example.com',\n          name: user?.user_metadata?.name || user?.email?.split('@')[0] || 'Utilisateur'\n        })\n      });\n      \n      if (!syncResponse.ok) {\n        console.error('‚ùå Impossible de synchroniser l\\'utilisateur');\n        showToast(\"Erreur d'authentification. Veuillez vous reconnecter.\", true);\n        return;\n      }\n      \n      const syncedUser = await syncResponse.json();\n      console.log('‚úÖ Utilisateur synchronis√©:', syncedUser.user?.name || syncedUser.name);\n\n      // Envoi r√©el du message via l'API\n      console.log('üìç ID de l\\'annonce:', vehicle.id);\n      \n      // V√©rifier que l'ID de l'annonce est un nombre valide\n      // G√©rer diff√©rents formats possibles (nombre, string num√©rique, ou UUID)\n      let annonceId;\n      if (typeof vehicle.id === 'number') {\n        annonceId = vehicle.id;\n      } else if (/^\\d+$/.test(vehicle.id)) {\n        // Si c'est une cha√Æne qui contient uniquement des chiffres\n        annonceId = parseInt(vehicle.id);\n      } else {\n        console.error('‚ùå ID d\\'annonce invalide (doit √™tre un nombre):', vehicle.id);\n        showToast(\"Format d'annonce invalide\", true);\n        return;\n      }\n      \n      // G√©n√©rer un ID unique pour le message\n      const messageId = crypto.randomUUID();\n      \n      // Essayer d'obtenir des informations sur la structure exacte de la table\n      console.log(\"üîç Tentative d'inspection de la structure de la table messages\");\n      \n      // Utiliser le format attendu par /api/messages-simple/send\n      const messagePayload = {\n        fromUserId: actualUserId,\n        toUserId: vehicle.user_id,\n        vehicleId: String(annonceId),\n        content: message\n      };\n      \n      console.log(\"üîç Payload du message:\", messagePayload);\n      \n      const response = await fetch('/api/messages-simple/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(messagePayload),\n      });\n      \n      console.log(`üì° R√©ponse API: ${response.status} ${response.statusText}`);\n\n      if (response.ok) {\n        showToast(\"Message envoy√© ! Le vendeur va recevoir votre message\");\n        onClose();\n      } else {\n        const errorText = await response.text();\n        console.error('‚ùå Erreur API brute:', errorText);\n        \n        let errorData = {};\n        try {\n          errorData = JSON.parse(errorText);\n          console.error('‚ùå Erreur API (pars√©e):', errorData);\n        } catch (e) {\n          console.error('‚ùå Erreur de parsing JSON:', e);\n        }\n        \n        showToast((errorData as any).error || `Erreur lors de l'envoi du message: ${errorText.substring(0, 100)}`, true);\n      }\n    } catch (err) {\n      console.error('‚ùå Erreur r√©seau:', err);\n      showToast(\"Erreur de connexion\", true);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-50\"\n        onClick={onClose}\n      />\n      \n      {/* Modal */}\n      <div className=\"relative bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full m-4 max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <MessageCircle className=\"h-5 w-5 text-teal-600\" />\n              <h2 className=\"text-lg font-semibold\">Contacter le vendeur</h2>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n            >\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n        \n        <div className=\"space-y-4\">\n          <div className=\"p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n            <h4 className=\"font-semibold text-sm\">{vehicle.title}</h4>\n            <p className=\"text-teal-600 font-bold\">\n              {vehicle.price.toLocaleString()} ‚Ç¨\n            </p>\n          </div>\n\n          <div className=\"space-y-3\">\n            <div>\n              <label htmlFor=\"message\" className=\"block text-sm font-medium mb-1\">Votre message</label>\n              <textarea\n                id=\"message\"\n                value={message}\n                onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => setMessage(e.target.value)}\n                placeholder=\"Tapez votre message ici...\"\n                rows={4}\n                className=\"w-full p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-teal-500 focus:border-transparent\"\n              />\n            </div>\n\n\n          </div>\n\n          <div className=\"flex gap-2 pt-4\">\n            <button\n              onClick={onClose}\n              className=\"flex-1 py-2 px-4 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n            >\n              Annuler\n            </button>\n            <button\n              onClick={handleSendMessage}\n              disabled={loading}\n              className=\"flex-1 py-2 px-4 bg-teal-600 hover:bg-teal-700 text-white rounded-lg disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n            >\n              {loading ? (\n                \"Envoi...\"\n              ) : (\n                <>\n                  <Send className=\"h-4 w-4 mr-2\" />\n                  Envoyer\n                </>\n              )}\n            </button>\n          </div>\n\n          {error && (\n            <div className=\"text-red-600 text-sm p-2 bg-red-50 dark:bg-red-900/20 rounded mt-2\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"text-center pt-2\">\n            <p className=\"text-xs text-gray-500\">\n              <Phone className=\"inline h-3 w-3 mr-1\" />\n              Vous pouvez aussi appeler directement le vendeur\n            </p>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8590},"client/src/components/CreateListingForm.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { \n  ArrowLeft, ArrowRight, Upload, X, Check, Car, Bike, Wrench, Package, Camera, Search,\n  Truck, Ship, Waves, Settings, Anchor, Sailboat, Mountain, CreditCard\n} from 'lucide-react';\nimport { ImageUploader } from './ImageUploader';\nimport { PremiumPackSelector } from './PremiumPackSelector';\nimport { PremiumPayment } from './PremiumPayment';\nimport { PublishSuccessModal } from './PublishSuccessModal';\nimport { AddressInput } from './AddressInput';\nimport { PREMIUM_PACKS } from '@/types/premium';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { getBrandsBySubcategory, fuelTypes } from '../utils/mockData';\n// Nouvelles images des cat√©gories principales\nimport voitureImage from '@assets/voiture-2_1752244968736.png';\nimport motosImage from '@assets/motos-scooters_1752244968742.png';\nimport piecesImage from '@assets/pieces-detachees_1752244968743.png';\nimport servicesImage from '@assets/services-entretien_1752244968744.png';\n\n// Images des sous-cat√©gories voitures-utilitaires\nimport voitureIcon from '@assets/voiture-_1752249166092.png';\nimport utilitaireIcon from '@assets/utilitaire_1752249166091.png';\nimport remorqueIcon from '@assets/remorque_1752249166090.png';\nimport caravaneIcon from '@assets/caravane_1752249166091.png';\n// Images des sous-cat√©gories motos-quad-marine\nimport motosIcon from '@assets/motos-scooters_1752244968742.png'; // Utiliser l'image de la cat√©gorie principale\nimport scooterIcon from '@assets/scooter_1752088210843.png';\nimport quadIcon from '@assets/Quad_1752249742337.png';\nimport jetskiIcon from '@assets/Jetski_1752249742334.png';\nimport bateauIcon from '@assets/bateau_1752249742336.png';\nimport aerienIcon from '@assets/aerien_1753810777764.png';\n\n// Images des sous-cat√©gories services\nimport reparationIcon from '@assets/reparation_1752251142655.png';\nimport remorquageIcon from '@assets/remorquage_1752251142654.png';\nimport entretienIcon from '@assets/entretien_1752251142651.png';\nimport autreServiceIcon from '@assets/autre_1752251142652.png';\n\n// Images pour les boutons \"Je vends\" et \"Je cherche\"\nimport vendreIcon from '@assets/vendre_1752258100618.png';\nimport chercherIcon from '@assets/chercher_1752258100621.png';\n\ninterface FormData {\n  // √âtape 1: Type d'annonce\n  listingType: 'sale' | 'search' | '';\n  \n  // √âtape 2: Famille principale\n  category: string;\n  \n  // √âtape 3: √âtat du bien (seulement pour biens mat√©riels - non services/pi√®ces)\n  condition?: 'neuf' | 'tres_bon_etat' | 'bon_etat' | 'etat_moyen' | 'pour_pieces';\n  \n  // √âtape 4: Sous-famille\n  subcategory: string;\n  \n  // √âtape 5+: Suite habituelle\n  title: string;\n  registrationNumber?: string;\n  specificDetails: Record<string, any>;\n  description: string;\n  photos: (File | string)[];\n  price: number;\n  location: {\n    city: string;\n    postalCode: string;\n  };\n  contact: {\n    phone: string;\n    email: string;\n    hidePhone: boolean;\n    whatsapp: string;\n    sameAsPhone: boolean;\n  };\n  premiumPack: string;\n}\n\nconst CATEGORIES = [\n  {\n    id: 'voiture-utilitaire',\n    name: 'Voitures - Utilitaires',\n    icon: Car,\n    image: voitureImage,\n    color: 'from-blue-500 to-blue-600',\n    isMaterial: true, // Bien mat√©riel\n    subcategories: [\n      { \n        id: 'voiture', \n        name: 'Voiture', \n        image: voitureIcon, \n        color: 'text-blue-500',\n        bgColor: 'bg-blue-100'\n      },\n      { \n        id: 'utilitaire', \n        name: 'Utilitaire', \n        image: utilitaireIcon, \n        color: 'text-gray-600',\n        bgColor: 'bg-gray-100'\n      },\n      { \n        id: 'caravane', \n        name: 'Caravane', \n        image: caravaneIcon, \n        color: 'text-green-600',\n        bgColor: 'bg-green-100'\n      },\n      { \n        id: 'remorque', \n        name: 'Remorque', \n        image: remorqueIcon, \n        color: 'text-orange-600',\n        bgColor: 'bg-orange-100'\n      }\n    ]\n  },\n  {\n    id: 'moto-scooter-quad',\n    name: 'Motos, Scooters, Quads',\n    icon: Bike,\n    image: motosImage,\n    color: 'from-green-500 to-green-600',\n    isMaterial: true, // Bien mat√©riel\n    subcategories: [\n      { \n        id: 'moto', \n        name: 'Moto', \n        image: motosIcon, \n        color: 'text-red-500',\n        bgColor: 'bg-red-100'\n      },\n      { \n        id: 'scooter', \n        name: 'Scooter', \n        image: scooterIcon, \n        color: 'text-purple-500',\n        bgColor: 'bg-purple-100'\n      },\n      { \n        id: 'quad', \n        name: 'Quad', \n        image: quadIcon, \n        color: 'text-yellow-600',\n        bgColor: 'bg-yellow-100'\n      }\n    ]\n  },\n  {\n    id: 'nautisme-sport-aerien',\n    name: 'Nautisme, Sport et Plein air',\n    icon: Anchor,\n    image: bateauIcon,\n    color: 'from-cyan-500 to-blue-600',\n    isMaterial: true, // Bien mat√©riel\n    subcategories: [\n      { \n        id: 'bateau', \n        name: 'Bateau', \n        image: bateauIcon, \n        color: 'text-blue-600',\n        bgColor: 'bg-blue-100'\n      },\n      { \n        id: 'jetski', \n        name: 'Jet ski', \n        image: jetskiIcon, \n        color: 'text-cyan-500',\n        bgColor: 'bg-cyan-100'\n      },\n      { \n        id: 'aerien', \n        name: 'A√©rien', \n        image: aerienIcon,\n        color: 'text-sky-600',\n        bgColor: 'bg-sky-100'\n      }\n    ]\n  },\n  {\n    id: 'services',\n    name: 'Services',\n    icon: Wrench,\n    image: servicesImage,\n    color: 'from-orange-500 to-orange-600',\n    isMaterial: false, // Pas un bien mat√©riel\n    subcategories: [\n      { \n        id: 'reparation', \n        name: 'R√©paration', \n        image: reparationIcon,\n        color: 'text-orange-500',\n        bgColor: 'bg-orange-100'\n      },\n      { \n        id: 'remorquage', \n        name: 'Remorquage', \n        image: remorquageIcon,\n        color: 'text-red-600',\n        bgColor: 'bg-red-100'\n      },\n      { \n        id: 'entretien', \n        name: 'Entretien', \n        image: entretienIcon,\n        color: 'text-green-500',\n        bgColor: 'bg-green-100'\n      },\n      { \n        id: 'autre-service', \n        name: 'Autre', \n        image: autreServiceIcon,\n        color: 'text-gray-500',\n        bgColor: 'bg-gray-100'\n      }\n    ]\n  },\n  {\n    id: 'pieces',\n    name: 'Pi√®ces d√©tach√©es',\n    icon: Package,\n    image: piecesImage,\n    color: 'from-purple-500 to-purple-600',\n    isMaterial: false, // Pas un bien mat√©riel (pi√®ces d√©tach√©es)\n    subcategories: [\n      { \n        id: 'piece-moto', \n        name: 'Pi√®ces moto', \n        image: motosImage, // Utiliser l'image de la cat√©gorie Motos, scooters\n        color: 'text-purple-500',\n        bgColor: 'bg-purple-100'\n      },\n      { \n        id: 'piece-voiture', \n        name: 'Pi√®ces voiture', \n        image: voitureImage, // Utiliser l'image de la cat√©gorie Voitures - utilitaires\n        color: 'text-blue-500',\n        bgColor: 'bg-blue-100'\n      },\n      { \n        id: 'autre-piece', \n        name: 'Autres pi√®ces', \n        image: piecesImage, \n        color: 'text-purple-500',\n        bgColor: 'bg-purple-100'\n      }\n    ]\n  }\n];\n\n// √âquipements pr√©d√©finis pour les v√©hicules\nconst VEHICLE_EQUIPMENT = {\n  car: [\n    'Toit ouvrant / Toit panoramique',\n    'Climatisation',\n    'GPS',\n    'Si√®ges chauffants',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Jantes alliage',\n    'Feux LED / X√©non',\n    'Vitres √©lectriques',\n    'Airbags',\n    'Si√®ges √©lectriques',\n    'Attelage',\n    'R√©gulateur de vitesse',\n    'Bluetooth',\n    'Syst√®me audio premium',\n    'Cuir'\n  ],\n  motorcycle: [\n    'ABS',\n    'Contr√¥le de traction',\n    'Modes de conduite',\n    '√âclairage LED',\n    'Quickshifter',\n    'Chauffage poign√©es',\n    'Pare-brise',\n    'Top case',\n    'Sacoches',\n    'Antivol',\n    'Compteur digital',\n    'USB'\n  ],\n  utility: [\n    'Climatisation',\n    'GPS',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Attelage',\n    'Cloison de s√©paration',\n    'Hayon arri√®re',\n    'Porte lat√©rale',\n    'Plancher bois',\n    '√âclairage LED cargo',\n    'Prise 12V',\n    'Radio Bluetooth'\n  ],\n  caravan: [\n    'Chauffage',\n    'Eau courante',\n    'WC',\n    'Douche',\n    'Frigo',\n    'Plaques de cuisson',\n    'Four',\n    'TV',\n    'Auvent',\n    'Climatisation',\n    'Panneaux solaires',\n    'Antenne satellite'\n  ],\n  trailer: [\n    'B√¢che de protection',\n    'Ridelles amovibles',\n    'Rampes de chargement',\n    'Sangles d\\'arrimage',\n    'Roue de secours',\n    '√âclairage LED',\n    'Plancher antid√©rapant',\n    'Support v√©lo'\n  ],\n  scooter: [\n    'ABS',\n    'Coffre sous selle',\n    '√âclairage LED',\n    'Prise USB',\n    'Pare-brise',\n    'Top case',\n    'Antivol',\n    'Compteur digital'\n  ],\n  quad: [\n    'Suspension sport',\n    'Freins √† disque',\n    'D√©marreur √©lectrique',\n    'Pneus tout-terrain',\n    'Treuil',\n    'Protection',\n    '√âclairage LED',\n    'Attelage'\n  ],\n  jetski: [\n    'Syst√®me audio',\n    'GPS',\n    '√âclairage LED',\n    'Compartiments √©tanches',\n    '√âchelle de remont√©e',\n    'Remorque incluse',\n    'Housse de protection'\n  ],\n  boat: [\n    'GPS',\n    'Sondeur',\n    'Radio VHF',\n    'Pilote automatique',\n    '√âclairage LED',\n    'Taud de soleil',\n    '√âchelle de bain',\n    'Douche de pont',\n    'WC',\n    'Cuisine',\n    'Couchettes'\n  ],\n  aircraft: [\n    'Parachute de secours',\n    'GPS',\n    'Radio',\n    'Variom√®tre',\n    'Sac de portage',\n    'Kit d\\'entretien',\n    'Housse de protection',\n    'Manuel d\\'utilisation'\n  ]\n};\n\n// Options pour les diff√©rents types\nconst VEHICLE_TYPES = {\n  car: [\n    'Citadine',\n    'Berline',\n    'SUV',\n    'Break',\n    'Coup√©',\n    'Cabriolet',\n    'Monospace',\n    'Pickup'\n  ],\n  utility: [\n    'Camionnette',\n    'Fourgon',\n    'Plateau',\n    'Benne',\n    'Frigorifique',\n    'Hayon',\n    'Autre'\n  ],\n  caravan: [\n    'Caravane pliante',\n    'Caravane rigide',\n    'Camping-car',\n    'Cellule amovible',\n    'Autre'\n  ],\n  trailer: [\n    'Remorque bagag√®re',\n    'Remorque porte-voiture',\n    'Remorque plateau',\n    'Remorque benne',\n    'Remorque ferm√©e',\n    'Autre'\n  ],\n  motorcycle: [\n    'Sportive',\n    'Routi√®re',\n    'Trail',\n    'Custom',\n    'Roadster',\n    'Enduro',\n    'Cross',\n    'Autre'\n  ],\n  scooter: [\n    'Scooter 50cc',\n    'Scooter 125cc',\n    'Scooter 250cc',\n    'Maxi-scooter',\n    'Scooter √©lectrique',\n    'Scooter vintage',\n    'Autre'\n  ],\n  quad: [\n    'Quad sport',\n    'Quad utilitaire',\n    'Quad enfant',\n    'Side-by-side',\n    'Autre'\n  ],\n  aircraft: [\n    'ULM pendulaire',\n    'ULM multiaxe',\n    'Parapente',\n    'Paramoteur',\n    'Planeur',\n    'Avion l√©ger',\n    'H√©licopt√®re',\n    'Autre'\n  ],\n  boat: [\n    'Bateau √† moteur',\n    'Voilier',\n    'Semi-rigide',\n    'Pneumatique',\n    'Catamaran',\n    'P√™che promenade',\n    'Runabout',\n    'Autre'\n  ],\n  jetski: [\n    'Jet √† bras',\n    'Jet assis',\n    'Jet 3 places',\n    'Jet de course',\n    'Autre'\n  ]\n};\n\nconst TRANSMISSION_TYPES = [\n  { value: 'manual', label: 'Manuelle' },\n  { value: 'automatic', label: 'Automatique' },\n  { value: 'semi-automatic', label: 'Semi-automatique' }\n];\n\nconst COLORS = [\n  'Blanc', 'Noir', 'Gris', 'Argent', 'Rouge', 'Bleu', 'Vert', 'Jaune', 'Orange', 'Violet', 'Marron', 'Beige', 'Autre'\n];\n\nconst DOORS = [2, 3, 4, 5];\n\nconst UPHOLSTERY_TYPES = [\n  { value: 'tissu', label: 'Tissu' },\n  { value: 'cuir_partiel', label: 'Cuir partiel' },\n  { value: 'cuir', label: 'Cuir' },\n  { value: 'velours', label: 'Velours' },\n  { value: 'alcantara', label: 'Alcantara' }\n];\n\nconst EMISSION_CLASSES = [\n  { value: 'euro1', label: 'Euro 1' },\n  { value: 'euro2', label: 'Euro 2' },\n  { value: 'euro3', label: 'Euro 3' },\n  { value: 'euro4', label: 'Euro 4' },\n  { value: 'euro5', label: 'Euro 5' },\n  { value: 'euro6', label: 'Euro 6' }\n];\n\nconst LICENSE_TYPES = [\n  { value: 'A', label: 'Permis A' },\n  { value: 'A1', label: 'Permis A1' },\n  { value: 'A2', label: 'Permis A2' },\n  { value: 'AL', label: 'Permis AL' },\n  { value: 'sans_permis', label: 'Sans permis' }\n];\n\nconst SERVICE_TYPES = [\n  'R√©paration m√©canique',\n  'R√©paration carrosserie',\n  'Entretien',\n  'R√©vision',\n  'Contr√¥le technique',\n  'Remorquage',\n  'D√©pannage',\n  'Autre'\n];\n\nconst PART_CATEGORIES = [\n  'Moteur',\n  'Transmission',\n  'Freinage',\n  'Suspension',\n  '√âlectronique',\n  'Carrosserie',\n  'Int√©rieur',\n  '√âclairage',\n  'Pneumatiques',\n  'Autre'\n];\n\nconst PART_CONDITIONS = [\n  { value: 'new', label: 'Neuf' },\n  { value: 'used', label: 'Occasion' }\n];\n\nconst VEHICLE_CONDITIONS = [\n  { value: 'en_circulation', label: 'Roulant', description: 'V√©hicule en √©tat de circulation' },\n  { value: 'accidente', label: 'Accident√©', description: 'V√©hicule accident√©, vendu en l\\'√©tat' }\n];\n\ninterface CreateListingFormProps {\n  onSuccess?: () => void;\n}\n\nexport const CreateListingForm: React.FC<CreateListingFormProps> = ({ onSuccess }) => {\n  const { user, dbUser } = useAuth();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [autoAdvanceEnabled, setAutoAdvanceEnabled] = useState(true);\n  const [showPayment, setShowPayment] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  \n  // Configuration des pays support√©s\n  const COUNTRY_CODES = [\n    { code: '+33', name: 'France', length: 9, format: (num: string) => num.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5') },\n    { code: '+1', name: '√âtats-Unis/Canada', length: 10, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3') },\n    { code: '+44', name: 'Royaume-Uni', length: 10, format: (num: string) => num.replace(/(\\d{4})(\\d{3})(\\d{3})/, '$1 $2 $3') },\n    { code: '+49', name: 'Allemagne', length: 10, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3') },\n    { code: '+34', name: 'Espagne', length: 9, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{3})/, '$1 $2 $3') },\n    { code: '+39', name: 'Italie', length: 10, format: (num: string) => num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3') },\n    { code: '+32', name: 'Belgique', length: 9, format: (num: string) => num.replace(/(\\d{3})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4') },\n    { code: '+41', name: 'Suisse', length: 9, format: (num: string) => num.replace(/(\\d{2})(\\d{3})(\\d{2})(\\d{2})/, '$1 $2 $3 $4') },\n    { code: '+212', name: 'Maroc', length: 9, format: (num: string) => num.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5') },\n    { code: '+213', name: 'Alg√©rie', length: 9, format: (num: string) => num.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5') }\n  ];\n\n  // Fonction pour d√©tecter et formater le num√©ro de t√©l√©phone international\n  const formatPhoneNumber = (phone: string): string => {\n    // Supprimer tous les caract√®res non num√©riques sauf le +\n    const cleaned = phone.replace(/[^\\d+]/g, '');\n    \n    // Si le num√©ro commence d√©j√† par +, essayer de le formater selon le pays\n    if (cleaned.startsWith('+')) {\n      for (const country of COUNTRY_CODES) {\n        if (cleaned.startsWith(country.code)) {\n          const withoutPrefix = cleaned.slice(country.code.length);\n          if (withoutPrefix.length >= country.length - 1 && withoutPrefix.length <= country.length + 1) {\n            const paddedNumber = withoutPrefix.padEnd(country.length, '');\n            return `${country.code} ${country.format(paddedNumber.slice(0, country.length))}`;\n          }\n        }\n      }\n      return cleaned; // Retourner tel quel si format non reconnu\n    }\n    \n    // Pour les num√©ros fran√ßais sans indicatif\n    if (cleaned.startsWith('0') && cleaned.length === 10) {\n      const withoutZero = cleaned.slice(1);\n      return `+33 ${withoutZero.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5')}`;\n    }\n    \n    // Si le num√©ro fait 9 chiffres (fran√ßais sans 0), ajouter +33\n    if (cleaned.length === 9 && !cleaned.startsWith('0')) {\n      return `+33 ${cleaned.replace(/(\\d{1})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/, '$1 $2 $3 $4 $5')}`;\n    }\n    \n    // Si pas de format reconnu, ajouter +33 par d√©faut pour la France\n    if (cleaned.length > 0 && !cleaned.startsWith('+')) {\n      return `+33 ${cleaned}`;\n    }\n    \n    return cleaned;\n  };\n\n  // Initialiser formData avec les fonctions de formatage\n  const initializeFormData = (): FormData => ({\n    listingType: '',\n    category: '',\n    subcategory: '',\n    title: '',\n    registrationNumber: '',\n    specificDetails: {},\n    description: '',\n    photos: [],\n    price: 0,\n    location: { city: '', postalCode: '' },\n    contact: { \n      phone: '', \n      email: '', \n      hidePhone: false,\n      whatsapp: '',\n      sameAsPhone: false\n    },\n    premiumPack: 'free'\n  });\n\n  const [formData, setFormData] = useState<FormData>(initializeFormData());\n\n  const [vehicleDataLoading, setVehicleDataLoading] = useState(false);\n  const [vehicleDataMessage, setVehicleDataMessage] = useState('');\n\n  const totalSteps = 13; // Ajout d'une √©tape pack premium\n\n  // R√©initialiser la sous-cat√©gorie quand la cat√©gorie change\n  useEffect(() => {\n    if (formData.category) {\n      setFormData(prev => ({ ...prev, subcategory: '', specificDetails: {} }));\n    }\n  }, [formData.category]);\n\n  // √âtat pour √©viter le pr√©-remplissage multiple\n  const [hasPrefilledData, setHasPrefilledData] = useState(false);\n\n  // R√©initialiser le flag √† chaque ouverture du composant\n  useEffect(() => {\n    setHasPrefilledData(false);\n  }, []);\n\n  // Pr√©-remplir avec les donn√©es utilisateur via appel API\n  useEffect(() => {\n    const loadUserContactData = async () => {\n      if ((user || dbUser) && !hasPrefilledData) {\n        try {\n          console.log('üîÑ R√©cup√©ration des donn√©es utilisateur depuis Supabase...');\n          \n          // Appel API pour r√©cup√©rer les donn√©es fra√Æches de l'utilisateur\n          const userEmail = user?.email || dbUser?.email;\n          if (!userEmail) return;\n          \n          const response = await fetch(`/api/users/by-email/${encodeURIComponent(userEmail)}`);\n          if (!response.ok) {\n            console.error('Erreur lors de la r√©cup√©ration des donn√©es utilisateur');\n            return;\n          }\n          \n          const userData = await response.json();\n          console.log('üìû Donn√©es utilisateur r√©cup√©r√©es:', userData);\n          \n          const userPhone = userData.phone ? formatPhoneNumber(userData.phone) : '';\n          const userWhatsapp = userData.whatsapp ? formatPhoneNumber(userData.whatsapp) : '';\n          \n          setFormData(prev => ({\n            ...prev,\n            location: {\n              city: userData.city || '',\n              postalCode: userData.postal_code?.toString() || ''\n            },\n            contact: {\n              ...prev.contact,\n              phone: userPhone,\n              email: userData.email || '',\n              whatsapp: userWhatsapp,\n              sameAsPhone: userWhatsapp === userPhone && userPhone !== ''\n            }\n          }));\n          \n          setHasPrefilledData(true);\n          console.log('‚úÖ Donn√©es auto-remplies depuis l\\'API');\n        } catch (error) {\n          console.error('Erreur lors du chargement des donn√©es utilisateur:', error);\n        }\n      }\n    };\n    \n    loadUserContactData();\n  }, [user, dbUser, hasPrefilledData]);\n\n  // Avancement automatique des √©tapes - seulement si l'auto-avancement est activ√©\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 1 && formData.listingType) {\n      setTimeout(() => setCurrentStep(2), 300);\n    }\n  }, [formData.listingType, currentStep, autoAdvanceEnabled]);\n\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 2 && formData.category) {\n      // Depuis famille principale, aller toujours √† sous-famille (√©tape 3)\n      setTimeout(() => setCurrentStep(3), 300);\n    }\n  }, [formData.category, currentStep, autoAdvanceEnabled]);\n\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 3 && formData.subcategory) {\n      // Depuis sous-famille : si bien mat√©riel n√©cessitant √©tat -> √©tape 4, sinon -> √©tape 5 (titre)\n      const nextStep = needsConditionStep() ? 4 : 5;\n      setTimeout(() => setCurrentStep(nextStep), 300);\n    }\n  }, [formData.subcategory, currentStep, autoAdvanceEnabled]);\n\n  useEffect(() => {\n    if (autoAdvanceEnabled && currentStep === 4 && formData.condition && needsConditionStep()) {\n      // Depuis √©tat du bien, aller au titre (√©tape 5)\n      setTimeout(() => setCurrentStep(5), 300);\n    }\n  }, [formData.subcategory, currentStep, autoAdvanceEnabled]);\n\n  const updateFormData = (field: string, value: any) => {\n    console.log('updateFormData called:', field, value);\n    \n    // Validation sp√©ciale pour le titre\n    if (field === 'title') {\n      // Limiter √† 50 caract√®res et ne garder que lettres, chiffres, espaces et caract√®res accentu√©s\n      const cleanedValue = value\n        .replace(/[^a-zA-Z0-9\\s√Ä-√ø]/g, '') // Garde uniquement lettres, chiffres, espaces et caract√®res accentu√©s\n        .substring(0, 50); // Limite √† 50 caract√®res\n      \n      setFormData(prev => {\n        const newData = { ...prev, [field]: cleanedValue };\n        console.log('New form data (title filtered):', newData);\n        return newData;\n      });\n    } else if (field === 'description') {\n      // Validation sp√©ciale pour la description - ne garder que lettres, chiffres, espaces et caract√®res accentu√©s\n      const cleanedValue = value\n        .replace(/[^a-zA-Z0-9\\s√Ä-√ø.,!?;:()\\-]/g, '') // Garde uniquement lettres, chiffres, espaces, caract√®res accentu√©s et ponctuation de base\n        .substring(0, 300); // Limite √† 300 caract√®res\n      \n      setFormData(prev => {\n        const newData = { ...prev, [field]: cleanedValue };\n        console.log('New form data (description filtered):', newData);\n        return newData;\n      });\n    } else {\n      setFormData(prev => {\n        const newData = { ...prev, [field]: value };\n        console.log('New form data:', newData);\n        return newData;\n      });\n    }\n    \n    // R√©activer l'auto-avancement quand l'utilisateur fait un nouveau choix\n    if (!autoAdvanceEnabled) {\n      setAutoAdvanceEnabled(true);\n    }\n    \n    // Auto-avancement imm√©diat pour l'√©tat du bien\n    if (field === 'condition' && value && currentStep === 4) {\n      setTimeout(() => setCurrentStep(5), 300);\n    }\n  };\n\n  const updateSpecificDetails = (field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      specificDetails: { ...prev.specificDetails, [field]: value }\n    }));\n  };\n\n  // Validation du format d'immatriculation fran√ßaise\n  const validateRegistrationNumber = (regNumber: string): { isValid: boolean; message: string } => {\n    if (!regNumber) return { isValid: true, message: '' };\n    \n    // Nettoyer la cha√Æne (supprimer espaces et tirets)\n    const cleaned = regNumber.replace(/[\\s-]/g, '').toUpperCase();\n    \n    // Format SIV actuel (depuis 2009): AA-123-AA\n    const sivPattern = /^[A-Z]{2}[0-9]{3}[A-Z]{2}$/;\n    \n    // Format FNI ancien (avant 2009): 1234 AB 56\n    const fniPattern = /^[0-9]{1,4}[A-Z]{1,3}[0-9]{1,3}$/;\n    \n    if (sivPattern.test(cleaned)) {\n      return { isValid: true, message: 'Format SIV valide (AA-123-AA)' };\n    } else if (fniPattern.test(cleaned)) {\n      return { isValid: true, message: 'Format FNI valide (1234 AB 56)' };\n    } else {\n      return { \n        isValid: false, \n        message: 'Format invalide. Utilisez le format SIV (AA-123-AA) ou FNI (1234 AB 56)' \n      };\n    }\n  };\n\n  // Formater automatiquement l'immatriculation\n  const formatRegistrationNumber = (value: string): string => {\n    if (!value) return '';\n    \n    // Nettoyer la cha√Æne\n    const cleaned = value.replace(/[\\s-]/g, '').toUpperCase();\n    \n    // Tentative de formatage SIV (AA123AA -> AA-123-AA)\n    if (cleaned.length >= 5) {\n      const sivPattern = /^([A-Z]{2})([0-9]{3})([A-Z]{0,2}).*$/;\n      const match = cleaned.match(sivPattern);\n      if (match) {\n        const [, letters1, numbers, letters2] = match;\n        if (letters2.length === 2) {\n          return `${letters1}-${numbers}-${letters2}`;\n        } else if (letters2.length === 1) {\n          return `${letters1}-${numbers}-${letters2}`;\n        } else {\n          return `${letters1}-${numbers}`;\n        }\n      }\n    }\n    \n    // Tentative de formatage FNI (1234AB56 -> 1234 AB 56)\n    if (cleaned.length >= 6) {\n      const fniPattern = /^([0-9]{1,4})([A-Z]{1,3})([0-9]{1,3}).*$/;\n      const match = cleaned.match(fniPattern);\n      if (match) {\n        const [, numbers1, letters, numbers2] = match;\n        return `${numbers1} ${letters} ${numbers2}`;\n      }\n    }\n    \n    return cleaned;\n  };\n\n  // Validation du num√©ro de t√©l√©phone international\n  const validatePhoneNumber = (phone: string): { isValid: boolean; message: string } => {\n    if (!phone) return { isValid: false, message: 'Le num√©ro de t√©l√©phone est requis' };\n    \n    // V√©rifier si le num√©ro commence par +\n    if (!phone.startsWith('+')) {\n      return { isValid: false, message: 'Le num√©ro doit commencer par un indicatif international (+33, +1, +44, etc.)' };\n    }\n    \n    const cleaned = phone.replace(/[^\\d]/g, '');\n    \n    // V√©rifier pour chaque pays support√©\n    for (const country of COUNTRY_CODES) {\n      const countryCode = country.code.replace('+', '');\n      if (cleaned.startsWith(countryCode)) {\n        const withoutPrefix = cleaned.slice(countryCode.length);\n        \n        // Validation sp√©cifique pour la France\n        if (country.code === '+33') {\n          if (withoutPrefix.length === 9) {\n            const firstDigit = withoutPrefix.charAt(0);\n            const validPrefixes = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n            if (validPrefixes.includes(firstDigit)) {\n              return { isValid: true, message: `Num√©ro valide (${country.name})` };\n            }\n          }\n        } else {\n          // Validation g√©n√©rique pour les autres pays\n          if (withoutPrefix.length >= country.length - 1 && withoutPrefix.length <= country.length + 1) {\n            return { isValid: true, message: `Num√©ro valide (${country.name})` };\n          }\n        }\n      }\n    }\n    \n    // Si aucun pays reconnu, v√©rifier si c'est un format international valide g√©n√©rique\n    if (cleaned.length >= 8 && cleaned.length <= 15) {\n      return { isValid: true, message: 'Format international valide' };\n    }\n    \n    return { \n      isValid: false, \n      message: 'Format invalide. Utilisez un indicatif international (ex: +33 6 12 34 56 78)' \n    };\n  };\n\n  // Fonction pour r√©cup√©rer les donn√©es v√©hicule via API\n  const fetchVehicleData = async (registrationNumber: string) => {\n    if (!registrationNumber || !validateRegistrationNumber(registrationNumber).isValid) {\n      return;\n    }\n\n    setVehicleDataLoading(true);\n    setVehicleDataMessage('');\n\n    try {\n      const response = await fetch('/api/vehicle-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ registrationNumber }),\n      });\n\n      const result = await response.json();\n\n      if (result.success && result.data) {\n        // Pr√©-remplir automatiquement les d√©tails sp√©cifiques\n        const apiData = result.data;\n        const newSpecificDetails = {\n          ...formData.specificDetails,\n          brand: apiData.brand || formData.specificDetails.brand,\n          model: apiData.model || formData.specificDetails.model,\n          year: apiData.year || formData.specificDetails.year,\n          fuelType: apiData.fuelType || formData.specificDetails.fuelType,\n          power: apiData.power || formData.specificDetails.power,\n          displacement: apiData.displacement || formData.specificDetails.displacement,\n          transmission: apiData.transmission || formData.specificDetails.transmission,\n          doors: apiData.doors || formData.specificDetails.doors,\n          color: apiData.color || formData.specificDetails.color,\n          vehicleType: apiData.vehicleType || formData.specificDetails.vehicleType,\n          emissionClass: apiData.emissionClass || formData.specificDetails.emissionClass,\n          critAir: apiData.critAir || formData.specificDetails.critAir,\n          firstRegistrationDate: apiData.firstRegistrationDate || formData.specificDetails.firstRegistrationDate,\n        };\n\n        setFormData(prev => ({\n          ...prev,\n          specificDetails: newSpecificDetails\n        }));\n\n        const source = result.source === 'cache' ? 'cache' : 'API officielle';\n        setVehicleDataMessage(`‚úÖ Donn√©es r√©cup√©r√©es depuis ${source} et pr√©-remplies automatiquement`);\n      } else {\n        setVehicleDataMessage(`‚ö†Ô∏è ${result.error || 'V√©hicule non trouv√© dans la base de donn√©es'}`);\n      }\n    } catch (error) {\n      console.error('Erreur r√©cup√©ration donn√©es:', error);\n      setVehicleDataMessage('‚ùå Erreur de connexion au service de donn√©es v√©hicule');\n    } finally {\n      setVehicleDataLoading(false);\n    }\n  };\n\n  const toggleEquipment = (equipment: string) => {\n    const currentEquipment = formData.specificDetails.equipment || [];\n    const updatedEquipment = currentEquipment.includes(equipment)\n      ? currentEquipment.filter((item: string) => item !== equipment)\n      : [...currentEquipment, equipment];\n    \n    updateSpecificDetails('equipment', updatedEquipment);\n  };\n\n  const nextStepHandler = () => {\n    const selectedCategory = getSelectedCategory();\n    let nextStepNumber = currentStep + 1;\n    \n    // Nouvelle logique conditionnelle : Type ‚Üí Famille ‚Üí Sous-famille ‚Üí √âtat (si mat√©riel) ‚Üí Titre\n    if (currentStep === 2) {\n      // Depuis famille principale -> sous-famille (3)\n      nextStepNumber = 3;\n    } else if (currentStep === 3) {\n      // Depuis sous-famille : si bien mat√©riel n√©cessitant √©tat -> √©tat du bien (4), sinon -> titre (5)\n      nextStepNumber = needsConditionStep() ? 4 : 5;\n    } else if (currentStep === 4) {\n      // Depuis √©tat du bien -> titre (5)\n      nextStepNumber = 5;\n    } else {\n      // Logique existante pour les √©tapes suivantes (r√©ajust√©es pour le nouveau sch√©ma)\n      if (isSearchForParts()) {\n        if (currentStep === 5) {\n          // Apr√®s le titre (√©tape 5), aller directement √† la description (√©tape 7)\n          nextStepNumber = 7;\n        } else if (currentStep === 7) {\n          // Apr√®s la description (√©tape 7), aller aux photos (√©tape 8)\n          nextStepNumber = 8;\n        } else if (currentStep === 8) {\n          // Apr√®s les photos (√©tape 8), aller directement aux contacts (√©tape 11)\n          nextStepNumber = 11;\n        }\n      } else if (isServiceCategory()) {\n        // Pour les services, ignorer l'√©tape 6 (D√©tails sp√©cifiques)\n        if (currentStep === 5) {\n          // Apr√®s le titre (√©tape 5), aller directement √† la description (√©tape 7)\n          nextStepNumber = 7;\n        }\n      } else if (isSearchListing()) {\n        // Pour les annonces de recherche, ignorer l'√©tape prix (√©tape 9)\n        if (currentStep === 8) {\n          // Apr√®s les photos (√©tape 8), aller directement √† la localisation (√©tape 10)\n          nextStepNumber = 10;\n        }\n      }\n      // Autres logiques selon les besoins\n    }\n    \n    if (nextStepNumber <= totalSteps) {\n      setCurrentStep(nextStepNumber);\n    }\n  };\n\n  const prevStepHandler = () => {\n    // D√©sactiver l'auto-avancement temporairement\n    setAutoAdvanceEnabled(false);\n    \n    // Effacer seulement les donn√©es de navigation (pas les contenus saisis par l'utilisateur)\n    switch (currentStep) {\n      case 2:\n        // En revenant de l'√©tape famille principale, on efface le type d'annonce\n        setFormData(prev => ({ ...prev, listingType: '' }));\n        break;\n      case 3:\n        // En revenant de l'√©tape sous-famille, on efface la famille principale\n        setFormData(prev => ({ ...prev, category: '' }));\n        break;\n      case 4:\n        // En revenant de l'√©tape √©tat du bien, on efface la sous-famille\n        setFormData(prev => ({ ...prev, subcategory: '', condition: undefined }));\n        break;\n      case 5:\n        // En revenant du titre, on efface l'√©tat du bien ou la sous-famille selon le cas\n        if (needsConditionStep()) {\n          setFormData(prev => ({ ...prev, condition: undefined }));\n        } else {\n          setFormData(prev => ({ ...prev, subcategory: '' }));\n        }\n        break;\n      // Pour les √©tapes 6 et suivantes, on ne supprime rien - on pr√©serve tout le contenu utilisateur\n    }\n    \n    const selectedCategory = getSelectedCategory();\n    \n    let previousStepNumber = currentStep - 1;\n    \n    // Nouvelle logique de navigation arri√®re selon le nouveau sch√©ma\n    const category = getSelectedCategory();\n    \n    if (currentStep === 4 && !needsConditionStep()) {\n      // Si on revient de l'√©tape titre et qu'il n'y a pas d'√©tape √©tat du bien, retourner √† sous-famille (√©tape 3)\n      previousStepNumber = 3;\n    } else if (currentStep === 5) {\n      // Depuis titre, revenir √† √©tat du bien (√©tape 4) ou √† sous-famille (√©tape 3) selon le cas\n      previousStepNumber = needsConditionStep() ? 4 : 3;\n    } else {\n      // Logique existante pour les √©tapes suivantes\n      if (isSearchForParts()) {\n        if (currentStep === 11) {\n          // Depuis les contacts (√©tape 11), revenir aux photos (√©tape 8)\n          previousStepNumber = 8;\n        } else if (currentStep === 8) {\n          // Depuis les photos (√©tape 8), revenir √† la description (√©tape 7)\n          previousStepNumber = 7;\n        } else if (currentStep === 7) {\n          // Depuis la description (√©tape 7), revenir au titre (√©tape 5)\n          previousStepNumber = 5;\n        }\n      } else if (isServiceCategory()) {\n        // Pour les services, g√©rer la navigation en arri√®re en sautant l'√©tape 6\n        if (currentStep === 7) {\n          // Depuis la description (√©tape 7), revenir au titre (√©tape 5)\n          previousStepNumber = 5;\n        }\n      } else if (isSearchListing()) {\n        // Pour les annonces de recherche, g√©rer la navigation en arri√®re en sautant l'√©tape 9\n        if (currentStep === 10) {\n          // Depuis la localisation (√©tape 10), revenir aux photos (√©tape 8)\n          previousStepNumber = 8;\n        }\n      }\n    }\n    \n    if (previousStepNumber >= 1) {\n      setCurrentStep(previousStepNumber);\n    }\n    \n    // R√©activer l'auto-avancement apr√®s un d√©lai\n    setTimeout(() => {\n      setAutoAdvanceEnabled(true);\n    }, 500);\n  };\n\n  const canProceed = () => {\n    const result = (() => {\n      switch (currentStep) {\n        case 1:\n          return formData.listingType !== '';\n        case 2:\n          return formData.category !== '';\n        case 3:\n          return formData.subcategory !== '';\n        case 4:\n          // √âtape √©tat du bien (seulement pour biens mat√©riels)\n          if (needsConditionStep()) {\n            return formData.condition !== undefined;\n          }\n          return true; // Si pas besoin d'√©tat, toujours valide\n        case 5:\n          return formData.title.trim() !== '';\n        case 6:\n          // D√©tails sp√©cifiques - ignorer pour les recherches de pi√®ces d√©tach√©es ET les services\n          if (isSearchForParts() || isServiceCategory()) {\n            return true;\n          }\n          // Validation sp√©cifique pour les pi√®ces d√©tach√©es\n          if (formData.subcategory === 'piece-moto' || formData.subcategory === 'piece-voiture' || formData.subcategory === 'autre-piece') {\n            return !!(formData.specificDetails.partCategory && formData.specificDetails.partCondition);\n          }\n          // Validation pour les services\n          if (formData.subcategory === 'reparation' || formData.subcategory === 'remorquage' || formData.subcategory === 'entretien' || formData.subcategory === 'autre-service') {\n            return !!(formData.specificDetails.serviceType && formData.specificDetails.serviceArea);\n          }\n          // Validation sp√©cifique pour les voitures\n          if (formData.subcategory === 'voiture') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year && \n                   formData.specificDetails.mileage && \n                   formData.specificDetails.fuelType &&\n                   formData.specificDetails.vehicleType &&\n                   formData.specificDetails.transmission);\n          }\n          // Validation pour les utilitaires\n          if (formData.subcategory === 'utilitaire') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year && \n                   formData.specificDetails.mileage && \n                   formData.specificDetails.fuelType &&\n                   formData.specificDetails.utilityType &&\n                   formData.specificDetails.transmission);\n          }\n          // Validation pour les motos et scooters\n          if (formData.subcategory === 'moto' || formData.subcategory === 'scooter') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year && \n                   formData.specificDetails.mileage &&\n                   formData.specificDetails.motorcycleType);\n          }\n          // Validation pour les caravanes\n          if (formData.subcategory === 'caravane') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year &&\n                   formData.specificDetails.caravanType &&\n                   formData.specificDetails.sleeps);\n          }\n          // Validation pour les remorques\n          if (formData.subcategory === 'remorque') {\n            return !!(formData.specificDetails.trailerType);\n          }\n          // Validation pour les bateaux\n          if (formData.subcategory === 'bateau') {\n            return !!(formData.specificDetails.brand && \n                   formData.specificDetails.model && \n                   formData.specificDetails.year &&\n                   formData.specificDetails.boatType &&\n                   formData.specificDetails.length);\n          }\n          // Validation pour les autres sous-cat√©gories\n          return !!(formData.specificDetails.brand && \n                 formData.specificDetails.model && \n                 formData.specificDetails.year);\n        case 7:\n          return formData.description.trim().length >= 50;\n        case 8:\n          return true; // Photos optionnelles - toujours permettre de passer\n        case 9:\n          // Ignorer cette √©tape pour les recherches de pi√®ces d√©tach√©es ET les annonces de recherche\n          if (isSearchForParts() || isSearchListing()) {\n            return true;\n          }\n          return formData.price > 0;\n        case 10:\n          // Ignorer cette √©tape pour les recherches de pi√®ces d√©tach√©es\n          if (isSearchForParts()) {\n            return true;\n          }\n          const locationValid = formData.location.city !== '' && formData.location.postalCode !== '';\n          console.log('Step 10 validation:', {\n            city: formData.location.city,\n            postalCode: formData.location.postalCode,\n            locationValid\n          });\n          return locationValid;\n        case 11:\n          return formData.contact.phone !== '' && validatePhoneNumber(formData.contact.phone).isValid;\n        case 12:\n          return true; // √âtape de r√©capitulatif\n        case 13:\n          return formData.premiumPack !== '' && formData.premiumPack !== 'free'; // S√©lection pack premium payant\n        default:\n          return false;\n      }\n    })();\n    \n    // Debug log pour identifier le probl√®me\n    console.log(`Step ${currentStep}: canProceed = ${result}`, {\n      listingType: formData.listingType,\n      category: formData.category,\n      subcategory: formData.subcategory,\n      title: formData.title,\n      description: formData.description,\n      price: formData.price,\n      photosCount: formData.photos.length,\n      needsCondition: needsConditionStep(),\n      condition: formData.condition\n    });\n    \n    return result;\n  };\n\n  const getSelectedCategory = () => {\n    return CATEGORIES.find(cat => cat.id === formData.category);\n  };\n\n  const getSelectedSubcategory = () => {\n    const category = getSelectedCategory();\n    return category?.subcategories.find(sub => sub.id === formData.subcategory);\n  };\n\n  // V√©rifier si la sous-cat√©gorie n√©cessite un num√©ro d'immatriculation\n  const needsRegistrationNumber = () => {\n    const vehicleSubcategories = ['voiture', 'utilitaire', 'caravane', 'remorque', 'moto', 'scooter', 'quad', 'bateau', 'jetski', 'aerien'];\n    return vehicleSubcategories.includes(formData.subcategory);\n  };\n\n  // V√©rifier si la cat√©gorie n√©cessite une √©tape d'√©tat du bien (biens mat√©riels uniquement)\n  const needsConditionStep = () => {\n    const category = getSelectedCategory();\n    // Seulement pour les biens mat√©riels, excluant services et pi√®ces d√©tach√©es\n    return category?.isMaterial && category?.id !== 'services' && category?.id !== 'pieces';\n  };\n\n  // V√©rifier si on est dans le cas d'une recherche de pi√®ces d√©tach√©es\n  const isSearchForParts = () => {\n    return formData.listingType === 'search' && formData.category === 'spare-parts';\n  };\n\n  const isServiceCategory = () => {\n    return formData.category === 'services';\n  };\n\n  const isSearchListing = () => {\n    return formData.listingType === 'search';\n  };\n\n  // V√©rifier si on est dans le cas d'une recherche de v√©hicules moto/quad/marine qui n'ont pas besoin d'√©tape condition\n  const isSearchForMotorizedVehicles = () => {\n    return formData.listingType === 'search' && \n           ['motorcycle', 'scooter', 'quad', 'jetski', 'boat'].includes(formData.subcategory);\n  };\n\n  // Fonction pour publier l'annonce\n  const publishListing = async () => {\n    try {\n      console.log('Publier l\\'annonce:', formData);\n      \n      // Transformer les donn√©es pour l'API avec validation adapt√©e au type d'annonce\n      const isService = formData.category === 'services';\n      const isSearch = formData.listingType === 'search';\n      \n      const vehicleData = {\n        userId: dbUser?.id || user?.id,\n        title: formData.title || '',\n        description: formData.description || '',\n        category: formData.subcategory || '',  // Utiliser la sous-cat√©gorie sp√©cifique comme cat√©gorie principale\n        subcategory: formData.subcategory || '',\n        // Tous les champs avec valeurs par d√©faut pour respecter les contraintes DB\n        brand: formData.specificDetails.brand || 'Non sp√©cifi√©',\n        model: formData.specificDetails.model || 'Non sp√©cifi√©',\n        year: formData.specificDetails.year ? parseInt(formData.specificDetails.year.toString()) : new Date().getFullYear(),\n        mileage: formData.specificDetails.mileage || 0,\n        fuelType: formData.specificDetails.fuelType || 'Non sp√©cifi√©',\n        condition: formData.condition || 'good',\n        price: formData.price || 0,\n        location: formData.location || '',\n        images: formData.photos?.map(photo => \n          typeof photo === 'string' ? photo : URL.createObjectURL(photo)\n        ) || [], \n        features: formData.specificDetails.equipment || [],\n        // Informations de contact sp√©cifiques √† l'annonce\n        contactPhone: formData.contact.phone || '',\n        contactEmail: formData.contact.email || '',\n        contactWhatsapp: formData.contact.whatsapp || '',\n        hidePhone: formData.contact.hidePhone || false,\n        isPremium: false,\n        status: 'approved',\n        listingType: formData.listingType || 'sale'\n      };\n\n      console.log('üîç FRONTEND - vehicleData avant envoi:', JSON.stringify(vehicleData, null, 2));\n\n      const response = await fetch('/api/vehicles', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(vehicleData),\n      });\n\n      if (response.ok) {\n        const newVehicle = await response.json();\n        console.log('Annonce cr√©√©e avec succ√®s:', newVehicle);\n        \n        // SOLUTION: Forcer le rechargement de la page pour actualiser le cache\n        setShowSuccessModal(true);\n        \n        // Programmer le rechargement apr√®s l'affichage du modal de succ√®s\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else {\n        throw new Error('Erreur lors de la cr√©ation de l\\'annonce');\n      }\n    } catch (error) {\n      console.error('Erreur:', error);\n      alert('Erreur lors de la publication de l\\'annonce. Veuillez r√©essayer.');\n    }\n  };\n\n  // Fonction pour naviguer vers l'espace personnel\n  const navigateToDashboard = () => {\n    setShowSuccessModal(false);\n    if (onSuccess) {\n      onSuccess();\n    }\n    // TODO: Naviguer vers l'espace personnel/dashboard\n    // navigate('/dashboard');\n  };\n\n  const handlePhotoUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    if (files.length === 0) return;\n\n    // Limiter √† 4 photos maximum\n    const remainingSlots = 4 - formData.photos.length;\n    const filesToAdd = files.slice(0, remainingSlots);\n\n    // Upload vers Supabase Storage\n    try {\n      const formData = new FormData();\n      filesToAdd.forEach(file => {\n        formData.append('images', file);\n      });\n\n      const userId = dbUser?.id || 'anonymous';\n      const response = await fetch(`/api/images/upload/${userId}`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('√âchec de l\\'upload');\n      }\n\n      const data = await response.json();\n      \n      if (data.success && data.images) {\n        const newImageUrls = data.images.map((img: any) => img.url);\n        setFormData(prev => ({\n          ...prev,\n          photos: [...prev.photos, ...newImageUrls]\n        }));\n        console.log('Images upload√©es avec succ√®s:', newImageUrls);\n      } else {\n        // Fallback : utiliser les fichiers localement si l'upload √©choue\n        setFormData(prev => ({\n          ...prev,\n          photos: [...prev.photos, ...filesToAdd]\n        }));\n      }\n    } catch (error) {\n      console.error('Erreur upload:', error);\n      // Fallback : utiliser les fichiers localement\n      setFormData(prev => ({\n        ...prev,\n        photos: [...prev.photos, ...filesToAdd]\n      }));\n    }\n\n    // R√©initialiser l'input\n    e.target.value = '';\n  };\n\n  const removePhoto = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      photos: prev.photos.filter((_, i) => i !== index)\n    }));\n  };\n\n  const renderSpecificDetailsFields = () => {\n    const subcategory = getSelectedSubcategory();\n    if (!subcategory) return null;\n\n    const brands = getBrandsBySubcategory(subcategory.id);\n    // Mapper les sous-cat√©gories aux cl√©s d'√©quipement\n    const equipmentKey = (() => {\n      switch (subcategory.id) {\n        case 'voiture': return 'car';\n        case 'utilitaire': return 'utility';\n        case 'caravane': return 'caravan';\n        case 'remorque': return 'trailer';\n        case 'moto': return 'motorcycle';\n        case 'scooter': return 'scooter';\n        case 'quad': return 'quad';\n        case 'jetski': return 'jetski';\n        case 'bateau': return 'boat';\n        case 'aerien': return 'aircraft';\n        default: return null;\n      }\n    })();\n    \n    const equipment = equipmentKey ? VEHICLE_EQUIPMENT[equipmentKey as keyof typeof VEHICLE_EQUIPMENT] || [] : [];\n    const selectedEquipment = formData.specificDetails.equipment || [];\n\n    // Champs communs pour la plupart des v√©hicules\n    const renderCommonVehicleFields = () => (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Marque *\n          </label>\n          <select\n            value={formData.specificDetails.brand || ''}\n            onChange={(e) => updateSpecificDetails('brand', e.target.value)}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n          >\n            <option value=\"\">S√©lectionnez une marque</option>\n            {brands.map((brand) => (\n              <option key={brand} value={brand}>\n                {brand}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Mod√®le *\n          </label>\n          <input\n            type=\"text\"\n            value={formData.specificDetails.model || ''}\n            onChange={(e) => updateSpecificDetails('model', e.target.value)}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n            placeholder=\"Ex: 320d\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Ann√©e *\n          </label>\n          <input\n            type=\"number\"\n            value={formData.specificDetails.year || ''}\n            onChange={(e) => updateSpecificDetails('year', parseInt(e.target.value) || '')}\n            className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n            placeholder=\"2020\"\n            min=\"1990\"\n            max={new Date().getFullYear() + 1}\n          />\n        </div>\n      </div>\n    );\n\n    // √âquipements\n    const renderEquipment = () => (\n      equipment.length > 0 && (\n        <div>\n          <label className=\"block text-sm font-semibold text-gray-700 mb-4\">\n            √âquipements (optionnel)\n          </label>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n            {equipment.map((item) => (\n              <label\n                key={item}\n                className=\"flex items-center space-x-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\"\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={selectedEquipment.includes(item)}\n                  onChange={() => toggleEquipment(item)}\n                  className=\"h-4 w-4 text-primary-bolt-500 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                />\n                <span className=\"text-sm text-gray-700\">{item}</span>\n              </label>\n            ))}\n          </div>\n          {selectedEquipment.length > 0 && (\n            <p className=\"text-sm text-gray-500 mt-2\">\n              {selectedEquipment.length} √©quipement{selectedEquipment.length > 1 ? 's' : ''} s√©lectionn√©{selectedEquipment.length > 1 ? 's' : ''}\n            </p>\n          )}\n        </div>\n      )\n    );\n\n    switch (subcategory.id) {\n      case 'voiture':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de v√©hicule *\n                </label>\n                <select\n                  value={formData.specificDetails.vehicleType || ''}\n                  onChange={(e) => updateSpecificDetails('vehicleType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.car?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"50000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Bo√Æte de vitesses *\n                </label>\n                <select\n                  value={formData.specificDetails.transmission || ''}\n                  onChange={(e) => updateSpecificDetails('transmission', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {TRANSMISSION_TYPES.map((type) => (\n                    <option key={type.value} value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Carburant *\n                </label>\n                <select\n                  value={formData.specificDetails.fuelType || ''}\n                  onChange={(e) => updateSpecificDetails('fuelType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un carburant</option>\n                  {fuelTypes.map((fuel) => (\n                    <option key={fuel.value} value={fuel.value}>{fuel.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance (CV)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.power || ''}\n                  onChange={(e) => updateSpecificDetails('power', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"150\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de portes <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <select\n                  value={formData.specificDetails.doors || ''}\n                  onChange={(e) => updateSpecificDetails('doors', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {DOORS.map((door) => (\n                    <option key={door} value={door}>{door} portes</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance fiscale (CV) <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.fiscalPower || ''}\n                  onChange={(e) => updateSpecificDetails('fiscalPower', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"7\"\n                  min=\"1\"\n                  max=\"50\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Sellerie\n                </label>\n                <select\n                  value={formData.specificDetails.upholstery || ''}\n                  onChange={(e) => updateSpecificDetails('upholstery', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {UPHOLSTERY_TYPES.map((type) => (\n                    <option key={type.value} value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Classe d'√©missions <span className=\"text-gray-500 font-normal\">(optionnel)</span>\n                </label>\n                <select\n                  value={formData.specificDetails.emissionClass || ''}\n                  onChange={(e) => updateSpecificDetails('emissionClass', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {EMISSION_CLASSES.map((cls) => (\n                    <option key={cls.value} value={cls.value}>{cls.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'utilitaire':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type d'utilitaire *\n                </label>\n                <select\n                  value={formData.specificDetails.utilityType || ''}\n                  onChange={(e) => updateSpecificDetails('utilityType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.utility?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"50000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Bo√Æte de vitesses *\n                </label>\n                <select\n                  value={formData.specificDetails.transmission || ''}\n                  onChange={(e) => updateSpecificDetails('transmission', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {TRANSMISSION_TYPES.map((type) => (\n                    <option key={type.value} value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Carburant *\n                </label>\n                <select\n                  value={formData.specificDetails.fuelType || ''}\n                  onChange={(e) => updateSpecificDetails('fuelType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un carburant</option>\n                  {fuelTypes.map((fuel) => (\n                    <option key={fuel.value} value={fuel.value}>{fuel.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Charge utile (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.payload || ''}\n                  onChange={(e) => updateSpecificDetails('payload', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"1000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Volume utile (m¬≥)\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.specificDetails.volume || ''}\n                  onChange={(e) => updateSpecificDetails('volume', parseFloat(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"8.5\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de places\n                </label>\n                <select\n                  value={formData.specificDetails.seats || ''}\n                  onChange={(e) => updateSpecificDetails('seats', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((seat) => (\n                    <option key={seat} value={seat}>{seat} place{seat > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Classe d'√©missions\n                </label>\n                <select\n                  value={formData.specificDetails.emissionClass || ''}\n                  onChange={(e) => updateSpecificDetails('emissionClass', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {EMISSION_CLASSES.map((cls) => (\n                    <option key={cls.value} value={cls.value}>{cls.label}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'caravane':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de caravane *\n                </label>\n                <select\n                  value={formData.specificDetails.caravanType || ''}\n                  onChange={(e) => updateSpecificDetails('caravanType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.caravan.map((type) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de couchages *\n                </label>\n                <select\n                  value={formData.specificDetails.sleeps || ''}\n                  onChange={(e) => updateSpecificDetails('sleeps', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4, 5, 6, 7, 8].map((sleep) => (\n                    <option key={sleep} value={sleep}>{sleep} couchage{sleep > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Longueur (m)\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.specificDetails.length || ''}\n                  onChange={(e) => updateSpecificDetails('length', parseFloat(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"6.5\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Poids (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.weight || ''}\n                  onChange={(e) => updateSpecificDetails('weight', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"1200\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'remorque':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de remorque *\n                </label>\n                <select\n                  value={formData.specificDetails.trailerType || ''}\n                  onChange={(e) => updateSpecificDetails('trailerType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.trailer.map((type) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Ann√©e\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.year || ''}\n                  onChange={(e) => updateSpecificDetails('year', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"2020\"\n                  min=\"1990\"\n                  max={new Date().getFullYear() + 1}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Dimensions utiles (L x l)\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.dimensions || ''}\n                  onChange={(e) => updateSpecificDetails('dimensions', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: 3.0 x 1.5\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Poids √† vide (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.emptyWeight || ''}\n                  onChange={(e) => updateSpecificDetails('emptyWeight', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"300\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Poids max (PTAC) (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.maxWeight || ''}\n                  onChange={(e) => updateSpecificDetails('maxWeight', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"750\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'moto':\n      case 'scooter':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type {subcategory.id === 'moto' ? 'de moto' : 'de scooter'} *\n                </label>\n                <select\n                  value={formData.specificDetails.motorcycleType || ''}\n                  onChange={(e) => updateSpecificDetails('motorcycleType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {subcategory.id === 'moto' && VEHICLE_TYPES.motorcycle?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                  {subcategory.id === 'scooter' && VEHICLE_TYPES.scooter?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"15000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Cylindr√©e (cm¬≥) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.displacement || ''}\n                  onChange={(e) => updateSpecificDetails('displacement', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"600\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              {subcategory.id === 'moto' && (\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Type de permis requis\n                  </label>\n                  <select\n                    value={formData.specificDetails.licenseType || ''}\n                    onChange={(e) => updateSpecificDetails('licenseType', e.target.value)}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  >\n                    <option value=\"\">S√©lectionnez</option>\n                    {LICENSE_TYPES.map((type) => (\n                      <option key={type.value} value={type.value}>{type.label}</option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'quad':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de quad *\n                </label>\n                <select\n                  value={formData.specificDetails.quadType || ''}\n                  onChange={(e) => updateSpecificDetails('quadType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.quad?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Kilom√©trage *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.mileage || ''}\n                  onChange={(e) => updateSpecificDetails('mileage', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"5000\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Cylindr√©e (cm¬≥) *\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.displacement || ''}\n                  onChange={(e) => updateSpecificDetails('displacement', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"450\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Transmission\n                </label>\n                <select\n                  value={formData.specificDetails.transmission || ''}\n                  onChange={(e) => updateSpecificDetails('transmission', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  <option value=\"manual\">Manuelle</option>\n                  <option value=\"automatic\">Automatique</option>\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'jetski':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de jetski *\n                </label>\n                <select\n                  value={formData.specificDetails.jetskiType || ''}\n                  onChange={(e) => updateSpecificDetails('jetskiType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.jetski?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Heures d'utilisation\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.hours || ''}\n                  onChange={(e) => updateSpecificDetails('hours', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"50\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance (CV)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.power || ''}\n                  onChange={(e) => updateSpecificDetails('power', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"130\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de places\n                </label>\n                <select\n                  value={formData.specificDetails.seats || ''}\n                  onChange={(e) => updateSpecificDetails('seats', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4].map((seat) => (\n                    <option key={seat} value={seat}>{seat} place{seat > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'aerien':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type d'a√©ronef *\n                </label>\n                <select\n                  value={formData.specificDetails.aircraftType || ''}\n                  onChange={(e) => updateSpecificDetails('aircraftType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.aircraft?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Heures de vol\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.flightHours || ''}\n                  onChange={(e) => updateSpecificDetails('flightHours', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"200\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de places\n                </label>\n                <select\n                  value={formData.specificDetails.seats || ''}\n                  onChange={(e) => updateSpecificDetails('seats', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[1, 2, 3, 4].map((seat) => (\n                    <option key={seat} value={seat}>{seat} place{seat > 1 ? 's' : ''}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Couleur\n                </label>\n                <select\n                  value={formData.specificDetails.color || ''}\n                  onChange={(e) => updateSpecificDetails('color', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez une couleur</option>\n                  {COLORS.map((color) => (\n                    <option key={color} value={color}>{color}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'bateau':\n        return (\n          <div className=\"space-y-6\">\n            {renderCommonVehicleFields()}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de bateau *\n                </label>\n                <select\n                  value={formData.specificDetails.boatType || ''}\n                  onChange={(e) => updateSpecificDetails('boatType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {VEHICLE_TYPES.boat?.map((type: string) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Longueur (m) *\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={formData.specificDetails.length || ''}\n                  onChange={(e) => updateSpecificDetails('length', parseFloat(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"6.5\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de moteur\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.engineType || ''}\n                  onChange={(e) => updateSpecificDetails('engineType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: Hors-bord, In-board\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Puissance moteur (CV)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.specificDetails.enginePower || ''}\n                  onChange={(e) => updateSpecificDetails('enginePower', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"115\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Nombre de couchages\n                </label>\n                <select\n                  value={formData.specificDetails.sleeps || ''}\n                  onChange={(e) => updateSpecificDetails('sleeps', parseInt(e.target.value) || '')}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez</option>\n                  {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((sleep) => (\n                    <option key={sleep} value={sleep}>\n                      {sleep === 0 ? 'Aucun couchage' : `${sleep} couchage${sleep > 1 ? 's' : ''}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {renderEquipment()}\n          </div>\n        );\n\n      case 'reparation':\n      case 'remorquage':\n      case 'entretien':\n      case 'autre-service':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de service *\n                </label>\n                <select\n                  value={formData.specificDetails.serviceType || ''}\n                  onChange={(e) => updateSpecificDetails('serviceType', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {SERVICE_TYPES.map((type) => (\n                    <option key={type} value={type}>{type}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Zone d'intervention *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.serviceArea || ''}\n                  onChange={(e) => updateSpecificDetails('serviceArea', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: Paris et r√©gion parisienne\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Certificat / Agr√©ment (optionnel)\n              </label>\n              <input\n                type=\"text\"\n                value={formData.specificDetails.certification || ''}\n                onChange={(e) => updateSpecificDetails('certification', e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"Ex: Agr√©√© assurances, Certifi√© ISO\"\n              />\n            </div>\n          </div>\n        );\n\n      case 'piece-moto':\n      case 'piece-voiture':\n      case 'autre-piece':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Type de pi√®ce *\n                </label>\n                <select\n                  value={formData.specificDetails.partCategory || ''}\n                  onChange={(e) => updateSpecificDetails('partCategory', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez un type</option>\n                  {PART_CATEGORIES.map((category) => (\n                    <option key={category} value={category}>{category}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  √âtat *\n                </label>\n                <select\n                  value={formData.specificDetails.partCondition || ''}\n                  onChange={(e) => updateSpecificDetails('partCondition', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                >\n                  <option value=\"\">S√©lectionnez l'√©tat</option>\n                  {PART_CONDITIONS.map((condition) => (\n                    <option key={condition.value} value={condition.value}>{condition.label}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  R√©f√©rence (si disponible)\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.specificDetails.partReference || ''}\n                  onChange={(e) => updateSpecificDetails('partReference', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"Ex: 11427788458\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                D√©tails sp√©cifiques pour {subcategory.name}\n              </label>\n              <textarea\n                value={formData.specificDetails.details || ''}\n                onChange={(e) => updateSpecificDetails('details', e.target.value)}\n                rows={6}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                placeholder=\"Renseignez les d√©tails sp√©cifiques...\"\n              />\n              <p className=\"text-sm text-gray-500 mt-2\">\n                Renseignez les informations importantes pour votre {subcategory.name.toLowerCase()}.\n              </p>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  const renderStepContent = () => {\n    const selectedCategory = getSelectedCategory();\n    \n    // Pour les recherches de pi√®ces d√©tach√©es, rediriger automatiquement les √©tapes ignor√©es\n    if (isSearchForParts()) {\n      if (currentStep === 5) {\n        // Rediriger l'√©tape 5 vers l'√©tape 6 ou 7\n        setCurrentStep(needsConditionStep() ? 6 : 7);\n        return null;\n      }\n      if (currentStep === 9) {\n        // Rediriger l'√©tape 9 vers l'√©tape 8 (photos) ou 11 (contacts)\n        setCurrentStep(8);\n        return null;\n      }\n      if (currentStep === 10) {\n        // Rediriger l'√©tape 10 vers l'√©tape 11 (contacts)\n        setCurrentStep(11);\n        return null;\n      }\n      if (currentStep === 13) {\n        // Rediriger l'√©tape 13 (r√©capitulatif) vers l'√©tape 12 (pack premium)\n        setCurrentStep(12);\n        return null;\n      }\n    }\n    \n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Type d'annonce\n              </h2>\n              <p className=\"text-gray-600\">\n                Que souhaitez-vous faire ?\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto\">\n              <button\n                onClick={() => updateFormData('listingType', 'sale')}\n                className={`relative p-8 rounded-2xl border-2 transition-all duration-200 text-center ${\n                  formData.listingType === 'sale'\n                    ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                    : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"mb-4\">\n                  <div className=\"w-16 h-16 rounded-2xl flex items-center justify-center mx-auto\">\n                    <img \n                      src={vendreIcon} \n                      alt=\"Je vends\" \n                      className=\"w-18 h-18\"\n                    />\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  Je vends\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  D√©poser une annonce pour vendre un v√©hicule, une pi√®ce d√©tach√©e ou proposer un service\n                </p>\n                \n                {formData.listingType === 'sale' && (\n                  <div className=\"absolute top-4 right-4\">\n                    <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                      <Check className=\"h-4 w-4 text-white\" />\n                    </div>\n                  </div>\n                )}\n              </button>\n\n              <button\n                onClick={() => updateFormData('listingType', 'search')}\n                className={`relative p-8 rounded-2xl border-2 transition-all duration-200 text-center ${\n                  formData.listingType === 'search'\n                    ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                    : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"mb-4\">\n                  <div className=\"w-16 h-16 rounded-2xl flex items-center justify-center mx-auto\">\n                    <img \n                      src={chercherIcon} \n                      alt=\"Je cherche\" \n                      className=\"w-18 h-18\"\n                    />\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                  Je cherche\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  Publier une demande de recherche pour trouver un v√©hicule, une pi√®ce ou un service sp√©cifique\n                </p>\n                \n                {formData.listingType === 'search' && (\n                  <div className=\"absolute top-4 right-4\">\n                    <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                      <Check className=\"h-4 w-4 text-white\" />\n                    </div>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Choisissez une cat√©gorie\n              </h2>\n              <p className=\"text-gray-600\">\n                S√©lectionnez la cat√©gorie qui correspond le mieux √† votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {CATEGORIES.map((category) => {\n                const IconComponent = category.icon;\n                return (\n                  <button\n                    key={category.id}\n                    onClick={() => updateFormData('category', category.id)}\n                    className={`relative p-6 rounded-2xl border-2 transition-all duration-200 text-left ${\n                      formData.category === category.id\n                        ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"p-3 flex items-center justify-center\">\n                        {category.image ? (\n                          <img \n                            src={category.image} \n                            alt={category.name}\n                            className=\"h-12 w-12 object-contain\"\n                          />\n                        ) : (\n                          <div className={`p-3 rounded-xl bg-gradient-to-r ${category.color} shadow-lg flex items-center justify-center`}>\n                            <IconComponent className=\"h-6 w-6 text-white\" />\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                          {category.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-600\">\n                          {category.subcategories.map(sub => sub.name).join(', ')}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {formData.category === category.id && (\n                      <div className=\"absolute top-4 right-4\">\n                        <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                          <Check className=\"h-4 w-4 text-white\" />\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        );\n\n      case 3:\n        // √âtape sous-cat√©gorie \n        if (!selectedCategory) return null;\n\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Choisissez une sous-famille\n              </h2>\n              <p className=\"text-gray-600\">\n                Pr√©cisez le type de {selectedCategory.name.toLowerCase()}\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {selectedCategory.subcategories.map((subcategory) => {\n                return (\n                  <button\n                    key={subcategory.id}\n                    onClick={() => updateFormData('subcategory', subcategory.id)}\n                    className={`relative p-4 rounded-xl border-2 transition-all duration-200 text-center ${\n                      formData.subcategory === subcategory.id\n                        ? 'border-primary-bolt-500 bg-primary-bolt-50'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                  >\n                    {/* Ic√¥ne ou image */}\n                    <div className=\"w-16 h-16 rounded-xl flex items-center justify-center mx-auto mb-3\">\n                      {subcategory.image ? (\n                        <img \n                          src={subcategory.image} \n                          alt={subcategory.name}\n                          className=\"h-14 w-14 object-contain\"\n                        />\n                      ) : (\n                        <div className={`w-12 h-12 ${subcategory.bgColor} rounded-xl flex items-center justify-center`}>\n                          {/* Ic√¥ne de substitution si pas d'image */}\n                          <div className={`h-6 w-6 ${subcategory.color}`}>\n                            ‚ö™\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <h3 className=\"font-semibold text-gray-900\">\n                      {subcategory.name}\n                    </h3>\n                    \n                    {formData.subcategory === subcategory.id && (\n                      <div className=\"absolute top-2 right-2\">\n                        <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                          <Check className=\"h-4 w-4 text-white\" />\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        );\n\n      case 4:\n        // √âtape √©tat du bien (seulement pour biens mat√©riels)\n        if (!needsConditionStep()) {\n          // Si pas besoin d'√©tat du bien, aller directement au titre\n          return null;\n        }\n\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                √âtat du bien\n              </h2>\n              <p className=\"text-gray-600\">\n                Pr√©cisez l'√©tat g√©n√©ral de votre {selectedCategory?.name.toLowerCase()}\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto\">\n              {[\n                {\n                  id: 'occasion',\n                  name: 'Occasion',\n                  description: 'V√©hicule d\\'occasion en √©tat de marche',\n                  bgColor: 'bg-blue-50',\n                  borderColor: 'border-blue-500',\n                  icon: 'üöó'\n                },\n                {\n                  id: 'accidente',\n                  name: 'Accident√©',\n                  description: 'V√©hicule accident√© ou endommag√©',\n                  bgColor: 'bg-orange-50',\n                  borderColor: 'border-orange-500',\n                  icon: '‚ö†Ô∏è'\n                }\n              ].map((condition) => (\n                <button\n                  key={condition.id}\n                  onClick={() => updateFormData('condition', condition.id)}\n                  className={`relative p-6 rounded-xl border-2 transition-all duration-200 text-center ${\n                    formData.condition === condition.id\n                      ? `${condition.borderColor} ${condition.bgColor}`\n                      : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                  }`}\n                >\n                  <div className=\"text-4xl mb-3\">\n                    {condition.icon}\n                  </div>\n                  \n                  <h3 className=\"font-semibold text-gray-900 mb-2\">\n                    {condition.name}\n                  </h3>\n                  \n                  <p className=\"text-sm text-gray-600\">\n                    {condition.description}\n                  </p>\n                  \n                  {formData.condition === condition.id && (\n                    <div className=\"absolute top-3 right-3\">\n                      <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                        <Check className=\"h-4 w-4 text-white\" />\n                      </div>\n                    </div>\n                  )}\n                </button>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 5:\n        // Ancienne √©tape 4 d√©plac√©e en √©tape 5 : Titre\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Titre de votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </h2>\n              <p className=\"text-gray-600\">\n                R√©digez un titre accrocheur et descriptif\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Titre *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.title}\n                  onChange={(e) => updateFormData('title', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all text-lg\"\n                  placeholder={formData.listingType === 'sale' \n                    ? \"Ex: BMW 320d excellent √©tat\" \n                    : \"Ex: Recherche BMW 320d\"\n                  }\n                  maxLength={50}\n                />\n                <div className=\"flex justify-between items-center mt-2\">\n                  <p className=\"text-sm text-gray-500\">\n                    Un bon titre augmente vos chances de {formData.listingType === 'sale' ? 'vente' : 'trouver ce que vous cherchez'}\n                  </p>\n                  <span className={`text-sm ${formData.title.length > 40 ? 'text-orange-500' : 'text-gray-400'}`}>\n                    {formData.title.length}/50\n                  </span>\n                </div>\n              </div>\n\n              {/* Champ d'immatriculation conditionnel */}\n              {needsRegistrationNumber() && formData.listingType === 'sale' && (\n                <div>\n                  <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                    Num√©ro d'immatriculation (optionnel)\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.registrationNumber || ''}\n                    onChange={(e) => {\n                      const formatted = formatRegistrationNumber(e.target.value);\n                      updateFormData('registrationNumber', formatted);\n                    }}\n                    className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                      formData.registrationNumber && !validateRegistrationNumber(formData.registrationNumber).isValid\n                        ? 'border-red-300 bg-red-50'\n                        : 'border-gray-300'\n                    }`}\n                    placeholder=\"Ex: AB-123-CD ou 1234 AB 56\"\n                    maxLength={20}\n                  />\n                  <div className=\"mt-2 space-y-2\">\n                    {formData.registrationNumber && (\n                      <p className={`text-sm ${\n                        validateRegistrationNumber(formData.registrationNumber).isValid \n                          ? 'text-green-600' \n                          : 'text-red-600'\n                      }`}>\n                        {validateRegistrationNumber(formData.registrationNumber).message}\n                      </p>\n                    )}\n                    \n                    {/* Bouton pour r√©cup√©rer les donn√©es automatiquement */}\n                    {formData.registrationNumber && validateRegistrationNumber(formData.registrationNumber).isValid && (\n                      <div className=\"flex items-center space-x-3\">\n                        <button\n                          type=\"button\"\n                          onClick={() => fetchVehicleData(formData.registrationNumber!)}\n                          disabled={vehicleDataLoading}\n                          className=\"flex items-center px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                        >\n                          {vehicleDataLoading ? (\n                            <>\n                              <div className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2\"></div>\n                              R√©cup√©ration...\n                            </>\n                          ) : (\n                            <>\n                              <Search className=\"h-4 w-4 mr-2\" />\n                              Pr√©-remplir automatiquement\n                            </>\n                          )}\n                        </button>\n                      </div>\n                    )}\n                    \n                    {/* Message de retour */}\n                    {vehicleDataMessage && (\n                      <div className={`text-sm p-3 rounded-lg ${\n                        vehicleDataMessage.startsWith('‚úÖ') \n                          ? 'bg-green-50 text-green-700 border border-green-200' \n                          : vehicleDataMessage.startsWith('‚ö†Ô∏è')\n                          ? 'bg-yellow-50 text-yellow-700 border border-yellow-200'\n                          : 'bg-red-50 text-red-700 border border-red-200'\n                      }`}>\n                        {vehicleDataMessage}\n                      </div>\n                    )}\n                    \n                    <p className=\"text-sm text-gray-500\">\n                      Formats accept√©s : SIV (AA-123-AA) depuis 2009 ou FNI (1234 AB 56) avant 2009\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 6:\n        // √âtape 6 : D√©tails sp√©cifiques (ancienne √©tape 5)\n        // Ignorer cette √©tape pour les services - ne pas afficher\n        if (isServiceCategory()) {\n          return null;\n        }\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                D√©tails sp√©cifiques\n              </h2>\n              <p className=\"text-gray-600\">\n                Renseignez les caract√©ristiques importantes de votre {getSelectedSubcategory()?.name.toLowerCase()}\n              </p>\n            </div>\n\n            {renderSpecificDetailsFields()}\n          </div>\n        );\n\n      case 7:\n        // √âtape 7 : Description (ancienne √©tape 7 reste la m√™me)\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Description d√©taill√©e\n              </h2>\n              <p className=\"text-gray-600\">\n                D√©crivez votre {getSelectedSubcategory()?.name.toLowerCase()} en d√©tail\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                Description * <span className=\"text-gray-500 font-normal\">(50-300 caract√®res)</span>\n              </label>\n              <textarea\n                value={formData.description}\n                onChange={(e) => updateFormData('description', e.target.value)}\n                rows={8}\n                className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                  formData.description.length > 0 && formData.description.length < 50 \n                    ? 'border-red-300 bg-red-50' \n                    : 'border-gray-300'\n                }`}\n                placeholder=\"D√©crivez l'√©tat, l'historique, les √©quipements, les points forts, etc. Soyez pr√©cis et d√©taill√© pour attirer les acheteurs.\"\n                minLength={50}\n                maxLength={300}\n              />\n              <div className=\"flex justify-between items-center mt-2\">\n                <p className=\"text-sm text-gray-500\">\n                  Plus votre description est d√©taill√©e, plus vous avez de chances d'attirer des acheteurs s√©rieux.\n                </p>\n                <div className=\"flex flex-col text-right\">\n                  <span className={`text-sm font-medium ${\n                    formData.description.length < 50 \n                      ? 'text-red-500' \n                      : formData.description.length > 280 \n                      ? 'text-orange-500'\n                      : 'text-green-600'\n                  }`}>\n                    {formData.description.length}/300 caract√®res\n                  </span>\n                  {formData.description.length < 50 && (\n                    <span className=\"text-xs text-red-500\">\n                      (minimum 50 caract√®res)\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 8:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Photos de votre {getSelectedSubcategory()?.name.toLowerCase()}\n              </h2>\n              <p className=\"text-gray-600\">\n                Ajoutez des photos de qualit√© pour attirer plus d'acheteurs (maximum 4 photos)\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              {/* Zone de upload */}\n              {formData.photos.length < 4 ? (\n                <div className=\"border-2 border-dashed border-gray-300 rounded-xl p-8 text-center hover:border-primary-bolt-500 transition-colors\">\n                  <input\n                    type=\"file\"\n                    multiple\n                    accept=\"image/*\"\n                    onChange={handlePhotoUpload}\n                    className=\"hidden\"\n                    id=\"photo-upload\"\n                  />\n                  <label htmlFor=\"photo-upload\" className=\"cursor-pointer\">\n                    <Camera className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                      Glissez vos photos ici\n                    </h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      ou cliquez pour s√©lectionner des fichiers\n                    </p>\n                    <div className=\"bg-primary-bolt-500 text-white px-6 py-2 rounded-lg hover:bg-primary-bolt-600 transition-colors inline-block\">\n                      Choisir des photos\n                    </div>\n                  </label>\n                </div>\n              ) : (\n                <div className=\"border-2 border-dashed border-gray-200 rounded-xl p-8 text-center bg-gray-50\">\n                  <Camera className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-semibold text-gray-500 mb-2\">\n                    Limite de 4 photos atteinte\n                  </h3>\n                  <p className=\"text-gray-400 mb-4\">\n                    Supprimez une photo pour en ajouter d'autres\n                  </p>\n                </div>\n              )}\n\n              {/* Aper√ßu des photos */}\n              {formData.photos.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                    Photos s√©lectionn√©es ({formData.photos.length})\n                  </h3>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                    {formData.photos.map((photo, index) => (\n                      <div key={index} className=\"relative group\">\n                        <img\n                          src={typeof photo === 'string' ? photo : URL.createObjectURL(photo)}\n                          alt={`Photo ${index + 1}`}\n                          className=\"w-full h-32 object-cover rounded-lg\"\n                        />\n                        <button\n                          onClick={() => removePhoto(index)}\n                          className=\"absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full hover:bg-red-600 transition-colors opacity-0 group-hover:opacity-100\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        );\n\n      case 9:\n        // Masquer cette √©tape pour les annonces de recherche\n        if (isSearchListing()) {\n          return null;\n        }\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Prix de {formData.listingType === 'sale' ? 'vente' : 'budget maximum'}\n              </h2>\n              <p className=\"text-gray-600\">\n                {formData.listingType === 'sale' \n                  ? `Fixez un prix attractif pour votre ${getSelectedSubcategory()?.name.toLowerCase()}`\n                  : `Indiquez votre budget maximum pour votre recherche`\n                }\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                {formData.listingType === 'sale' ? 'Prix (‚Ç¨) *' : 'Budget maximum (‚Ç¨) *'}\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={formData.price || ''}\n                  onChange={(e) => updateFormData('price', parseInt(e.target.value) || 0)}\n                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all text-lg\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                />\n                <span className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-500 font-medium\">\n                  ‚Ç¨\n                </span>\n              </div>\n              <p className=\"text-sm text-gray-500 mt-2\">\n                {formData.listingType === 'sale' \n                  ? 'Consultez des annonces similaires pour fixer un prix comp√©titif'\n                  : 'Indiquez le budget maximum que vous √™tes pr√™t √† d√©penser'\n                }\n              </p>\n            </div>\n          </div>\n        );\n\n      case 10:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Localisation\n              </h2>\n              <p className=\"text-gray-600\">\n                O√π se trouve votre {getSelectedSubcategory()?.name.toLowerCase()} ?\n              </p>\n              {(formData.location.city || formData.location.postalCode) && (\n                <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n                  <p className=\"text-sm text-blue-700\">\n                    ‚ÑπÔ∏è Informations pr√©-remplies depuis votre profil. Vous pouvez les modifier si n√©cessaire.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            <AddressInput\n              postalCode={formData.location.postalCode}\n              city={formData.location.city}\n              onPostalCodeChange={(postalCode) => {\n                console.log('Form updating postal code:', postalCode);\n                setFormData(prev => {\n                  const newLocation = { ...prev.location, postalCode };\n                  const newData = { ...prev, location: newLocation };\n                  console.log('Direct form update - new location:', newLocation);\n                  console.log('Direct form update - complete data:', newData);\n                  return newData;\n                });\n              }}\n              onCityChange={(city) => {\n                console.log('Form updating city:', city);\n                setFormData(prev => {\n                  const newLocation = { ...prev.location, city };\n                  const newData = { ...prev, location: newLocation };\n                  console.log('Direct form update - new location:', newLocation);\n                  console.log('Direct form update - complete data:', newData);\n                  return newData;\n                });\n              }}\n            />\n          </div>\n        );\n\n      case 11:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                Informations de contact\n              </h2>\n              <p className=\"text-gray-600\">\n                Comment les {formData.listingType === 'sale' ? 'acheteurs' : 'vendeurs'} peuvent-ils vous contacter ?\n              </p>\n              {(formData.contact.phone || formData.contact.whatsapp || formData.contact.email) && (\n                <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n                  <p className=\"text-sm text-blue-700\">\n                    ‚ÑπÔ∏è Informations pr√©-remplies depuis votre profil. Vous pouvez les modifier pour cette annonce uniquement.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  T√©l√©phone * (avec indicatif international)\n                </label>\n                <div className=\"text-xs text-gray-500 mb-2\">\n                  Exemples : +33 (France), +1 (USA/Canada), +44 (UK), +49 (Allemagne), +34 (Espagne)\n                </div>\n                <input\n                  type=\"tel\"\n                  value={formData.contact.phone}\n                  onChange={(e) => {\n                    const formatted = formatPhoneNumber(e.target.value);\n                    const updatedContact = { ...formData.contact, phone: formatted };\n                    \n                    // Si \"m√™me num√©ro WhatsApp\" est coch√©, copier automatiquement\n                    if (formData.contact.sameAsPhone) {\n                      updatedContact.whatsapp = formatted;\n                    }\n                    \n                    updateFormData('contact', updatedContact);\n                  }}\n                  onBlur={(e) => {\n                    // Validation lors de la perte de focus\n                    const validation = validatePhoneNumber(e.target.value);\n                    if (!validation.isValid) {\n                      console.log('Erreur de validation t√©l√©phone:', validation.message);\n                    }\n                  }}\n                  className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                    formData.contact.phone && !validatePhoneNumber(formData.contact.phone).isValid\n                      ? 'border-red-300 bg-red-50'\n                      : 'border-gray-300'\n                  }`}\n                  placeholder=\"+33 6 12 34 56 78 (France par d√©faut)\"\n                  maxLength={25}\n                />\n                {formData.contact.phone && (\n                  <p className={`text-sm mt-1 ${\n                    validatePhoneNumber(formData.contact.phone).isValid\n                      ? 'text-green-600'\n                      : 'text-red-600'\n                  }`}>\n                    {validatePhoneNumber(formData.contact.phone).message}\n                  </p>\n                )}\n                \n                {/* Checkbox pour masquer le t√©l√©phone - d√©plac√©e ici */}\n                <div className=\"flex items-center mt-3\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"hidePhone\"\n                    checked={formData.contact.hidePhone}\n                    onChange={(e) => updateFormData('contact', {\n                      ...formData.contact,\n                      hidePhone: e.target.checked\n                    })}\n                    className=\"h-4 w-4 text-primary-bolt-600 focus:ring-primary-bolt-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"hidePhone\" className=\"ml-2 text-sm text-gray-700\">\n                    Masquer mon num√©ro de t√©l√©phone dans l'annonce\n                  </label>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  WhatsApp\n                </label>\n                \n                <div className=\"mb-3\">\n                  <label className=\"flex items-center space-x-2 cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={formData.contact.sameAsPhone}\n                      onChange={(e) => {\n                        const sameAsPhone = e.target.checked;\n                        updateFormData('contact', { \n                          ...formData.contact, \n                          sameAsPhone,\n                          whatsapp: sameAsPhone ? formData.contact.phone : ''\n                        });\n                      }}\n                      className=\"w-4 h-4 text-primary-bolt-600 border-gray-300 rounded focus:ring-primary-bolt-500\"\n                    />\n                    <span className=\"text-sm text-gray-700\">\n                      Mon num√©ro WhatsApp est le m√™me que mon num√©ro de t√©l√©phone\n                    </span>\n                  </label>\n                </div>\n\n                {!formData.contact.sameAsPhone && (\n                  <div>\n                    <input\n                      type=\"tel\"\n                      value={formData.contact.whatsapp}\n                      onChange={(e) => {\n                        const formatted = formatPhoneNumber(e.target.value);\n                        updateFormData('contact', { ...formData.contact, whatsapp: formatted });\n                      }}\n                      onBlur={(e) => {\n                        const validation = validatePhoneNumber(e.target.value);\n                        if (!validation.isValid && e.target.value) {\n                          console.log('Erreur de validation WhatsApp:', validation.message);\n                        }\n                      }}\n                      className={`w-full px-4 py-3 border rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all ${\n                        formData.contact.whatsapp && !validatePhoneNumber(formData.contact.whatsapp).isValid\n                          ? 'border-red-300 bg-red-50'\n                          : 'border-gray-300'\n                      }`}\n                      placeholder=\"+33 6 12 34 56 78 (WhatsApp)\"\n                      maxLength={25}\n                    />\n                    {formData.contact.whatsapp && (\n                      <p className={`text-sm mt-1 ${\n                        validatePhoneNumber(formData.contact.whatsapp).isValid\n                          ? 'text-green-600'\n                          : 'text-red-600'\n                      }`}>\n                        {validatePhoneNumber(formData.contact.whatsapp).message}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n                {formData.contact.sameAsPhone && formData.contact.phone && (\n                  <div className=\"bg-gray-50 p-3 rounded-xl\">\n                    <p className=\"text-sm text-gray-600\">\n                      <span className=\"font-medium\">WhatsApp :</span> {formData.contact.phone}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                  Email (optionnel)\n                </label>\n                <input\n                  type=\"email\"\n                  value={formData.contact.email}\n                  onChange={(e) => updateFormData('contact', { ...formData.contact, email: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  placeholder=\"votre@email.com\"\n                />\n              </div>\n\n\n            </div>\n          </div>\n        );\n\n      case 12:\n        return (\n          <div className=\"space-y-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                R√©capitulatif de votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </h2>\n              <p className=\"text-gray-600\">\n                V√©rifiez les informations avant de publier votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </p>\n            </div>\n\n            {/* Affichage du r√©capitulatif */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Informations g√©n√©rales</h3>\n                  <dl className=\"space-y-3\">\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Type</dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {formData.listingType === 'sale' ? 'Vendre' : 'Rechercher'}\n                      </dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Cat√©gorie</dt>\n                      <dd className=\"text-sm text-gray-900\">{formData.category}</dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Titre</dt>\n                      <dd className=\"text-sm text-gray-900\">{formData.title}</dd>\n                    </div>\n                    {formData.price > 0 && (\n                      <div>\n                        <dt className=\"text-sm font-medium text-gray-500\">Prix</dt>\n                        <dd className=\"text-sm text-gray-900\">{formData.price}‚Ç¨</dd>\n                      </div>\n                    )}\n                  </dl>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Contact</h3>\n                  <dl className=\"space-y-3\">\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">T√©l√©phone</dt>\n                      <dd className=\"text-sm text-gray-900\">{formData.contact.phone}</dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">WhatsApp</dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {formData.contact.sameAsPhone \n                          ? `${formData.contact.phone} (m√™me que t√©l√©phone)`\n                          : formData.contact.whatsapp || 'Non renseign√©'\n                        }\n                      </dd>\n                    </div>\n                    <div>\n                      <dt className=\"text-sm font-medium text-gray-500\">Localisation</dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {formData.location.postalCode} {formData.location.city}\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Description</h3>\n                  <p className=\"text-sm text-gray-700 whitespace-pre-wrap\">\n                    {formData.description}\n                  </p>\n                </div>\n\n                {/* Section √©quipements s√©lectionn√©s */}\n                {formData.specificDetails.equipment && formData.specificDetails.equipment.length > 0 && (\n                  <div className=\"bg-gray-50 rounded-xl p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">√âquipements</h3>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                      {formData.specificDetails.equipment.map((equipment: string, index: number) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                          <span className=\"text-sm text-gray-700\">{equipment}</span>\n                        </div>\n                      ))}\n                    </div>\n                    <p className=\"text-sm text-gray-500 mt-3\">\n                      {formData.specificDetails.equipment.length} √©quipement{formData.specificDetails.equipment.length > 1 ? 's' : ''} s√©lectionn√©{formData.specificDetails.equipment.length > 1 ? 's' : ''}\n                    </p>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Photos</h3>\n                  {formData.photos.length > 0 ? (\n                    <div className=\"space-y-3\">\n                      <p className=\"text-sm text-gray-600\">\n                        {formData.photos.length} photo{formData.photos.length !== 1 ? 's' : ''} ajout√©e{formData.photos.length !== 1 ? 's' : ''}\n                      </p>\n                      <div className=\"grid grid-cols-3 gap-2\">\n                        {formData.photos.map((photo, index) => (\n                          <div key={index} className=\"relative aspect-square\">\n                            <img\n                              src={typeof photo === 'string' ? photo : URL.createObjectURL(photo)}\n                              alt={`Photo ${index + 1}`}\n                              className=\"w-full h-full object-cover rounded-lg border border-gray-200\"\n                            />\n                            {index === 0 && (\n                              <div className=\"absolute top-1 left-1 bg-primary-bolt-500 text-white text-xs px-2 py-1 rounded\">\n                                Principal\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-gray-600\">\n                      Aucune photo ajout√©e\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 13:\n        if (showPayment) {\n          return (\n            <PremiumPayment\n              selectedPack={formData.premiumPack}\n              onPaymentSuccess={() => {\n                setShowPayment(false);\n                // Publier l'annonce apr√®s paiement r√©ussi\n                console.log('Publier l\\'annonce avec pack premium:', formData);\n                setShowPayment(false);\n                publishListing();\n              }}\n              onBack={() => setShowPayment(false)}\n            />\n          );\n        }\n        return (\n          <PremiumPackSelector\n            selectedPack={formData.premiumPack}\n            onSelectPack={(packId) => updateFormData('premiumPack', packId)}\n          />\n        );\n\n      case 14:\n        return (\n          <div className=\"space-y-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                R√©capitulatif final\n              </h2>\n              <p className=\"text-gray-600\">\n                V√©rifiez les informations avant de publier votre {formData.listingType === 'sale' ? 'annonce' : 'recherche'}\n              </p>\n            </div>\n\n            <div className=\"space-y-6\">\n              {/* Cat√©gorie et sous-cat√©gorie */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cat√©gorie</h3>\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-medium\">\n                    {selectedCategory?.name}\n                  </span>\n                  <span className=\"text-gray-400\">‚Üí</span>\n                  <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-medium\">\n                    {getSelectedSubcategory()?.name}\n                  </span>\n                </div>\n              </div>\n\n              {/* Titre et prix */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Titre et prix</h3>\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"text-xl font-bold text-gray-900 mb-2\">{formData.title || 'Titre non renseign√©'}</h4>\n                    {formData.registrationNumber && (\n                      <p className=\"text-sm text-gray-600\">\n                        <span className=\"font-medium\">Immatriculation:</span> {formData.registrationNumber}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <div className=\"text-2xl font-bold text-primary-bolt-500\">\n                      {formData.price.toLocaleString('fr-FR')} ‚Ç¨\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* D√©tails sp√©cifiques */}\n              {Object.keys(formData.specificDetails).length > 0 && (\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">D√©tails sp√©cifiques</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {Object.entries(formData.specificDetails).map(([key, value]) => {\n                      if (key === 'equipment' && Array.isArray(value)) {\n                        return (\n                          <div key={key} className=\"md:col-span-2\">\n                            <span className=\"font-medium text-gray-900\">√âquipements:</span>\n                            <div className=\"flex flex-wrap gap-2 mt-2\">\n                              {value.map((equipment: string, index: number) => (\n                                <span key={index} className=\"px-2 py-1 bg-primary-bolt-100 text-primary-bolt-700 rounded-md text-sm\">\n                                  {equipment}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        );\n                      }\n                      \n                      if (value && value !== '') {\n                        const displayKey = (() => {\n                          switch(key) {\n                            case 'brand': return 'Marque';\n                            case 'model': return 'Mod√®le';\n                            case 'year': return 'Ann√©e';\n                            case 'mileage': return 'Kilom√©trage';\n                            case 'fuelType': return 'Carburant';\n                            case 'transmission': return 'Transmission';\n                            case 'color': return 'Couleur';\n                            case 'doors': return 'Portes';\n                            case 'power': return 'Puissance (CV)';\n                            case 'displacement': return 'Cylindr√©e (cm¬≥)';\n                            case 'motorcycleType': return 'Type de moto';\n                            case 'licenseType': return 'Permis requis';\n                            case 'length': return 'Longueur (m)';\n                            case 'engineType': return 'Type de moteur';\n                            case 'enginePower': return 'Puissance moteur (CV)';\n                            case 'boatType': return 'Type de bateau';\n                            case 'utilityType': return 'Type d\\'utilitaire';\n                            case 'gvw': return 'PTAC (kg)';\n                            case 'volume': return 'Volume utile (m¬≥)';\n                            default: return key;\n                          }\n                        })();\n                        \n                        const displayValue = (() => {\n                          if (key === 'fuelType') {\n                            const fuelLabels: Record<string, string> = {\n                              gasoline: 'Essence',\n                              diesel: 'Diesel',\n                              electric: '√âlectrique',\n                              hybrid: 'Hybride'\n                            };\n                            return fuelLabels[value as string] || value;\n                          }\n                          if (key === 'transmission') {\n                            const transmissionLabels: Record<string, string> = {\n                              manual: 'Manuelle',\n                              automatic: 'Automatique',\n                              'semi-automatic': 'Semi-automatique'\n                            };\n                            return transmissionLabels[value as string] || value;\n                          }\n                          return value;\n                        })();\n                        \n                        return (\n                          <div key={key}>\n                            <span className=\"font-medium text-gray-900\">{displayKey}:</span>\n                            <span className=\"text-gray-700 ml-2\">{displayValue}</span>\n                          </div>\n                        );\n                      }\n                      return null;\n                    })}\n                  </div>\n                </div>\n              )}\n\n              {/* √âtat g√©n√©ral */}\n              {formData.condition && needsConditionStep() && (\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">√âtat g√©n√©ral</h3>\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-medium\">\n                      {VEHICLE_CONDITIONS.find(c => c.value === formData.condition)?.label}\n                    </span>\n                  </div>\n                </div>\n              )}\n\n              {/* Description */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Description</h3>\n                <p className=\"text-gray-700 whitespace-pre-line\">{formData.description}</p>\n              </div>\n\n              {/* Photos */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Photos ({formData.photos.length})</h3>\n                {formData.photos.length > 0 ? (\n                  <div className=\"grid grid-cols-3 md:grid-cols-4 gap-4\">\n                    {formData.photos.map((photo, index) => (\n                      <div key={index} className=\"aspect-square\">\n                        <img\n                          src={typeof photo === 'string' ? photo : URL.createObjectURL(photo)}\n                          alt={`Photo ${index + 1}`}\n                          className=\"w-full h-full object-cover rounded-lg\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500\">Aucune photo ajout√©e</p>\n                )}\n              </div>\n\n              {/* Localisation et contact */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Localisation</h3>\n                  <p className=\"text-gray-700\">\n                    {formData.location.postalCode} {formData.location.city}\n                  </p>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Contact</h3>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-gray-700\">\n                      <span className=\"font-medium\">T√©l√©phone:</span> {formData.contact.hidePhone ? 'Masqu√©' : formData.contact.phone}\n                    </p>\n                    <p className=\"text-gray-700\">\n                      <span className=\"font-medium\">WhatsApp:</span> {\n                        formData.contact.sameAsPhone \n                          ? `${formData.contact.phone} (m√™me que t√©l√©phone)`\n                          : formData.contact.whatsapp || 'Non renseign√©'\n                      }\n                    </p>\n                    {formData.contact.email && (\n                      <p className=\"text-gray-700\">\n                        <span className=\"font-medium\">Email:</span> {formData.contact.email}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  if (!user && !dbUser) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"text-center bg-gray-50 p-8 rounded-xl border border-gray-200\">\n          <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-2xl\">üîí</span>\n          </div>\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Connexion requise</h3>\n          <p className=\"text-gray-600\">Vous devez √™tre connect√© pour d√©poser une annonce.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white\">\n      <div className=\"max-w-full mx-auto px-6 py-6\">\n        {/* Progress Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              {formData.listingType === 'sale' ? 'Vente' : formData.listingType === 'search' ? 'Recherche' : 'D√©poser une annonce'}\n              {formData.listingType && ' - D√©poser une annonce'}\n            </h1>\n            <span className=\"text-sm font-medium text-gray-600\">\n              √âtape {currentStep} sur {totalSteps}\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Form Content */}\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 mb-8\">\n          {renderStepContent()}\n        </div>\n\n        {/* Navigation */}\n        <div className=\"flex justify-between items-center\">\n          <button\n            onClick={() => {\n              if (currentStep === 13 && showPayment) {\n                // Retour depuis le paiement vers la s√©lection des packs\n                setShowPayment(false);\n              } else {\n                prevStepHandler();\n              }\n            }}\n            disabled={currentStep === 1}\n            className=\"flex items-center space-x-2 px-6 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Pr√©c√©dent</span>\n          </button>\n\n          {currentStep === 12 ? (\n            // √âtape r√©capitulatif - afficher les deux options\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <button\n                onClick={() => {\n                  // Publication gratuite directe\n                  publishListing();\n                }}\n                className=\"flex items-center justify-center space-x-2 bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                <Check className=\"h-4 w-4\" />\n                <span>Publier gratuitement</span>\n              </button>\n              \n              <button\n                onClick={() => {\n                  setCurrentStep(13);\n                }}\n                className=\"flex items-center justify-center space-x-2 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                <CreditCard className=\"h-4 w-4\" />\n                <span>Booster l'annonce</span>\n              </button>\n            </div>\n          ) : currentStep === 13 && !showPayment ? (\n            // √âtape s√©lection pack premium\n            <button\n              onClick={() => {\n                const selectedPackData = PREMIUM_PACKS.find(pack => pack.id === formData.premiumPack);\n                if (selectedPackData && selectedPackData.price > 0) {\n                  setShowPayment(true);\n                }\n              }}\n              disabled={!formData.premiumPack || formData.premiumPack === 'free'}\n              className=\"flex items-center space-x-2 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n            >\n              <CreditCard className=\"h-4 w-4\" />\n              <span>Proc√©der au paiement</span>\n            </button>\n          ) : currentStep < totalSteps ? (\n            <button\n              onClick={nextStepHandler}\n              disabled={!canProceed()}\n              className=\"flex items-center space-x-2 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n            >\n              <span>Suivant</span>\n              <ArrowRight className=\"h-4 w-4\" />\n            </button>\n          ) : (\n            <button\n              onClick={() => {\n                // Publication directe\n                publishListing();\n              }}\n              disabled={!canProceed()}\n              className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n            >\n              Publier l'annonce\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de succ√®s */}\n      <PublishSuccessModal\n        isOpen={showSuccessModal}\n        onClose={() => setShowSuccessModal(false)}\n        onNavigateToDashboard={navigateToDashboard}\n        listingType={formData.listingType === 'sale' ? 'sell' : 'search'}\n      />\n    </div>\n  );\n};","size_bytes":158538},"client/src/components/Dashboard.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { Car, MessageCircle, User, BarChart3, Plus, Edit, Trash2, Eye, Heart, Crown, Settings, Calendar, MapPin, Euro, TrendingUp, Award, Bell, Search, Building2, Star, Power, PowerOff, Play, Pause, X } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { useUnreadMessages } from '../hooks/useUnreadMessages';\nimport { useFavorites } from '../hooks/useFavorites';\nimport { useSavedSearches } from '../hooks/useSavedSearches';\nimport { Vehicle } from '../types';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface DashboardTab {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  badge?: number;\n}\n\nconst dashboardTabs: DashboardTab[] = [\n  { id: 'overview', label: 'Vue d\\'ensemble', icon: <BarChart3 className=\"h-5 w-5\" /> },\n  { id: 'listings', label: 'Mes annonces', icon: <Car className=\"h-5 w-5\" /> },\n  { id: 'favorites', label: 'Mes favoris', icon: <Heart className=\"h-5 w-5\" /> },\n  { id: 'messages', label: 'Messages', icon: <MessageCircle className=\"h-5 w-5\" /> },\n  { id: 'profile', label: 'Mon profil', icon: <User className=\"h-5 w-5\" /> },\n  { id: 'premium', label: 'Premium', icon: <Crown className=\"h-5 w-5\" /> },\n];\n\ninterface DashboardProps {\n  initialTab?: string;\n  onCreateListing?: () => void;\n  onRedirectHome?: () => void;\n  onRedirectToSearch?: () => void;\n  setSearchFilters?: (filters: any) => void;\n}\n\nexport const Dashboard: React.FC<DashboardProps> = ({ initialTab = 'overview', onCreateListing, onRedirectHome, onRedirectToSearch, setSearchFilters }) => {\n  const { vehicles, setVehicles, setSelectedVehicle, setSearchFilters: contextSetSearchFilters } = useApp();\n  const { user, dbUser, isLoading, refreshDbUser } = useAuth();\n  const [userVehiclesWithInactive, setUserVehiclesWithInactive] = useState<Vehicle[]>([]);\n  const { unreadCount, refreshUnreadCount } = useUnreadMessages();\n  const { favorites, loading: favoritesLoading, toggleFavorite, isFavorite } = useFavorites();\n  const { savedSearches, loading: savedSearchesLoading, saveSearch, deleteSearch, toggleAlerts } = useSavedSearches();\n  const [activeTab, setActiveTab] = useState(initialTab);\n  const [editingProfile, setEditingProfile] = useState(false);\n  const [favoritesSubTab, setFavoritesSubTab] = useState('listings');\n  const [selectedConversation, setSelectedConversation] = useState<any>(null);\n  const [dashboardConversations, setDashboardConversations] = useState<any[]>([]);\n  const [loadingMessages, setLoadingMessages] = useState(true);\n  const [newMessage, setNewMessage] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [profileForm, setProfileForm] = useState({\n    name: '',\n    phone: '',\n    whatsapp: '',\n    postalCode: '',\n    city: '',\n    companyName: '',\n    address: ''\n  });\n  const [savingProfile, setSavingProfile] = useState(false);\n  const [profileSuccess, setProfileSuccess] = useState(false);\n\n  // Hook pour la redirection - DOIT √™tre appel√© avant tout return conditionnel\n  useEffect(() => {\n    if (!user && !dbUser && !isLoading && onRedirectHome) {\n      onRedirectHome();\n    }\n  }, [user, dbUser, isLoading, onRedirectHome]);\n\n  // R√©cup√©rer les v√©hicules de l'utilisateur (y compris inactifs) pour le Dashboard\n  useEffect(() => {\n    const fetchUserVehicles = async () => {\n      if (!dbUser?.id) return;\n      \n      try {\n        const response = await fetch(`/api/vehicles/user/${dbUser.id}`, {\n          cache: 'no-cache',\n          headers: {\n            'Cache-Control': 'no-cache',\n            'Pragma': 'no-cache'\n          }\n        });\n        \n        if (response.ok) {\n          const userVehicles = await response.json();\n          console.log('‚úÖ V√©hicules utilisateur r√©cup√©r√©s (avec inactifs):', userVehicles.length);\n          setUserVehiclesWithInactive(userVehicles);\n        } else {\n          console.error('‚ùå Erreur r√©cup√©ration v√©hicules utilisateur:', response.status);\n          // Fallback vers le filtre classique\n          setUserVehiclesWithInactive(vehicles.filter(v => v.userId === dbUser.id));\n        }\n      } catch (error) {\n        console.error('‚ùå Erreur r√©seau v√©hicules utilisateur:', error);\n        // Fallback vers le filtre classique\n        setUserVehiclesWithInactive(vehicles.filter(v => v.userId === dbUser.id));\n      }\n    };\n\n    fetchUserVehicles();\n  }, [dbUser?.id, vehicles]);\n\n  // Initialiser le formulaire profil avec les donn√©es existantes\n  useEffect(() => {\n    if (dbUser) {\n      setProfileForm({\n        name: dbUser.name || '',\n        phone: dbUser.phone || '',\n        whatsapp: dbUser.whatsapp || '',\n        postalCode: (dbUser as any).postal_code || '',\n        city: dbUser.city || '',\n        companyName: (dbUser as any).company_name || '',\n        address: dbUser.address || ''\n      });\n    }\n  }, [dbUser]);\n\n  // Mettre √† jour l'onglet actif quand initialTab change\n  useEffect(() => {\n    setActiveTab(initialTab);\n  }, [initialTab]);\n\n  // Charger les messages pour le dashboard\n  useEffect(() => {\n    const loadDashboardMessages = async () => {\n      if (!dbUser) return;\n      \n      try {\n        const response = await fetch(`/api/messages-simple/user/${dbUser.id}`);\n        if (response.ok) {\n          const data = await response.json();\n          setDashboardConversations(data.conversations || []);\n        }\n      } catch (error) {\n        console.error('Erreur chargement messages dashboard:', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n    \n    loadDashboardMessages();\n  }, [dbUser]);\n\n  // Marquer les messages comme lus quand l'utilisateur s√©lectionne une conversation\n  useEffect(() => {\n    const markMessagesAsRead = async () => {\n      if (!selectedConversation || !dbUser) return;\n      \n      // R√©cup√©rer les IDs des messages non lus re√ßus par l'utilisateur actuel\n      const unreadMessageIds = selectedConversation.messages\n        ?.filter((msg: any) => !msg.isOwn && !msg.read)\n        ?.map((msg: any) => msg.id) || [];\n      \n      if (unreadMessageIds.length > 0) {\n        try {\n          await fetch('/api/messages-simple/mark-read', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              messageIds: unreadMessageIds,\n              userId: dbUser.id\n            })\n          });\n          \n          console.log('‚úÖ Messages marqu√©s comme lus:', unreadMessageIds.length);\n          \n          // Actualiser le compteur de messages non lus\n          refreshUnreadCount();\n        } catch (error) {\n          console.error('‚ùå Erreur marquage messages lus:', error);\n        }\n      }\n    };\n    \n    markMessagesAsRead();\n  }, [selectedConversation, dbUser, refreshUnreadCount]);\n\n  // Fonction pour sauvegarder le profil\n  const handleSaveProfile = async () => {\n    if (!dbUser?.id || savingProfile) return;\n    \n    setSavingProfile(true);\n    try {\n      const response = await fetch(`/api/profile/update/${dbUser.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(profileForm)\n      });\n      \n      if (response.ok) {\n        const updatedData = await response.json();\n        console.log('‚úÖ Profil sauvegard√© avec succ√®s:', updatedData);\n        setEditingProfile(false);\n        setProfileSuccess(true);\n        // Masquer le message de succ√®s apr√®s 3 secondes\n        setTimeout(() => setProfileSuccess(false), 3000);\n        // Rafra√Æchir les donn√©es utilisateur pour refl√©ter les changements\n        await refreshDbUser();\n        // Important: Mettre √† jour le formulaire local avec les nouvelles donn√©es\n        setProfileForm({\n          name: updatedData.name || '',\n          phone: updatedData.phone || '',\n          whatsapp: updatedData.whatsapp || '',\n          postalCode: updatedData.postal_code || '',\n          city: updatedData.city || '',\n          companyName: updatedData.company_name || '',\n          address: updatedData.address || ''\n        });\n      } else {\n        const errorData = await response.json();\n        console.error('‚ùå Erreur lors de la sauvegarde du profil:', errorData);\n        alert(`Erreur lors de la sauvegarde: ${errorData.error || 'Erreur inconnue'}`);\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur r√©seau sauvegarde profil:', error);\n      alert('Erreur de connexion. Veuillez r√©essayer.');\n    } finally {\n      setSavingProfile(false);\n    }\n  };\n\n  // Fonction pour envoyer un message\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !dbUser || sendingMessage) return;\n    \n    // Utiliser la conversation s√©lectionn√©e ou la premi√®re disponible\n    const activeConv = selectedConversation || (dashboardConversations[0] ? {\n      id: dashboardConversations[0].id,\n      other_user: dashboardConversations[0].other_user,\n      vehicle_id: dashboardConversations[0].vehicle_id\n    } : null);\n    \n    if (!activeConv) {\n      console.error('‚ùå Aucune conversation s√©lectionn√©e');\n      return;\n    }\n    \n    console.log('üì§ Envoi message:', {\n      from: dbUser.id,\n      to: activeConv.otherUserId || activeConv.other_user?.id,\n      vehicle: activeConv.vehicleId || activeConv.vehicle_id,\n      content: newMessage\n    });\n\n    setSendingMessage(true);\n    try {\n      const response = await fetch('/api/messages-simple/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          fromUserId: dbUser.id,\n          toUserId: activeConv.otherUserId || activeConv.other_user?.id,\n          content: newMessage,\n          vehicleId: activeConv.vehicleId || activeConv.vehicle_id\n        }),\n      });\n\n      if (response.ok) {\n        console.log('‚úÖ Message envoy√© avec succ√®s');\n        setNewMessage('');\n        \n        // Recharger imm√©diatement les conversations\n        const refreshResponse = await fetch(`/api/messages-simple/user/${dbUser.id}`);\n        if (refreshResponse.ok) {\n          const data = await refreshResponse.json();\n          setDashboardConversations(data.conversations || []);\n          \n          // Mettre √† jour la conversation s√©lectionn√©e avec les nouveaux messages\n          const activeConvId = selectedConversation?.id || dashboardConversations[0]?.id;\n          const updatedConv = data.conversations?.find((conv: any) => conv.id === activeConvId);\n          if (updatedConv) {\n            // Mapper correctement les messages pour l'affichage\n            const mappedConv = {\n              id: updatedConv.id,\n              fromUser: updatedConv.other_user.name,\n              vehicleTitle: updatedConv.vehicle_title,\n              vehicleId: updatedConv.vehicle_id,\n              otherUserId: updatedConv.other_user.id,\n              messages: updatedConv.messages?.map((msg: any) => ({\n                id: msg.id,\n                sender: msg.is_from_current_user ? 'Vous' : updatedConv.other_user.name,\n                isOwn: msg.is_from_current_user,\n                content: msg.content,\n                timestamp: new Date(msg.created_at || new Date())\n              })) || []\n            };\n            setSelectedConversation(mappedConv);\n          }\n          \n          console.log('‚úÖ Conversations recharg√©es et interface mise √† jour');\n        }\n      } else {\n        const errorText = await response.text();\n        console.error('‚ùå Erreur envoi message:', response.status, errorText);\n      }\n    } catch (error) {\n      console.error('Erreur envoi message:', error);\n    } finally {\n      setSendingMessage(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center\">\n        <div className=\"text-center bg-white p-12 rounded-2xl shadow-xl border border-gray-100\">\n          <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <div className=\"animate-spin w-8 h-8 border-4 border-primary-bolt-500 border-t-transparent rounded-full\"></div>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Chargement...</h2>\n          <p className=\"text-gray-600\">Acc√®s √† votre tableau de bord</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user && !dbUser && !isLoading) {\n    return null; // Ne rien afficher pendant la redirection\n  }\n\n  // Utiliser les v√©hicules avec inactifs pour le Dashboard, ou fallback vers le filtre classique\n  const userVehicles = userVehiclesWithInactive.length > 0 \n    ? userVehiclesWithInactive \n    : vehicles.filter(v => v.userId === dbUser?.id);\n  const totalViews = userVehicles.reduce((sum, v) => sum + v.views, 0);\n  const totalFavorites = userVehicles.reduce((sum, v) => sum + v.favorites, 0);\n  const premiumListings = userVehicles.filter(v => v.isPremium).length;\n\n  const handleDeleteListing = async (vehicleId: string) => {\n    if (window.confirm('√ätes-vous s√ªr de vouloir supprimer cette annonce ? Cette action est irr√©versible.')) {\n      try {\n        const response = await fetch(`/api/vehicles/${vehicleId}`, {\n          method: 'DELETE'\n        });\n\n        if (response.ok) {\n          // Suppression r√©ussie, mettre √† jour l'√©tat local\n          setVehicles(vehicles.filter(v => v.id !== vehicleId));\n          setUserVehiclesWithInactive(userVehiclesWithInactive.filter(v => v.id !== vehicleId));\n          console.log(`‚úÖ Annonce ${vehicleId} supprim√©e avec succ√®s`);\n        } else {\n          const errorData = await response.json();\n          console.error('‚ùå Erreur suppression API:', errorData);\n          alert('Erreur lors de la suppression de l\\'annonce. Veuillez r√©essayer.');\n        }\n      } catch (error) {\n        console.error('‚ùå Erreur lors de la suppression:', error);\n        alert('Erreur de connexion. Veuillez r√©essayer.');\n      }\n    }\n  };\n\n  const handleToggleActiveListing = async (vehicleId: string, currentStatus: boolean) => {\n    try {\n      const response = await fetch(`/api/annonces/${vehicleId}/toggle-active`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ isActive: !currentStatus })\n      });\n\n      if (response.ok) {\n        // Mettre √† jour localement\n        setVehicles(vehicles.map(v => \n          v.id === vehicleId \n            ? { ...v, isActive: !currentStatus }\n            : v\n        ));\n        \n        // Afficher un message de confirmation\n        console.log(`Annonce ${vehicleId} ${!currentStatus ? 'activ√©e' : 'd√©sactiv√©e'} avec succ√®s`);\n      } else {\n        const errorData = await response.json();\n        console.error('Erreur API:', errorData);\n        \n        // Pour l'instant, simuler le changement en attendant la correction de la DB\n        setVehicles(vehicles.map(v => \n          v.id === vehicleId \n            ? { ...v, isActive: !currentStatus }\n            : v\n        ));\n        console.log(`Changement de statut simul√© pour l'annonce ${vehicleId}`);\n      }\n    } catch (error) {\n      console.error('Erreur lors du changement de statut:', error);\n      \n      // Fallback: mettre √† jour localement m√™me en cas d'erreur API\n      setVehicles(vehicles.map(v => \n        v.id === vehicleId \n          ? { ...v, isActive: !currentStatus }\n          : v\n      ));\n      console.log(`Changement de statut local pour l'annonce ${vehicleId}`);\n    }\n  };\n\n  const handleCreateListing = () => {\n    if (onCreateListing) {\n      onCreateListing();\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const renderOverview = () => (\n    <div className=\"space-y-8\">\n      {/* Welcome Section */}\n      <div className=\"relative bg-gradient-to-r from-primary-bolt-500 via-primary-bolt-600 to-primary-bolt-700 rounded-2xl p-8 text-white overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black/10\"></div>\n        <div className=\"absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32\"></div>\n        <div className=\"absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full translate-y-24 -translate-x-24\"></div>\n        \n        <div className=\"relative z-10\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h1 className=\"text-4xl font-bold mb-2\">\n                Bonjour, {dbUser?.name || user?.email?.split('@')[0]} ! üëã\n              </h1>\n              <p className=\"text-cyan-100 text-lg font-medium\">\n                {dbUser?.type === 'professional' \n                  ? 'G√©rez votre activit√© professionnelle depuis votre tableau de bord'\n                  : 'Bienvenue sur votre espace personnel'\n                }\n              </p>\n            </div>\n            <div className=\"hidden md:block\">\n              <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-4\">\n                <Award className=\"h-12 w-12 text-white/80\" />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <div className=\"bg-white/20 backdrop-blur-sm rounded-lg px-4 py-2\">\n              <span className=\"text-sm font-medium\">Membre depuis</span>\n              <p className=\"text-lg font-bold\">\n                {dbUser?.createdAt ? new Date(dbUser.createdAt).toLocaleDateString('fr-FR', { \n                  month: 'long', \n                  year: 'numeric' \n                }) : 'R√©cemment'}\n              </p>\n            </div>\n            {dbUser?.verified && (\n              <div className=\"bg-green-500/20 backdrop-blur-sm rounded-lg px-4 py-2 border border-green-400/30\">\n                <span className=\"text-sm font-medium text-green-100\">‚úì Compte v√©rifi√©</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 p-3 rounded-xl shadow-lg\">\n              <Car className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-gray-900\">{userVehicles.length}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Mes annonces</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-green-600 font-semibold text-sm bg-green-50 px-2 py-1 rounded-full\">\n              {userVehicles.filter(v => v.status === 'approved').length} actives\n            </span>\n            <TrendingUp className=\"h-4 w-4 text-green-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-green-500 to-green-600 p-3 rounded-xl shadow-lg\">\n              <Eye className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-gray-900\">{totalViews.toLocaleString()}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Vues totales</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-gray-600 text-sm bg-gray-50 px-2 py-1 rounded-full\">\n              Moy: {userVehicles.length > 0 ? Math.round(totalViews / userVehicles.length) : 0}/annonce\n            </span>\n            <TrendingUp className=\"h-4 w-4 text-green-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-red-500 to-pink-600 p-3 rounded-xl shadow-lg\">\n              <Heart className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-gray-900\">{totalFavorites}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Favoris</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-pink-600 text-sm bg-pink-50 px-2 py-1 rounded-full font-medium\">\n              Int√©r√™t g√©n√©r√©\n            </span>\n            <Heart className=\"h-4 w-4 text-pink-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-3 rounded-xl shadow-lg\">\n              <Crown className=\"h-6 w-6 text-white\" />\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-3xl font-bold text-orange-600\">{premiumListings}</p>\n              <p className=\"text-sm text-gray-600 font-medium\">Premium</p>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-orange-600 font-semibold text-sm bg-orange-50 px-2 py-1 rounded-full\">\n              Mises en avant\n            </span>\n            <Crown className=\"h-4 w-4 text-orange-500\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <button \n          onClick={onCreateListing}\n          className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white p-6 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\"\n        >\n          <Plus className=\"h-8 w-8 mb-3\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Nouvelle annonce</h3>\n          <p className=\"text-primary-bolt-100 text-sm\">Publiez votre v√©hicule en quelques clics</p>\n        </button>\n\n        <button className=\"bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white p-6 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <MessageCircle className=\"h-8 w-8 mb-3\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Messages</h3>\n          <p className=\"text-green-100 text-sm\">1 nouvelle conversation</p>\n        </button>\n\n        <button className=\"bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white p-6 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <Crown className=\"h-8 w-8 mb-3\" />\n          <h3 className=\"text-lg font-semibold mb-2\">Booster mes annonces</h3>\n          <p className=\"text-orange-100 text-sm\">Augmentez votre visibilit√©</p>\n        </button>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Activit√© r√©cente</h2>\n            <button className=\"text-primary-bolt-500 hover:text-primary-bolt-600 font-medium text-sm\">\n              Voir tout\n            </button>\n          </div>\n        </div>\n        <div className=\"p-6\">\n          {userVehicles.length > 0 ? (\n            <div className=\"space-y-4\">\n              {userVehicles.slice(0, 5).map((vehicle) => (\n                <div key={vehicle.id} className=\"flex items-center justify-between p-4 bg-gradient-to-r from-gray-50 to-gray-100/50 rounded-xl hover:from-primary-bolt-50 hover:to-primary-bolt-100/50 transition-all duration-200\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-14 h-14 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-xl flex items-center justify-center shadow-lg\">\n                      <Car className=\"h-7 w-7 text-white\" />\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 text-lg\">{vehicle.title}</h3>\n                      <p className=\"text-sm text-gray-500\">\n                        Cr√©√©e le {new Date(vehicle.createdAt).toLocaleDateString('fr-FR')}\n                      </p>\n                      <div className=\"flex items-center space-x-3 mt-1\">\n                        <span className=\"text-xs bg-primary-bolt-100 text-primary-bolt-500 px-2 py-1 rounded-full font-medium\">\n                          {vehicle.views} vues\n                        </span>\n                        <span className=\"text-xs bg-pink-100 text-pink-800 px-2 py-1 rounded-full font-medium\">\n                          {vehicle.favorites} ‚ù§Ô∏è\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-xl font-bold text-primary-bolt-500\">{formatPrice(vehicle.price)}</p>\n                    {vehicle.isPremium && (\n                      <span className=\"inline-flex items-center space-x-1 text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded-full font-medium\">\n                        <Crown className=\"h-3 w-3\" />\n                        <span>Premium</span>\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Car className=\"h-10 w-10 text-gray-400\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune annonce</h3>\n              <p className=\"text-gray-600 mb-6\">Vous n'avez pas encore publi√© d'annonce.</p>\n              <button className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-1\">\n                Publier ma premi√®re annonce\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderListings = () => (\n    <div className=\"space-y-8\">\n      <div className=\"flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Mes annonces</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">{userVehicles.length} annonce{userVehicles.length !== 1 ? 's' : ''} publi√©e{userVehicles.length !== 1 ? 's' : ''}</p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <button \n            onClick={onCreateListing}\n            className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold flex items-center space-x-2 shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-1\"\n          >\n            <Plus className=\"h-5 w-5\" />\n            <span>Nouvelle annonce</span>\n          </button>\n        </div>\n      </div>\n\n      {userVehicles.length > 0 ? (\n        <div className=\"grid gap-8\">\n          {userVehicles.map((vehicle) => (\n            <div key={vehicle.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-xl transition-all duration-300\">\n              <div className=\"md:flex\">\n                <div className=\"md:w-80 h-64 bg-gradient-to-br from-gray-200 to-gray-300 relative overflow-hidden\">\n                  {vehicle.images.length > 0 ? (\n                    <img\n                      src={vehicle.images[0]}\n                      alt={vehicle.title}\n                      className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <img \n                        src={brandIcon} \n                        alt=\"Brand icon\" \n                        className=\"w-20 h-20 opacity-60\"\n                      />\n                    </div>\n                  )}\n                  {vehicle.isPremium && (\n                    <div className=\"absolute top-4 left-4 bg-gradient-to-r from-orange-500 to-orange-600 text-white px-3 py-1 rounded-full text-sm font-semibold flex items-center space-x-1 shadow-lg\">\n                      <Crown className=\"h-4 w-4\" />\n                      <span>Premium</span>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"flex-1 p-8\">\n                  <div className=\"flex justify-between items-start mb-6\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">{vehicle.title}</h3>\n                      <p className=\"text-3xl font-bold text-primary-bolt-500 mb-4\">{formatPrice(vehicle.price)}</p>\n                      <div className=\"flex items-center space-x-6 text-gray-600 mb-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Calendar className=\"h-5 w-5\" />\n                          <span className=\"font-medium\">{vehicle.year}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <MapPin className=\"h-5 w-5\" />\n                          <span className=\"font-medium\">{vehicle.location}</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-2\">\n                      <span className={`px-4 py-2 rounded-full text-sm font-semibold ${\n                        vehicle.status === 'approved' \n                          ? 'bg-green-100 text-green-800 border border-green-200'\n                          : vehicle.status === 'pending'\n                          ? 'bg-yellow-100 text-yellow-800 border border-yellow-200'\n                          : 'bg-red-100 text-red-800 border border-red-200'\n                      }`}>\n                        {vehicle.status === 'approved' ? '‚úì Approuv√©e' : \n                         vehicle.status === 'pending' ? '‚è≥ En attente' : '‚ùå Rejet√©e'}\n                      </span>\n                      <span className={`px-4 py-2 rounded-full text-sm font-semibold ${\n                        vehicle.isActive !== false\n                          ? 'bg-green-100 text-green-800 border border-green-200'\n                          : 'bg-red-100 text-red-800 border border-red-200'\n                      }`}>\n                        {vehicle.isActive !== false ? '‚úÖ Active' : '‚ùå Inactive'}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-8\">\n                      <div className=\"flex items-center space-x-2 text-gray-600\">\n                        <Eye className=\"h-5 w-5\" />\n                        <span className=\"font-semibold\">{vehicle.views}</span>\n                        <span className=\"text-sm\">vues</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-gray-600\">\n                        <Heart className=\"h-5 w-5\" />\n                        <span className=\"font-semibold\">{vehicle.favorites}</span>\n                        <span className=\"text-sm\">favoris</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-gray-600\">\n                        <MessageCircle className=\"h-5 w-5\" />\n                        <span className=\"font-semibold\">3</span>\n                        <span className=\"text-sm\">messages</span>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-3\">\n                      {!vehicle.isPremium && (\n                        <button className=\"px-6 py-2 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white rounded-xl font-semibold transition-all duration-200 flex items-center space-x-2 shadow-lg hover:shadow-xl\">\n                          <Crown className=\"h-4 w-4\" />\n                          <span>Promouvoir</span>\n                        </button>\n                      )}\n                      <button \n                        onClick={() => handleToggleActiveListing(vehicle.id, vehicle.isActive !== false)}\n                        className={`px-4 py-2 rounded-xl font-semibold transition-all duration-200 flex items-center space-x-2 ${\n                          vehicle.isActive !== false\n                            ? 'bg-red-50 text-red-700 hover:bg-red-100 border border-red-200'\n                            : 'bg-green-50 text-green-700 hover:bg-green-100 border border-green-200'\n                        }`}\n                        title={vehicle.isActive !== false ? 'D√©sactiver l\\'annonce' : 'Activer l\\'annonce'}\n                      >\n                        {vehicle.isActive !== false ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n                        <span>{vehicle.isActive !== false ? 'D√©sactiver' : 'Activer'}</span>\n                      </button>\n                      <button \n                        onClick={() => handleDeleteListing(vehicle.id)}\n                        className=\"p-3 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-xl transition-all duration-200\"\n                      >\n                        <Trash2 className=\"h-5 w-5\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-16 text-center\">\n          <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-100 to-primary-bolt-200 rounded-full flex items-center justify-center mx-auto mb-8\">\n            <Car className=\"h-12 w-12 text-primary-bolt-500\" />\n          </div>\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Aucune annonce publi√©e</h3>\n          <p className=\"text-gray-600 mb-8 text-lg\">Commencez d√®s maintenant √† vendre vos v√©hicules ou pi√®ces d√©tach√©es.</p>\n          <button \n            onClick={onCreateListing}\n            className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-10 py-4 rounded-xl font-semibold flex items-center space-x-3 mx-auto shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-1\"\n          >\n            <Plus className=\"h-6 w-6\" />\n            <span>Publier une annonce</span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderMessages = () => {\n    if (loadingMessages) {\n      return (\n        <div className=\"flex items-center justify-center p-8\">\n          <div className=\"text-center\">\n            <MessageCircle className=\"h-12 w-12 text-teal-600 mx-auto mb-4 animate-pulse\" />\n            <p className=\"text-gray-600\">Chargement des messages...</p>\n          </div>\n        </div>\n      );\n    }\n\n    const messages = dashboardConversations.map((conv: any) => ({\n      id: conv.id,\n      fromUser: conv.other_user.name,\n      vehicleTitle: conv.vehicle_title,\n      vehicleId: conv.vehicle_id,\n      otherUserId: conv.other_user.id,\n      lastMessage: conv.last_message,\n      timestamp: new Date(conv.last_message_at || new Date()),\n      unread: conv.unread_count > 0,\n      avatar: conv.other_user.name.split(' ').map((n: string) => n[0]).join(''),\n      messages: conv.messages?.map((msg: any) => ({\n        id: msg.id,\n        sender: msg.is_from_current_user ? 'Vous' : conv.other_user.name,\n        isOwn: msg.is_from_current_user,\n        content: msg.content,\n        timestamp: new Date(msg.created_at || new Date())\n      })) || []\n    }));\n\n    const currentConversation = dashboardConversations[0] ? {\n      id: dashboardConversations[0].id,\n      fromUser: dashboardConversations[0].other_user.name,\n      vehicleTitle: dashboardConversations[0].vehicle_title,\n      vehicleId: dashboardConversations[0].vehicle_id,\n      otherUserId: dashboardConversations[0].other_user.id,\n      messages: dashboardConversations[0].messages?.map((msg: any) => ({\n        id: msg.id,\n        sender: msg.is_from_current_user ? 'Vous' : dashboardConversations[0].other_user.name,\n        isOwn: msg.is_from_current_user,\n        content: msg.content,\n        timestamp: new Date(msg.created_at || new Date())\n      })) || []\n    } : null;\n\n    const activeConversation = selectedConversation || currentConversation;\n\n    return (\n      <div className=\"space-y-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Messages</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">G√©rez vos conversations avec les acheteurs</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 min-h-[500px] max-h-[calc(100vh-300px)] mb-8\">\n          {/* Liste des conversations */}\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h2 className=\"text-xl font-bold text-gray-900\">Conversations</h2>\n            </div>\n            <div className=\"overflow-y-auto\">\n              {messages.length === 0 ? (\n                <div className=\"p-6 text-center\">\n                  <MessageCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">Aucune conversation</p>\n                  <p className=\"text-sm text-gray-400 mt-2\">\n                    Les messages des acheteurs appara√Ætront ici\n                  </p>\n                </div>\n              ) : (\n                messages.map((message) => (\n                <div \n                  key={message.id}\n                  onClick={() => {\n                    console.log('üîÑ S√©lection conversation:', message.id);\n                    setSelectedConversation(message);\n                  }}\n                  className={`p-6 border-b border-gray-100 hover:bg-gray-50 cursor-pointer transition-colors ${\n                    activeConversation?.id === message.id ? 'bg-primary-bolt-50 border-r-4 border-r-primary-bolt-500' : ''\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center text-white font-semibold\">\n                      {message.avatar}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <h3 className=\"font-semibold text-gray-900\">{message.fromUser}</h3>\n                        {message.unread && (\n                          <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-gray-600 mb-1\">{message.vehicleTitle}</p>\n                      <p className=\"text-sm text-gray-500 truncate\">{message.lastMessage}</p>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        {message.timestamp.toLocaleDateString('fr-FR')} √† {message.timestamp.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                ))\n              )}\n            </div>\n          </div>\n\n          {/* Zone de conversation */}\n          <div className=\"lg:col-span-2 bg-white rounded-2xl shadow-lg border border-gray-100 flex flex-col\">\n            {activeConversation ? (\n              <div className=\"flex flex-col h-full\">\n                {/* Header de la conversation */}\n                <div className=\"p-6 border-b border-gray-200 bg-gradient-to-r from-primary-bolt-50 to-primary-bolt-100\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center text-white font-semibold\">\n                      PM\n                    </div>\n                    <div>\n                      <h3 className=\"font-bold text-gray-900\">{activeConversation.fromUser}</h3>\n                      <p className=\"text-sm text-gray-600\">{activeConversation.vehicleTitle}</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Messages */}\n                <div className=\"flex-1 p-6 overflow-y-auto space-y-4 max-h-[calc(100vh-400px)]\">\n                  {activeConversation.messages.map((msg: any) => (\n                    <div \n                      key={msg.id}\n                      className={`flex ${msg.isOwn ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div className={`max-w-sm px-4 py-3 rounded-2xl ${\n                        msg.isOwn \n                          ? 'bg-primary-bolt-500 text-white' \n                          : 'bg-gray-100 text-gray-900'\n                      }`}>\n                        {/* Nom de l'exp√©diteur */}\n                        <p className={`text-xs font-semibold mb-1 ${\n                          msg.isOwn ? 'text-primary-bolt-100' : 'text-gray-600'\n                        }`}>\n                          {msg.isOwn ? 'Vous' : activeConversation.fromUser}\n                        </p>\n                        \n                        <p className=\"text-sm\">{msg.content}</p>\n                        <p className={`text-xs mt-2 ${\n                          msg.isOwn ? 'text-primary-bolt-100' : 'text-gray-500'\n                        }`}>\n                          {msg.timestamp ? msg.timestamp.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' }) : ''}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Zone de saisie */}\n                <div className=\"p-6 border-t border-gray-200\">\n                  <div className=\"flex items-center space-x-4\">\n                    <input\n                      type=\"text\"\n                      value={newMessage}\n                      onChange={(e) => setNewMessage(e.target.value)}\n                      onKeyPress={(e) => e.key === 'Enter' && !sendingMessage && handleSendMessage()}\n                      placeholder=\"Tapez votre message...\"\n                      className=\"flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                      disabled={sendingMessage}\n                    />\n                    <button \n                      onClick={handleSendMessage}\n                      disabled={!newMessage.trim() || sendingMessage}\n                      className=\"bg-primary-bolt-500 hover:bg-primary-bolt-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-6 py-3 rounded-xl font-semibold transition-colors\"\n                    >\n                      {sendingMessage ? 'Envoi...' : 'Envoyer'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex-1 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                    <MessageCircle className=\"h-10 w-10 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">S√©lectionnez une conversation</h3>\n                  <p className=\"text-gray-600\">Choisissez une conversation pour commencer √† √©changer.</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderProfile = () => (\n    <div className=\"space-y-8\">\n      <div className=\"flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Mon profil</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">G√©rez vos informations personnelles</p>\n        </div>\n        <button\n          onClick={() => setEditingProfile(!editingProfile)}\n          className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-3 rounded-xl font-semibold flex items-center space-x-2 shadow-lg hover:shadow-xl transition-all duration-200\"\n        >\n          <Edit className=\"h-4 w-4\" />\n          <span>{editingProfile ? 'Annuler' : 'Modifier'}</span>\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8\">\n        {/* Message de succ√®s */}\n        {profileSuccess && (\n          <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-xl flex items-center space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <p className=\"text-green-800 font-medium\">Profil mis √† jour avec succ√®s !</p>\n          </div>\n        )}\n        \n        <div className=\"flex items-center space-x-8 mb-10\">\n          <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center shadow-lg\">\n            <span className=\"text-white font-bold text-3xl\">\n              {(dbUser?.name || user?.email || 'U').charAt(0).toUpperCase()}\n            </span>\n          </div>\n          <div>\n            <h2 className=\"text-3xl font-bold text-gray-900\">{dbUser?.name || user?.email?.split('@')[0] || 'Utilisateur'}</h2>\n            <p className=\"text-gray-600 text-lg mt-1\">{user?.email || dbUser?.email}</p>\n            <div className=\"flex items-center space-x-3 mt-4\">\n              <span className={`px-4 py-2 rounded-full text-sm font-semibold ${\n                dbUser?.verified\n                  ? 'bg-green-100 text-green-800 border border-green-200'\n                  : 'bg-yellow-100 text-yellow-800 border border-yellow-200'\n              }`}>\n                {dbUser?.verified ? '‚úì Compte v√©rifi√©' : '‚è≥ En attente de v√©rification'}\n              </span>\n              <span className=\"px-4 py-2 bg-primary-bolt-100 text-primary-bolt-500 rounded-full text-sm font-semibold border border-primary-bolt-200\">\n                {dbUser?.type === 'professional' ? 'üè¢ Professionnel' : 'üë§ Particulier'}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Nom complet</label>\n            <input\n              type=\"text\"\n              value={editingProfile ? profileForm.name : (dbUser?.name || user?.email?.split('@')[0] || '')}\n              onChange={(e) => setProfileForm({...profileForm, name: e.target.value})}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Email</label>\n            <input\n              type=\"email\"\n              value={user?.email || dbUser?.email || ''}\n              disabled={true}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl bg-gray-100 text-gray-600 text-lg cursor-not-allowed\"\n              title=\"L'email ne peut pas √™tre modifi√©\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">T√©l√©phone</label>\n            <input\n              type=\"tel\"\n              value={editingProfile ? profileForm.phone : (dbUser?.phone || '')}\n              onChange={(e) => setProfileForm({...profileForm, phone: e.target.value})}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">WhatsApp</label>\n            <input\n              type=\"tel\"\n              value={editingProfile ? profileForm.whatsapp : (dbUser?.whatsapp || '')}\n              onChange={(e) => setProfileForm({...profileForm, whatsapp: e.target.value})}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Code postal</label>\n            <input\n              type=\"text\"\n              value={editingProfile ? profileForm.postalCode : ((dbUser as any)?.postal_code || '')}\n              onChange={(e) => setProfileForm({...profileForm, postalCode: e.target.value})}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Ville</label>\n            <input\n              type=\"text\"\n              value={editingProfile ? profileForm.city : (dbUser?.city || '')}\n              onChange={(e) => setProfileForm({...profileForm, city: e.target.value})}\n              disabled={!editingProfile}\n              className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n            />\n          </div>\n\n\n\n          {dbUser?.type === 'professional' && (\n            <div className=\"md:col-span-2 space-y-6\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Nom de l'entreprise</label>\n                <input\n                  type=\"text\"\n                  value={editingProfile ? profileForm.companyName : ((dbUser as any)?.company_name || '')}\n                  onChange={(e) => setProfileForm({...profileForm, companyName: e.target.value})}\n                  disabled={!editingProfile}\n                  className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n                />\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-semibold text-gray-700 mb-3\">Adresse</label>\n                <textarea\n                  value={editingProfile ? profileForm.address : (dbUser?.address || '')}\n                  onChange={(e) => setProfileForm({...profileForm, address: e.target.value})}\n                  disabled={!editingProfile}\n                  rows={4}\n                  className=\"w-full px-4 py-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 disabled:bg-gray-50 text-lg\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {editingProfile && (\n          <div className=\"mt-10 flex justify-end space-x-4\">\n            <button\n              onClick={() => {\n                setEditingProfile(false);\n                // R√©initialiser le formulaire avec les donn√©es originales\n                setProfileForm({\n                  name: dbUser?.name || '',\n                  phone: dbUser?.phone || '',\n                  whatsapp: dbUser?.whatsapp || '',\n                  postalCode: (dbUser as any)?.postal_code || '',\n                  city: dbUser?.city || '',\n                  companyName: (dbUser as any)?.company_name || '',\n                  address: dbUser?.address || ''\n                });\n              }}\n              className=\"px-8 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors font-semibold\"\n            >\n              Annuler\n            </button>\n            <button \n              onClick={handleSaveProfile}\n              disabled={savingProfile}\n              className=\"px-8 py-3 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 disabled:bg-gray-400 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200\"\n            >\n              {savingProfile ? 'Sauvegarde...' : 'Sauvegarder'}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPremium = () => (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900\">Options Premium</h1>\n        <p className=\"text-gray-600 mt-2 text-lg\">Boostez la visibilit√© de vos annonces</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n        {/* Daily Boost */}\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"text-center mb-8\">\n            <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n              <Crown className=\"h-10 w-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Remont√©e quotidienne</h3>\n            <div className=\"text-4xl font-bold text-primary-bolt-500 mb-3\">2‚Ç¨</div>\n            <p className=\"text-gray-600\">Remont√©e automatique pendant 24h</p>\n          </div>\n          <ul className=\"space-y-4 mb-8\">\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n              <span className=\"font-medium\">Remont√©e en t√™te de liste</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n              <span className=\"font-medium\">Badge \"Urgent\"</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n              <span className=\"font-medium\">Visibilit√© accrue</span>\n            </li>\n          </ul>\n          <button className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\">\n            Choisir\n          </button>\n        </div>\n\n        {/* Weekly Premium */}\n        <div className=\"bg-white rounded-2xl shadow-lg border-2 border-orange-200 p-8 relative hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n            <span className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white px-6 py-2 rounded-full text-sm font-bold shadow-lg\">\n              ‚≠ê Populaire\n            </span>\n          </div>\n          <div className=\"text-center mb-8 mt-4\">\n            <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n              <Crown className=\"h-10 w-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Pack Hebdomadaire</h3>\n            <div className=\"text-4xl font-bold text-orange-600 mb-3\">4,99‚Ç¨</div>\n            <p className=\"text-gray-600\">Mise en avant pendant 7 jours</p>\n          </div>\n          <ul className=\"space-y-4 mb-8\">\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n              <span className=\"font-medium\">Mise en avant 7 jours</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n              <span className=\"font-medium\">Badge \"Premium\"</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n              <span className=\"font-medium\">Statistiques d√©taill√©es</span>\n            </li>\n          </ul>\n          <button className=\"w-full bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\">\n            Choisir\n          </button>\n        </div>\n\n        {/* Monthly Pro */}\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n          <div className=\"text-center mb-8\">\n            <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n              <Crown className=\"h-10 w-10 text-white\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Pack Pro Mensuel</h3>\n            <div className=\"text-4xl font-bold text-purple-600 mb-3\">19,99‚Ç¨</div>\n            <p className=\"text-gray-600\">Solution compl√®te pour pros</p>\n          </div>\n          <ul className=\"space-y-4 mb-8\">\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n              <span className=\"font-medium\">10 annonces en avant</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n              <span className=\"font-medium\">Statistiques avanc√©es</span>\n            </li>\n            <li className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n              <span className=\"font-medium\">Support prioritaire</span>\n            </li>\n          </ul>\n          <button className=\"w-full bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-200 shadow-lg hover:shadow-xl\">\n            Choisir\n          </button>\n        </div>\n      </div>\n\n      {/* Current Premium Status */}\n      {premiumListings > 0 && (\n        <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 border-2 border-orange-200 rounded-2xl p-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-4 rounded-full shadow-lg\">\n                <Crown className=\"h-8 w-8 text-white\" />\n              </div>\n              <div>\n                <h3 className=\"text-2xl font-bold text-orange-900\">\n                  Statut Premium Actif\n                </h3>\n                <p className=\"text-orange-700 text-lg\">\n                  Vous avez {premiumListings} annonce{premiumListings > 1 ? 's' : ''} premium active{premiumListings > 1 ? 's' : ''}\n                </p>\n              </div>\n            </div>\n            <button className=\"bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200\">\n              G√©rer\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderFavoriteListings = () => (\n      <div className=\"space-y-6\">\n        {favorites.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Heart className=\"h-10 w-10 text-gray-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune annonce favorite</h3>\n            <p className=\"text-gray-600\">Ajoutez des annonces √† vos favoris pour les retrouver facilement ici.</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {favorites.map((listing) => (\n              <div key={listing.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                <div className=\"relative\">\n                  {listing.images && listing.images.length > 0 ? (\n                    <img\n                      src={listing.images[0]}\n                      alt={listing.title}\n                      className=\"w-full h-48 object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-48 bg-gradient-to-br from-gray-200 to-gray-300 flex items-center justify-center\">\n                      <img \n                        src={brandIcon} \n                        alt=\"Brand icon\" \n                        className=\"w-20 h-20 opacity-60\"\n                      />\n                    </div>\n                  )}\n                  <button \n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleFavorite(listing.id);\n                    }}\n                    className=\"absolute top-3 right-3 bg-red-500 hover:bg-red-600 text-white p-2 rounded-full shadow-lg transition-colors\"\n                  >\n                    <Heart className=\"h-4 w-4 fill-current\" />\n                  </button>\n                </div>\n                <div className=\"p-6\">\n                  <h3 className=\"font-bold text-lg text-gray-900 mb-2\">{listing.title}</h3>\n                  <div className=\"space-y-2 mb-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-2xl font-bold text-primary-bolt-600\">{formatPrice(listing.price)}</span>\n                      <span className=\"text-sm text-gray-500\">{listing.year}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                      <span>{listing.mileage ? `${listing.mileage.toLocaleString()} km` : 'N/A'}</span>\n                      <span className=\"flex items-center\">\n                        <MapPin className=\"h-3 w-3 mr-1\" />\n                        {listing.location}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-gray-500\">\n                      Ajout√© le {new Date(listing.createdAt).toLocaleDateString('fr-FR')}\n                    </span>\n                    <button \n                      onClick={() => {\n                        // Trouver le v√©hicule complet dans la liste\n                        const fullVehicle = vehicles.find(v => v.id === listing.id);\n                        if (fullVehicle) {\n                          setSelectedVehicle(fullVehicle);\n                        }\n                      }}\n                      className=\"bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-colors\"\n                    >\n                      Voir l'annonce\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n  const renderSavedSearches = () => {\n    if (savedSearchesLoading) {\n      return (\n        <div className=\"flex items-center justify-center p-8\">\n          <div className=\"text-center\">\n            <Search className=\"h-12 w-12 text-primary-bolt-600 mx-auto mb-4 animate-pulse\" />\n            <p className=\"text-gray-600\">Chargement des recherches sauvegard√©es...</p>\n          </div>\n        </div>\n      );\n    }\n\n    const handleExecuteSearch = (searchId: string) => {\n      const search = savedSearches.find(s => s.id === searchId);\n      if (search) {\n        // Appliquer les filtres de recherche sauvegard√©e\n        const searchFunction = setSearchFilters || contextSetSearchFilters;\n        if (searchFunction) {\n          console.log('üîç Application des filtres de recherche sauvegard√©e:', search.filters);\n          searchFunction(search.filters);\n        }\n        // Rediriger vers la page de recherche (pas la page d'accueil)\n        if (onRedirectToSearch) {\n          onRedirectToSearch();\n        } else if (onRedirectHome) {\n          // Fallback vers la page d'accueil si onRedirectToSearch n'est pas disponible\n          onRedirectHome();\n        }\n      }\n    };\n\n\n\n    const handleDeleteSavedSearch = async (searchId: string) => {\n      if (window.confirm('√ätes-vous s√ªr de vouloir supprimer cette recherche sauvegard√©e ?')) {\n        try {\n          await deleteSearch(searchId);\n        } catch (error) {\n          console.error('Erreur lors de la suppression:', error);\n        }\n      }\n    };\n\n    return (\n      <div className=\"space-y-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Recherches sauvegard√©es</h1>\n          <p className=\"text-gray-600 mt-2 text-lg\">\n            {savedSearches.length} recherche{savedSearches.length !== 1 ? 's' : ''} sauvegard√©e{savedSearches.length !== 1 ? 's' : ''}\n          </p>\n        </div>\n\n        {savedSearches.length > 0 ? (\n          <div className=\"grid gap-6\">\n            {savedSearches.map((search) => (\n              <div key={search.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{search.name}</h3>\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {search.filters.category && (\n                        <span className=\"px-3 py-1 bg-primary-bolt-100 text-primary-bolt-700 rounded-full text-sm font-medium\">\n                          üìÇ {search.filters.category}\n                        </span>\n                      )}\n                      {search.filters.subcategory && (\n                        <span className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm font-medium\">\n                          üîñ {search.filters.subcategory}\n                        </span>\n                      )}\n                      {search.filters.brand && (\n                        <span className=\"px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-medium\">\n                          üè∑Ô∏è {search.filters.brand}\n                        </span>\n                      )}\n                      {search.filters.model && (\n                        <span className=\"px-3 py-1 bg-indigo-100 text-indigo-700 rounded-full text-sm font-medium\">\n                          üöó {search.filters.model}\n                        </span>\n                      )}\n                      {(search.filters.priceFrom || search.filters.priceTo) && (\n                        <span className=\"px-3 py-1 bg-green-100 text-green-700 rounded-full text-sm font-medium\">\n                          üí∞ {search.filters.priceFrom ? formatPrice(search.filters.priceFrom) : '0'} - {search.filters.priceTo ? formatPrice(search.filters.priceTo) : '‚àû'}\n                        </span>\n                      )}\n                      {(search.filters.yearFrom || search.filters.yearTo) && (\n                        <span className=\"px-3 py-1 bg-orange-100 text-orange-700 rounded-full text-sm font-medium\">\n                          üìÖ {search.filters.yearFrom || '1900'} - {search.filters.yearTo || new Date().getFullYear()}\n                        </span>\n                      )}\n                      {(search.filters.mileageFrom || search.filters.mileageTo) && (\n                        <span className=\"px-3 py-1 bg-cyan-100 text-cyan-700 rounded-full text-sm font-medium\">\n                          üõ£Ô∏è {search.filters.mileageFrom || '0'} - {search.filters.mileageTo || '‚àû'} km\n                        </span>\n                      )}\n                      {search.filters.fuelType && (\n                        <span className=\"px-3 py-1 bg-yellow-100 text-yellow-700 rounded-full text-sm font-medium\">\n                          ‚õΩ {search.filters.fuelType}\n                        </span>\n                      )}\n                      {search.filters.condition && (\n                        <span className=\"px-3 py-1 bg-red-100 text-red-700 rounded-full text-sm font-medium\">\n                          üîß {search.filters.condition}\n                        </span>\n                      )}\n                      {search.filters.location && (\n                        <span className=\"px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm font-medium\">\n                          üìç {search.filters.location}\n                        </span>\n                      )}\n                      {search.filters.searchTerm && (\n                        <span className=\"px-3 py-1 bg-pink-100 text-pink-700 rounded-full text-sm font-medium\">\n                          üîç \"{search.filters.searchTerm}\"\n                        </span>\n                      )}\n                    </div>\n                    <p className=\"text-sm text-gray-500\">\n                      Cr√©√©e le {new Date(search.created_at).toLocaleDateString('fr-FR')}\n                    </p>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => toggleAlerts(search.id, !search.alerts_enabled)}\n                      className={`p-2 rounded-lg transition-all duration-200 ${\n                        search.alerts_enabled\n                          ? 'bg-primary-bolt-100 text-primary-bolt-600 hover:bg-primary-bolt-200'\n                          : 'bg-gray-100 text-gray-400 hover:bg-gray-200'\n                      }`}\n                      title={search.alerts_enabled ? 'D√©sactiver les alertes' : 'Activer les alertes'}\n                    >\n                      <Bell className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                      search.alerts_enabled\n                        ? 'bg-green-100 text-green-700'\n                        : 'bg-gray-100 text-gray-600'\n                    }`}>\n                      {search.alerts_enabled ? 'üîî Alertes actives' : 'üîï Alertes d√©sactiv√©es'}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => handleExecuteSearch(search.id)}\n                      className=\"px-4 py-2 bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white rounded-lg font-medium transition-all duration-200 flex items-center space-x-2\"\n                    >\n                      <Play className=\"h-4 w-4\" />\n                      <span>Ex√©cuter</span>\n                    </button>\n                    <button\n                      onClick={() => handleDeleteSavedSearch(search.id)}\n                      className=\"p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-200\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-16 text-center\">\n            <div className=\"w-24 h-24 bg-gradient-to-r from-primary-bolt-100 to-primary-bolt-200 rounded-full flex items-center justify-center mx-auto mb-8\">\n              <Search className=\"h-12 w-12 text-primary-bolt-500\" />\n            </div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Aucune recherche sauvegard√©e</h3>\n            <p className=\"text-gray-600 mb-8 text-lg\">Sauvegardez vos recherches pour √™tre alert√© des nouvelles annonces.</p>\n            <button \n              onClick={onRedirectHome}\n              className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-10 py-4 rounded-xl font-semibold flex items-center space-x-3 mx-auto shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-1\"\n            >\n              <Search className=\"h-6 w-6\" />\n              <span>Faire une recherche</span>\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n    const renderFavoriteSearches = () => (\n      <div className=\"space-y-6\">\n        {savedSearches.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Search className=\"h-10 w-10 text-gray-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucune recherche favorite</h3>\n            <p className=\"text-gray-600\">Sauvegardez vos recherches pour recevoir des alertes automatiques.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {savedSearches.map((search) => (\n              <div key={search.id} className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <h3 className=\"font-bold text-lg text-gray-900\">{search.name}</h3>\n                      {search.alerts_enabled && (\n                        <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-semibold\">\n                          Alertes actives\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"space-y-2 mb-4\">\n                      <div className=\"flex flex-wrap gap-2\">\n                        {search.filters && typeof search.filters === 'object' && Object.entries(search.filters).map(([key, value]) => (\n                          <span key={key} className=\"bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm\">\n                            {key === 'priceMax' && `< ${formatPrice(value as number)}`}\n                            {key === 'yearMin' && `√Ä partir de ${value}`}\n                            {key !== 'priceMax' && key !== 'yearMin' && String(value)}\n                          </span>\n                        ))}\n                      </div>\n                      <p className=\"text-sm text-gray-500\">\n                        Cr√©√©e le {new Date(search.created_at).toLocaleDateString('fr-FR')}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button \n                      onClick={() => toggleAlerts(search.id, !search.alerts_enabled)}\n                      className={`px-4 py-2 rounded-lg text-sm font-semibold transition-colors ${\n                        search.alerts_enabled \n                          ? 'bg-green-100 text-green-800 hover:bg-green-200' \n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                      }`}\n                    >\n                      <Bell className=\"h-4 w-4 mr-1 inline\" />\n                      {search.alerts_enabled ? 'Alertes ON' : 'Alertes OFF'}\n                    </button>\n                    <button className=\"bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-colors\">\n                      Rechercher\n                    </button>\n                    <button \n                      onClick={() => deleteSearch(search.id)}\n                      className=\"text-red-500 hover:text-red-600 p-2 rounded-lg transition-colors\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n\n  const renderFavorites = () => {\n    return (\n      <div className=\"space-y-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8\">\n          <div className=\"flex items-center space-x-4 mb-6\">\n            <div className=\"bg-gradient-to-r from-red-500 to-pink-600 p-4 rounded-full shadow-lg\">\n              <Heart className=\"h-8 w-8 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Mes favoris</h1>\n              <p className=\"text-gray-600 text-lg\">Retrouvez tous vos contenus favoris</p>\n            </div>\n          </div>\n\n          {/* Sub-tabs horizontaux */}\n          <div className=\"flex space-x-1 bg-gray-100 rounded-xl p-1\">\n            <button\n              onClick={() => setFavoritesSubTab('listings')}\n              className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex-1 justify-center ${\n                favoritesSubTab === 'listings'\n                  ? 'bg-white text-primary-bolt-600 shadow-md'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Heart className=\"h-4 w-4\" />\n              <span>Annonces favorites</span>\n            </button>\n            <button\n              onClick={() => setFavoritesSubTab('searches')}\n              className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-semibold transition-all duration-200 flex-1 justify-center ${\n                favoritesSubTab === 'searches'\n                  ? 'bg-white text-primary-bolt-600 shadow-md'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              <Search className=\"h-4 w-4\" />\n              <span>Recherches sauvegard√©es</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Content based on active sub-tab */}\n        {favoritesSubTab === 'listings' && renderFavoriteListings()}\n        {favoritesSubTab === 'searches' && renderSavedSearches()}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Sidebar Navigation */}\n          <div className=\"lg:w-80 flex-shrink-0\">\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden sticky top-24\">\n              <div className=\"p-8 border-b border-gray-200 bg-gradient-to-r from-primary-bolt-50 to-primary-bolt-100\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-16 h-16 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center shadow-lg\">\n                    <span className=\"text-white font-bold text-xl\">\n                      {(dbUser?.name || user?.email || 'U').charAt(0).toUpperCase()}\n                    </span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-bold text-gray-900\">{dbUser?.name || user?.email?.split('@')[0] || 'Utilisateur'}</h3>\n                    <p className=\"text-sm text-gray-600 font-medium\">\n                      {dbUser?.type === 'professional' ? 'üè¢ Professionnel' : 'üë§ Particulier'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <nav className=\"p-4\">\n                {dashboardTabs.map((tab) => {\n                  const badgeCount = tab.id === 'messages' ? unreadCount : (tab.badge || 0);\n                  \n                  return (\n                    <button\n                      key={tab.id}\n                      onClick={() => setActiveTab(tab.id)}\n                      className={`w-full flex items-center justify-between px-6 py-4 rounded-xl text-left transition-all duration-200 mb-2 ${\n                        activeTab === tab.id\n                          ? 'bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 text-white shadow-lg transform scale-105'\n                          : 'text-gray-700 hover:bg-gray-50 hover:text-primary-bolt-500'\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        {tab.icon}\n                        <span className=\"font-semibold\">{tab.label}</span>\n                      </div>\n                      {badgeCount > 0 && (\n                        <span className={`px-2 py-1 rounded-full text-xs font-bold ${\n                          activeTab === tab.id \n                            ? 'bg-white/20 text-white' \n                            : 'bg-red-500 text-white'\n                        }`}>\n                          {badgeCount}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </nav>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1\">\n            {activeTab === 'overview' && renderOverview()}\n            {activeTab === 'listings' && renderListings()}\n            {activeTab === 'favorites' && renderFavorites()}\n            {activeTab === 'messages' && renderMessages()}\n            {activeTab === 'profile' && renderProfile()}\n            {activeTab === 'premium' && (\n              <div className=\"space-y-8\">\n                {/* Header Section */}\n                <div className=\"text-center mb-12\">\n                  <div className=\"w-24 h-24 bg-gradient-to-r from-orange-500 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                    <Crown className=\"h-12 w-12 text-white\" />\n                  </div>\n                  <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Options Premium</h1>\n                  <p className=\"text-gray-600 mt-2 text-lg\">Boostez la visibilit√© de vos annonces</p>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n                  {/* Daily Boost */}\n                  <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                    <div className=\"text-center mb-8\">\n                      <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                        <Crown className=\"h-10 w-10 text-white\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Remont√©e quotidienne</h3>\n                      <div className=\"text-4xl font-bold text-primary-bolt-500 mb-3\">0,99‚Ç¨</div>\n                      <p className=\"text-gray-600\">Remont√©e automatique pendant 24h</p>\n                    </div>\n                    <ul className=\"space-y-4 mb-8\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        <span className=\"font-medium\">Remont√©e en t√™te de liste</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        <span className=\"font-medium\">Badge \"Urgent\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-primary-bolt-500 rounded-full\"></div>\n                        <span className=\"font-medium\">+300% de visibilit√©</span>\n                      </li>\n                    </ul>\n                    <button className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl\">\n                      Choisir\n                    </button>\n                  </div>\n\n                  {/* Weekly Premium */}\n                  <div className=\"bg-white rounded-2xl shadow-lg border-2 border-orange-200 p-8 relative hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                    <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                      <span className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white px-6 py-2 rounded-full text-sm font-bold shadow-lg\">\n                        ‚≠ê Populaire\n                      </span>\n                    </div>\n                    <div className=\"text-center mb-8 mt-4\">\n                      <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                        <Crown className=\"h-10 w-10 text-white\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">Pack Hebdomadaire</h3>\n                      <div className=\"text-4xl font-bold text-orange-600 mb-3\">4,99‚Ç¨</div>\n                      <p className=\"text-gray-600\">Mise en avant pendant 7 jours</p>\n                    </div>\n                    <ul className=\"space-y-4 mb-8\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Mise en avant 7 jours</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Badge \"Premium\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">+500% de visibilit√©</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-orange-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Priorit√© dans les recherches</span>\n                      </li>\n                    </ul>\n                    <button className=\"w-full bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl\">\n                      Choisir\n                    </button>\n                  </div>\n\n                  {/* Monthly VIP */}\n                  <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-8 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n                    <div className=\"text-center mb-8\">\n                      <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg\">\n                        <Crown className=\"h-10 w-10 text-white\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900 mb-3\">VIP Mensuel</h3>\n                      <div className=\"text-4xl font-bold text-purple-600 mb-3\">19,90‚Ç¨</div>\n                      <p className=\"text-gray-600\">Visibilit√© maximale pendant 30 jours</p>\n                    </div>\n                    <ul className=\"space-y-4 mb-8\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Mise en avant 30 jours</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Badge \"VIP\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">+800% de visibilit√©</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-purple-600 rounded-full\"></div>\n                        <span className=\"font-medium\">Priorit√© Listes et recherches</span>\n                      </li>\n                    </ul>\n                    <button className=\"w-full bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl\">\n                      Choisir\n                    </button>\n                  </div>\n                </div>\n\n                {/* Current Premium Status */}\n                {premiumListings > 0 && (\n                  <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 border-2 border-orange-200 rounded-2xl p-8\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-6\">\n                        <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 p-4 rounded-full shadow-lg\">\n                          <Crown className=\"h-8 w-8 text-white\" />\n                        </div>\n                        <div>\n                          <h3 className=\"text-2xl font-bold text-orange-900\">\n                            Statut Premium Actif\n                          </h3>\n                          <p className=\"text-orange-700 text-lg\">\n                            Vous avez {premiumListings} annonce{premiumListings > 1 ? 's' : ''} premium active{premiumListings > 1 ? 's' : ''}\n                          </p>\n                        </div>\n                      </div>\n                      <button className=\"bg-gradient-to-r from-orange-600 to-orange-700 hover:from-orange-700 hover:to-orange-800 text-white px-8 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200\">\n                        G√©rer mes options\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Benefits Section */}\n                <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-8\">\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">Pourquoi choisir Premium ?</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <TrendingUp className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Plus de visibilit√©</h4>\n                      <p className=\"text-sm text-gray-600\">Vos annonces apparaissent en premier dans les r√©sultats</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <Award className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Badge distinctif</h4>\n                      <p className=\"text-sm text-gray-600\">Un badge Premium qui attire l'attention des acheteurs</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <BarChart3 className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Statistiques avanc√©es</h4>\n                      <p className=\"text-sm text-gray-600\">Suivez les performances de vos annonces en d√©tail</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"bg-gradient-to-r from-green-500 to-green-600 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <Bell className=\"h-8 w-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold text-gray-900 mb-2\">Notifications prioritaires</h4>\n                      <p className=\"text-sm text-gray-600\">Soyez alert√© en premier des nouveaux contacts</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":96112},"client/src/components/DraggableModal.tsx":{"content":"import React, { useState, useRef, useEffect, ReactNode } from 'react';\nimport { X, Move } from 'lucide-react';\n\ninterface DraggableModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: ReactNode;\n  className?: string;\n}\n\nexport const DraggableModal: React.FC<DraggableModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  className = ''\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const modalRef = useRef<HTMLDivElement>(null);\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  // Reset position when modal opens\n  useEffect(() => {\n    if (isOpen) {\n      setPosition({ x: 0, y: 0 });\n    }\n  }, [isOpen]);\n\n  // Ensure modal stays within viewport bounds\n  const constrainPosition = (x: number, y: number) => {\n    if (!modalRef.current) return { x, y };\n\n    const modal = modalRef.current;\n    const rect = modal.getBoundingClientRect();\n    const viewport = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    // Keep modal within bounds\n    const constrainedX = Math.max(\n      -rect.width / 2, \n      Math.min(x, viewport.width - rect.width / 2)\n    );\n    const constrainedY = Math.max(\n      -rect.height / 2,\n      Math.min(y, viewport.height - rect.height / 2)\n    );\n\n    return { x: constrainedX, y: constrainedY };\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (headerRef.current?.contains(e.target as Node)) {\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX - position.x,\n        y: e.clientY - position.y\n      });\n    }\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (!isDragging) return;\n    \n    const newPosition = constrainPosition(\n      e.clientX - dragStart.x,\n      e.clientY - dragStart.y\n    );\n    setPosition(newPosition);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = 'grabbing';\n      document.body.style.userSelect = 'none';\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = '';\n      document.body.style.userSelect = '';\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = '';\n      document.body.style.userSelect = '';\n    };\n  }, [isDragging, dragStart, position.x, position.y]);\n\n  // Handle escape key - D√©sactiv√© pour √©viter la fermeture accidentelle\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        // Optionnel : Afficher une confirmation avant fermeture\n        // Pour l'instant, on d√©sactive la fermeture par Escape\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\n      {/* Backdrop - Clic d√©sactiv√© pour √©viter la fermeture accidentelle */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={(e) => e.preventDefault()}\n      />\n      \n      {/* Modal */}\n      <div\n        ref={modalRef}\n        className={`\n          absolute top-1/2 left-1/2 \n          w-[95vw] max-w-4xl \n          max-h-[90vh] \n          bg-white rounded-xl shadow-2xl \n          transform -translate-x-1/2 -translate-y-1/2\n          ${className}\n        `}\n        style={{\n          transform: `translate(${position.x - 50}%, ${position.y - 50}%)`,\n          transition: isDragging ? 'none' : 'transform 0.1s ease-out'\n        }}\n        onMouseDown={handleMouseDown}\n      >\n        {/* Header with drag handle */}\n        <div\n          ref={headerRef}\n          className={`\n            flex items-center justify-between p-4 border-b border-gray-200 rounded-t-xl\n            bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 text-white\n            ${isDragging ? 'cursor-grabbing' : 'cursor-grab'}\n          `}\n        >\n          <div className=\"flex items-center space-x-2\">\n            <Move className=\"h-5 w-5 opacity-70\" />\n            <h2 className=\"text-lg font-semibold\">{title}</h2>\n          </div>\n          \n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n            type=\"button\"\n            title=\"Fermer (les donn√©es seront perdues)\"\n          >\n            <X className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"overflow-y-auto max-h-[calc(90vh-64px)]\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DraggableModal;","size_bytes":5170},"client/src/components/EmailVerification.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { CheckCircle, Mail, RefreshCw, ArrowLeft } from 'lucide-react';\n\ninterface EmailVerificationProps {\n  email: string;\n  onBack: () => void;\n  onVerified: () => void;\n}\n\nexport const EmailVerification: React.FC<EmailVerificationProps> = ({\n  email,\n  onBack,\n  onVerified\n}) => {\n  const [isResending, setIsResending] = useState(false);\n  const [resendCooldown, setResendCooldown] = useState(0);\n  const [verificationCode, setVerificationCode] = useState(['', '', '', '', '', '']);\n\n  useEffect(() => {\n    if (resendCooldown > 0) {\n      const timer = setTimeout(() => setResendCooldown(resendCooldown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [resendCooldown]);\n\n  const handleResendEmail = async () => {\n    setIsResending(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setIsResending(false);\n    setResendCooldown(60);\n  };\n\n  const handleCodeChange = (index: number, value: string) => {\n    if (value.length <= 1) {\n      const newCode = [...verificationCode];\n      newCode[index] = value;\n      setVerificationCode(newCode);\n\n      // Auto-focus next input\n      if (value && index < 5) {\n        const nextInput = document.getElementById(`code-${index + 1}`);\n        nextInput?.focus();\n      }\n\n      // Auto-verify when all fields are filled\n      if (newCode.every(digit => digit !== '') && newCode.join('') === '123456') {\n        setTimeout(() => onVerified(), 500);\n      }\n    }\n  };\n\n  const handleKeyDown = (index: number, e: React.KeyboardEvent) => {\n    if (e.key === 'Backspace' && !verificationCode[index] && index > 0) {\n      const prevInput = document.getElementById(`code-${index - 1}`);\n      prevInput?.focus();\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto bg-white rounded-2xl shadow-xl p-8\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <div className=\"w-16 h-16 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n          <Mail className=\"h-8 w-8 text-white\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          V√©rifiez votre email\n        </h2>\n        <p className=\"text-gray-600\">\n          Nous avons envoy√© un code de v√©rification √†\n        </p>\n        <p className=\"font-semibold text-primary-bolt-500\">{email}</p>\n      </div>\n\n      {/* Verification Code Input */}\n      <div className=\"mb-8\">\n        <label className=\"block text-sm font-semibold text-gray-700 mb-4 text-center\">\n          Entrez le code de v√©rification\n        </label>\n        <div className=\"flex justify-center space-x-3\">\n          {verificationCode.map((digit, index) => (\n            <input\n              key={index}\n              id={`code-${index}`}\n              type=\"text\"\n              maxLength={1}\n              value={digit}\n              onChange={(e) => handleCodeChange(index, e.target.value)}\n              onKeyDown={(e) => handleKeyDown(index, e)}\n              className=\"w-12 h-12 text-center text-xl font-bold border-2 border-gray-300 rounded-xl focus:border-primary-bolt-500 focus:ring-2 focus:ring-primary-bolt-500 focus:ring-opacity-20 transition-all\"\n            />\n          ))}\n        </div>\n        <p className=\"text-xs text-gray-500 text-center mt-3\">\n          Le code expire dans 10 minutes\n        </p>\n      </div>\n\n      {/* Resend Email */}\n      <div className=\"text-center mb-6\">\n        <p className=\"text-gray-600 mb-3\">Vous n'avez pas re√ßu le code ?</p>\n        <button\n          onClick={handleResendEmail}\n          disabled={isResending || resendCooldown > 0}\n          className=\"inline-flex items-center space-x-2 text-primary-bolt-500 hover:text-primary-bolt-600 font-semibold transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          <RefreshCw className={`h-4 w-4 ${isResending ? 'animate-spin' : ''}`} />\n          <span>\n            {resendCooldown > 0 \n              ? `Renvoyer dans ${resendCooldown}s`\n              : isResending \n                ? 'Envoi en cours...'\n                : 'Renvoyer le code'\n            }\n          </span>\n        </button>\n      </div>\n\n      {/* Back Button */}\n      <button\n        onClick={onBack}\n        className=\"w-full flex items-center justify-center space-x-2 py-3 px-4 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n      >\n        <ArrowLeft className=\"h-4 w-4\" />\n        <span>Retour</span>\n      </button>\n\n      {/* Help Text */}\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-xl\">\n        <p className=\"text-sm text-blue-800\">\n          <strong>Astuce :</strong> V√©rifiez votre dossier spam si vous ne trouvez pas l'email.\n          Pour tester, utilisez le code : <strong>123456</strong>\n        </p>\n      </div>\n    </div>\n  );\n};","size_bytes":4906},"client/src/components/FavoriteButton.tsx":{"content":"import { Heart } from 'lucide-react';\nimport { useFavorites } from '../hooks/useFavorites';\n\nfunction cn(...classes: (string | undefined | null | false)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\ninterface FavoriteButtonProps {\n  vehicleId: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent) => void;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport function FavoriteButton({ \n  vehicleId, \n  className, \n  onClick, \n  size = 'md' \n}: FavoriteButtonProps) {\n  const { isFavorite, toggleFavorite } = useFavorites();\n\n  const handleClick = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (onClick) onClick(e);\n    \n    console.log('üî¥ Clic favori pour v√©hicule:', vehicleId);\n    console.log('üîç Statut actuel favori:', isFav);\n    \n    try {\n      const success = await toggleFavorite(vehicleId);\n      console.log('‚úÖ R√©sultat toggle favori:', success);\n      \n      if (success) {\n        console.log('üéâ Favori bascul√© avec succ√®s');\n      } else {\n        console.error('‚ùå √âchec du basculement favori');\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur lors du clic favori:', error);\n    }\n  };\n\n  const iconSizes = {\n    sm: 'h-3 w-3',\n    md: 'h-4 w-4',\n    lg: 'h-5 w-5'\n  };\n\n  const isFav = isFavorite(vehicleId);\n  \n  console.log('üîç Rendu FavoriteButton - v√©hicule:', vehicleId, 'isFav:', isFav);\n\n  return (\n    <button \n      type=\"button\"\n      className={cn(\n        \"transition-all duration-200 focus:outline-none select-none\",\n        isFav \n          ? \"text-red-500 hover:text-red-600\" \n          : \"text-gray-400 hover:text-red-500\",\n        className\n      )}\n      onClick={handleClick}\n      onMouseDown={(e) => e.preventDefault()} // √âviter focus problems\n      title={isFav ? \"Retirer des favoris\" : \"Ajouter aux favoris\"}\n    >\n      <Heart \n        className={cn(\n          iconSizes[size], \n          \"transition-all duration-200\",\n          isFav ? \"fill-current text-red-500\" : \"text-gray-400\"\n        )} \n      />\n    </button>\n  );\n}","size_bytes":2056},"client/src/components/Footer.tsx":{"content":"import React from 'react';\nimport { useApp } from '../contexts/AppContext';\n\ninterface FooterProps {\n  setCurrentView: (view: string) => void;\n}\n\nexport const Footer: React.FC<FooterProps> = ({ setCurrentView }) => {\n  const { currentUser, setAuthMode, setShowAuthModal } = useApp();\n\n  const handleCreateListing = () => {\n    if (!currentUser) {\n      setAuthMode('login');\n      setShowAuthModal(true);\n    } else {\n      setCurrentView('create-listing');\n    }\n  };\n\n  const handleMyAccountClick = () => {\n    if (!currentUser) {\n      setAuthMode('login');\n      setShowAuthModal(true);\n    } else {\n      setCurrentView('dashboard');\n    }\n  };\n\n  return (\n    <footer className=\"bg-gray-900 text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n          {/* Company Info */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <div>\n                <h3 className=\"text-xl font-bold\">PassionAuto2Roues</h3>\n              </div>\n            </div>\n            <p className=\"text-gray-400 mb-6\">\n              La marketplace de r√©f√©rence pour l'achat et la vente de v√©hicules d'occasion, accident√©s et les pi√®ces d√©tach√©es.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Liens rapides</h4>\n            <ul className=\"space-y-3\">\n              <li><button onClick={() => setCurrentView('listings')} className=\"text-gray-400 hover:text-white transition-colors\">Rechercher</button></li>\n              <li><button onClick={handleCreateListing} className=\"text-gray-400 hover:text-white transition-colors\">D√©poser une annonce</button></li>\n              <li><button onClick={handleMyAccountClick} className=\"text-gray-400 hover:text-white transition-colors\">Espace Pro</button></li>\n              <li><button onClick={handleMyAccountClick} className=\"text-gray-400 hover:text-white transition-colors\">Mon compte</button></li>\n            </ul>\n          </div>\n\n          {/* Support */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Support</h4>\n            <ul className=\"space-y-3\">\n              <li><button onClick={() => setCurrentView('help')} className=\"text-gray-400 hover:text-white transition-colors\">Centre d'aide</button></li>\n              <li><button onClick={() => setCurrentView('conseils')} className=\"text-gray-400 hover:text-white transition-colors\">Conseils</button></li>\n              <li><button onClick={() => setCurrentView('help')} className=\"text-gray-400 hover:text-white transition-colors\">Contact</button></li>\n              <li><button onClick={() => setCurrentView('help')} className=\"text-gray-400 hover:text-white transition-colors\">Signaler un probl√®me</button></li>\n              <li><button onClick={() => setCurrentView('safety')} className=\"text-gray-400 hover:text-white transition-colors\">Conseils s√©curit√©</button></li>\n            </ul>\n          </div>\n\n          {/* Legal */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">L√©gal</h4>\n            <ul className=\"space-y-3\">\n              <li><button onClick={() => setCurrentView('about')} className=\"text-gray-400 hover:text-white transition-colors\">√Ä propos</button></li>\n              <li><button onClick={() => setCurrentView('terms')} className=\"text-gray-400 hover:text-white transition-colors\">CGU</button></li>\n              <li><button onClick={() => setCurrentView('legal')} className=\"text-gray-400 hover:text-white transition-colors\">Mentions l√©gales</button></li>\n              <li><button onClick={() => setCurrentView('privacy')} className=\"text-gray-400 hover:text-white transition-colors\">Confidentialit√©</button></li>\n              <li><button onClick={() => setCurrentView('admin-login')} className=\"text-gray-500 hover:text-gray-300 transition-colors text-xs\">Administration</button></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-800 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-gray-400 mb-4 md:mb-0\">\n              ¬© 2025 PassionAuto2Roues.com. Tous droits r√©serv√©s. Design By Happy Agency\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};","size_bytes":4430},"client/src/components/Header.tsx":{"content":"import React, { useState } from 'react';\nimport { Search, Bell, Heart, MessageCircle, User, Menu, X, LogIn } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuth } from '../hooks/useAuth';\nimport { useUnreadMessages } from '../hooks/useUnreadMessages';\nimport { useAuthService } from '../services/AuthService';\nimport { UserMenu } from './auth/UserMenu';\nimport logoPath from '@assets/logo-transparent_1753108744744.png';\nimport accidentIcon from '@assets/accident_1753354197012.png';\n\ninterface HeaderProps {\n  currentView: string;\n  setCurrentView: (view: string) => void;\n  mobileMenuOpen: boolean;\n  setMobileMenuOpen: (open: boolean) => void;\n  setDashboardTab?: (tab: string) => void;\n  onSearch?: (query: string) => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ \n  currentView, \n  setCurrentView, \n  mobileMenuOpen, \n  setMobileMenuOpen,\n  setDashboardTab,\n  onSearch \n}) => {\n  const { setSearchFilters, setSelectedVehicle } = useApp();\n  const { user, dbUser, isAuthenticated, isLoading } = useAuth();\n  const { unreadCount } = useUnreadMessages();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeCategory, setActiveCategory] = useState('vehicles');\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const { openAuthModal } = useAuthService();\n\n  const handleAuthClick = (mode: 'signin' | 'signup') => {\n    const authMode = mode === 'signin' ? 'login' : 'register';\n    openAuthModal(authMode as 'login' | 'register');\n    setMobileMenuOpen(false);\n  };\n\n  const handleNavClick = (view: string) => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    setCurrentView(view);\n    setMobileMenuOpen(false);\n    setOpenDropdown(null); // Fermer le dropdown apr√®s clic\n  };\n\n  // TEST ADMIN - Bouton temporaire pour acc√©der au dashboard admin\n  const testAdminClick = () => {\n    setCurrentView('admin-test');\n    setMobileMenuOpen(false);\n  };\n\n  const handleDashboardNavClick = (tab: string) => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    if (setDashboardTab) {\n      setDashboardTab(tab);\n    }\n    setCurrentView('dashboard');\n    setMobileMenuOpen(false);\n  };\n\n  const handleCreateListingClick = () => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    if (isAuthenticated) {\n      setCurrentView('create-listing');\n    } else {\n      // Utilisateur non connect√© - afficher le modal de connexion\n      openAuthModal('login', () => {\n        setCurrentView('create-listing');\n      });\n    }\n    setMobileMenuOpen(false);\n  };\n\n  const handleNavigate = (path: string) => {\n    setActiveCategory('');\n    setSelectedVehicle(null);\n    setCurrentView(path.replace('/', ''));\n    setMobileMenuOpen(false);\n    setOpenDropdown(null);\n  };\n\n  const handleSearch = () => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    if (searchTerm.trim()) {\n      setSearchFilters({ searchTerm: searchTerm.trim() });\n      setCurrentView('search');\n      setSearchTerm('');\n      setMobileMenuOpen(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  // Structure des cat√©gories et sous-cat√©gories\n  const categoryStructure = {\n    'voiture-utilitaire': {\n      label: 'Voitures - Utilitaires',\n      subcategories: [\n        { id: 'voiture', label: 'Voitures' },\n        { id: 'utilitaire', label: 'Utilitaires' },\n        { id: 'caravane', label: 'Caravanes' },\n        { id: 'remorque', label: 'Remorques' }\n      ]\n    },\n    'moto-scooter-quad': {\n      label: 'Motos, Scooters, Quads',\n      subcategories: [\n        { id: 'moto', label: 'Motos' },\n        { id: 'scooter', label: 'Scooters' },\n        { id: 'quad', label: 'Quads' }\n      ]\n    },\n    'nautisme-sport-aerien': {\n      label: 'Nautisme, Sport et Plein air',\n      subcategories: [\n        { id: 'bateau', label: 'Bateaux' },\n        { id: 'jetski', label: 'Jet-skis' },\n        { id: 'aerien', label: 'A√©rien' }\n      ]\n    },\n    'services': {\n      label: 'Services',\n      subcategories: [\n        { id: 'reparation', label: 'R√©paration' },\n        { id: 'remorquage', label: 'Remorquage' },\n        { id: 'entretien', label: 'Entretien' },\n        { id: 'autre-service', label: 'Autres services' }\n      ]\n    },\n    'pieces': {\n      label: 'Pi√®ces d√©tach√©es',\n      subcategories: [\n        { id: 'piece-voiture', label: 'Pi√®ces voiture' },\n        { id: 'piece-moto', label: 'Pi√®ces moto' },\n        { id: 'autre-piece', label: 'Autres pi√®ces' }\n      ]\n    }\n  };\n\n  const handleSubcategoryClick = (subcategoryId: string) => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    setSearchFilters({ category: subcategoryId });\n    setCurrentView('listings');\n    setMobileMenuOpen(false);\n    setOpenDropdown(null); // Fermer le dropdown apr√®s clic\n  };\n\n  const handleDamagedVehiclesClick = () => {\n    setActiveCategory(''); // D√©sactiver le soulignement des cat√©gories principales\n    setSelectedVehicle(null); // Fermer le d√©tail du v√©hicule si ouvert\n    setSearchFilters({ condition: 'damaged' });\n    setCurrentView('listings');\n    setMobileMenuOpen(false);\n    setOpenDropdown(null); // Fermer le dropdown apr√®s clic\n  };\n\n  const handleCategoryClick = (category: string) => {\n    setActiveCategory(category);\n    setMobileMenuOpen(false);\n    \n    // Pour les cat√©gories principales, on va vers la premi√®re sous-cat√©gorie\n    const categoryData = categoryStructure[category as keyof typeof categoryStructure];\n    if (categoryData && categoryData.subcategories.length > 0) {\n      handleSubcategoryClick(categoryData.subcategories[0].id);\n    }\n  };\n\n  const categories = [\n    { id: 'voiture-utilitaire', label: 'Voitures - Utilitaires' },\n    { id: 'moto-scooter-quad', label: 'Motos, Scooters, Quads' },\n    { id: 'nautisme-sport-aerien', label: 'Nautisme, Sport et Plein air' },\n    { id: 'services', label: 'Services' },\n    { id: 'pieces', label: 'Pi√®ces d√©tach√©es' },\n  ];\n\n  return (\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\n      {/* Main Header */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div \n            className=\"flex items-center cursor-pointer relative z-[105]\"\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              handleNavClick('home');\n            }}\n          >\n            <img \n              src={logoPath} \n              alt=\"Passion Auto2Roues\" \n              className=\"h-10 w-auto\"\n            />\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-6 flex-1 max-w-4xl mx-8\">\n            {/* Deposit Button */}\n            <button\n              onClick={handleCreateListingClick}\n              className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white px-6 py-2.5 rounded-xl font-medium transition-all duration-200 shadow-sm hover:shadow-md whitespace-nowrap\"\n            >\n              D√©poser une annonce\n            </button>\n\n            {/* Search Bar */}\n            <div className=\"flex-1 max-w-md\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Rechercher sur PassionAuto2Roues.com ... \"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  className=\"w-full pl-4 pr-12 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all text-gray-900 placeholder-gray-500\"\n                />\n                <button \n                  onClick={handleSearch}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n                >\n                  <Search className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Icons */}\n          <div className=\"hidden lg:flex items-center space-x-6\">\n            {isAuthenticated ? (\n              <div className=\"flex items-center space-x-6\">\n                {/* Mes recherches */}\n                <button \n                  onClick={() => handleDashboardNavClick('searches')}\n                  className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group\"\n                >\n                  <Bell className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                  <span className=\"text-xs\">Mes recherches</span>\n                </button>\n\n                {/* Favoris */}\n                <button \n                  onClick={() => handleDashboardNavClick('favorites')}\n                  className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group\"\n                >\n                  <Heart className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                  <span className=\"text-xs\">Favoris</span>\n                </button>\n\n                {/* Messages */}\n                <button \n                  onClick={() => handleDashboardNavClick('messages')}\n                  className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group relative\"\n                >\n                  <MessageCircle className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                  <span className=\"text-xs\">Messages</span>\n                  {unreadCount > 0 && (\n                    <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-4 w-4 flex items-center justify-center\">\n                      {unreadCount}\n                    </span>\n                  )}\n                </button>\n\n                {/* User Menu */}\n                <UserMenu onNavigate={handleNavigate} onDashboardNavigate={handleDashboardNavClick} />\n              </div>\n            ) : (\n              <button\n                onClick={() => handleAuthClick('signin')}\n                className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors group\"\n              >\n                <User className=\"h-5 w-5 mb-1 group-hover:scale-110 transition-transform\" />\n                <span className=\"text-xs\">Se connecter</span>\n              </button>\n            )}\n          </div>\n\n          {/* Mobile menu button */}\n          <button\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            className=\"lg:hidden p-2 rounded-xl text-gray-600 hover:text-primary-bolt-500 hover:bg-gray-50 transition-all duration-200\"\n          >\n            {mobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </button>\n        </div>\n      </div>\n\n      {/* Categories Menu */}\n      <div className=\"hidden lg:block border-t border-gray-100 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-center space-x-8 py-3\">\n            {categories.map((category, index) => (\n              <div key={category.id} className=\"flex items-center\">\n                {/* Cat√©gories principales avec dropdown */}\n                <div className=\"relative\">\n                  <div\n                    className={`text-sm transition-all duration-200 relative py-2 cursor-pointer ${\n                      activeCategory === category.id\n                        ? 'text-primary-bolt-500'\n                        : 'text-gray-700 hover:text-primary-bolt-500'\n                    }`}\n                    onMouseEnter={() => setOpenDropdown(category.id)}\n                    onMouseLeave={() => setOpenDropdown(null)}\n                  >\n                    {category.label}\n                    {activeCategory === category.id && (\n                      <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary-bolt-500 rounded-full\"></div>\n                    )}\n                  </div>\n                  \n                  {/* Dropdown Menu */}\n                  {categoryStructure[category.id as keyof typeof categoryStructure] && (\n                    <div \n                      className={`absolute left-0 top-full mt-2 w-56 bg-white rounded-xl shadow-lg border border-gray-200 transition-all duration-200 z-[110] ${\n                        openDropdown === category.id ? 'opacity-100 visible' : 'opacity-0 invisible'\n                      }`}\n                      onMouseEnter={() => setOpenDropdown(category.id)}\n                      onMouseLeave={() => setOpenDropdown(null)}\n                    >\n                      <div className=\"py-2\">\n                        {categoryStructure[category.id as keyof typeof categoryStructure].subcategories.map((subcategory) => (\n                          <button\n                            key={subcategory.id}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              e.stopPropagation();\n                              handleSubcategoryClick(subcategory.id);\n                            }}\n                            className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-primary-bolt-50 hover:text-primary-bolt-600 transition-colors\"\n                          >\n                            {subcategory.label}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                {index < categories.length - 1 && (\n                  <span className=\"text-gray-300 text-sm ml-8\">‚Ä¢</span>\n                )}\n              </div>\n            ))}\n            \n            {/* S√©parateur avant Accident√©s */}\n            <span className=\"text-gray-300 text-sm\">‚Ä¢</span>\n            \n            {/* Bouton V√©hicules Accident√©s */}\n            <button\n              onClick={handleDamagedVehiclesClick}\n              className=\"text-gray-800 font-bold text-sm hover:text-gray-900 transition-colors duration-200\"\n            >\n              Accident√©s\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation */}\n      {mobileMenuOpen && (\n        <div className=\"lg:hidden bg-white border-t border-gray-200 shadow-lg\">\n          <div className=\"px-4 py-4 space-y-4\">\n            {/* Mobile Search */}\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Rechercher sur Passion Auto2Roues\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                onKeyPress={handleKeyPress}\n                className=\"w-full pl-4 pr-12 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n              />\n              <button \n                onClick={handleSearch}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 p-1 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n              >\n                <Search className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            {/* Mobile Deposit Button */}\n            <button\n              onClick={handleCreateListingClick}\n              className=\"w-full bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 hover:from-primary-bolt-600 hover:to-primary-bolt-700 text-white py-3 px-4 rounded-xl font-medium transition-all duration-200\"\n            >\n              D√©poser une annonce\n            </button>\n\n            {/* Mobile Categories */}\n            <div className=\"border-t border-gray-200 pt-4\">\n              <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Cat√©gories</h3>\n              <div className=\"grid grid-cols-1 gap-3\">\n                {categories.map((category) => (\n                  <div key={category.id}>\n                    {category.id === 'conseils' ? (\n                      // Conseils reste un simple bouton\n                      <button\n                        onClick={() => handleCategoryClick(category.id)}\n                        className={`w-full text-left py-2 px-3 rounded-xl text-sm transition-all duration-200 ${\n                          activeCategory === category.id\n                            ? 'bg-primary-bolt-50 text-primary-bolt-500'\n                            : 'text-gray-700 hover:bg-gray-50'\n                        }`}\n                      >\n                        {category.label}\n                      </button>\n                    ) : (\n                      // Cat√©gories avec sous-cat√©gories\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900 py-2 px-3\">\n                          {category.label}\n                        </div>\n                        <div className=\"ml-4 space-y-1\">\n                          {categoryStructure[category.id as keyof typeof categoryStructure]?.subcategories.map((subcategory) => (\n                            <button\n                              key={subcategory.id}\n                              onClick={() => handleSubcategoryClick(subcategory.id)}\n                              className=\"block w-full text-left py-2 px-3 rounded-lg text-sm text-gray-600 hover:bg-primary-bolt-50 hover:text-primary-bolt-600 transition-colors\"\n                            >\n                              {subcategory.label}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Mobile Bouton V√©hicules Accident√©s */}\n            <div className=\"border-t border-gray-200 pt-4\">\n              <button\n                onClick={handleDamagedVehiclesClick}\n                className=\"w-full bg-black hover:bg-gray-800 text-orange-500 hover:text-orange-400 px-4 py-3 rounded-xl text-sm font-medium transition-all duration-200\"\n              >\n                Accident√©s\n              </button>\n            </div>\n\n            {/* Mobile User Actions */}\n            <div className=\"border-t border-gray-200 pt-4 space-y-2\">\n              {isAuthenticated ? (\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-xl\">\n                    <div className=\"w-8 h-8 bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-full flex items-center justify-center\">\n                      <span className=\"text-white font-semibold text-sm\">\n                        {user?.user_metadata?.name?.charAt(0) || user?.email?.charAt(0) || 'U'}\n                      </span>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">{user?.user_metadata?.name || 'Utilisateur'}</p>\n                      <p className=\"text-sm text-gray-500\">Utilisateur</p>\n                    </div>\n                  </div>\n                  \n                  <button\n                    onClick={() => handleNavigate('profile')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors\"\n                  >\n                    Mon compte\n                  </button>\n                  \n                  <button\n                    onClick={() => handleNavigate('my-listings')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors\"\n                  >\n                    Mes annonces\n                  </button>\n                  \n                  <button\n                    onClick={() => handleDashboardNavClick('messages')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors flex items-center justify-between\"\n                  >\n                    <span>Messages</span>\n                    <span className=\"bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                      3\n                    </span>\n                  </button>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  <button\n                    onClick={() => handleAuthClick('signin')}\n                    className=\"w-full text-left py-3 px-4 text-gray-700 hover:bg-gray-50 rounded-xl transition-colors\"\n                  >\n                    Se connecter\n                  </button>\n                  <button\n                    onClick={() => handleAuthClick('signup')}\n                    className=\"w-full text-left py-3 px-4 bg-primary-bolt-50 text-primary-bolt-500 hover:bg-primary-bolt-100 rounded-xl transition-colors\"\n                  >\n                    S'inscrire\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Auth Modal handled by AuthModal in App.tsx */}\n    </header>\n  );\n};","size_bytes":21843},"client/src/components/Hero.tsx":{"content":"import React, { useState, useEffect, useMemo } from 'react';\nimport { Search, MapPin, Filter, Car, Bike, Truck, Wrench, Star, Crown, Eye, Heart, ChevronRight, Smartphone, Store, Users, TrendingUp, Plus, MoreHorizontal, ChevronLeft } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { CategorySection } from './CategorySection';\nimport voituresImage from '@assets/voiture-2_1752056602701.png';\nimport motosImage from '@assets/motos-scooters_1752057126122.png';\nimport entretienImage from '@assets/services-entretien_1752056958533.png';\nimport piecesImage from '@assets/pieces-detachees_1752056832597.png';\nimport bateauImage from '@assets/bateau_1752249742336.png';\nimport appMobileImage from '@assets/mockups-mobile_1752062665109.webp';\nimport appStoreIcon from '@assets/AppStore_1752058292770.png';\nimport googlePlayIcon from '@assets/googlePlay_1752058332269.png';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface HeroProps {\n  setCurrentView: (view: string) => void;\n}\n\nexport const Hero: React.FC<HeroProps> = ({ setCurrentView }) => {\n  const { setSearchFilters, currentUser, setSelectedVehicle, setShowAuthModal, setAuthMode, vehicles } = useApp();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [currentAdIndex, setCurrentAdIndex] = useState(0);\n\n  const handleCategoryClick = (category: string) => {\n    setSearchFilters({ category });\n    setCurrentView('listings');\n  };\n\n  const handleViewAllCategory = (category: string) => {\n    setSearchFilters({ category });\n    setCurrentView('listings');\n  };\n\n  const handleViewDamagedVehicles = () => {\n    setSearchFilters({ condition: 'damaged' });\n    setCurrentView('listings');\n  };\n\n  const handleViewSearchListings = () => {\n    setSearchFilters({ listing_type: 'search' });\n    setCurrentView('listings');\n  };\n\n  const handleVehicleClick = (vehicle: any) => {\n    setSelectedVehicle(vehicle);\n  };\n\n  const handleCreateListing = () => {\n    if (!currentUser) {\n      setAuthMode('login');\n      setShowAuthModal(true);\n    } else {\n      setCurrentView('create-listing');\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  // Memoized category mapping to avoid recreating on each render\n  const categoryMap = useMemo(() => ({\n    'voiture-utilitaire': ['voiture', 'utilitaire', 'caravane', 'remorque'],\n    'moto-scooter-quad': ['moto', 'scooter', 'quad'],\n    'nautisme-sport-aerien': ['bateau', 'jetski', 'aerien'],\n    'services': ['reparation', 'remorquage', 'entretien', 'autre-service'],\n    'pieces': ['piece-voiture', 'piece-moto', 'autre-piece']\n  }), []);\n\n  // Get vehicles by category (using main categories) - memoized with limit\n  const getVehiclesByCategory = useMemo(() => {\n    return (mainCategory: string) => {\n      const subcategories = categoryMap[mainCategory as keyof typeof categoryMap] || [];\n      return vehicles\n        .filter(vehicle => subcategories.includes(vehicle.category))\n        .slice(0, 6); // Limit to 6 per category for faster loading\n    };\n  }, [categoryMap, vehicles]);\n\n  const mainCategories = [\n    {\n      id: 'voiture-utilitaire',\n      name: 'Voitures - Utilitaires',\n      description: 'Berlines, SUV, citadines, sportives, Fourgons, camions, v√©hicules pro',\n      image: voituresImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n    {\n      id: 'moto-scooter-quad',\n      name: 'Motos, Scooters, Quads',\n      description: 'Tous types de motos, scooters et quads',\n      image: motosImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n    {\n      id: 'nautisme-sport-aerien',\n      name: 'Nautisme, Sport et Plein air',\n      description: 'Bateaux, jetskis et √©quipements de sport',\n      image: bateauImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n    {\n      id: 'pieces',\n      name: 'Pi√®ces d√©tach√©es',\n      description: 'Pi√®ces auto, moto et accessoires',\n      image: piecesImage,\n      color: 'from-[#0CBFDE] to-[#0AA5C7]'\n    },\n  ];\n\n  // Memoized vehicle listings with reduced counts for faster loading - NOW USING SUPABASE DATA\n  const latestCarListings = useMemo(() => {\n    return vehicles\n      .filter(vehicle => ['voiture', 'utilitaire', 'caravane', 'remorque'].includes(vehicle.category) && vehicle.condition === 'used')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 6); // Reduced from 8 to 6 for faster loading\n  }, [vehicles]);\n\n  const latestMotorcycleListings = useMemo(() => {\n    return vehicles\n      .filter(vehicle => ['moto', 'scooter', 'quad'].includes(vehicle.category) && vehicle.condition === 'used')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 6); // Reduced from 8 to 6 for faster loading\n  }, [vehicles]);\n\n  const latestDamagedVehicles = useMemo(() => {\n    return vehicles\n      .filter(vehicle => vehicle.condition === 'damaged')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Reduced from 8 to 4 for faster loading\n  }, [vehicles]);\n\n  /*\n  const latestSearchRequests = useMemo(() => {\n    return vehicles\n      .filter(vehicle => vehicle.title.startsWith('RECHERCHE') || vehicle.title.includes('RECHERCHE'))\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Reduced from 8 to 4 for faster loading\n  }, [vehicles]);\n  */\n\n  const latestSearchRequests = useMemo(() => {\n    return vehicles\n      .filter(vehicle => vehicle.listing_type === 'search' || vehicle.listingType === 'search')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Toujours limit√© √† 4\n  }, [vehicles]);\n\n  const latestNautismeListings = useMemo(() => {\n    return vehicles\n      .filter(vehicle => ['bateau', 'jetski', 'aerien'].includes(vehicle.category) && vehicle.condition === 'used')\n      .sort((a, b) => {\n        const dateA = new Date(a.createdAt || a.created_at || 0);\n        const dateB = new Date(b.createdAt || b.created_at || 0);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4); // Reduced from 8 to 4 for faster loading\n  }, [vehicles]);\n\n  // Category sections configuration - memoized\n  const categorySections = useMemo(() => [\n    {\n      id: 'voiture-utilitaire',\n      title: 'Voitures et Utilitaires d\\'occasion',\n      vehicles: getVehiclesByCategory('voiture-utilitaire')\n    },\n    {\n      id: 'moto-scooter-quad',\n      title: 'Motos, Scooters et Quads',\n      vehicles: latestMotorcycleListings\n    },\n    {\n      id: 'nautisme-sport-aerien',\n      title: 'Nautisme, Sport et Plein air',\n      vehicles: latestNautismeListings\n    },\n    {\n      id: 'pieces',\n      title: 'Pi√®ces d√©tach√©es',\n      vehicles: getVehiclesByCategory('pieces')\n    }\n  ], [getVehiclesByCategory, latestMotorcycleListings, latestNautismeListings]);\n\n  // Advertising banners data\n  const advertisingBanners = [\n    {\n      id: 1,\n      type: 'garage',\n      title: 'GARAGE MARTIN',\n      subtitle: 'Depuis 1985 ‚Ä¢ Paris 11√®me',\n      mainOffer: '29‚Ç¨/mois',\n      offerTitle: 'FORFAIT VIDANGE',\n      features: [\n        '‚úì Huile moteur premium',\n        '‚úì Filtre √† huile neuf',\n        '‚úì Contr√¥le 20 points',\n        '‚úì Sans engagement'\n      ],\n      phone: '01 43 55 67 89',\n      address: '123 Avenue de la R√©publique, 75011 Paris ‚Ä¢ M√©tro R√©publique',\n      rating: '4.9/5 (2,847 avis)',\n      ctaText: 'üìû R√âSERVER MAINTENANT',\n      promoText: 'PROMO LIMIT√âE',\n      tickerItems: [\n        'SP√âCIALISTE TOUTES MARQUES',\n        '‚ö° INTERVENTION RAPIDE',\n        'üõ°Ô∏è GARANTIE PI√àCES & MAIN D\\'≈íUVRE',\n        'üí≥ PAIEMENT EN 3X SANS FRAIS',\n        'üèÜ GARAGE AGR√â√â PR√âFECTURE'\n      ],\n      gradient: 'from-red-600 via-red-700 to-red-800',\n      icon: Wrench,\n      iconColor: 'text-red-600'\n    },\n    {\n      id: 2,\n      type: 'tire',\n      title: 'PNEUS EXPRESS',\n      subtitle: 'Expert pneumatiques ‚Ä¢ Toute la France',\n      mainOffer: '2+2',\n      offerTitle: 'PNEUS OFFERTS',\n      offerSubtitle: '2 achet√©s = 2 offerts',\n      features: [\n        '‚úì Montage gratuit inclus',\n        '‚úì √âquilibrage offert',\n        '‚úì Garantie 2 ans',\n        '‚úì Livraison 24h'\n      ],\n      phone: '0800 123 456',\n      address: 'Plus de 500 centres en France ‚Ä¢ Trouvez le v√¥tre',\n      rating: '4.8/5 (15,234 avis)',\n      ctaText: 'üîç TROUVER MON CENTRE',\n      promoText: 'OFFRE LIMIT√âE',\n      tickerItems: [\n        'üèÅ TOUTES MARQUES DISPONIBLES',\n        '‚ö° MONTAGE EN 30 MINUTES',\n        'üõ°Ô∏è GARANTIE CONSTRUCTEUR',\n        'üí≥ PAIEMENT 4X SANS FRAIS',\n        'üöö LIVRAISON GRATUITE',\n        'üèÜ N¬∞1 DU PNEU EN FRANCE'\n      ],\n      gradient: 'from-slate-600 via-slate-700 to-slate-800',\n      icon: Car,\n      iconColor: 'text-slate-600'\n    }\n  ];\n\n  // Auto-rotate carousel every 8 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentAdIndex((prev) => (prev + 1) % advertisingBanners.length);\n    }, 8000);\n\n    return () => clearInterval(interval);\n  }, [advertisingBanners.length]);\n\n  const nextAd = () => {\n    setCurrentAdIndex((prev) => (prev + 1) % advertisingBanners.length);\n  };\n\n  const prevAd = () => {\n    setCurrentAdIndex((prev) => (prev - 1 + advertisingBanners.length) % advertisingBanners.length);\n  };\n\n  const currentBanner = advertisingBanners[currentAdIndex];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 relative\">\n      {/* Hero Section - Now Boxed */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-3xl p-8 lg:p-12 relative overflow-hidden shadow-2xl\">\n            {/* Background decorative elements */}\n            <div className=\"absolute inset-0 bg-black/10\"></div>\n            <div className=\"absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32\"></div>\n            <div className=\"absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full translate-y-24 -translate-x-24\"></div>\n            \n            <div className=\"relative z-10\">\n              <div className=\"text-center text-white mb-12\">\n                <h1 className=\"text-4xl lg:text-5xl font-bold mb-6\">\n                  Vendre avec Passion Auto2Roues\n                </h1>\n                <p className=\"text-xl mb-8 max-w-3xl mx-auto\">\n                  Publiez votre annonce gratuitement et vendez rapidement gr√¢ce √† notre audience de plus de 45,000 acheteurs qualifi√©s.\n                </p>\n                \n                <button\n                  onClick={handleCreateListing}\n                  className=\"bg-white text-primary-bolt-500 hover:bg-gray-50 px-8 py-4 rounded-xl font-semibold text-lg shadow-lg hover:shadow-xl transition-all duration-200 flex items-center space-x-2 mx-auto mb-12\"\n                >\n                  <Plus className=\"h-5 w-5\" />\n                  <span>D√©poser une annonce</span>\n                </button>\n                \n                {/* Three feature boxes */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n                  <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/20\">\n                    <div className=\"text-4xl mb-4\">üöÄ</div>\n                    <h3 className=\"text-lg font-bold mb-2\">Publication gratuite</h3>\n                    <p className=\"text-sm text-cyan-100\">Publiez vos annonces sans frais et atteignez des milliers d'acheteurs</p>\n                  </div>\n                  <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/20\">\n                    <div className=\"text-4xl mb-4\">‚ö°</div>\n                    <h3 className=\"text-lg font-bold mb-2\">Vente rapide</h3>\n                    <p className=\"text-sm text-cyan-100\">85% de nos annonces trouvent un acheteur en moins de 30 jours</p>\n                  </div>\n                  <div className=\"bg-white/20 backdrop-blur-sm rounded-xl p-6 border border-white/20\">\n                    <div className=\"text-4xl mb-4\">üîí</div>\n                    <h3 className=\"text-lg font-bold mb-2\">S√©curis√©</h3>\n                    <p className=\"text-sm text-cyan-100\">Transactions s√©curis√©es et support client d√©di√©</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* V√©hicules Section - Redesigned to match the image */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {mainCategories.map((category) => (\n              <button\n                key={category.id}\n                onClick={() => handleCategoryClick(category.id)}\n                className=\"group bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 overflow-hidden p-8 text-center hover:scale-105 transform relative\"\n              >\n                {/* Category Image - White background without shadow */}\n                <div className=\"w-24 h-24 mx-auto mb-6 flex items-center justify-center relative bg-white rounded-2xl\">\n                  <img \n                    src={category.image} \n                    alt={category.name}\n                    className=\"w-16 h-16 object-contain group-hover:scale-110 transition-transform duration-300\"\n                  />\n                </div>\n                \n                {/* Category Title */}\n                <h3 className=\"text-xl font-bold text-gray-900 mb-3 group-hover:text-primary-bolt-500 transition-colors\">\n                  {category.name}\n                </h3>\n                \n                {/* Category Description */}\n                <p className=\"text-sm text-gray-600 leading-relaxed\">\n                  {category.description}\n                </p>\n                \n                {/* Hover Effect Border */}\n                <div className=\"absolute inset-0 border-2 border-transparent group-hover:border-primary-bolt-500 rounded-2xl transition-all duration-300\"></div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Advertising Carousel */}\n      <section className=\"py-8 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"relative\">\n            {/* Carousel Container */}\n            <div className={`relative bg-gradient-to-r ${currentBanner.gradient} rounded-2xl overflow-hidden shadow-2xl transition-all duration-500`}>\n              {/* Animated background elements */}\n              <div className=\"absolute inset-0 bg-black/20\"></div>\n              <div className=\"absolute top-0 left-0 w-full h-full\">\n                <div className=\"absolute top-4 left-4 w-8 h-8 bg-yellow-400 rounded-full animate-pulse\"></div>\n                <div className=\"absolute top-8 right-8 w-6 h-6 bg-white/30 rounded-full animate-bounce\"></div>\n                <div className=\"absolute bottom-6 left-12 w-4 h-4 bg-yellow-300 rounded-full animate-ping\"></div>\n                <div className=\"absolute bottom-4 right-16 w-5 h-5 bg-white/40 rounded-full animate-pulse delay-300\"></div>\n              </div>\n              \n              {/* Sliding banner */}\n              <div className=\"absolute top-0 left-0 w-full h-2 bg-gradient-to-r from-yellow-400 via-white to-yellow-400 animate-pulse\"></div>\n              \n              <div className=\"relative z-10 p-8 lg:p-12\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 items-center\">\n                  {/* Logo and Brand */}\n                  <div className=\"text-center lg:text-left\">\n                    <div className=\"inline-flex items-center space-x-3 mb-4\">\n                      <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center shadow-lg\">\n                        <currentBanner.icon className={`h-8 w-8 ${currentBanner.iconColor}`} />\n                      </div>\n                      <div className=\"text-white\">\n                        <h3 className=\"text-2xl font-bold\">{currentBanner.title}</h3>\n                        <p className={`${currentBanner.type === 'garage' ? 'text-red-200' : 'text-slate-200'} text-sm`}>\n                          {currentBanner.subtitle}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-center lg:justify-start space-x-1 text-yellow-400\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star key={i} className=\"h-4 w-4 fill-current\" />\n                      ))}\n                      <span className=\"text-white text-sm ml-2\">{currentBanner.rating}</span>\n                    </div>\n                  </div>\n\n                  {/* Main Offer */}\n                  <div className=\"text-center\">\n                    <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 relative\">\n                      {/* Pulsing effect */}\n                      <div className=\"absolute inset-0 bg-yellow-400/20 rounded-2xl animate-pulse\"></div>\n                      \n                      <div className=\"relative z-10\">\n                        <div className=\"text-yellow-400 text-sm font-bold mb-2 uppercase tracking-wide\">\n                          üî• Offre Sp√©ciale üî•\n                        </div>\n                        \n                        {currentBanner.type === 'garage' ? (\n                          <div>\n                            <h2 className=\"text-4xl lg:text-5xl font-black text-white mb-2\">\n                              {currentBanner.mainOffer}<span className=\"text-xl\">/mois</span>\n                            </h2>\n                            <div className=\"text-xl font-bold text-yellow-300 mb-3\">\n                              {currentBanner.offerTitle}\n                            </div>\n                          </div>\n                        ) : (\n                          <div>\n                            <h2 className=\"text-4xl lg:text-5xl font-black text-white mb-2\">\n                              {currentBanner.mainOffer}\n                            </h2>\n                            <div className=\"text-xl font-bold text-yellow-300 mb-1\">\n                              {currentBanner.offerTitle}\n                            </div>\n                            <div className=\"text-lg font-semibold text-white mb-3\">\n                              {currentBanner.offerSubtitle}\n                            </div>\n                          </div>\n                        )}\n                        \n                        <div className=\"text-white text-sm\">\n                          {currentBanner.features.map((feature, index) => (\n                            <div key={index}>{feature}</div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Call to Action */}\n                  <div className=\"text-center lg:text-right\">\n                    <div className=\"space-y-4\">\n                      <button className=\"w-full lg:w-auto bg-yellow-400 hover:bg-yellow-300 text-gray-800 font-black py-4 px-8 rounded-xl text-lg shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105 animate-bounce\">\n                        {currentBanner.ctaText}\n                      </button>\n                      \n                      <div className=\"text-white\">\n                        <div className=\"text-2xl font-bold\">{currentBanner.phone}</div>\n                        <div className={`${currentBanner.type === 'garage' ? 'text-red-200' : 'text-slate-200'} text-sm`}>\n                          {currentBanner.type === 'garage' ? 'Ouvert 7j/7 ‚Ä¢ 8h-19h' : 'Service client 24h/7j'}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-3 border border-white/20\">\n                        <div className=\"text-yellow-300 text-xs font-bold mb-1\">{currentBanner.promoText}</div>\n                        <div className=\"text-white text-sm\">\n                          üìç {currentBanner.address}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Bottom ticker */}\n                <div className=\"mt-8 pt-6 border-t border-white/20\">\n                  <div className=\"overflow-hidden\">\n                    <div className=\"animate-marquee whitespace-nowrap text-white text-sm\">\n                      {currentBanner.tickerItems.map((item, index) => (\n                        <span key={index} className=\"mx-8\">{item}</span>\n                      ))}\n                      {/* Duplicate for seamless loop */}\n                      {currentBanner.tickerItems.map((item, index) => (\n                        <span key={`dup-${index}`} className=\"mx-8\">{item}</span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Carousel Navigation */}\n            <button\n              onClick={prevAd}\n              className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-3 rounded-full transition-all duration-200 z-20\"\n            >\n              <ChevronLeft className=\"h-6 w-6\" />\n            </button>\n            \n            <button\n              onClick={nextAd}\n              className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white p-3 rounded-full transition-all duration-200 z-20\"\n            >\n              <ChevronRight className=\"h-6 w-6\" />\n            </button>\n\n            {/* Carousel Indicators */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20\">\n              {advertisingBanners.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentAdIndex(index)}\n                  className={`w-3 h-3 rounded-full transition-all duration-200 ${\n                    index === currentAdIndex \n                      ? 'bg-white' \n                      : 'bg-white/50 hover:bg-white/70'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Category Sections */}\n      <div className=\"bg-gray-50\">\n        {categorySections.map((section) => (\n          <CategorySection\n            key={section.id}\n            title={section.title}\n            vehicles={section.vehicles}\n            onViewAll={() => handleViewAllCategory(section.id)}\n            onVehicleClick={handleVehicleClick}\n          />\n        ))}\n      </div>\n\n      {/* Professional Space CTA - Now Boxed */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-3xl p-8 lg:p-12 relative overflow-hidden shadow-2xl\">\n            {/* Background decorative elements */}\n            <div className=\"absolute inset-0 bg-black/10\"></div>\n            <div className=\"absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32\"></div>\n            <div className=\"absolute bottom-0 left-0 w-48 h-48 bg-white/5 rounded-full translate-y-24 -translate-x-24\"></div>\n            \n            <div className=\"relative z-10\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center text-white\">\n                <div>\n                  <div className=\"inline-flex items-center space-x-2 bg-white/20 backdrop-blur-sm rounded-full px-4 py-2 mb-6\">\n                    <Store className=\"h-5 w-5\" />\n                    <span className=\"font-semibold\">Espace Professionnel</span>\n                  </div>\n                  <h2 className=\"text-4xl lg:text-5xl font-bold mb-6 leading-tight\">\n                    D√©veloppez votre activit√© avec Passion Auto2Roues\n                  </h2>\n                  <p className=\"text-xl mb-8 leading-relaxed\">\n                    Rejoignez plus de 2,500 professionnels qui font confiance √† notre plateforme \n                    pour d√©velopper leur business automobile.\n                  </p>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-white/20 p-2 rounded-xl\">\n                        <TrendingUp className=\"h-6 w-6\" />\n                      </div>\n                      <div>\n                        <div className=\"font-bold text-lg\">Visibilit√© maximale</div>\n                        <div className=\"text-cyan-200 text-sm\">Annonces illimit√©es</div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-white/20 p-2 rounded-xl\">\n                        <Users className=\"h-6 w-6\" />\n                      </div>\n                      <div>\n                        <div className=\"font-bold text-lg\">45,000+ clients</div>\n                        <div className=\"text-cyan-200 text-sm\">Audience qualifi√©e</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <button className=\"bg-white text-primary-bolt-500 hover:bg-gray-50 px-8 py-4 rounded-xl font-bold text-lg shadow-lg hover:shadow-xl transition-all duration-200\">\n                    Ouvrir ma boutique pro\n                  </button>\n                </div>\n\n                <div className=\"relative\">\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20\">\n                    <h3 className=\"text-2xl font-bold mb-6\">Avantages Pro</h3>\n                    <ul className=\"space-y-4 text-primary-bolt-100\">\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Annonces illimit√©es et mises en avant</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Statistiques d√©taill√©es et analytics</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Badge \"Professionnel v√©rifi√©\"</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Support client prioritaire</span>\n                      </li>\n                      <li className=\"flex items-center space-x-3\">\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        <span>Outils de gestion avanc√©s</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Latest Damaged Vehicles Section */}\n      <div className=\"bg-gray-50\">\n        <CategorySection\n          key=\"damaged\"\n          title=\"V√©hicules accident√©s\"\n          vehicles={latestDamagedVehicles}\n          onViewAll={handleViewDamagedVehicles}\n          onVehicleClick={handleVehicleClick}\n        />\n      </div>\n\n      {/* Latest Search Requests Section */}\n      <div className=\"bg-gray-50\">\n        <CategorySection\n          key=\"latest-searches\"\n          title=\"Annonces de recherches\"\n          vehicles={latestSearchRequests}\n          onViewAll={handleViewSearchListings}\n          onVehicleClick={handleVehicleClick}\n        />\n      </div>\n\n      {/* Mobile App Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <div className=\"inline-flex items-center space-x-2 bg-green-100 rounded-full px-4 py-2 mb-6\">\n                <Smartphone className=\"h-5 w-5 text-green-700\" />\n                <span className=\"font-semibold text-green-700\">Disponible maintenant</span>\n              </div>\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 mb-6\">\n                L'application mobile Passion Auto2Roues\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Achetez et vendez vos v√©hicules directement depuis votre smartphone. \n                T√©l√©chargez l'application d√®s maintenant !\n              </p>\n\n              {/* App Store Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <button className=\"bg-black text-white px-6 py-3 rounded-xl flex items-center space-x-3 hover:bg-gray-800 transition-colors\">\n                  <img src={appStoreIcon} alt=\"App Store\" className=\"w-6 h-6\" />\n                  <div className=\"text-left\">\n                    <div className=\"text-xs\">T√©l√©charger sur</div>\n                    <div className=\"text-lg font-semibold\">App Store</div>\n                  </div>\n                </button>\n                \n                <button className=\"bg-black text-white px-6 py-3 rounded-xl flex items-center space-x-3 hover:bg-gray-800 transition-colors\">\n                  <img src={googlePlayIcon} alt=\"Google Play\" className=\"w-6 h-6\" />\n                  <div className=\"text-left\">\n                    <div className=\"text-xs\">Disponible sur</div>\n                    <div className=\"text-lg font-semibold\">Google Play</div>\n                  </div>\n                </button>\n              </div>\n            </div>\n\n            {/* Mobile App Image */}\n            <div className=\"text-center\">\n              <div className=\"relative mx-auto max-w-lg\">\n                <img \n                  src={appMobileImage} \n                  alt=\"Application mobile Passion Auto2Roues\"\n                  className=\"w-full h-auto object-contain mx-auto\"\n                  style={{ backgroundColor: 'transparent' }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n    </div>\n  );\n};","size_bytes":31787},"client/src/components/ImageUploader.tsx":{"content":"import React, { useState, useCallback } from 'react';\nimport { Upload, X, ImageIcon, Loader2 } from 'lucide-react';\n\ninterface ImageUploaderProps {\n  images: string[];\n  onImagesChange: (images: string[]) => void;\n  userId: string;\n  maxImages?: number;\n  disabled?: boolean;\n  onError?: (message: string) => void;\n  onSuccess?: (message: string) => void;\n}\n\ninterface UploadedImage {\n  id: string;\n  url: string;\n  path: string;\n  originalName: string;\n  size: number;\n}\n\nexport const ImageUploader: React.FC<ImageUploaderProps> = ({\n  images,\n  onImagesChange,\n  userId,\n  maxImages = 4,\n  disabled = false,\n  onError,\n  onSuccess\n}) => {\n  const [uploading, setUploading] = useState(false);\n  const [dragActive, setDragActive] = useState(false);\n\n  const handleUpload = useCallback(async (files: FileList | File[]) => {\n    if (!files || files.length === 0) return;\n\n    const fileArray = Array.from(files);\n    const remainingSlots = maxImages - images.length;\n\n    if (fileArray.length > remainingSlots) {\n      if (onError) {\n        onError(`Vous pouvez ajouter seulement ${remainingSlots} image(s) suppl√©mentaire(s).`);\n      }\n      return;\n    }\n\n    // V√©rifier les types de fichiers\n    const validFiles = fileArray.filter(file => file.type.startsWith('image/'));\n    if (validFiles.length !== fileArray.length) {\n      if (onError) {\n        onError(\"Seules les images sont autoris√©es.\");\n      }\n    }\n\n    if (validFiles.length === 0) return;\n\n    setUploading(true);\n    \n    try {\n      const formData = new FormData();\n      validFiles.forEach(file => {\n        formData.append('images', file);\n      });\n\n      const response = await fetch(`/api/images/upload/${userId}`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('√âchec de l\\'upload');\n      }\n\n      const data = await response.json();\n      \n      if (data.success && data.images) {\n        const newImageUrls = data.images.map((img: UploadedImage) => img.url);\n        onImagesChange([...images, ...newImageUrls]);\n        \n        if (onSuccess) {\n          onSuccess(data.message || `${data.images.length} image(s) upload√©e(s) avec succ√®s.`);\n        }\n      } else {\n        throw new Error(data.error || 'Erreur lors de l\\'upload');\n      }\n    } catch (error) {\n      console.error('Erreur upload:', error);\n      if (onError) {\n        onError(error instanceof Error ? error.message : 'Une erreur est survenue lors de l\\'upload');\n      }\n    } finally {\n      setUploading(false);\n    }\n  }, [images, maxImages, userId, onImagesChange, onError, onSuccess]);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      handleUpload(event.target.files);\n    }\n  };\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n    \n    if (disabled || uploading) return;\n    \n    const files = e.dataTransfer.files;\n    if (files) {\n      handleUpload(files);\n    }\n  }, [disabled, uploading, handleUpload]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    if (!disabled && !uploading) {\n      setDragActive(true);\n    }\n  }, [disabled, uploading]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n  }, []);\n\n  const removeImage = (index: number) => {\n    const newImages = images.filter((_, i) => i !== index);\n    onImagesChange(newImages);\n  };\n\n  const canAddMore = images.length < maxImages && !disabled;\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Images existantes */}\n      {images.length > 0 && (\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {images.map((image, index) => (\n            <div key={index} className=\"relative group\">\n              <img\n                src={image}\n                alt={`Image ${index + 1}`}\n                className=\"w-full h-32 object-cover rounded-lg border-2 border-gray-200\"\n              />\n              {!disabled && (\n                <button\n                  type=\"button\"\n                  onClick={() => removeImage(index)}\n                  className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Zone d'upload */}\n      {canAddMore && (\n        <div\n          className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n            dragActive\n              ? 'border-primary-bolt-400 bg-primary-bolt-50'\n              : 'border-gray-300 hover:border-gray-400'\n          } ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n        >\n          <input\n            type=\"file\"\n            multiple\n            accept=\"image/*\"\n            onChange={handleFileSelect}\n            disabled={disabled || uploading}\n            className=\"hidden\"\n            id=\"image-upload\"\n          />\n          \n          <label htmlFor=\"image-upload\" className=\"cursor-pointer\">\n            <div className=\"flex flex-col items-center space-y-2\">\n              {uploading ? (\n                <Loader2 className=\"h-12 w-12 text-primary-bolt-500 animate-spin\" />\n              ) : (\n                <div className=\"flex items-center space-x-2\">\n                  <Upload className=\"h-8 w-8 text-gray-400\" />\n                  <ImageIcon className=\"h-8 w-8 text-gray-400\" />\n                </div>\n              )}\n              \n              <div>\n                <p className=\"text-lg font-medium text-gray-700\">\n                  {uploading ? 'Upload en cours...' : 'Ajouter des images'}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  Glissez vos images ici ou cliquez pour s√©lectionner\n                </p>\n                <p className=\"text-xs text-gray-400 mt-2\">\n                  {images.length}/{maxImages} images ‚Ä¢ Max 5MB par image ‚Ä¢ JPG, PNG, WEBP\n                </p>\n              </div>\n            </div>\n          </label>\n        </div>\n      )}\n\n      {images.length >= maxImages && (\n        <p className=\"text-sm text-gray-500 text-center\">\n          Limite de {maxImages} images atteinte\n        </p>\n      )}\n    </div>\n  );\n};","size_bytes":6532},"client/src/components/OptimizedImage.tsx":{"content":"import React, { useState, useCallback } from 'react';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  className?: string;\n  fallbackIcon?: React.ReactNode;\n  loading?: 'lazy' | 'eager';\n}\n\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  className = '',\n  fallbackIcon,\n  loading = 'lazy'\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleLoad = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n\n  const handleError = useCallback(() => {\n    setHasError(true);\n    setIsLoaded(true);\n  }, []);\n\n  // If there's an error or no src, show fallback\n  if (hasError || !src) {\n    return (\n      <div className={`${className} bg-gray-200 flex items-center justify-center`}>\n        {fallbackIcon || (\n          <div className=\"text-gray-400 text-xs\">Image non disponible</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative w-full h-full\">\n      {/* Loading placeholder */}\n      {!isLoaded && (\n        <div className={`absolute inset-0 bg-gray-200 animate-pulse flex items-center justify-center ${className}`}>\n          <div className=\"w-8 h-8 rounded-full bg-gray-300 animate-pulse\"></div>\n        </div>\n      )}\n      \n      {/* Main image */}\n      <img\n        src={src}\n        alt={alt}\n        loading={loading}\n        onLoad={handleLoad}\n        onError={handleError}\n        className={`${className} transition-opacity duration-300 ${\n          isLoaded ? 'opacity-100' : 'opacity-0'\n        }`}\n        style={{\n          // Add DNS prefetch for external domains\n          visibility: isLoaded ? 'visible' : 'hidden'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default OptimizedImage;","size_bytes":1752},"client/src/components/PremiumPackSelector.tsx":{"content":"import React from 'react';\nimport { Check, Crown, Zap, Star } from 'lucide-react';\nimport { PREMIUM_PACKS, PremiumPack } from '@/types/premium';\n\ninterface PremiumPackSelectorProps {\n  selectedPack: string;\n  onSelectPack: (packId: string) => void;\n}\n\nexport const PremiumPackSelector: React.FC<PremiumPackSelectorProps> = ({\n  selectedPack,\n  onSelectPack,\n}) => {\n  const getPackIcon = (packId: string) => {\n    switch (packId) {\n      case 'daily':\n        return <Zap className=\"h-6 w-6 text-white\" />;\n      case 'weekly':\n        return <Star className=\"h-6 w-6 text-white\" />;\n      case 'monthly':\n        return <Crown className=\"h-6 w-6 text-white\" />;\n      default:\n        return <Check className=\"h-6 w-6 text-white\" />;\n    }\n  };\n\n  const getPackColor = (packId: string) => {\n    switch (packId) {\n      case 'daily':\n        return 'from-blue-500 to-blue-600';\n      case 'weekly':\n        return 'from-purple-500 to-purple-600';\n      case 'monthly':\n        return 'from-yellow-500 to-yellow-600';\n      default:\n        return 'from-green-500 to-green-600';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          Options de visibilit√©\n        </h2>\n        <p className=\"text-gray-600\">\n          Choisissez votre pack premium pour augmenter la visibilit√© de votre annonce\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\n        {PREMIUM_PACKS.filter(pack => pack.id !== 'free').map((pack) => (\n          <div\n            key={pack.id}\n            className={`relative rounded-2xl border-2 transition-all duration-200 cursor-pointer ${\n              selectedPack === pack.id\n                ? 'border-primary-bolt-500 bg-primary-bolt-50 shadow-lg'\n                : 'border-gray-200 hover:border-gray-300 hover:shadow-md'\n            } ${pack.mostPopular ? 'ring-2 ring-purple-500 ring-opacity-50 mt-6' : ''}`}\n            onClick={() => onSelectPack(pack.id)}\n          >\n            {pack.mostPopular && (\n              <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 z-10\">\n                <span className=\"bg-purple-500 text-white text-xs font-semibold px-4 py-1.5 rounded-full whitespace-nowrap shadow-lg\">\n                  LE PLUS POPULAIRE\n                </span>\n              </div>\n            )}\n\n            <div className=\"p-6\">\n              {/* Ic√¥ne */}\n              <div className={`w-12 h-12 bg-gradient-to-r ${getPackColor(pack.id)} rounded-xl flex items-center justify-center mx-auto mb-4 shadow-lg`}>\n                {getPackIcon(pack.id)}\n              </div>\n\n              {/* Nom du pack */}\n              <h3 className=\"text-lg font-semibold text-gray-900 text-center mb-2\">\n                {pack.name}\n              </h3>\n\n              {/* Prix */}\n              <div className=\"text-center mb-4\">\n                {pack.price === 0 ? (\n                  <span className=\"text-2xl font-bold text-green-600\">Gratuit</span>\n                ) : (\n                  <div>\n                    <span className=\"text-3xl font-bold text-gray-900\">{pack.price}‚Ç¨</span>\n                    {pack.duration > 1 && (\n                      <span className=\"text-sm text-gray-500 ml-1\">\n                        / {pack.duration} jour{pack.duration > 1 ? 's' : ''}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n\n              {/* Description */}\n              <p className=\"text-sm text-gray-600 text-center mb-4\">\n                {pack.description}\n              </p>\n\n              {/* Fonctionnalit√©s */}\n              <ul className=\"space-y-2\">\n                {pack.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-center text-sm text-gray-700\">\n                    <Check className=\"h-4 w-4 text-green-500 mr-2 flex-shrink-0\" />\n                    {feature}\n                  </li>\n                ))}\n              </ul>\n\n              {/* √âconomies */}\n              {pack.id === 'weekly' && (\n                <div className=\"mt-4 text-center\">\n                  <span className=\"text-xs text-green-600 font-semibold bg-green-100 px-2 py-1 rounded-full\">\n                    √âconomie de 28% vs quotidien\n                  </span>\n                </div>\n              )}\n              {pack.id === 'monthly' && (\n                <div className=\"mt-4 text-center\">\n                  <span className=\"text-xs text-green-600 font-semibold bg-green-100 px-2 py-1 rounded-full\">\n                    √âconomie de 33% vs quotidien\n                  </span>\n                </div>\n              )}\n            </div>\n\n            {/* Indicateur de s√©lection */}\n            {selectedPack === pack.id && (\n              <div className=\"absolute top-4 right-4\">\n                <div className=\"w-6 h-6 bg-primary-bolt-500 rounded-full flex items-center justify-center\">\n                  <Check className=\"h-4 w-4 text-white\" />\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Information additionnelle */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4 mt-6\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n            <Check className=\"h-4 w-4 text-white\" />\n          </div>\n          <div>\n            <h4 className=\"font-semibold text-blue-900 mb-1\">\n              Comment fonctionne la remont√©e ?\n            </h4>\n            <p className=\"text-sm text-blue-800\">\n              Les annonces avec remont√©e apparaissent en premier dans les r√©sultats de recherche, \n              augmentant significativement leur visibilit√© et les chances de contact.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":5983},"client/src/components/PremiumPayment.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, PaymentElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { Check, CreditCard, Lock } from 'lucide-react';\nimport { PREMIUM_PACKS } from '@/types/premium';\n\n// Chargement de Stripe (sera disponible quand les cl√©s seront fournies)\nconst stripePromise = import.meta.env.VITE_STRIPE_PUBLIC_KEY \n  ? loadStripe(import.meta.env.VITE_STRIPE_PUBLIC_KEY)\n  : null;\n\ninterface PremiumPaymentProps {\n  selectedPack: string;\n  onPaymentSuccess: () => void;\n  onBack: () => void;\n}\n\nconst PaymentForm: React.FC<{ onPaymentSuccess: () => void }> = ({ onPaymentSuccess }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setIsProcessing(true);\n    setErrorMessage('');\n\n    try {\n      const { error } = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n          return_url: window.location.origin,\n        },\n      });\n\n      if (error) {\n        setErrorMessage(error.message || 'Une erreur est survenue lors du paiement');\n      } else {\n        onPaymentSuccess();\n      }\n    } catch (err) {\n      setErrorMessage('Une erreur inattendue est survenue');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n        <PaymentElement />\n      </div>\n      \n      <button\n        type=\"submit\"\n        disabled={!stripe || isProcessing}\n        className=\"w-full bg-primary-bolt-500 text-white py-4 px-6 rounded-xl font-semibold hover:bg-primary-bolt-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2\"\n      >\n        {isProcessing ? (\n          <>\n            <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            <span>Traitement en cours...</span>\n          </>\n        ) : (\n          <>\n            <Lock className=\"h-5 w-5\" />\n            <span>Payer maintenant</span>\n          </>\n        )}\n      </button>\n\n      {errorMessage && (\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-4\">\n          <p className=\"text-red-800 text-sm\">{errorMessage}</p>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport const PremiumPayment: React.FC<PremiumPaymentProps> = ({\n  selectedPack,\n  onPaymentSuccess,\n  onBack,\n}) => {\n  const [clientSecret, setClientSecret] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const selectedPackData = PREMIUM_PACKS.find(pack => pack.id === selectedPack);\n\n  useEffect(() => {\n    if (selectedPackData && selectedPackData.price > 0) {\n      createPaymentIntent();\n    }\n  }, [selectedPackData]);\n\n  const createPaymentIntent = async () => {\n    if (!selectedPackData) return;\n\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          amount: selectedPackData.price,\n          packId: selectedPackData.id,\n          description: `Pack ${selectedPackData.name}`,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erreur lors de la cr√©ation du paiement');\n      }\n\n      const { clientSecret } = await response.json();\n      setClientSecret(clientSecret);\n    } catch (error) {\n      console.error('Erreur:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Pack gratuit - pas de paiement n√©cessaire\n  if (!selectedPackData || selectedPackData.price === 0) {\n    return (\n      <div className=\"text-center space-y-6\">\n        <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto\">\n          <Check className=\"h-8 w-8 text-green-600\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900\">Publication gratuite</h2>\n        <p className=\"text-gray-600\">\n          Votre annonce sera publi√©e gratuitement et sera visible dans les r√©sultats de recherche.\n        </p>\n        <button\n          onClick={onPaymentSuccess}\n          className=\"bg-green-600 text-white py-3 px-8 rounded-xl font-semibold hover:bg-green-700 transition-colors\"\n        >\n          Continuer\n        </button>\n      </div>\n    );\n  }\n\n  // Pas de cl√©s Stripe configur√©es\n  if (!stripePromise) {\n    return (\n      <div className=\"text-center space-y-6\">\n        <div className=\"w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto\">\n          <CreditCard className=\"h-8 w-8 text-yellow-600\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-gray-900\">Paiement temporairement indisponible</h2>\n        <p className=\"text-gray-600\">\n          Le syst√®me de paiement n'est pas encore configur√©. Vous pouvez publier votre annonce gratuitement en attendant.\n        </p>\n        <div className=\"flex space-x-4 justify-center\">\n          <button\n            onClick={onBack}\n            className=\"bg-gray-500 text-white py-3 px-6 rounded-xl font-semibold hover:bg-gray-600 transition-colors\"\n          >\n            Retour\n          </button>\n          <button\n            onClick={onPaymentSuccess}\n            className=\"bg-primary-bolt-500 text-white py-3 px-6 rounded-xl font-semibold hover:bg-primary-bolt-600 transition-colors\"\n          >\n            Publier gratuitement\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Chargement du paiement\n  if (isLoading || !clientSecret) {\n    return (\n      <div className=\"text-center space-y-6\">\n        <div className=\"w-16 h-16 border-4 border-primary-bolt-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n        <h2 className=\"text-2xl font-bold text-gray-900\">Pr√©paration du paiement...</h2>\n        <p className=\"text-gray-600\">Veuillez patienter</p>\n      </div>\n    );\n  }\n\n  // Interface de paiement\n  return (\n    <div className=\"space-y-8\">\n      {/* R√©capitulatif du pack */}\n      <div className=\"bg-gray-50 rounded-xl p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">R√©capitulatif de votre commande</h3>\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <p className=\"font-medium text-gray-900\">{selectedPackData.name}</p>\n            <p className=\"text-sm text-gray-600\">{selectedPackData.description}</p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"text-2xl font-bold text-gray-900\">{selectedPackData.price}‚Ç¨</p>\n            <p className=\"text-sm text-gray-600\">\n              {selectedPackData.duration} jour{selectedPackData.duration > 1 ? 's' : ''}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Informations de s√©curit√© */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4\">\n        <div className=\"flex items-center space-x-3\">\n          <Lock className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <p className=\"font-medium text-blue-900\">Paiement s√©curis√©</p>\n            <p className=\"text-sm text-blue-800\">\n              Vos informations de paiement sont prot√©g√©es par le chiffrement SSL et trait√©es par Stripe.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Formulaire de paiement */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Informations de paiement</h3>\n        <Elements \n          stripe={stripePromise} \n          options={{ \n            clientSecret,\n            appearance: {\n              theme: 'stripe',\n              variables: {\n                colorPrimary: '#059669',\n              },\n            },\n          }}\n        >\n          <PaymentForm onPaymentSuccess={onPaymentSuccess} />\n        </Elements>\n      </div>\n\n      <button\n        onClick={onBack}\n        className=\"w-full bg-gray-500 text-white py-3 px-6 rounded-xl font-semibold hover:bg-gray-600 transition-colors\"\n      >\n        Retour √† la s√©lection des packs\n      </button>\n    </div>\n  );\n};","size_bytes":8387},"client/src/components/PublishSuccessModal.tsx":{"content":"import React, { useEffect, useState } from 'react';\nimport { CheckCircle, Clock, ArrowRight } from 'lucide-react';\n\ninterface PublishSuccessModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onNavigateToDashboard: () => void;\n  listingType: 'sell' | 'search';\n}\n\nexport const PublishSuccessModal: React.FC<PublishSuccessModalProps> = ({\n  isOpen,\n  onClose,\n  onNavigateToDashboard,\n  listingType\n}) => {\n  const [countdown, setCountdown] = useState(5);\n\n  useEffect(() => {\n    if (isOpen && countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (countdown === 0) {\n      // Redirection automatique apr√®s 5 secondes\n      onNavigateToDashboard();\n    }\n  }, [isOpen, countdown, onNavigateToDashboard]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setCountdown(5); // R√©initialiser le compteur quand la modal s'ouvre\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const isSearch = listingType === 'search';\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl max-w-md w-full p-8 text-center transform animate-in fade-in zoom-in duration-300\">\n        {/* Ic√¥ne de succ√®s */}\n        <div className=\"mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-6\">\n          <CheckCircle className=\"w-8 h-8 text-green-500\" />\n        </div>\n\n        {/* Titre */}\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-3\">\n          {isSearch ? 'Recherche publi√©e !' : 'Annonce publi√©e !'}\n        </h2>\n\n        {/* Message principal */}\n        <p className=\"text-gray-600 mb-6 leading-relaxed\">\n          Votre {isSearch ? 'recherche' : 'annonce'} a √©t√© re√ßue avec succ√®s et sera valid√©e dans quelques instants.\n        </p>\n\n        {/* Informations suppl√©mentaires */}\n        <div className=\"bg-blue-50 rounded-xl p-4 mb-6\">\n          <div className=\"flex items-center justify-center text-blue-600 mb-2\">\n            <Clock className=\"w-5 h-5 mr-2\" />\n            <span className=\"font-medium\">Validation en cours</span>\n          </div>\n          <p className=\"text-sm text-blue-700\">\n            Notre √©quipe v√©rifie votre {isSearch ? 'recherche' : 'annonce'} pour s'assurer qu'elle respecte nos conditions.\n            Vous recevrez une notification d√®s qu'elle sera en ligne.\n          </p>\n        </div>\n\n        {/* Boutons d'action */}\n        <div className=\"space-y-3\">\n          <button\n            onClick={onNavigateToDashboard}\n            className=\"w-full bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white font-semibold py-3 px-6 rounded-xl transition-colors flex items-center justify-center\"\n          >\n            <span>Voir mes annonces</span>\n            <ArrowRight className=\"w-5 h-5 ml-2\" />\n          </button>\n          \n          <button\n            onClick={onClose}\n            className=\"w-full text-gray-500 hover:text-gray-700 font-medium py-2 transition-colors\"\n          >\n            Continuer √† naviguer\n          </button>\n        </div>\n\n        {/* Compteur de redirection */}\n        <p className=\"text-xs text-gray-400 mt-4\">\n          Redirection automatique dans {countdown} seconde{countdown !== 1 ? 's' : ''}\n        </p>\n      </div>\n    </div>\n  );\n};","size_bytes":3376},"client/src/components/SearchFilters.tsx":{"content":"import React, { useState, useMemo } from 'react';\nimport { Filter, X, ChevronDown } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { brands, fuelTypes, conditions, categories } from '../utils/mockData';\n\ninterface SearchFiltersProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const SearchFilters: React.FC<SearchFiltersProps> = ({ isOpen, onClose }) => {\n  const { searchFilters, setSearchFilters, vehicles } = useApp();\n  const [localFilters, setLocalFilters] = useState(searchFilters);\n\n  // Mapping des cat√©gories principales vers sous-cat√©gories\n  const categoryMapping = {\n    'voiture-utilitaire': {\n      label: 'Voitures - Utilitaires',\n      subcategories: [\n        { id: 'voiture', label: 'Voitures' },\n        { id: 'utilitaire', label: 'Utilitaires' },\n        { id: 'caravane', label: 'Caravanes' },\n        { id: 'remorque', label: 'Remorques' }\n      ]\n    },\n    'moto-scooter-quad': {\n      label: 'Motos, Scooters, Quads',\n      subcategories: [\n        { id: 'moto', label: 'Motos' },\n        { id: 'scooter', label: 'Scooters' },\n        { id: 'quad', label: 'Quads' }\n      ]\n    },\n    'nautisme-sport-aerien': {\n      label: 'Nautisme, Sport et Plein air',\n      subcategories: [\n        { id: 'bateau', label: 'Bateaux' },\n        { id: 'jetski', label: 'Jet-skis' },\n        { id: 'aerien', label: 'A√©rien' }\n      ]\n    },\n    'services': {\n      label: 'Services',\n      subcategories: [\n        { id: 'reparation', label: 'R√©paration' },\n        { id: 'remorquage', label: 'Remorquage' },\n        { id: 'entretien', label: 'Entretien' },\n        { id: 'autre-service', label: 'Autres services' }\n      ]\n    },\n    'pieces': {\n      label: 'Pi√®ces d√©tach√©es',\n      subcategories: [\n        { id: 'piece-voiture', label: 'Pi√®ces voiture' },\n        { id: 'piece-moto', label: 'Pi√®ces moto' },\n        { id: 'autre-piece', label: 'Autres pi√®ces' }\n      ]\n    }\n  };\n\n  // D√©terminer les sous-cat√©gories disponibles selon la cat√©gorie principale active\n  const availableSubcategories = useMemo(() => {\n    if (!searchFilters.category) return [];\n    \n    // Si c'est une cat√©gorie principale, montrer ses sous-cat√©gories\n    if (categoryMapping[searchFilters.category as keyof typeof categoryMapping]) {\n      return categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories;\n    }\n    \n    // Si c'est d√©j√† une sous-cat√©gorie, ne pas afficher de sous-cat√©gories\n    // (pas de \"Type sp√©cifique\" si on est d√©j√† dans une sous-cat√©gorie)\n    return [];\n  }, [searchFilters.category]);\n\n  // Obtenir les marques disponibles selon la cat√©gorie active et la sous-cat√©gorie s√©lectionn√©e\n  const availableBrands = useMemo(() => {\n    if (!searchFilters.category) return brands;\n\n    // Obtenir les sous-cat√©gories concern√©es\n    let relevantSubcategories: string[] = [];\n    \n    // Si une sous-cat√©gorie sp√©cifique est s√©lectionn√©e dans les filtres locaux, l'utiliser\n    if (localFilters.subcategory) {\n      relevantSubcategories = [localFilters.subcategory];\n    } else if (categoryMapping[searchFilters.category as keyof typeof categoryMapping]) {\n      // Sinon, utiliser toutes les sous-cat√©gories de la cat√©gorie principale\n      relevantSubcategories = categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories.map(sub => sub.id);\n    } else {\n      // Sous-cat√©gorie directe\n      relevantSubcategories = [searchFilters.category];\n    }\n\n    // Filtrer les v√©hicules et extraire les marques uniques\n    const categoryVehicles = vehicles.filter(vehicle => \n      relevantSubcategories.includes(vehicle.category)\n    );\n    \n    const uniqueBrands = Array.from(new Set(\n      categoryVehicles.map(vehicle => vehicle.brand)\n        .filter(brand => !brand.includes(',')) // Exclure les marques avec plusieurs noms (ex: \"Honda, Yamaha, Kawasaki\")\n    )).sort();\n    \n    return uniqueBrands;\n  }, [searchFilters.category, localFilters.subcategory, vehicles]);\n\n  const handleFilterChange = (key: string, value: any) => {\n    const newFilters = { ...localFilters, [key]: value };\n    \n    // Si on change de sous-cat√©gorie, r√©initialiser la marque si elle n'est plus disponible\n    if (key === 'subcategory') {\n      // Recalculer les marques disponibles pour la nouvelle sous-cat√©gorie\n      const newRelevantSubcategories = value ? [value] : \n        (categoryMapping[searchFilters.category as keyof typeof categoryMapping]?.subcategories.map(sub => sub.id) || []);\n      \n      const newCategoryVehicles = vehicles.filter(vehicle => \n        newRelevantSubcategories.includes(vehicle.category)\n      );\n      \n      const newAvailableBrands = Array.from(new Set(\n        newCategoryVehicles.map(vehicle => vehicle.brand)\n          .filter(brand => !brand.includes(',')) // Exclure les marques avec plusieurs noms\n      ));\n      \n      // Si la marque actuellement s√©lectionn√©e n'est plus disponible, la r√©initialiser\n      if (localFilters.brand && !newAvailableBrands.includes(localFilters.brand)) {\n        newFilters.brand = undefined;\n      }\n    }\n    \n    setLocalFilters(newFilters);\n  };\n\n  const applyFilters = () => {\n    setSearchFilters(localFilters);\n    onClose();\n  };\n\n  const clearFilters = () => {\n    // Conserver la cat√©gorie d'origine lors de l'effacement\n    // Qu'elle soit une cat√©gorie principale ou une sous-cat√©gorie directe\n    const clearedFilters = searchFilters.category ? { category: searchFilters.category } : {};\n    setLocalFilters(clearedFilters);\n    setSearchFilters(clearedFilters);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div className=\"flex items-center space-x-3\">\n            <Filter className=\"h-6 w-6 text-primary-bolt-500\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">Filtres de recherche</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Filters Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Current Category Display */}\n          {searchFilters.category && (\n            <div className=\"bg-primary-bolt-50 border border-primary-bolt-200 rounded-lg p-4\">\n              <h3 className=\"text-sm font-medium text-primary-bolt-700 mb-2\">\n                Cat√©gorie actuelle\n              </h3>\n              <p className=\"text-primary-bolt-600\">\n                {categoryMapping[searchFilters.category as keyof typeof categoryMapping]?.label || searchFilters.category}\n              </p>\n            </div>\n          )}\n\n          {/* Subcategory and Brand */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Sous-cat√©gories dynamiques */}\n            {availableSubcategories.length > 0 && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Type sp√©cifique\n                </label>\n                <select\n                  value={localFilters.subcategory || ''}\n                  onChange={(e) => handleFilterChange('subcategory', e.target.value || undefined)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                >\n                  <option value=\"\">Tous types</option>\n                  {availableSubcategories.map((sub) => (\n                    <option key={sub.id} value={sub.id}>\n                      {sub.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Marque {availableBrands.length > 0 && `(${availableBrands.length} disponibles)`}\n              </label>\n              <select\n                value={localFilters.brand || ''}\n                onChange={(e) => handleFilterChange('brand', e.target.value || undefined)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              >\n                <option value=\"\">Toutes marques</option>\n                {availableBrands.map((brand) => (\n                  <option key={brand} value={brand}>\n                    {brand}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Price Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Prix (‚Ç¨)\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Prix min\"\n                value={localFilters.priceFrom || ''}\n                onChange={(e) => handleFilterChange('priceFrom', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Prix max\"\n                value={localFilters.priceTo || ''}\n                onChange={(e) => handleFilterChange('priceTo', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n            </div>\n          </div>\n\n          {/* Year Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Ann√©e\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Ann√©e min\"\n                value={localFilters.yearFrom || ''}\n                onChange={(e) => handleFilterChange('yearFrom', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Ann√©e max\"\n                value={localFilters.yearTo || ''}\n                onChange={(e) => handleFilterChange('yearTo', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n            </div>\n          </div>\n\n          {/* Mileage Range */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Kilom√©trage\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input\n                type=\"number\"\n                placeholder=\"Km min\"\n                value={localFilters.mileageFrom || ''}\n                onChange={(e) => handleFilterChange('mileageFrom', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Km max\"\n                value={localFilters.mileageTo || ''}\n                onChange={(e) => handleFilterChange('mileageTo', e.target.value ? parseInt(e.target.value) : undefined)}\n                className=\"px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              />\n            </div>\n          </div>\n\n          {/* Fuel Type and Condition */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Carburant\n              </label>\n              <select\n                value={localFilters.fuelType || ''}\n                onChange={(e) => handleFilterChange('fuelType', e.target.value || undefined)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              >\n                <option value=\"\">Tous carburants</option>\n                {fuelTypes.map((fuel) => (\n                  <option key={fuel.value} value={fuel.value}>\n                    {fuel.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                √âtat\n              </label>\n              <select\n                value={localFilters.condition || ''}\n                onChange={(e) => handleFilterChange('condition', e.target.value || undefined)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n              >\n                <option value=\"\">Tous √©tats</option>\n                {conditions.map((condition) => (\n                  <option key={condition.value} value={condition.value}>\n                    {condition.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Location */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Localisation\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Ville, d√©partement, r√©gion...\"\n              value={localFilters.location || ''}\n              onChange={(e) => handleFilterChange('location', e.target.value || undefined)}\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n            />\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-between items-center p-6 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={clearFilters}\n            className=\"px-6 py-2 text-gray-600 hover:text-gray-800 font-medium transition-colors\"\n          >\n            Effacer les filtres\n          </button>\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={onClose}\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n            >\n              Annuler\n            </button>\n            <button\n              onClick={applyFilters}\n              className=\"px-6 py-2 bg-primary-bolt-500 text-white rounded-xl hover:bg-primary-bolt-600 transition-colors font-medium\"\n            >\n              Appliquer les filtres\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":15410},"client/src/components/SearchResults.tsx":{"content":"import { useApp } from '../contexts/AppContext';\nimport { Vehicle } from '../types';\nimport { VehicleCard } from './VehicleCard';\nimport { ArrowLeft, Search } from 'lucide-react';\nimport { useMemo } from 'react';\n\ninterface SearchResultsProps {\n  searchQuery: string;\n  onBack: () => void;\n  onVehicleSelect: (vehicle: Vehicle) => void;\n}\n\nexport const SearchResults = ({ searchQuery, onBack, onVehicleSelect }: SearchResultsProps) => {\n  const { vehicles } = useApp();\n\n  // Fonction de recherche avanc√©e\n  const searchResults = useMemo(() => {\n    if (!searchQuery.trim()) return [];\n\n    const query = searchQuery.toLowerCase().trim();\n    const keywords = query.split(/\\s+/);\n\n    return vehicles.filter(vehicle => {\n      const searchableText = [\n        vehicle.title,\n        vehicle.description,\n        vehicle.brand,\n        vehicle.model,\n        vehicle.location,\n        vehicle.features?.join(' ') || '',\n        vehicle.category\n      ].join(' ').toLowerCase();\n\n      // V√©rifier si tous les mots-cl√©s sont pr√©sents\n      return keywords.every(keyword => \n        searchableText.includes(keyword)\n      );\n    }).sort((a, b) => {\n      // Trier par pertinence : les titres qui contiennent la recherche en premier\n      const aTitle = a.title.toLowerCase();\n      const bTitle = b.title.toLowerCase();\n      \n      if (aTitle.includes(query) && !bTitle.includes(query)) return -1;\n      if (!aTitle.includes(query) && bTitle.includes(query)) return 1;\n      \n      // Puis par date de cr√©ation (plus r√©cent en premier)\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    });\n  }, [vehicles, searchQuery]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"w-5 h-5\" />\n              <span>Retour</span>\n            </button>\n            <div className=\"flex items-center gap-3\">\n              <Search className=\"w-5 h-5 text-gray-400\" />\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">\n                  R√©sultats de recherche\n                </h1>\n                <p className=\"text-gray-600\">\n                  pour \"<span className=\"font-medium text-gray-900\">{searchQuery}</span>\"\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Contenu principal */}\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        {/* Statistiques de recherche */}\n        <div className=\"mb-6\">\n          <p className=\"text-gray-600\">\n            {searchResults.length > 0 ? (\n              <>\n                <span className=\"font-semibold text-gray-900\">{searchResults.length}</span>\n                {' '}r√©sultat{searchResults.length > 1 ? 's' : ''} trouv√©{searchResults.length > 1 ? 's' : ''}\n              </>\n            ) : (\n              'Aucun r√©sultat trouv√©'\n            )}\n          </p>\n        </div>\n\n        {/* R√©sultats */}\n        {searchResults.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {searchResults.map((vehicle) => (\n              <div key={vehicle.id} onClick={() => onVehicleSelect(vehicle)} className=\"cursor-pointer\">\n                <VehicleCard\n                  vehicle={vehicle}\n                />\n              </div>\n            ))}\n          </div>\n        ) : (\n          /* √âtat vide */\n          <div className=\"text-center py-16\">\n            <div className=\"mb-6\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Search className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Aucun r√©sultat trouv√©\n              </h3>\n              <p className=\"text-gray-600 max-w-md mx-auto mb-8\">\n                Nous n'avons trouv√© aucun v√©hicule correspondant √† votre recherche \"{searchQuery}\".\n                Essayez avec des mots-cl√©s diff√©rents ou v√©rifiez l'orthographe.\n              </p>\n            </div>\n            \n            {/* Suggestions */}\n            <div className=\"bg-white rounded-lg p-6 max-w-lg mx-auto border\">\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Suggestions pour am√©liorer votre recherche :</h4>\n              <ul className=\"text-left text-gray-600 space-y-2\">\n                <li>‚Ä¢ V√©rifiez l'orthographe des mots-cl√©s</li>\n                <li>‚Ä¢ Utilisez des termes plus g√©n√©raux (ex: \"BMW\" au lieu de \"BMW Serie 3\")</li>\n                <li>‚Ä¢ Essayez diff√©rentes combinaisons de mots</li>\n                <li>‚Ä¢ Recherchez par marque, mod√®le ou type de v√©hicule</li>\n              </ul>\n              <button\n                onClick={onBack}\n                className=\"mt-6 px-6 py-3 bg-primary-bolt-500 text-white rounded-lg hover:bg-primary-bolt-600 transition-colors\"\n              >\n                Nouvelle recherche\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};","size_bytes":5427},"client/src/components/TestInput.tsx":{"content":"import React, { useState } from 'react';\n\nexport const TestInput: React.FC = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"p-4 border border-red-500 bg-red-50\">\n      <h3 className=\"text-red-800 font-bold mb-2\">Test Input - Si celui-ci fonctionne, le probl√®me vient d'ailleurs</h3>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => {\n          console.log('TestInput onChange:', e.target.value);\n          setValue(e.target.value);\n        }}\n        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl\"\n        placeholder=\"Test de saisie directe\"\n      />\n      <p className=\"mt-2 text-sm text-red-700\">Valeur: {value}</p>\n    </div>\n  );\n};","size_bytes":720},"client/src/components/UnifiedAuthModal.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { X, Mail, Lock, User, Building, Phone, Eye, EyeOff, CheckCircle, AlertCircle } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { useAuthService } from '../services/AuthService';\n\ninterface FormErrors {\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  name?: string;\n  phone?: string;\n  companyName?: string;\n  terms?: string;\n}\n\nexport const UnifiedAuthModal: React.FC = () => {\n  const { showAuthModal, setShowAuthModal, authMode, setAuthMode } = useApp();\n  const { signIn, signUp, signInWithOAuth, handleAuthSuccess } = useAuthService();\n  \n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    phone: '',\n    type: 'individual' as 'individual' | 'professional',\n    companyName: '',\n    acceptTerms: false,\n    acceptNewsletter: false,\n  });\n  \n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1); // Pour inscription multi-√©tapes\n  const [notification, setNotification] = useState<{\n    title: string;\n    description: string;\n    variant: 'default' | 'destructive';\n  } | null>(null);\n\n  // Fonction de r√©initialisation du formulaire - d√©clar√©e avant utilisation\n  const resetForm = () => {\n    setFormData({\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      phone: '',\n      type: 'individual',\n      companyName: '',\n      acceptTerms: false,\n      acceptNewsletter: false,\n    });\n    setErrors({});\n    setStep(1);\n  };\n\n  // R√©initialiser le formulaire quand le mode change\n  useEffect(() => {\n    resetForm();\n  }, [authMode]);\n\n  if (!showAuthModal) return null;\n\n  const showToast = (title: string, description: string, variant: 'default' | 'destructive' = 'default') => {\n    setNotification({ title, description, variant });\n    // Auto-masquage de la notification apr√®s 4 secondes\n    setTimeout(() => {\n      setNotification(null);\n    }, 4000);\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n\n    // Validation email\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.email) {\n      newErrors.email = 'L\\'email est requis';\n    } else if (!emailRegex.test(formData.email)) {\n      newErrors.email = 'Format d\\'email invalide';\n    }\n\n    // Validation mot de passe\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Le mot de passe doit contenir au moins 8 caract√®res';\n    }\n\n    // Validations sp√©cifiques √† l'inscription\n    if (authMode === 'register') {\n      if (!formData.name) {\n        newErrors.name = 'Le nom est requis';\n      }\n\n      if (!formData.confirmPassword) {\n        newErrors.confirmPassword = 'Confirmez votre mot de passe';\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = 'Les mots de passe ne correspondent pas';\n      }\n\n      if (formData.type === 'professional' && !formData.companyName) {\n        newErrors.companyName = 'Le nom de l\\'entreprise est requis';\n      }\n\n      if (!formData.acceptTerms) {\n        newErrors.terms = 'Vous devez accepter les conditions d\\'utilisation';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleGoogleSignIn = async () => {\n    setIsLoading(true);\n    try {\n      await signInWithOAuth('google');\n      // Google OAuth redirige automatiquement, pas besoin de fermer la modal ici\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Probl√®me de connexion avec Google\", \"destructive\");\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      if (authMode === 'login') {\n        // Connexion\n        const result = await signIn(formData.email, formData.password);\n        \n        if (result.success) {\n          resetForm();\n          handleAuthSuccess();\n          setShowAuthModal(false);\n        } else {\n          showToast(\"Erreur de connexion\", result.error || 'Email ou mot de passe incorrect', \"destructive\");\n        }\n      } else {\n        // Inscription\n        const userData = {\n          name: formData.name,\n          type: formData.type,\n          phone: formData.phone,\n          companyName: formData.type === 'professional' ? formData.companyName : undefined,\n          newsletter: formData.acceptNewsletter\n        };\n        \n        const result = await signUp(formData.email, formData.password, userData);\n\n        if (result.success) {\n          resetForm();\n          showToast(\"Compte cr√©√©\", \"Un email de v√©rification a √©t√© envoy√©\", \"default\");\n          setTimeout(() => {\n            setShowAuthModal(false);\n          }, 2000);\n        } else {\n          showToast(\"Erreur d'inscription\", result.error || 'Erreur lors de la cr√©ation du compte', \"destructive\");\n        }\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", error.message || 'Une erreur est survenue', \"destructive\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    const checked = (e.target as HTMLInputElement).checked;\n    \n    setFormData({ \n      ...formData, \n      [name]: type === 'checkbox' ? checked : value \n    });\n    \n    // Effacer l'erreur quand l'utilisateur commence √† taper\n    if (errors[name as keyof FormErrors]) {\n      setErrors({ ...errors, [name]: undefined });\n    }\n  };\n\n  const handleClose = () => {\n    setShowAuthModal(false);\n    resetForm();\n  };\n\n  const switchMode = () => {\n    setAuthMode(authMode === 'login' ? 'register' : 'login');\n  };\n\n  const getPasswordStrength = (password: string) => {\n    let strength = 0;\n    if (password.length >= 8) strength++;\n    if (/[A-Z]/.test(password)) strength++;\n    if (/[a-z]/.test(password)) strength++;\n    if (/[0-9]/.test(password)) strength++;\n    if (/[^A-Za-z0-9]/.test(password)) strength++;\n    return strength;\n  };\n\n  const passwordStrength = getPasswordStrength(formData.password);\n\n  // Render password strength indicator\n  const renderPasswordStrength = () => {\n    if (!formData.password) return null;\n    \n    const labels = [\"Tr√®s faible\", \"Faible\", \"Moyen\", \"Fort\", \"Tr√®s fort\"];\n    const colors = [\"bg-red-500\", \"bg-orange-500\", \"bg-yellow-500\", \"bg-lime-500\", \"bg-green-500\"];\n    \n    return (\n      <div className=\"mt-1\">\n        <div className=\"flex gap-1 h-1 mb-1\">\n          {[1, 2, 3, 4, 5].map((level) => (\n            <div\n              key={level}\n              className={`h-full flex-1 rounded-full ${\n                level <= passwordStrength ? colors[passwordStrength - 1] : \"bg-gray-200\"\n              }`}\n            />\n          ))}\n        </div>\n        <p className=\"text-xs text-gray-600\">\n          Force: {labels[passwordStrength - 1] || \"Trop court\"}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4\">\n      <div className=\"relative bg-white rounded-xl shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-5 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">\n            {authMode === 'login' ? 'Connexion' : 'Cr√©er un compte'}\n          </h2>\n          <button\n            onClick={handleClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"Fermer\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        {/* Body */}\n        <div className=\"p-5\">\n          {/* Google Sign In Button */}\n          <button\n            onClick={handleGoogleSignIn}\n            disabled={isLoading}\n            className=\"w-full flex items-center justify-center gap-2 bg-white border border-gray-300 text-gray-700 rounded-lg p-2.5 mb-4 hover:bg-gray-50 transition-colors\"\n          >\n            {/* Logo Google SVG int√©gr√© directement */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 48 48\">\n              <path fill=\"#FFC107\" d=\"M43.611 20.083H42V20H24v8h11.303c-1.649 4.657-6.08 8-11.303 8c-6.627 0-12-5.373-12-12s5.373-12 12-12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4C12.955 4 4 12.955 4 24s8.955 20 20 20s20-8.955 20-20c0-1.341-.138-2.65-.389-3.917z\" />\n              <path fill=\"#FF3D00\" d=\"m6.306 14.691l6.571 4.819C14.655 15.108 18.961 12 24 12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4C16.318 4 9.656 8.337 6.306 14.691z\" />\n              <path fill=\"#4CAF50\" d=\"M24 44c5.166 0 9.86-1.977 13.409-5.192l-6.19-5.238A11.91 11.91 0 0 1 24 36c-5.202 0-9.619-3.317-11.283-7.946l-6.522 5.025C9.505 39.556 16.227 44 24 44z\" />\n              <path fill=\"#1976D2\" d=\"M43.611 20.083H42V20H24v8h11.303a12.04 12.04 0 0 1-4.087 5.571l.003-.002l6.19 5.238C36.971 39.205 44 34 44 24c0-1.341-.138-2.65-.389-3.917z\" />\n            </svg>\n            <span>{authMode === 'login' ? 'Se connecter avec Google' : 'S\\'inscrire avec Google'}</span>\n          </button>\n\n          <div className=\"relative my-4\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">ou</span>\n            </div>\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            {/* Login Form */}\n            {authMode === 'login' ? (\n              <>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Email\n                    </label>\n                    <div className=\"relative\">\n                      <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                        <Mail size={18} />\n                      </span>\n                      <input\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={formData.email}\n                        onChange={handleInputChange}\n                        placeholder=\"votre@email.com\"\n                        className={`w-full pl-10 pr-3 py-2.5 rounded-lg border ${\n                          errors.email ? 'border-red-500' : 'border-gray-300'\n                        } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                        required\n                      />\n                    </div>\n                    {errors.email && (\n                      <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Mot de passe\n                    </label>\n                    <div className=\"relative\">\n                      <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                        <Lock size={18} />\n                      </span>\n                      <input\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? 'text' : 'password'}\n                        value={formData.password}\n                        onChange={handleInputChange}\n                        placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                        className={`w-full pl-10 pr-10 py-2.5 rounded-lg border ${\n                          errors.password ? 'border-red-500' : 'border-gray-300'\n                        } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                        required\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600\"\n                        onClick={() => setShowPassword(!showPassword)}\n                      >\n                        {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n                      </button>\n                    </div>\n                    {errors.password && (\n                      <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\n                    )}\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                      <input\n                        id=\"remember\"\n                        name=\"remember\"\n                        type=\"checkbox\"\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor=\"remember\" className=\"ml-2 block text-sm text-gray-700\">\n                        Se souvenir de moi\n                      </label>\n                    </div>\n                    <a href=\"#\" className=\"text-sm font-medium text-primary-600 hover:text-primary-500\">\n                      Mot de passe oubli√©?\n                    </a>\n                  </div>\n                </div>\n              </>\n            ) : (\n              // Registration Form\n              <>\n                {step === 1 ? (\n                  <div className=\"space-y-4\">\n                    {/* Account Type Selection */}\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Type de compte\n                      </label>\n                      <div className=\"grid grid-cols-2 gap-3\">\n                        <button\n                          type=\"button\"\n                          onClick={() => setFormData({ ...formData, type: 'individual' })}\n                          className={`flex flex-col items-center justify-center p-3 border rounded-lg ${\n                            formData.type === 'individual'\n                              ? 'bg-primary-50 border-primary-500 text-primary-700'\n                              : 'border-gray-300 text-gray-700'\n                          }`}\n                        >\n                          <User size={24} className=\"mb-1\" />\n                          <span className=\"text-sm font-medium\">Particulier</span>\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => setFormData({ ...formData, type: 'professional' })}\n                          className={`flex flex-col items-center justify-center p-3 border rounded-lg ${\n                            formData.type === 'professional'\n                              ? 'bg-primary-50 border-primary-500 text-primary-700'\n                              : 'border-gray-300 text-gray-700'\n                          }`}\n                        >\n                          <Building size={24} className=\"mb-1\" />\n                          <span className=\"text-sm font-medium\">Professionnel</span>\n                        </button>\n                      </div>\n                    </div>\n\n                    {/* Personal Info */}\n                    <div>\n                      <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Nom complet\n                      </label>\n                      <div className=\"relative\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                          <User size={18} />\n                        </span>\n                        <input\n                          id=\"name\"\n                          name=\"name\"\n                          type=\"text\"\n                          value={formData.name}\n                          onChange={handleInputChange}\n                          placeholder=\"Votre nom\"\n                          className={`w-full pl-10 pr-3 py-2.5 rounded-lg border ${\n                            errors.name ? 'border-red-500' : 'border-gray-300'\n                          } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                          required\n                        />\n                      </div>\n                      {errors.name && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\n                      )}\n                    </div>\n\n                    {formData.type === 'professional' && (\n                      <div>\n                        <label htmlFor=\"companyName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Nom de l'entreprise\n                        </label>\n                        <div className=\"relative\">\n                          <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                            <Building size={18} />\n                          </span>\n                          <input\n                            id=\"companyName\"\n                            name=\"companyName\"\n                            type=\"text\"\n                            value={formData.companyName}\n                            onChange={handleInputChange}\n                            placeholder=\"Nom de votre entreprise\"\n                            className={`w-full pl-10 pr-3 py-2.5 rounded-lg border ${\n                              errors.companyName ? 'border-red-500' : 'border-gray-300'\n                            } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                          />\n                        </div>\n                        {errors.companyName && (\n                          <p className=\"mt-1 text-sm text-red-600\">{errors.companyName}</p>\n                        )}\n                      </div>\n                    )}\n\n                    <div>\n                      <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        T√©l√©phone\n                      </label>\n                      <div className=\"relative\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                          <Phone size={18} />\n                        </span>\n                        <input\n                          id=\"phone\"\n                          name=\"phone\"\n                          type=\"tel\"\n                          value={formData.phone}\n                          onChange={handleInputChange}\n                          placeholder=\"Votre num√©ro de t√©l√©phone\"\n                          className=\"w-full pl-10 pr-3 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                        />\n                      </div>\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      onClick={() => setStep(2)}\n                      className=\"w-full py-2.5 px-4 bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white font-medium rounded-lg transition-colors\"\n                    >\n                      Continuer\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Email\n                      </label>\n                      <div className=\"relative\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                          <Mail size={18} />\n                        </span>\n                        <input\n                          id=\"email\"\n                          name=\"email\"\n                          type=\"email\"\n                          value={formData.email}\n                          onChange={handleInputChange}\n                          placeholder=\"votre@email.com\"\n                          className={`w-full pl-10 pr-3 py-2.5 rounded-lg border ${\n                            errors.email ? 'border-red-500' : 'border-gray-300'\n                          } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                          required\n                        />\n                      </div>\n                      {errors.email && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Mot de passe\n                      </label>\n                      <div className=\"relative\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                          <Lock size={18} />\n                        </span>\n                        <input\n                          id=\"password\"\n                          name=\"password\"\n                          type={showPassword ? 'text' : 'password'}\n                          value={formData.password}\n                          onChange={handleInputChange}\n                          placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                          className={`w-full pl-10 pr-10 py-2.5 rounded-lg border ${\n                            errors.password ? 'border-red-500' : 'border-gray-300'\n                          } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                          required\n                        />\n                        <button\n                          type=\"button\"\n                          className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600\"\n                          onClick={() => setShowPassword(!showPassword)}\n                        >\n                          {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n                        </button>\n                      </div>\n                      {renderPasswordStrength()}\n                      {errors.password && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                        Confirmer le mot de passe\n                      </label>\n                      <div className=\"relative\">\n                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400\">\n                          <Lock size={18} />\n                        </span>\n                        <input\n                          id=\"confirmPassword\"\n                          name=\"confirmPassword\"\n                          type={showConfirmPassword ? 'text' : 'password'}\n                          value={formData.confirmPassword}\n                          onChange={handleInputChange}\n                          placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                          className={`w-full pl-10 pr-10 py-2.5 rounded-lg border ${\n                            errors.confirmPassword ? 'border-red-500' : 'border-gray-300'\n                          } focus:ring-2 focus:ring-primary-500 focus:border-primary-500`}\n                          required\n                        />\n                        <button\n                          type=\"button\"\n                          className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600\"\n                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                        >\n                          {showConfirmPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n                        </button>\n                      </div>\n                      {errors.confirmPassword && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword}</p>\n                      )}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"acceptTerms\"\n                            name=\"acceptTerms\"\n                            type=\"checkbox\"\n                            checked={formData.acceptTerms}\n                            onChange={handleInputChange}\n                            className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3\">\n                          <label htmlFor=\"acceptTerms\" className=\"text-sm text-gray-700\">\n                            J'accepte les{' '}\n                            <a href=\"#\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n                              conditions d'utilisation\n                            </a>\n                          </label>\n                          {errors.terms && (\n                            <p className=\"mt-1 text-xs text-red-600\">{errors.terms}</p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"acceptNewsletter\"\n                            name=\"acceptNewsletter\"\n                            type=\"checkbox\"\n                            checked={formData.acceptNewsletter}\n                            onChange={handleInputChange}\n                            className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3\">\n                          <label htmlFor=\"acceptNewsletter\" className=\"text-sm text-gray-700\">\n                            Je souhaite recevoir des actualit√©s et offres par email\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex gap-3\">\n                      <button\n                        type=\"button\"\n                        onClick={() => setStep(1)}\n                        className=\"flex-1 py-2.5 px-4 border border-gray-300 text-gray-700 font-medium rounded-lg hover:bg-gray-50 transition-colors\"\n                      >\n                        Retour\n                      </button>\n                      <button\n                        type=\"submit\"\n                        disabled={isLoading}\n                        className=\"flex-1 py-2.5 px-4 bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white font-medium rounded-lg transition-colors disabled:opacity-50\"\n                      >\n                        {isLoading ? \"Cr√©ation en cours...\" : \"Cr√©er mon compte\"}\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n\n            {/* Submit button for login */}\n            {authMode === 'login' && (\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full py-2.5 mt-4 px-4 bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white font-medium rounded-lg transition-colors disabled:opacity-50\"\n              >\n                {isLoading ? \"Connexion...\" : \"Se connecter\"}\n              </button>\n            )}\n          </form>\n\n          {/* Footer */}\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-gray-600\">\n              {authMode === 'login' ? \"Pas encore de compte ?\" : \"D√©j√† un compte ?\"}\n              <button\n                type=\"button\"\n                onClick={switchMode}\n                className=\"ml-1 font-medium text-primary-600 hover:text-primary-500\"\n              >\n                {authMode === 'login' ? \"Cr√©er un compte\" : \"Se connecter\"}\n              </button>\n            </p>\n          </div>\n        </div>\n\n        {/* Notification Toast */}\n        {notification && (\n          <div\n            className={`fixed top-4 right-4 p-4 rounded-lg shadow-lg max-w-sm z-50 ${\n              notification.variant === 'destructive'\n                ? 'bg-red-50 border border-red-200 text-red-800'\n                : 'bg-green-50 border border-green-200 text-green-800'\n            }`}\n          >\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                {notification.variant === 'destructive' ? (\n                  <AlertCircle className=\"h-5 w-5 text-red-400\" />\n                ) : (\n                  <CheckCircle className=\"h-5 w-5 text-green-400\" />\n                )}\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium\">{notification.title}</h3>\n                <div className=\"mt-1 text-sm text-gray-600\">\n                  {notification.description}\n                </div>\n              </div>\n              <div className=\"ml-auto pl-3\">\n                <button\n                  onClick={() => setNotification(null)}\n                  className=\"inline-flex text-gray-400 hover:text-gray-500\"\n                >\n                  <X size={16} />\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","size_bytes":30271},"client/src/components/VehicleCard.tsx":{"content":"import React, { useState } from 'react';\nimport { Calendar, Gauge, MapPin, Eye, Heart, Crown, MessageCircle } from 'lucide-react';\nimport { Vehicle } from '../types';\nimport brandIcon from '@assets/Brand_1752260033631.png';\nimport { OptimizedImage } from './OptimizedImage';\nimport { FavoriteButton } from './FavoriteButton';\n\ninterface VehicleCardProps {\n  vehicle: Vehicle;\n  onClick: () => void;\n}\n\nconst VehicleCardComponent: React.FC<VehicleCardProps> = ({ vehicle, onClick }) => {\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatMileage = (mileage: number) => {\n    return new Intl.NumberFormat('fr-FR').format(mileage) + ' km';\n  };\n\n  const getCategoryIcon = (category: string) => {\n    return (\n      <img \n        src={brandIcon} \n        alt=\"Brand icon\" \n        className=\"w-16 h-16 opacity-60\"\n      />\n    );\n  };\n\n  return (\n    <div \n      onClick={onClick}\n      className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-200 transform hover:scale-[1.02] cursor-pointer overflow-hidden border border-gray-100\"\n    >\n      {/* Premium Badge */}\n      {vehicle.isPremium && (\n        <div className=\"relative\">\n          <div className=\"absolute top-3 left-3 z-10 bg-gradient-to-r from-orange-500 to-orange-600 text-white px-3 py-1 rounded-full text-xs font-semibold flex items-center space-x-1 shadow-lg\">\n            <Crown className=\"h-3 w-3\" />\n            <span>Premium</span>\n          </div>\n        </div>\n      )}\n\n      {/* Image */}\n      <div className=\"relative h-48 bg-gray-200 overflow-hidden\">\n        {vehicle.images.length > 0 ? (\n          <OptimizedImage\n            src={vehicle.images[0]}\n            alt={vehicle.title}\n            className=\"w-full h-full object-cover transition-transform duration-200 hover:scale-105\"\n            fallbackIcon={getCategoryIcon(vehicle.category)}\n            loading=\"lazy\"\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center text-6xl\">\n            {getCategoryIcon(vehicle.category)}\n          </div>\n        )}\n        \n        {/* Favorite Button */}\n        <div className=\"absolute top-3 right-3 z-10\">\n          <FavoriteButton \n            vehicleId={vehicle.id} \n            className=\"bg-white bg-opacity-90 hover:bg-opacity-100 p-2 rounded-full shadow-md backdrop-blur-sm\"\n            size=\"md\"\n          />\n        </div>\n        \n        {/* Image count */}\n        {vehicle.images.length > 1 && (\n          <div className=\"absolute bottom-3 right-3 bg-black bg-opacity-70 text-white px-2 py-1 rounded text-xs\">\n            +{vehicle.images.length - 1} photos\n          </div>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {/* Title and Price */}\n        <div className=\"flex justify-between items-start mb-3\">\n          <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-2 flex-1 mr-4\">\n            {vehicle.title}\n          </h3>\n          <div className=\"text-right\">\n            <div className=\"text-xl font-bold text-primary-bolt-500\">\n              {formatPrice(vehicle.price)}\n            </div>\n            {vehicle.user?.type === 'professional' && (\n              <div className=\"text-xs text-orange-600 font-medium\">PRO</div>\n            )}\n          </div>\n        </div>\n\n        {/* Vehicle Details */}\n        <div className=\"grid grid-cols-2 gap-3 mb-4 text-sm text-gray-600\">\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-4 w-4 text-gray-400\" />\n            <span>{vehicle.year}</span>\n          </div>\n          \n          {vehicle.mileage && (\n            <div className=\"flex items-center space-x-2\">\n              <Gauge className=\"h-4 w-4 text-gray-400\" />\n              <span>{formatMileage(vehicle.mileage)}</span>\n            </div>\n          )}\n          \n          <div className=\"flex items-center space-x-2\">\n            <MapPin className=\"h-4 w-4 text-gray-400\" />\n            <span className=\"truncate\">{vehicle.location}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"px-2 py-1 bg-gray-100 rounded text-xs font-medium\">\n              {vehicle.brand}\n            </span>\n          </div>\n        </div>\n\n        {/* Features */}\n        {vehicle.features.length > 0 && (\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-1\">\n              {vehicle.features.slice(0, 3).map((feature, index) => (\n                <span\n                  key={index}\n                  className=\"px-2 py-1 bg-primary-bolt-50 text-primary-bolt-500 text-xs rounded font-medium\"\n                >\n                  {feature}\n                </span>\n              ))}\n              {vehicle.features.length > 3 && (\n                <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded font-medium\">\n                  +{vehicle.features.length - 3}\n                </span>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Stats and Actions */}\n        <div className=\"flex justify-between items-center pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n            <div className=\"flex items-center space-x-1\">\n              <Eye className=\"h-4 w-4\" />\n              <span>{vehicle.views} vues</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Heart className=\"h-4 w-4\" />\n              <span>{vehicle.favorites} favoris</span>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button \n              className=\"p-2 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n              onClick={(e) => {\n                e.stopPropagation();\n                // Handle message\n              }}\n            >\n              <MessageCircle className=\"h-4 w-4\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const VehicleCard = React.memo(VehicleCardComponent);","size_bytes":6245},"client/src/components/VehicleDetail.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, Calendar, Gauge, MapPin, Heart, MessageCircle, Share2, Crown, Eye, Phone, Mail, CheckCircle, X, Send } from 'lucide-react';\nimport { FavoriteButton } from './FavoriteButton';\nimport { Vehicle } from '../types';\nimport { WhatsAppContact } from './WhatsAppContact';\nimport { VehicleCard } from './VehicleCard';\nimport { Breadcrumb } from './Breadcrumb';\nimport { useApp } from '../contexts/AppContext';\nimport { AuthModal } from './AuthModal';\nimport { Footer } from './Footer';\nimport { ContactSellerModal } from './ContactSellerModal';\nimport { useAuth } from '../contexts/AuthContext';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\ninterface VehicleDetailProps {\n  vehicle: Vehicle;\n  onBack: () => void;\n  onVehicleSelect?: (vehicle: Vehicle) => void;\n  onNavigate?: (path: string) => void;\n  setCurrentView?: (view: string) => void;\n}\n\nexport const VehicleDetail: React.FC<VehicleDetailProps> = ({ vehicle, onBack, onVehicleSelect, onNavigate, setCurrentView }) => {\n  const { currentUser, setShowAuthModal: setGlobalAuthModal, vehicles } = useApp();\n  const { user: authUser } = useAuth();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [showContactInfo, setShowContactInfo] = useState(false);\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [messageText, setMessageText] = useState('');\n  const [showContactModal, setShowContactModal] = useState(false);\n\n  // Function to handle navigation from footer links\n  const handleFooterNavigation = (view: string) => {\n    onBack(); // Close vehicle detail\n    if (setCurrentView) {\n      setCurrentView(view); // Navigate to requested view\n      // Scroll to top after navigation\n      setTimeout(() => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }, 100);\n    }\n  };\n\n  // Scroll to top when vehicle changes\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [vehicle.id]);\n\n  // Function to find similar vehicles\n  const getSimilarVehicles = (currentVehicle: Vehicle, limit: number = 4): Vehicle[] => {\n    // Get all vehicles in the same subcategory (excluding current)\n    const sameSubcategoryVehicles = vehicles.filter(v => \n      v.id !== currentVehicle.id && \n      v.category === currentVehicle.category\n    );\n\n    // If no other vehicles in subcategory, return empty array\n    if (sameSubcategoryVehicles.length === 0) {\n      return [];\n    }\n\n    // Sort vehicles by multiple criteria with priority scoring\n    const scoredVehicles = sameSubcategoryVehicles.map(v => {\n      let score = 0;\n      \n      // Same brand gets highest priority (100 points)\n      if (v.brand === currentVehicle.brand) {\n        score += 100;\n      }\n\n      // Price similarity (0-50 points based on price difference)\n      const priceDiff = Math.abs(v.price - currentVehicle.price);\n      const maxPriceDiff = Math.max(currentVehicle.price, 10000); // Avoid division by 0\n      const priceScore = Math.max(0, 50 - (priceDiff / maxPriceDiff) * 50);\n      score += priceScore;\n\n      // Same type gets bonus points (30 points)\n      if (v.type === currentVehicle.type) {\n        score += 30;\n      }\n\n      // Same condition gets bonus points (20 points)\n      if (v.condition === currentVehicle.condition) {\n        score += 20;\n      }\n\n      // Year similarity (0-20 points)\n      if (v.year && currentVehicle.year) {\n        const yearDiff = Math.abs(v.year - currentVehicle.year);\n        const yearScore = Math.max(0, 20 - yearDiff);\n        score += yearScore;\n      }\n\n      // Mileage similarity for used vehicles (0-15 points)\n      if (v.mileage && currentVehicle.mileage && currentVehicle.condition === 'used') {\n        const mileageDiff = Math.abs(v.mileage - currentVehicle.mileage);\n        const maxMileageDiff = Math.max(currentVehicle.mileage, 50000);\n        const mileageScore = Math.max(0, 15 - (mileageDiff / maxMileageDiff) * 15);\n        score += mileageScore;\n      }\n\n      return { vehicle: v, score };\n    });\n\n    // Sort by score (highest first) and return top vehicles\n    return scoredVehicles\n      .sort((a, b) => b.score - a.score)\n      .slice(0, limit)\n      .map(item => item.vehicle);\n  };\n\n  const similarVehicles = getSimilarVehicles(vehicle);\n\n  // Function to find compatible spare parts for damaged vehicles\n  const getCompatibleSpareParts = (currentVehicle: Vehicle): Vehicle[] => {\n    if (currentVehicle.condition !== 'damaged') return [];\n    \n    return vehicles.filter(v => \n      v.category === 'piece-voiture' && // Only spare parts\n      v.brand === currentVehicle.brand && // Same brand\n      (\n        v.model.toLowerCase().includes(currentVehicle.model.toLowerCase()) || // Model matches\n        v.description.toLowerCase().includes(currentVehicle.model.toLowerCase()) || // Description mentions model\n        v.features?.some(feature => \n          feature.toLowerCase().includes(currentVehicle.model.toLowerCase())\n        ) // Features mention model\n      )\n    );\n  };\n\n  const compatibleParts = getCompatibleSpareParts(vehicle);\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const formatMileage = (mileage: number) => {\n    return new Intl.NumberFormat('fr-FR').format(mileage) + ' km';\n  };\n\n  const nextImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === vehicle.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const prevImage = () => {\n    setCurrentImageIndex((prev) => \n      prev === 0 ? vehicle.images.length - 1 : prev - 1\n    );\n  };\n\n  const handleBreadcrumbNavigation = (path: string) => {\n    if (onNavigate) {\n      onNavigate(path);\n    } else {\n      onBack(); // Fallback to going back\n    }\n  };\n\n  const handleMessageClick = () => {\n    if (authUser || currentUser) {\n      setShowContactModal(true);\n    } else {\n      setGlobalAuthModal(true);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (!messageText.trim()) return;\n    \n    // Ici on enverrait le message via une API\n    console.log('Message envoy√©:', {\n      from: currentUser?.id,\n      to: vehicle.userId,\n      vehicleId: vehicle.id,\n      message: messageText\n    });\n    \n    setMessageText('');\n    setShowMessageForm(false);\n    // Afficher une confirmation\n    alert('Message envoy√© avec succ√®s !');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 relative z-0\">\n      {/* Breadcrumb */}\n      <Breadcrumb vehicle={vehicle} onNavigate={handleBreadcrumbNavigation} />\n      \n      {/* Back Button */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <button\n            onClick={onBack}\n            className=\"flex items-center space-x-2 text-gray-600 hover:text-primary-bolt-500 transition-colors\"\n          >\n            <ArrowLeft className=\"h-5 w-5\" />\n            <span>Retour aux annonces</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Left Column - Images and Details */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Image Gallery */}\n            {vehicle.images.length > 0 && (\n              <div className=\"bg-white rounded-xl shadow-md overflow-hidden\">\n                <div className=\"relative h-96 bg-gray-200\">\n                  <img\n                    src={vehicle.images[currentImageIndex]}\n                    alt={vehicle.title}\n                    className=\"w-full h-full object-cover\"\n                  />\n                  \n                  {vehicle.images.length > 1 && (\n                    <div>\n                      <button\n                        onClick={prevImage}\n                        className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-all\"\n                      >\n                        ‚Üê\n                      </button>\n                      <button\n                        onClick={nextImage}\n                        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-all\"\n                      >\n                        ‚Üí\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Premium Badge */}\n                  {vehicle.isPremium && (\n                    <div className=\"absolute top-4 left-4 bg-gradient-to-r from-orange-500 to-orange-600 text-white px-3 py-1 rounded-full text-sm font-semibold flex items-center space-x-1\">\n                      <Crown className=\"h-4 w-4\" />\n                      <span>Premium</span>\n                    </div>\n                  )}\n\n                  {/* Favoris et Partage Icons */}\n                  <div className=\"absolute top-4 right-4 flex space-x-2\">\n                    <FavoriteButton \n                      vehicleId={vehicle.id}\n                      className=\"bg-white bg-opacity-90 hover:bg-opacity-100 p-2 rounded-full shadow-lg transition-all\"\n                      size=\"md\"\n                    />\n                    <button className=\"bg-white bg-opacity-90 hover:bg-opacity-100 p-2 rounded-full shadow-lg transition-all\">\n                      <Share2 className=\"h-5 w-5 text-gray-600 hover:text-blue-500\" />\n                    </button>\n                  </div>\n\n                  {/* Image Counter */}\n                  {vehicle.images.length > 1 && (\n                    <div className=\"absolute bottom-4 right-4 bg-black bg-opacity-70 text-white px-3 py-1 rounded-full text-sm\">\n                      {currentImageIndex + 1} / {vehicle.images.length}\n                    </div>\n                  )}\n                </div>\n\n                {/* Image Thumbnails */}\n                {vehicle.images.length > 1 && (\n                  <div className=\"p-4 flex space-x-2 overflow-x-auto\">\n                    {vehicle.images.map((image, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setCurrentImageIndex(index)}\n                        className={`flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden border-2 transition-all ${\n                          currentImageIndex === index\n                            ? 'border-[#0CBFDE]'\n                            : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                      >\n                        <img\n                          src={image}\n                          alt={`${vehicle.title} ${index + 1}`}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Vehicle Details */}\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\n              <div className=\"flex justify-between items-start mb-6\">\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">{vehicle.title}</h1>\n                  <div className=\"flex items-center space-x-4 text-gray-600\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Eye className=\"h-4 w-4\" />\n                      <span>{vehicle.views} vues</span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <Heart className=\"h-4 w-4\" />\n                      <span>{vehicle.favorites} favoris</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-3xl font-bold text-primary-bolt-500 mb-1\">\n                    {formatPrice(vehicle.price)}\n                  </div>\n                  {vehicle.user?.type === 'professional' && (\n                    <span className=\"bg-orange-100 text-orange-800 px-2 py-1 rounded text-sm font-medium\">\n                      Professionnel\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              {/* Key Information - Conditional based on category */}\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                {/* Localisation - toujours affich√©e */}\n                <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                  <MapPin className=\"h-5 w-5 text-gray-400\" />\n                  <div>\n                    <div className=\"text-sm text-gray-600\">Localisation</div>\n                    <div className=\"font-semibold\">{vehicle.location}</div>\n                  </div>\n                </div>\n\n                {/* Ann√©e - seulement pour les v√©hicules, pas pour les services */}\n                {vehicle.category !== 'services' && (\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <Calendar className=\"h-5 w-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Ann√©e</div>\n                      <div className=\"font-semibold\">{vehicle.year}</div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Kilom√©trage - seulement pour les v√©hicules avec kilom√©trage */}\n                {vehicle.category !== 'services' && vehicle.mileage && vehicle.mileage > 0 && (\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <Gauge className=\"h-5 w-5 text-gray-400\" />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Kilom√©trage</div>\n                      <div className=\"font-semibold\">{formatMileage(vehicle.mileage)}</div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Marque - seulement pour les v√©hicules, pas pour les services */}\n                {vehicle.category !== 'services' && vehicle.brand !== 'Non sp√©cifi√©' && (\n                  <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg\">\n                    <img \n                      src={brandIcon} \n                      alt=\"Brand icon\" \n                      className=\"w-6 h-6 opacity-60\"\n                    />\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Marque</div>\n                      <div className=\"font-semibold\">{vehicle.brand}</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Description */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Description</h3>\n                <p className=\"text-gray-700 whitespace-pre-line leading-relaxed\">\n                  {vehicle.description}\n                </p>\n              </div>\n\n              {/* Features */}\n              {vehicle.features.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">√âquipements</h3>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                    {vehicle.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center space-x-2 p-2 bg-cyan-50 text-[#0CBFDE] rounded-lg\">\n                        <CheckCircle className=\"h-4 w-4\" />\n                        <span className=\"text-sm font-medium\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right Column - Contact and Actions */}\n          <div className=\"space-y-6\">\n            {/* Contact Card */}\n            <div className=\"bg-white rounded-xl shadow-md p-6\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-12 h-12 bg-cyan-100 rounded-full flex items-center justify-center\">\n                  <span className=\"text-[#0CBFDE] font-semibold text-lg\">\n                    {vehicle.user?.name.charAt(0)}\n                  </span>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">{vehicle.user?.name}</h3>\n                  {vehicle.user?.type === 'professional' && vehicle.user?.companyName && (\n                    <p className=\"text-sm text-gray-600\">{vehicle.user.companyName}</p>\n                  )}\n                  <div className=\"flex items-center space-x-1 text-green-600 text-sm\">\n                    <CheckCircle className=\"h-4 w-4\" />\n                    <span>Compte v√©rifi√©</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Contact Actions */}\n              <div className=\"space-y-3\">\n                <button\n                  onClick={() => setShowContactInfo(!showContactInfo)}\n                  className=\"w-full bg-primary-bolt-500 text-white py-3 px-4 rounded-xl hover:bg-primary-bolt-600 transition-colors font-semibold flex items-center justify-center space-x-2\"\n                >\n                  <Phone className=\"h-5 w-5\" />\n                  <span>Voir le t√©l√©phone</span>\n                </button>\n\n                {showContactInfo && (vehicle.contactPhone || vehicle.user?.phone) && (\n                  <div className=\"p-3 bg-primary-bolt-50 rounded-xl text-center\">\n                    <a\n                      href={`tel:${vehicle.contactPhone || vehicle.user?.phone}`}\n                      className=\"text-lg font-semibold text-primary-bolt-500 hover:text-primary-bolt-600\"\n                    >\n                      {vehicle.contactPhone || vehicle.user?.phone}\n                    </a>\n                  </div>\n                )}\n\n                {/* WhatsApp Button - Mobile Only */}\n                {(vehicle.contactWhatsapp || vehicle.user?.whatsapp) && (\n                  <button\n                    onClick={() => {\n                      const whatsappNumber = vehicle.contactWhatsapp || vehicle.user?.whatsapp;\n                      const cleanNumber = whatsappNumber!.replace(/[\\s\\-\\(\\)]/g, '').replace(/^\\+/, '');\n                      const message = `Bonjour, je suis int√©ress√© par votre annonce ${vehicle.title}.`;\n                      const whatsappUrl = `https://wa.me/${cleanNumber}?text=${encodeURIComponent(message)}`;\n                      window.open(whatsappUrl, '_blank');\n                    }}\n                    className=\"w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-xl transition-colors font-semibold flex items-center justify-center space-x-2 md:hidden\"\n                  >\n                    <svg className=\"h-5 w-5 fill-current\" viewBox=\"0 0 24 24\">\n                      <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                    </svg>\n                    <span>Contacter sur WhatsApp</span>\n                  </button>\n                )}\n\n                <button \n                  onClick={handleMessageClick}\n                  className=\"w-full bg-gray-600 text-white py-3 px-4 rounded-xl hover:bg-gray-700 transition-colors font-semibold flex items-center justify-center space-x-2\"\n                >\n                  <MessageCircle className=\"h-5 w-5\" />\n                  <span>Envoyer un message</span>\n                </button>\n\n\n              </div>\n            </div>\n\n            {/* WhatsApp Contact Component - Desktop/Tablet Only */}\n            {(vehicle.contactWhatsapp || vehicle.user?.whatsapp) && (\n              <div className=\"hidden md:block\">\n                <WhatsAppContact\n                  whatsappNumber={vehicle.contactWhatsapp || vehicle.user?.whatsapp || ''}\n                  listingTitle={vehicle.title}\n                  ownerName={vehicle.user?.name || ''}\n                />\n              </div>\n            )}\n\n\n\n            {/* Safety Tips */}\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-xl p-6\">\n              <h3 className=\"font-semibold text-yellow-800 mb-3\">üõ°Ô∏è Conseils de s√©curit√©</h3>\n              <ul className=\"text-sm text-yellow-700 space-y-2\">\n                <li>‚Ä¢ Rencontrez le vendeur en personne</li>\n                <li>‚Ä¢ Inspectez le v√©hicule avant l'achat</li>\n                <li>‚Ä¢ V√©rifiez les papiers du v√©hicule</li>\n                <li>‚Ä¢ M√©fiez-vous des prix trop attractifs</li>\n                <li>‚Ä¢ Pr√©f√©rez un paiement s√©curis√©</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Compatible Spare Parts Section - Only for damaged vehicles */}\n        {compatibleParts.length > 0 && vehicle.condition === 'damaged' && (\n          <div className=\"mt-12\">\n            <div className=\"flex items-center mb-6\">\n              <div className=\"bg-orange-100 p-3 rounded-full mr-4\">\n                <CheckCircle className=\"h-6 w-6 text-orange-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-900\">Pi√®ces d√©tach√©es compatibles propos√©es sur le site</h2>\n                <p className=\"text-gray-600 mt-1\">Pi√®ces disponibles compatibles avec ce v√©hicule</p>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {compatibleParts.map((part) => (\n                <div key={part.id} className=\"bg-white rounded-lg shadow-md border border-gray-200 p-4\">\n                  <h3 className=\"font-semibold text-base text-gray-900 mb-2\">{part.title}</h3>\n                  \n                  <div className=\"text-xl font-bold text-primary-bolt-600 mb-2\">\n                    {formatPrice(part.price)}\n                  </div>\n                  \n                  <div className=\"flex items-center text-sm text-gray-500 mb-4\">\n                    <MapPin className=\"h-4 w-4 mr-1\" />\n                    <span>{part.location}</span>\n                  </div>\n\n                  <button\n                    onClick={() => onVehicleSelect?.(part)}\n                    className=\"w-full bg-primary-bolt-500 text-white px-4 py-2 rounded-lg hover:bg-primary-bolt-600 transition-colors text-sm font-medium\"\n                  >\n                    Voir l'annonce\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Similar Products Section */}\n        {similarVehicles.length > 0 && (\n          <div className=\"mt-12\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Ces annonces peuvent vous int√©resser</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {similarVehicles.map((similarVehicle) => (\n                <VehicleCard\n                  key={similarVehicle.id}\n                  vehicle={similarVehicle}\n                  onClick={() => onVehicleSelect?.(similarVehicle)}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Message Form Modal */}\n      {showMessageForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl shadow-xl max-w-md w-full p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Envoyer un message</h3>\n              <button\n                onClick={() => setShowMessageForm(false)}\n                className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            \n            <div className=\"mb-4\">\n              <p className=\"text-sm text-gray-600 mb-2\">\n                Message √† <span className=\"font-semibold\">{vehicle.user?.name}</span> concernant :\n              </p>\n              <p className=\"text-sm font-medium text-gray-900 bg-gray-50 p-2 rounded\">{vehicle.title}</p>\n            </div>\n\n            <div className=\"mb-4\">\n              <textarea\n                value={messageText}\n                onChange={(e) => setMessageText(e.target.value)}\n                placeholder=\"Tapez votre message ici...\"\n                className=\"w-full h-32 p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-primary-bolt-500 focus:border-transparent\"\n                maxLength={500}\n              />\n              <div className=\"text-right text-xs text-gray-500 mt-1\">\n                {messageText.length}/500 caract√®res\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowMessageForm(false)}\n                className=\"flex-1 px-4 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 transition-colors\"\n              >\n                Annuler\n              </button>\n              <button\n                onClick={handleSendMessage}\n                disabled={!messageText.trim()}\n                className=\"flex-1 px-4 py-2 bg-primary-bolt-500 text-white rounded-lg hover:bg-primary-bolt-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2\"\n              >\n                <Send className=\"h-4 w-4\" />\n                <span>Envoyer</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Contact Seller Modal */}\n      <ContactSellerModal\n        isOpen={showContactModal}\n        onClose={() => setShowContactModal(false)}\n        vehicle={{\n          id: vehicle.id,\n          title: vehicle.title,\n          price: vehicle.price,\n          user_id: vehicle.userId\n        }}\n        currentUserId={authUser?.id || currentUser?.id}\n      />\n\n      {/* Footer with custom navigation handler */}\n      <Footer setCurrentView={handleFooterNavigation} />\n    </div>\n  );\n};","size_bytes":27253},"client/src/components/VehicleListings.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { Filter, Grid, List, SortAsc, X } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { VehicleCard } from './VehicleCard';\nimport { SearchFilters } from './SearchFilters';\nimport { VehicleDetail } from './VehicleDetail';\nimport brandIcon from '@assets/Brand_1752260033631.png';\n\nexport const VehicleListings: React.FC = () => {\n  const { filteredVehicles, searchFilters, setSearchFilters, selectedVehicle, setSelectedVehicle } = useApp();\n  const [showFilters, setShowFilters] = useState(false);\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n\n  // Scroll to top when component mounts or when filters change\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [searchFilters]);\n\n  const handleSortChange = (sortBy: string) => {\n    setSearchFilters({ ...searchFilters, sortBy: sortBy as any });\n  };\n\n  // Fonction pour supprimer un filtre sp√©cifique\n  const removeFilter = (filterKey: string) => {\n    const newFilters = { ...searchFilters };\n    delete newFilters[filterKey as keyof typeof newFilters];\n    setSearchFilters(newFilters);\n  };\n\n  // Fonction pour obtenir le label lisible d'un filtre\n  const getFilterLabel = (key: string, value: any) => {\n    const labels: { [key: string]: string } = {\n      category: 'cat√©gorie',\n      subcategory: 'subcat√©gorie', \n      brand: 'marque',\n      model: 'mod√®le',\n      yearFrom: 'ann√©e min',\n      yearTo: 'ann√©e max',\n      priceFrom: 'prix min',\n      priceTo: 'prix max',\n      mileageFrom: 'km min',\n      mileageTo: 'km max',\n      fuelType: 'carburant',\n      condition: '√©tat',\n      location: 'localisation',\n      sortBy: 'tri'\n    };\n\n    // Traduction des valeurs sp√©ciales\n    let displayValue = value;\n    if (key === 'condition') {\n      const conditionLabels: { [key: string]: string } = {\n        'used': 'Occasion',\n        'damaged': 'Accident√©'\n      };\n      displayValue = conditionLabels[value] || value;\n    } else if (key === 'fuelType') {\n      const fuelLabels: { [key: string]: string } = {\n        'essence': 'Essence',\n        'diesel': 'Diesel',\n        'electric': '√âlectrique',\n        'hybrid': 'Hybride'\n      };\n      displayValue = fuelLabels[value] || value;\n    } else if (key === 'sortBy') {\n      const sortLabels: { [key: string]: string } = {\n        'date': 'Plus r√©centes',\n        'price_asc': 'Prix croissant',\n        'price_desc': 'Prix d√©croissant',\n        'mileage': 'Kilom√©trage'\n      };\n      displayValue = sortLabels[value] || value;\n    }\n\n    return `${labels[key] || key}: ${displayValue}`;\n  };\n\n\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"flex flex-col lg:flex-row lg:justify-between lg:items-center mb-8\">\n          <div className=\"mb-4 lg:mb-0\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Annonces disponibles</h1>\n            <p className=\"text-gray-600 mt-2\">\n              {filteredVehicles.length} r√©sultat{filteredVehicles.length !== 1 ? 's' : ''} trouv√©{filteredVehicles.length !== 1 ? 's' : ''}\n            </p>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            {/* Sort */}\n            <select\n              value={searchFilters.sortBy || 'date'}\n              onChange={(e) => handleSortChange(e.target.value)}\n              className=\"px-4 py-2 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n            >\n              <option value=\"date\">Plus r√©centes</option>\n              <option value=\"price_asc\">Prix croissant</option>\n              <option value=\"price_desc\">Prix d√©croissant</option>\n              <option value=\"mileage\">Kilom√©trage</option>\n            </select>\n\n            {/* View Mode */}\n            <div className=\"flex bg-white border border-gray-300 rounded-xl\">\n              <button\n                onClick={() => setViewMode('grid')}\n                className={`p-2 ${viewMode === 'grid' ? 'bg-primary-bolt-50 text-primary-bolt-500' : 'text-gray-600'} hover:bg-gray-50 transition-colors`}\n              >\n                <Grid className=\"h-5 w-5\" />\n              </button>\n              <button\n                onClick={() => setViewMode('list')}\n                className={`p-2 ${viewMode === 'list' ? 'bg-primary-bolt-50 text-primary-bolt-500' : 'text-gray-600'} hover:bg-gray-50 transition-colors border-l border-gray-300`}\n              >\n                <List className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            {/* Filters Button */}\n            <button\n              onClick={() => setShowFilters(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-primary-bolt-500 text-white rounded-xl hover:bg-primary-bolt-600 transition-colors\"\n            >\n              <Filter className=\"h-5 w-5\" />\n              <span>Filtres</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Active Filters */}\n        {Object.keys(searchFilters).filter(key => searchFilters[key as keyof typeof searchFilters] && key !== 'sortBy').length > 0 && (\n          <div className=\"mb-6 p-4 bg-white rounded-xl border border-gray-200\">\n            <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Filtres actifs:</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {Object.entries(searchFilters).map(([key, value]) => {\n                if (!value || key === 'sortBy') return null; // Exclure le tri des filtres actifs\n                return (\n                  <span\n                    key={key}\n                    className=\"inline-flex items-center px-3 py-1 bg-primary-bolt-100 text-primary-bolt-500 text-sm rounded-full\"\n                  >\n                    {getFilterLabel(key, value)}\n                    <button\n                      onClick={() => removeFilter(key)}\n                      className=\"ml-2 p-0.5 hover:bg-primary-bolt-200 rounded-full transition-colors\"\n                      title=\"Supprimer ce filtre\"\n                    >\n                      <X className=\"h-3 w-3\" />\n                    </button>\n                  </span>\n                );\n              })}\n              <button\n                onClick={() => setSearchFilters({})}\n                className=\"text-sm text-red-600 hover:text-red-800 font-medium\"\n              >\n                Effacer tous les filtres\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Vehicle Grid */}\n        {filteredVehicles.length > 0 ? (\n          <div className={\n            viewMode === 'grid' \n              ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"\n              : \"space-y-6\"\n          }>\n            {filteredVehicles.map((vehicle) => (\n              <VehicleCard\n                key={vehicle.id}\n                vehicle={vehicle}\n                onClick={() => setSelectedVehicle(vehicle)}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <div className=\"mb-4 flex justify-center\">\n              <img \n                src={brandIcon} \n                alt=\"Brand icon\" \n                className=\"w-16 h-16 opacity-40\"\n              />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Aucun r√©sultat trouv√©\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Essayez de modifier vos crit√®res de recherche ou consultez toutes nos annonces.\n            </p>\n            <button\n              onClick={() => setSearchFilters({})}\n              className=\"px-6 py-3 bg-primary-bolt-500 text-white rounded-lg hover:bg-primary-bolt-600 transition-colors\"\n            >\n              Voir toutes les annonces\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Search Filters Modal */}\n      <SearchFilters isOpen={showFilters} onClose={() => setShowFilters(false)} />\n    </div>\n  );\n};","size_bytes":8151},"client/src/components/WhatsAppContact.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { MessageCircle, QrCode, Smartphone } from 'lucide-react';\n\ninterface WhatsAppContactProps {\n  whatsappNumber: string;\n  listingTitle: string;\n  ownerName: string;\n}\n\nexport const WhatsAppContact: React.FC<WhatsAppContactProps> = ({\n  whatsappNumber,\n  listingTitle,\n  ownerName\n}) => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n\n  // Nettoyer le num√©ro WhatsApp (enlever espaces, tirets, etc.)\n  const cleanWhatsAppNumber = (number: string): string => {\n    return number.replace(/[\\s\\-\\(\\)]/g, '').replace(/^\\+/, '');\n  };\n\n  // Pr√©parer le message WhatsApp\n  const whatsappMessage = `Bonjour, je suis int√©ress√© par votre annonce ${listingTitle}.`;\n  const encodedMessage = encodeURIComponent(whatsappMessage);\n  const cleanNumber = cleanWhatsAppNumber(whatsappNumber);\n  \n  // URL WhatsApp\n  const whatsappUrl = `https://wa.me/${cleanNumber}?text=${encodedMessage}`;\n\n  // D√©tecter si l'utilisateur est sur mobile\n  useEffect(() => {\n    const checkIsMobile = () => {\n      setIsMobile(window.innerWidth < 768); // Tablette = 768px et plus\n    };\n\n    checkIsMobile();\n    window.addEventListener('resize', checkIsMobile);\n    return () => window.removeEventListener('resize', checkIsMobile);\n  }, []);\n\n  // G√©n√©rer l'URL du QR code\n  useEffect(() => {\n    if (!isMobile) {\n      // Utiliser l'API QR Server pour g√©n√©rer le QR code (taille plus grande pour meilleure scanabilit√© : 150x150)\n      const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&format=png&bgcolor=ffffff&color=000000&qzone=1&data=${encodeURIComponent(whatsappUrl)}`;\n      setQrCodeUrl(qrUrl);\n    }\n  }, [whatsappUrl, isMobile]);\n\n  const handleWhatsAppClick = () => {\n    window.open(whatsappUrl, '_blank');\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-lg border border-gray-100 p-6\">\n\n      {/* Version Desktop/Tablette - Bouton d'abord, puis QR Code */}\n      {!isMobile && (\n        <div className=\"text-center space-y-4\">\n          {/* Bouton WhatsApp Web en premier */}\n          <div>\n            <button\n              onClick={handleWhatsAppClick}\n              className=\"w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 px-6 rounded-xl transition-colors duration-200 flex items-center justify-center space-x-2\"\n            >\n              <MessageCircle className=\"h-5 w-5\" />\n              <span>Contacter sur WhatsApp Web</span>\n            </button>\n          </div>\n\n          {/* Sous-titre pour le QR Code */}\n          <div className=\"pt-2\">\n            <h4 className=\"text-sm font-medium text-gray-600 mb-3\">Ou scanner le QR Code depuis votre t√©l√©phone</h4>\n          </div>\n\n          {/* QR Code en second */}\n          <div className=\"flex justify-center\">\n            <div className=\"bg-white p-3 rounded-2xl shadow-lg border border-gray-200\">\n              {qrCodeUrl ? (\n                <img \n                  src={qrCodeUrl} \n                  alt=\"QR Code WhatsApp\"\n                  className=\"w-36 h-36 object-contain\"\n                  loading=\"lazy\"\n                />\n              ) : (\n                <div className=\"w-36 h-36 bg-gray-100 rounded-lg flex items-center justify-center\">\n                  <QrCode className=\"h-8 w-8 text-gray-400\" />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Version Mobile - Bouton direct */}\n      {isMobile && (\n        <div className=\"space-y-4\">\n          <div className=\"bg-gray-50 rounded-xl p-4 border border-gray-200\">\n            <p className=\"text-sm text-gray-600 mb-2\">Message qui sera envoy√© :</p>\n            <p className=\"text-sm text-gray-800 italic\">\"{whatsappMessage}\"</p>\n          </div>\n\n          <button\n            onClick={handleWhatsAppClick}\n            className=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-4 px-6 rounded-xl transition-all duration-200 flex items-center justify-center space-x-3 shadow-lg hover:shadow-xl transform hover:scale-105\"\n          >\n            <div className=\"flex items-center space-x-2\">\n              <Smartphone className=\"h-6 w-6\" />\n              <MessageCircle className=\"h-6 w-6\" />\n            </div>\n            <span className=\"text-lg\">Contacter sur WhatsApp</span>\n          </button>\n\n          <p className=\"text-center text-xs text-gray-500 mt-2\">\n            Ouvrira WhatsApp avec le message pr√©rempli\n          </p>\n        </div>\n      )}\n\n\n    </div>\n  );\n};","size_bytes":4558},"client/src/contexts/AppContext.tsx":{"content":"import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, Vehicle, Message, SearchFilters } from '../types';\n\ninterface AppContextType {\n  currentUser: User | null;\n  setCurrentUser: (user: User | null) => void;\n  vehicles: Vehicle[];\n  setVehicles: (vehicles: Vehicle[]) => void;\n  selectedVehicle: Vehicle | null;\n  setSelectedVehicle: (vehicle: Vehicle | null) => void;\n  searchFilters: SearchFilters;\n  setSearchFilters: (filters: SearchFilters) => void;\n  filteredVehicles: Vehicle[];\n  messages: Message[];\n  setMessages: (messages: Message[]) => void;\n  isLoading: boolean;\n  setIsLoading: (loading: boolean) => void;\n  showAuthModal: boolean;\n  setShowAuthModal: (show: boolean) => void;\n  authMode: 'login' | 'register';\n  setAuthMode: (mode: 'login' | 'register') => void;\n  refreshVehicles: () => Promise<void>;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nexport const useApp = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n\ninterface AppProviderProps {\n  children: ReactNode;\n}\n\n// Fetch vehicles from API\nconst fetchVehicles = async (): Promise<Vehicle[]> => {\n  try {\n    console.log('üîÑ Chargement des donn√©es depuis Supabase...');\n    // Add timestamp to prevent caching\n    const timestamp = new Date().getTime();\n    const response = await fetch(`/api/vehicles?t=${timestamp}`, {\n      cache: 'no-cache',\n      headers: {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const vehicles = await response.json();\n    console.log('‚úÖ CONFIRMATION SUPABASE: Donn√©es charg√©es:', vehicles.length, 'v√©hicules');\n    console.log('üìä PREUVE SUPABASE - Premiers v√©hicules:', vehicles.slice(0, 5).map((v: Vehicle) => ({ id: v.id, title: v.title })));\n    \n    // Test sp√©cifique pour v√©rifier les modifications\n    const modifiedVehicles = vehicles.filter((v: Vehicle) => v.title.includes('[SUPABASE]') || v.title.includes('[MODIFI√â]'));\n    console.log('üîç V√âHICULES MODIFI√âS TROUV√âS:', modifiedVehicles.map((v: Vehicle) => ({ id: v.id, title: v.title })));\n    return vehicles;\n  } catch (error) {\n    console.error('‚ùå ERREUR CRITIQUE - √âchec du chargement Supabase:', error);\n    console.error('‚ùå ATTENTION: Utilisation des donn√©es mock en fallback');\n    // Import dynamically to avoid circular dependency\n    const { mockVehicles } = await import('../utils/mockData');\n    console.error('‚ùå MOCK DATA LOADED - NOT FROM SUPABASE!');\n    return mockVehicles;\n  }\n};\n\nexport const AppProvider: React.FC<AppProviderProps> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\n  const [selectedVehicle, setSelectedVehicle] = useState<Vehicle | null>(null);\n  const [searchFilters, setSearchFilters] = useState<SearchFilters>({});\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [authMode, setAuthMode] = useState<'login' | 'register'>('login');\n  // Commentaire pour expliquer le changement\n  // Les modals d'authentification utilisent maintenant un service centralis√©\n\n  // Load vehicles on component mount\n  useEffect(() => {\n    const loadVehicles = async () => {\n      setIsLoading(true);\n      try {\n        const vehiclesData = await fetchVehicles();\n        setVehicles(vehiclesData);\n      } catch (error) {\n        console.error('‚ùå Impossible de charger les donn√©es Supabase');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadVehicles();\n  }, []);\n\n  // Function to manually refresh vehicles\n  const refreshVehicles = async () => {\n    setIsLoading(true);\n    try {\n      const vehiclesData = await fetchVehicles();\n      setVehicles(vehiclesData);\n    } catch (error) {\n      console.error('‚ùå Impossible de charger les donn√©es Supabase');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filter vehicles based on search criteria\n  const filteredVehicles = vehicles.filter(vehicle => {\n    // Handle category filtering with main categories and subcategories mapping\n    if (searchFilters.category) {\n      const categoryMap: { [key: string]: string[] } = {\n        'voiture-utilitaire': ['voiture', 'utilitaire', 'caravane', 'remorque'],\n        'moto-scooter-quad': ['moto', 'scooter', 'quad'],\n        'nautisme-sport-aerien': ['bateau', 'jetski', 'aerien'],\n        'services': ['reparation', 'remorquage', 'entretien', 'autre-service'],\n        'pieces': ['piece-voiture', 'piece-moto', 'autre-piece']\n      };\n      \n      // Check if it's a main category\n      if (categoryMap[searchFilters.category]) {\n        // Filter by subcategories\n        if (!categoryMap[searchFilters.category].includes(vehicle.category)) return false;\n      } else {\n        // Direct subcategory match\n        if (vehicle.category !== searchFilters.category) return false;\n      }\n    }\n    \n    // Handle subcategory filtering (refines the main category)\n    if (searchFilters.subcategory && vehicle.category !== searchFilters.subcategory) return false;\n    if (searchFilters.brand && vehicle.brand !== searchFilters.brand) return false;\n    if (searchFilters.model && vehicle.model.toLowerCase().includes(searchFilters.model.toLowerCase()) === false) return false;\n    if (searchFilters.yearFrom && vehicle.year < searchFilters.yearFrom) return false;\n    if (searchFilters.yearTo && vehicle.year > searchFilters.yearTo) return false;\n    if (searchFilters.mileageFrom && vehicle.mileage && vehicle.mileage < searchFilters.mileageFrom) return false;\n    if (searchFilters.mileageTo && vehicle.mileage && vehicle.mileage > searchFilters.mileageTo) return false;\n    if (searchFilters.priceFrom && vehicle.price < searchFilters.priceFrom) return false;\n    if (searchFilters.priceTo && vehicle.price > searchFilters.priceTo) return false;\n    if (searchFilters.fuelType && vehicle.fuelType !== searchFilters.fuelType) return false;\n    if (searchFilters.condition && vehicle.condition !== searchFilters.condition) return false;\n    if (searchFilters.location && vehicle.location.toLowerCase().includes(searchFilters.location.toLowerCase()) === false) return false;\n    if (searchFilters.searchTerm && vehicle.title.toLowerCase().includes(searchFilters.searchTerm.toLowerCase()) === false) return false;\n    return true;\n  }).sort((a, b) => {\n    // Premium listings first\n    if (a.isPremium && !b.isPremium) return -1;\n    if (!a.isPremium && b.isPremium) return 1;\n    \n    // Then sort by criteria\n    switch (searchFilters.sortBy) {\n      case 'price_asc':\n        return a.price - b.price;\n      case 'price_desc':\n        return b.price - a.price;\n      case 'mileage':\n        return (a.mileage || 0) - (b.mileage || 0);\n      default:\n        return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n    }\n  });\n\n  return (\n    <AppContext.Provider value={{\n      currentUser,\n      setCurrentUser,\n      vehicles,\n      setVehicles,\n      selectedVehicle,\n      setSelectedVehicle,\n      searchFilters,\n      setSearchFilters,\n      filteredVehicles,\n      messages,\n      setMessages,\n      isLoading,\n      setIsLoading,\n      showAuthModal,\n      setShowAuthModal,\n      authMode,\n      setAuthMode,\n      refreshVehicles,\n    }}>\n      {children}\n    </AppContext.Provider>\n  );\n};","size_bytes":7644},"client/src/contexts/AuthContext.tsx":{"content":"import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { User as SupabaseUser, Session } from '@supabase/supabase-js'\nimport { supabase } from '../lib/supabase'\nimport { User } from '../types'\n\ninterface AuthContextType {\n  user: SupabaseUser | null\n  profile: User | null\n  session: Session | null\n  loading: boolean\n  signUp: (email: string, password: string, userData?: any) => Promise<{ error: any }>\n  signIn: (email: string, password: string) => Promise<{ error: any }>\n  signInWithOAuth: (provider: 'google' | 'apple' | 'github') => Promise<{ error: any }>\n  signInWithMagicLink: (email: string) => Promise<{ error: any }>\n  signOut: () => Promise<void>\n  updateProfile: (updates: Partial<User>) => Promise<{ error: any }>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<SupabaseUser | null>(null)\n  const [profile, setProfile] = useState<User | null>(null)\n  const [session, setSession] = useState<Session | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Get initial session\n    const getInitialSession = async () => {\n      const { data: { session }, error } = await supabase.auth.getSession()\n      \n      if (error) {\n        console.error('Error getting session:', error)\n      } else {\n        setSession(session)\n        setUser(session?.user ?? null)\n        \n        if (session?.user) {\n          await fetchProfile(session.user.id)\n        }\n      }\n      \n      setLoading(false)\n    }\n\n    getInitialSession()\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        console.log('Auth state changed:', event, session?.user?.id)\n        \n        setSession(session)\n        setUser(session?.user ?? null)\n        \n        if (session?.user) {\n          await fetchProfile(session.user.id)\n        } else {\n          setProfile(null)\n        }\n        \n        setLoading(false)\n      }\n    )\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  const fetchProfile = async (userId: string) => {\n    try {\n      const response = await fetch(`/api/users/${userId}`)\n      if (response.ok) {\n        const userProfile = await response.json()\n        setProfile(userProfile)\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error)\n    }\n  }\n\n  const signUp = async (email: string, password: string, userData?: any) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: userData\n      }\n    })\n\n    if (!error && data.user) {\n      // Create user profile\n      const profileData = {\n        id: data.user.id,\n        email: data.user.email!,\n        name: userData?.name || data.user.email!.split('@')[0],\n        type: userData?.type || 'individual',\n        verified: false,\n        emailVerified: false,\n      }\n\n      try {\n        await fetch('/api/users', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(profileData),\n        })\n      } catch (profileError) {\n        console.error('Error creating profile:', profileError)\n      }\n    }\n\n    return { error }\n  }\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    })\n    return { error }\n  }\n\n  const signInWithOAuth = async (provider: 'google' | 'apple' | 'github') => {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider,\n      options: {\n        redirectTo: `${window.location.origin}/auth/callback`\n      }\n    })\n    return { error }\n  }\n\n  const signInWithMagicLink = async (email: string) => {\n    const { error } = await supabase.auth.signInWithOtp({\n      email,\n      options: {\n        emailRedirectTo: `${window.location.origin}/auth/callback`\n      }\n    })\n    return { error }\n  }\n\n  const signOut = async () => {\n    await supabase.auth.signOut()\n    setProfile(null)\n  }\n\n  const updateProfile = async (updates: Partial<User>) => {\n    if (!user) return { error: 'No user logged in' }\n\n    try {\n      const response = await fetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      })\n\n      if (response.ok) {\n        const updatedProfile = await response.json()\n        setProfile(updatedProfile)\n        return { error: null }\n      } else {\n        return { error: 'Failed to update profile' }\n      }\n    } catch (error) {\n      return { error: 'Failed to update profile' }\n    }\n  }\n\n  const value = {\n    user,\n    profile,\n    session,\n    loading,\n    signUp,\n    signIn,\n    signInWithOAuth,\n    signInWithMagicLink,\n    signOut,\n    updateProfile\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}","size_bytes":5354},"client/src/hooks/useAuth.ts":{"content":"import { useState, useEffect, useRef } from 'react'\nimport { User, Session } from '@supabase/supabase-js'\nimport { supabase } from '@/lib/supabase'\n// import { User as DbUser } from '@shared/schema'\ninterface DbUser {\n  id: string;\n  email: string;\n  name: string;\n  type: string;\n  created_at?: string;\n}\n\nexport interface AuthState {\n  user: User | null\n  session: Session | null\n  dbUser: DbUser | null\n  isLoading: boolean\n  isAuthenticated: boolean\n  refreshDbUser: () => Promise<void>\n  signIn: (email: string, password: string) => Promise<{ success: boolean; error?: string }>\n  signUp: (email: string, password: string, metadata?: any) => Promise<{ success: boolean; error?: string }>\n  signInWithGoogle: () => Promise<{ success: boolean; error?: string }>\n  signOut: () => Promise<void>\n}\n\nexport function useAuth(): AuthState {\n  const [user, setUser] = useState<User | null>(null)\n  const [session, setSession] = useState<Session | null>(null)\n  const [dbUser, setDbUser] = useState<DbUser | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  \n  // Cache pour √©viter les requ√™tes r√©p√©t√©es\n  const userCacheRef = useRef<Map<string, DbUser | null>>(new Map())\n  const lastFetchTimeRef = useRef<Map<string, number>>(new Map())\n\n  // Function to fetch database user info by email with auto-sync\n  const fetchDbUser = async (authUser: User) => {\n    if (!authUser.email) return\n    \n    const email = authUser.email\n    const now = Date.now()\n    const lastFetch = lastFetchTimeRef.current.get(email)\n    const CACHE_DURATION = 5 * 60 * 1000 // 5 minutes cache\n    \n    // V√©rifier le cache (5 minutes)\n    if (lastFetch && now - lastFetch < CACHE_DURATION) {\n      const cachedUser = userCacheRef.current.get(email)\n      if (cachedUser !== undefined) {\n        setDbUser(cachedUser)\n        console.log('üìã Utilisateur r√©cup√©r√© du cache:', email)\n        return\n      }\n    }\n    \n    try {\n      const response = await fetch(`/api/users/by-email/${encodeURIComponent(email)}`)\n      if (response.ok) {\n        const userData = await response.json()\n        setDbUser(userData)\n        // Mettre en cache\n        userCacheRef.current.set(email, userData)\n        lastFetchTimeRef.current.set(email, now)\n        console.log('‚úÖ Utilisateur trouv√© dans BD (et mis en cache):', userData.name, `(${userData.type})`)\n      } else if (response.status === 404) {\n        console.log('üîÑ Utilisateur inexistant, synchronisation automatique...')\n        \n        // Tenter de synchroniser automatiquement l'utilisateur\n        try {\n          const session = await supabase.auth.getSession()\n          if (session.data.session?.access_token) {\n            const syncResponse = await fetch('/api/users/sync-auth', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${session.data.session.access_token}`,\n                'Content-Type': 'application/json'\n              }\n            })\n            \n            if (syncResponse.ok) {\n              const syncData = await syncResponse.json()\n              setDbUser(syncData.user)\n              userCacheRef.current.set(email, syncData.user)\n              lastFetchTimeRef.current.set(email, now)\n              console.log('‚úÖ Profil synchronis√© automatiquement:', syncData.user.name)\n              return\n            } else {\n              console.log('‚ùå √âchec synchronisation:', await syncResponse.text())\n            }\n          }\n        } catch (syncError) {\n          console.error('‚ùå Erreur synchronisation auto:', syncError)\n        }\n        \n        console.log('‚ÑπÔ∏è Aucun utilisateur BD trouv√© pour:', email)\n        setDbUser(null)\n        // Mettre en cache l'absence\n        userCacheRef.current.set(email, null)\n        lastFetchTimeRef.current.set(email, now)\n      }\n    } catch (error) {\n      console.error('Erreur r√©cup√©ration utilisateur BD:', error)\n      setDbUser(null)\n    }\n  }\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(async ({ data: { session } }) => {\n      setSession(session)\n      setUser(session?.user ?? null)\n      \n      if (session?.user) {\n        await fetchDbUser(session.user)\n      }\n      \n      setIsLoading(false)\n    })\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      setSession(session)\n      setUser(session?.user ?? null)\n      \n      if (session?.user) {\n        await fetchDbUser(session.user)\n      } else {\n        setDbUser(null)\n      }\n      \n      setIsLoading(false)\n    })\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  // Function to force refresh database user (ignore cache)\n  const refreshDbUser = async () => {\n    if (!user?.email) return\n    \n    const email = user.email\n    try {\n      const response = await fetch(`/api/users/by-email/${encodeURIComponent(email)}`)\n      if (response.ok) {\n        const userData = await response.json()\n        setDbUser(userData)\n        // Update cache with fresh data\n        userCacheRef.current.set(email, userData)\n        lastFetchTimeRef.current.set(email, Date.now())\n        console.log('üîÑ Utilisateur rafra√Æchi depuis BD:', userData.name)\n      } else {\n        console.log('‚ÑπÔ∏è Aucun utilisateur BD trouv√© lors du rafra√Æchissement:', email)\n        setDbUser(null)\n      }\n    } catch (error) {\n      console.error('Erreur rafra√Æchissement utilisateur BD:', error)\n    }\n  }\n\n  // Authentication functions\n  const signIn = async (email: string, password: string) => {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      })\n\n      if (error) {\n        console.error('SignIn error:', error)\n        return { success: false, error: error.message }\n      }\n\n      console.log('‚úÖ Connexion Supabase r√©ussie:', email)\n      return { success: true }\n    } catch (error: any) {\n      console.error('SignIn exception:', error)\n      return { success: false, error: 'Erreur de connexion' }\n    }\n  }\n\n  const signUp = async (email: string, password: string, metadata: any = {}) => {\n    try {\n      console.log('üîÑ Cr√©ation compte Supabase Auth:', email)\n      \n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            name: metadata.name,\n            type: metadata.type || 'individual',\n            phone: metadata.phone,\n            companyName: metadata.companyName,\n          }\n        }\n      })\n\n      if (error) {\n        console.error('SignUp error:', error)\n        return { success: false, error: error.message }\n      }\n\n      if (!data.user) {\n        return { success: false, error: 'Erreur lors de la cr√©ation du compte' }\n      }\n\n      console.log('‚úÖ Compte Supabase Auth cr√©√©:', email, 'ID:', data.user.id)\n      \n      // Synchroniser imm√©diatement vers la table users (m√™me sans confirmation email)\n      try {\n        console.log('üîÑ Synchronisation imm√©diate vers table users...');\n        const syncResponse = await fetch('/api/users/sync-from-signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            authUserId: data.user.id,\n            email: email,\n            metadata: metadata\n          })\n        });\n\n        if (syncResponse.ok) {\n          const syncData = await syncResponse.json();\n          console.log('‚úÖ Utilisateur synchronis√© imm√©diatement:', syncData.user.name);\n        } else {\n          console.log('‚ö†Ô∏è Sync imm√©diate √©chou√©e, sync via onAuthStateChange plus tard');\n        }\n      } catch (syncError) {\n        console.error('‚ö†Ô∏è Erreur sync imm√©diate:', syncError);\n      }\n      \n      return { success: true }\n    } catch (error: any) {\n      console.error('SignUp exception:', error)\n      return { success: false, error: 'Erreur de cr√©ation de compte' }\n    }\n  }\n\n  // Connexion Google OAuth\n  const signInWithGoogle = async () => {\n    try {\n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`,\n          queryParams: {\n            access_type: 'offline',\n            prompt: 'consent',\n          },\n        }\n      })\n      \n      if (error) {\n        console.error('Erreur OAuth Google:', error.message)\n        return { success: false, error: error.message }\n      }\n      \n      // OAuth redirect, pas de retour imm√©diat\n      return { success: true }\n    } catch (error) {\n      console.error('Erreur connexion Google:', error)\n      return { success: false, error: 'Erreur lors de la connexion Google' }\n    }\n  }\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut()\n      if (error) {\n        console.error('SignOut error:', error)\n        return\n      }\n      \n      // Clear cache\n      userCacheRef.current.clear()\n      lastFetchTimeRef.current.clear()\n      \n      console.log('‚úÖ D√©connexion r√©ussie')\n    } catch (error) {\n      console.error('SignOut exception:', error)\n    }\n  }\n\n  return {\n    user,\n    session,\n    dbUser,\n    isLoading,\n    isAuthenticated: !!user,\n    refreshDbUser,\n    signIn,\n    signUp,\n    signInWithGoogle,\n    signOut,\n  }\n}","size_bytes":9395},"client/src/hooks/useConversations.ts":{"content":"import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\n\ntype Conversation = {\n  id: string;\n  vehicle_id: string | null;\n  type: string;\n  last_message_at: string | null;\n  created_at: string;\n  participant_users: Array<{\n    id: string;\n    email: string | null;\n    first_name: string | null;\n    last_name: string | null;\n  }>;\n  vehicles: {\n    id: string;\n    title: string;\n    images: string[] | null;\n  } | null;\n  last_message: {\n    content: string;\n    created_at: string;\n    from_user_id: string;\n  } | null;\n  unread_count: number;\n};\n\nexport function useConversations(userId: string) {\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!userId) return;\n\n    const fetchConversations = async () => {\n      try {\n        setLoading(true);\n        \n        // R√©cup√©rer les conversations avec participants, v√©hicules et derniers messages\n        const { data, error: conversationsError } = await supabase\n          .from('conversations')\n          .select(`\n            *,\n            conversation_participants!inner(\n              user_id,\n              users!inner(id, email, first_name, last_name)\n            ),\n            vehicles(id, title, images),\n            messages(\n              content, \n              created_at, \n              from_user_id,\n              read\n            )\n          `)\n          .eq('conversation_participants.user_id', userId)\n          .order('last_message_at', { ascending: false });\n\n        if (conversationsError) throw conversationsError;\n\n        // Transformer les donn√©es et calculer unread_count\n        const transformedConversations = data?.map(conv => {\n          const participants = conv.conversation_participants\n            .map((p: any) => p.users)\n            .filter((u: any) => u.id !== userId);\n          \n          const messages = conv.messages || [];\n          const lastMessage = messages\n            .sort((a: any, b: any) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())[0] || null;\n          \n          const unreadCount = messages\n            .filter((msg: any) => msg.from_user_id !== userId && !msg.read)\n            .length;\n\n          return {\n            ...conv,\n            participant_users: participants,\n            last_message: lastMessage,\n            unread_count: unreadCount\n          };\n        }) || [];\n\n        setConversations(transformedConversations);\n      } catch (err) {\n        console.error('Erreur lors du chargement des conversations:', err);\n        setError(err instanceof Error ? err.message : 'Erreur inconnue');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchConversations();\n\n    // √âcouter les nouveaux messages en temps r√©el\n    const channel = supabase\n      .channel('conversations_realtime')\n      .on(\n        'postgres_changes',\n        {\n          event: 'INSERT',\n          schema: 'public',\n          table: 'messages'\n        },\n        () => {\n          fetchConversations(); // Recharger les conversations\n        }\n      )\n      .subscribe();\n\n    return () => {\n      channel.unsubscribe();\n    };\n  }, [userId]);\n\n  return { conversations, loading, error, refetch: () => setLoading(true) };\n}","size_bytes":3367},"client/src/hooks/useFavorites.ts":{"content":"import { useState, useEffect, useRef } from 'react';\nimport { useAuth } from './useAuth';\nimport { Vehicle } from '../types';\n\nexport function useFavorites() {\n  const [favorites, setFavorites] = useState<Vehicle[]>([]);\n  const [favoriteIds, setFavoriteIds] = useState<Set<string>>(new Set());\n  const [loading, setLoading] = useState(false);\n  const lastLoadTimeRef = useRef<number>(0);\n  const { dbUser } = useAuth();\n\n  // Charger les favoris de l'utilisateur avec cache\n  const loadFavorites = async (forceReload = false) => {\n    if (!dbUser?.id) return;\n    \n    const now = Date.now();\n    const CACHE_DURATION = 2 * 60 * 1000; // 2 minutes cache\n    \n    // √âviter les recharges trop fr√©quentes sauf si forc√©\n    if (!forceReload && now - lastLoadTimeRef.current < CACHE_DURATION) {\n      console.log('üìã Favoris r√©cents, pas de rechargement n√©cessaire');\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const response = await fetch(`/api/favorites/user/${dbUser.id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setFavorites(data);\n        setFavoriteIds(new Set(data.map((fav: Vehicle) => fav.id)));\n        lastLoadTimeRef.current = now;\n        console.log('‚úÖ Favoris recharg√©s:', data.length);\n      }\n    } catch (error) {\n      console.error('Erreur chargement favoris:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ajouter aux favoris avec mise √† jour imm√©diate\n  const addToFavorites = async (vehicleId: string) => {\n    if (!dbUser?.id) {\n      console.warn('‚ùå Pas d\\'utilisateur connect√© pour ajouter favori');\n      return false;\n    }\n    \n    console.log('üîÑ Ajout favori API call:', { userId: dbUser.id, vehicleId });\n    \n    // Mise √† jour optimiste imm√©diate de l'interface\n    setFavoriteIds(prev => {\n      const newSet = new Set([...prev, vehicleId]);\n      console.log('‚ö° Mise √† jour optimiste favoriteIds:', Array.from(newSet));\n      return newSet;\n    });\n    \n    try {\n      const response = await fetch('/api/favorites/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId: dbUser.id,\n          vehicleId: vehicleId\n        })\n      });\n      \n      const result = await response.json();\n      console.log('üì• R√©ponse API ajout favori:', result);\n      \n      if (response.ok) {\n        console.log('‚úÖ Favori ajout√© avec succ√®s - UI d√©j√† mise √† jour');\n        return true;\n      } else {\n        // Annuler la mise √† jour optimiste en cas d'erreur\n        console.error('‚ùå Erreur API ajout favori, annulation UI:', result);\n        setFavoriteIds(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(vehicleId);\n          return newSet;\n        });\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur r√©seau ajout favori, annulation UI:', error);\n      // Annuler la mise √† jour optimiste en cas d'erreur\n      setFavoriteIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(vehicleId);\n        return newSet;\n      });\n    }\n    return false;\n  };\n\n  // Supprimer des favoris avec mise √† jour imm√©diate  \n  const removeFromFavorites = async (vehicleId: string) => {\n    if (!dbUser?.id) {\n      console.warn('‚ùå Pas d\\'utilisateur connect√© pour supprimer favori');\n      return false;\n    }\n    \n    console.log('üîÑ Suppression favori API call:', { userId: dbUser.id, vehicleId });\n    \n    // Sauvegarde pour annulation potentielle\n    const previousIds = new Set(favoriteIds);\n    const previousFavorites = [...favorites];\n    \n    // Mise √† jour optimiste imm√©diate de l'interface\n    setFavoriteIds(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(vehicleId);\n      console.log('‚ö° Mise √† jour optimiste suppression favoriteIds:', Array.from(newSet));\n      return newSet;\n    });\n    setFavorites(prev => prev.filter(fav => fav.id !== vehicleId));\n    \n    try {\n      const response = await fetch('/api/favorites/remove', {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId: dbUser.id,\n          vehicleId: vehicleId\n        })\n      });\n      \n      const result = await response.json();\n      console.log('üì• R√©ponse API suppression favori:', result);\n      \n      if (response.ok) {\n        console.log('‚úÖ Favori supprim√© avec succ√®s - UI d√©j√† mise √† jour');\n        return true;\n      } else {\n        // Annuler la mise √† jour optimiste en cas d'erreur\n        console.error('‚ùå Erreur API suppression favori, restauration UI:', result);\n        setFavoriteIds(previousIds);\n        setFavorites(previousFavorites);\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur r√©seau suppression favori, restauration UI:', error);\n      // Annuler la mise √† jour optimiste en cas d'erreur\n      setFavoriteIds(previousIds);\n      setFavorites(previousFavorites);\n    }\n    return false;\n  };\n\n  // Basculer favori\n  const toggleFavorite = async (vehicleId: string) => {\n    const isCurrentlyFavorite = favoriteIds.has(vehicleId);\n    console.log('üîÑ Toggle favori - √©tat actuel:', isCurrentlyFavorite);\n    \n    if (isCurrentlyFavorite) {\n      console.log('‚ûñ Suppression du favori...');\n      return await removeFromFavorites(vehicleId);\n    } else {\n      console.log('‚ûï Ajout du favori...');\n      return await addToFavorites(vehicleId);\n    }\n  };\n\n  // V√©rifier si un v√©hicule est en favori\n  const isFavorite = (vehicleId: string) => {\n    const isInFavorites = favoriteIds.has(vehicleId);\n    console.log('üîç isFavorite check pour', vehicleId, ':', isInFavorites, 'dans', Array.from(favoriteIds));\n    return isInFavorites;\n  };\n\n  useEffect(() => {\n    if (dbUser?.id) {\n      // D√©lai pour √©viter les appels trop rapides lors du changement d'√©tat\n      const timer = setTimeout(() => {\n        loadFavorites();\n      }, 100);\n      \n      return () => clearTimeout(timer);\n    } else {\n      // R√©initialiser l'√©tat si aucun utilisateur connect√©\n      setFavorites([]);\n      setFavoriteIds(new Set());\n      console.log('üîÑ R√©initialisation favoris - aucun utilisateur');\n    }\n  }, [dbUser?.id]);\n\n  return {\n    favorites,\n    favoriteIds,\n    loading,\n    addToFavorites,\n    removeFromFavorites,\n    toggleFavorite,\n    isFavorite,\n    refreshFavorites: loadFavorites\n  };\n}","size_bytes":6424},"client/src/hooks/useMessages.ts":{"content":"import { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\n\ntype Message = {\n  id: string;\n  conversation_id: string;\n  from_user_id: string;\n  to_user_id: string;\n  vehicle_id: string | null;\n  content: string;\n  read: boolean;\n  created_at: string;\n  from_user: {\n    id: string;\n    first_name: string | null;\n    last_name: string | null;\n  } | null;\n};\n\nexport function useMessages(conversationId: string, userId: string) {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    if (!conversationId || !userId) return;\n\n    const fetchMessages = async () => {\n      try {\n        setLoading(true);\n        \n        const { data, error: messagesError } = await supabase\n          .from('messages')\n          .select(`\n            *,\n            from_user:users!messages_from_user_id_fkey(\n              id, first_name, last_name\n            )\n          `)\n          .eq('conversation_id', conversationId)\n          .order('created_at', { ascending: false })\n          .limit(50);\n\n        if (messagesError) throw messagesError;\n\n        setMessages(data?.reverse() || []);\n        setHasMore((data?.length || 0) >= 50);\n\n        // Marquer les messages comme lus\n        await markMessagesAsRead();\n      } catch (err) {\n        console.error('Erreur lors du chargement des messages:', err);\n        setError(err instanceof Error ? err.message : 'Erreur inconnue');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const markMessagesAsRead = async () => {\n      try {\n        await supabase\n          .from('messages')\n          .update({ read: true })\n          .eq('conversation_id', conversationId)\n          .eq('to_user_id', userId)\n          .eq('read', false);\n      } catch (err) {\n        console.error('Erreur marquage messages lus:', err);\n      }\n    };\n\n    fetchMessages();\n\n    // √âcouter les nouveaux messages en temps r√©el\n    const channel = supabase\n      .channel(`messages_${conversationId}`)\n      .on(\n        'postgres_changes',\n        {\n          event: 'INSERT',\n          schema: 'public',\n          table: 'messages',\n          filter: `conversation_id=eq.${conversationId}`\n        },\n        (payload) => {\n          const newMessage = payload.new as Message;\n          setMessages(prev => [...prev, newMessage]);\n          \n          // Marquer comme lu si c'est pour nous\n          if (newMessage.to_user_id === userId) {\n            markMessagesAsRead();\n          }\n        }\n      )\n      .subscribe();\n\n    return () => {\n      channel.unsubscribe();\n    };\n  }, [conversationId, userId]);\n\n  const sendMessage = async (content: string, toUserId: string, vehicleId?: string) => {\n    try {\n      // Message optimiste\n      const optimisticMessage: Message = {\n        id: `temp_${Date.now()}`,\n        conversation_id: conversationId,\n        from_user_id: userId,\n        to_user_id: toUserId,\n        vehicle_id: vehicleId || null,\n        content,\n        read: false,\n        created_at: new Date().toISOString(),\n        from_user: null\n      };\n\n      setMessages(prev => [...prev, optimisticMessage]);\n\n      const { error } = await supabase\n        .from('messages')\n        .insert({\n          conversation_id: conversationId,\n          from_user_id: userId,\n          to_user_id: toUserId,\n          vehicle_id: vehicleId,\n          content,\n          read: false\n        });\n\n      if (error) throw error;\n\n      // Le message r√©el arrivera via realtime\n      setMessages(prev => prev.filter(msg => !msg.id.startsWith('temp_')));\n      \n      return true;\n    } catch (err) {\n      console.error('Erreur envoi message:', err);\n      // Retirer le message optimiste en cas d'erreur\n      setMessages(prev => prev.filter(msg => !msg.id.startsWith('temp_')));\n      return false;\n    }\n  };\n\n  return { \n    messages, \n    loading, \n    error, \n    hasMore,\n    sendMessage\n  };\n}","size_bytes":4062},"client/src/hooks/useMessaging.ts":{"content":"import { useState } from 'react';\nimport { supabase } from '@/lib/supabase';\n\nexport function useMessaging() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Cr√©er ou r√©cup√©rer une conversation pour un v√©hicule\n  const getOrCreateConversation = async (\n    vehicleId: string, \n    sellerId: string, \n    buyerId: string\n  ) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // V√©rifier si une conversation existe d√©j√†\n      const { data: existingConversation } = await supabase\n        .from('conversations')\n        .select('id')\n        .eq('vehicle_id', vehicleId)\n        .eq('type', 'listing')\n        .single();\n\n      if (existingConversation) {\n        return existingConversation.id;\n      }\n\n      // Cr√©er nouvelle conversation\n      const { data: newConversation, error: convError } = await supabase\n        .from('conversations')\n        .insert({\n          vehicle_id: vehicleId,\n          type: 'listing',\n          last_message_at: new Date().toISOString()\n        })\n        .select('id')\n        .single();\n\n      if (convError) throw convError;\n\n      // Ajouter les participants\n      const { error: participantsError } = await supabase\n        .from('conversation_participants')\n        .insert([\n          {\n            conversation_id: newConversation.id,\n            user_id: sellerId,\n            role: 'seller',\n            joined_at: new Date().toISOString()\n          },\n          {\n            conversation_id: newConversation.id,\n            user_id: buyerId,\n            role: 'buyer',\n            joined_at: new Date().toISOString()\n          }\n        ]);\n\n      if (participantsError) throw participantsError;\n\n      return newConversation.id;\n    } catch (err) {\n      console.error('Erreur cr√©ation conversation:', err);\n      setError(err instanceof Error ? err.message : 'Erreur inconnue');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Envoyer le premier message d'une conversation\n  const startConversation = async (\n    vehicleId: string,\n    sellerId: string,\n    buyerId: string,\n    messageContent: string\n  ) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      console.log('üöÄ D√©but startConversation:', { vehicleId, sellerId, buyerId, messageContent });\n\n      // Utiliser l'API simplifi√©e pour l'envoi de messages\n      const response = await fetch('/api/messages-simple/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          fromUserId: buyerId,\n          toUserId: sellerId,\n          content: messageContent,\n          vehicleId: vehicleId\n        }),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        console.error('‚ùå Erreur API:', result);\n        throw new Error(result.error || 'Erreur envoi message');\n      }\n\n      console.log('‚úÖ Message envoy√©:', result.messageId);\n      return result.messageId;\n    } catch (err) {\n      console.error('‚ùå Erreur envoi message:', err);\n      setError(err instanceof Error ? err.message : 'Erreur inconnue');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Envoyer un message dans une conversation existante\n  const sendMessage = async (conversationId: string, content: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error: messageError } = await supabase\n        .from('messages')\n        .insert({\n          id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          from_user_id: 'demo', // TODO: R√©cup√©rer l'utilisateur connect√©\n          to_user_id: 'demo', // TODO: D√©terminer le destinataire\n          vehicle_id: '1', // TODO: Associer au v√©hicule\n          content,\n          created_at: new Date().toISOString()\n        })\n        .select('id')\n        .single();\n\n      if (messageError) throw messageError;\n      return data.id;\n    } catch (err) {\n      console.error('Erreur envoi message:', err);\n      setError(err instanceof Error ? err.message : 'Erreur envoi message');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    getOrCreateConversation,\n    startConversation,\n    sendMessage\n  };\n}","size_bytes":4344},"client/src/hooks/useSavedSearches.ts":{"content":"import { useState, useEffect } from 'react';\nimport { useAuth } from './useAuth';\n\nexport interface SavedSearch {\n  id: string;\n  name: string;\n  filters: any;\n  alerts_enabled: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport function useSavedSearches() {\n  const [savedSearches, setSavedSearches] = useState<SavedSearch[]>([]);\n  const [loading, setLoading] = useState(false);\n  const { dbUser } = useAuth();\n\n  // Charger les recherches sauvegard√©es\n  const loadSavedSearches = async () => {\n    if (!dbUser?.id) return;\n    \n    setLoading(true);\n    try {\n      const response = await fetch(`/api/saved-searches/user/${dbUser.id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSavedSearches(data);\n      }\n    } catch (error) {\n      console.error('Erreur chargement recherches sauvegard√©es:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Sauvegarder une nouvelle recherche\n  const saveSearch = async (name: string, filters: any, alertsEnabled: boolean = false) => {\n    if (!dbUser?.id) return false;\n    \n    try {\n      const response = await fetch('/api/saved-searches/save', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId: dbUser.id,\n          name,\n          filters,\n          alertsEnabled\n        })\n      });\n      \n      if (response.ok) {\n        await loadSavedSearches(); // Recharger la liste\n        return true;\n      } else {\n        const error = await response.json();\n        throw new Error(error.error || 'Erreur inconnue');\n      }\n    } catch (error) {\n      console.error('Erreur sauvegarde recherche:', error);\n      throw error;\n    }\n  };\n\n  // Supprimer une recherche sauvegard√©e\n  const deleteSearch = async (searchId: string) => {\n    if (!dbUser?.id) return false;\n    \n    try {\n      const response = await fetch(`/api/saved-searches/${searchId}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId: dbUser.id })\n      });\n      \n      if (response.ok) {\n        setSavedSearches(prev => prev.filter(search => search.id !== searchId));\n        return true;\n      }\n    } catch (error) {\n      console.error('Erreur suppression recherche:', error);\n    }\n    return false;\n  };\n\n  // Activer/d√©sactiver les alertes pour une recherche\n  const toggleAlerts = async (searchId: string, alertsEnabled: boolean) => {\n    if (!dbUser?.id) return false;\n    \n    try {\n      const response = await fetch(`/api/saved-searches/${searchId}/alerts`, {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userId: dbUser.id,\n          alertsEnabled\n        })\n      });\n      \n      if (response.ok) {\n        setSavedSearches(prev => \n          prev.map(search => \n            search.id === searchId \n              ? { ...search, alerts_enabled: alertsEnabled }\n              : search\n          )\n        );\n        return true;\n      }\n    } catch (error) {\n      console.error('Erreur mise √† jour alertes:', error);\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (dbUser?.id) {\n      loadSavedSearches();\n    }\n  }, [dbUser?.id]);\n\n  return {\n    savedSearches,\n    loading,\n    saveSearch,\n    deleteSearch,\n    toggleAlerts,\n    refreshSavedSearches: loadSavedSearches\n  };\n}","size_bytes":3418},"client/src/hooks/useUnreadMessages.ts":{"content":"import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './useAuth';\n\nexport function useUnreadMessages() {\n  const [unreadCount, setUnreadCount] = useState(0);\n  const { dbUser } = useAuth();\n\n  const fetchUnreadCount = useCallback(async () => {\n    if (!dbUser?.id) {\n      setUnreadCount(0);\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/messages-simple/user/${dbUser.id}`);\n      if (response.ok) {\n        const data = await response.json();\n        const conversations = data.conversations || [];\n        \n        // Compter les messages non lus dans toutes les conversations\n        const totalUnread = conversations.reduce((total: number, conv: any) => {\n          return total + (conv.unread_count || 0);\n        }, 0);\n        \n        setUnreadCount(totalUnread);\n      }\n    } catch (error) {\n      console.error('Erreur lors du comptage des messages non lus:', error);\n      setUnreadCount(0);\n    }\n  }, [dbUser?.id]);\n\n  useEffect(() => {\n    fetchUnreadCount();\n    \n    // Actualiser le compteur toutes les 30 secondes\n    const interval = setInterval(fetchUnreadCount, 30000);\n    \n    return () => clearInterval(interval);\n  }, [fetchUnreadCount]);\n\n  // Retourner √©galement la fonction de rechargement pour permettre l'actualisation manuelle\n  return { unreadCount, refreshUnreadCount: fetchUnreadCount };\n}","size_bytes":1380},"client/src/lib/supabase.ts":{"content":"import { createClient } from '@supabase/supabase-js'\n\n// Supabase configuration\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL || 'https://placeholder.supabase.co'\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || 'placeholder'\n\nif (!supabaseUrl || supabaseUrl === 'https://placeholder.supabase.co') {\n  console.warn('VITE_SUPABASE_URL not configured. Please add your Supabase URL.')\n}\n\nif (!supabaseAnonKey || supabaseAnonKey === 'placeholder') {\n  console.warn('VITE_SUPABASE_ANON_KEY not configured. Please add your Supabase anon key.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n})\n\n// Auth helper functions\nexport const signUp = async (email: string, password: string, userData?: any) => {\n  const { data, error } = await supabase.auth.signUp({\n    email,\n    password,\n    options: {\n      data: userData\n    }\n  })\n  return { data, error }\n}\n\nexport const signIn = async (email: string, password: string) => {\n  const { data, error } = await supabase.auth.signInWithPassword({\n    email,\n    password\n  })\n  return { data, error }\n}\n\nexport const signInWithOAuth = async (provider: 'google' | 'apple' | 'github') => {\n  const { data, error } = await supabase.auth.signInWithOAuth({\n    provider,\n    options: {\n      redirectTo: `${window.location.origin}/auth/callback`\n    }\n  })\n  return { data, error }\n}\n\nexport const signInWithMagicLink = async (email: string) => {\n  const { data, error } = await supabase.auth.signInWithOtp({\n    email,\n    options: {\n      emailRedirectTo: `${window.location.origin}/auth/callback`\n    }\n  })\n  return { data, error }\n}\n\nexport const signOut = async () => {\n  const { error } = await supabase.auth.signOut()\n  return { error }\n}\n\nexport const getCurrentUser = async () => {\n  const { data: { user }, error } = await supabase.auth.getUser()\n  return { user, error }\n}\n\nexport const getCurrentSession = async () => {\n  const { data: { session }, error } = await supabase.auth.getSession()\n  return { session, error }\n}","size_bytes":2115},"client/src/pages/AboutPage.tsx":{"content":"import React, { useEffect } from 'react';\nimport { ArrowLeft, Car, Users, Shield, Target, Award, Heart } from 'lucide-react';\n\ninterface AboutPageProps {\n  onBack: () => void;\n  setCurrentView: (view: string) => void;\n}\n\nexport const AboutPage: React.FC<AboutPageProps> = ({ onBack, setCurrentView }) => {\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>Retour</span>\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900\">√Ä propos de Passion Auto2Roues</h1>\n            <div className=\"w-20\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-16\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"bg-primary-bolt-500 text-white p-4 rounded-full\">\n              <Car className=\"h-12 w-12\" />\n            </div>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Passion Auto2Roues\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            La plateforme de r√©f√©rence pour acheter et vendre des v√©hicules automobiles, \n            motos, scooters et √©quipements en toute s√©curit√©.\n          </p>\n        </div>\n\n        {/* Notre Mission */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-12\">\n          <div className=\"flex items-center mb-6\">\n            <Target className=\"h-8 w-8 text-primary-bolt-500 mr-3\" />\n            <h2 className=\"text-2xl font-bold text-gray-900\">Notre Mission</h2>\n          </div>\n          <p className=\"text-gray-700 text-lg leading-relaxed\">\n            Nous nous engageons √† faciliter l'achat et la vente de v√©hicules en France en proposant \n            une plateforme moderne, s√©curis√©e et intuitive. Notre objectif est de connecter acheteurs \n            et vendeurs tout en garantissant transparence et confiance dans chaque transaction.\n          </p>\n        </div>\n\n        {/* Nos Valeurs */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n          <div className=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <Shield className=\"h-12 w-12 text-green-500 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-bold text-gray-900 mb-3\">S√©curit√©</h3>\n            <p className=\"text-gray-600\">\n              Syst√®me de v√©rification des annonces et protection des donn√©es personnelles\n            </p>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <Users className=\"h-12 w-12 text-blue-500 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-bold text-gray-900 mb-3\">Communaut√©</h3>\n            <p className=\"text-gray-600\">\n              Une communaut√© active de passionn√©s automobile et de professionnels\n            </p>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <Heart className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-bold text-gray-900 mb-3\">Passion</h3>\n            <p className=\"text-gray-600\">\n              Cr√©√© par des passionn√©s pour des passionn√©s d'automobile\n            </p>\n          </div>\n        </div>\n\n        {/* Nos Services */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n            <Award className=\"h-8 w-8 text-primary-bolt-500 mr-3\" />\n            Nos Services\n          </h2>\n          <div className=\"space-y-6\">\n            <div className=\"border-l-4 border-primary-bolt-500 pl-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Annonces V√©hicules</h3>\n              <p className=\"text-gray-600\">\n                Voitures, motos, scooters, quads, utilitaires - tous types de v√©hicules\n              </p>\n            </div>\n            <div className=\"border-l-4 border-primary-bolt-500 pl-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Pi√®ces D√©tach√©es</h3>\n              <p className=\"text-gray-600\">\n                Pi√®ces neuves et d'occasion pour tous types de v√©hicules\n              </p>\n            </div>\n            <div className=\"border-l-4 border-primary-bolt-500 pl-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Services Professionnels</h3>\n              <p className=\"text-gray-600\">\n                R√©paration, entretien, remorquage - connectez-vous avec les professionnels\n              </p>\n            </div>\n            <div className=\"border-l-4 border-primary-bolt-500 pl-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Packs Premium</h3>\n              <p className=\"text-gray-600\">\n                Boostez la visibilit√© de vos annonces avec nos packs premium\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Statistiques */}\n        <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-2xl shadow-lg p-8 text-white mb-12\">\n          <h2 className=\"text-2xl font-bold mb-8 text-center\">Auto2Roues en Chiffres</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold mb-2\">10k+</div>\n              <div className=\"text-primary-bolt-100\">Annonces publi√©es</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold mb-2\">5k+</div>\n              <div className=\"text-primary-bolt-100\">Utilisateurs actifs</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold mb-2\">15</div>\n              <div className=\"text-primary-bolt-100\">Cat√©gories</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold mb-2\">24/7</div>\n              <div className=\"text-primary-bolt-100\">Support</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Contact */}\n        <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Nous Contacter</h2>\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-700\">\n              <strong>Email :</strong> contact@auto2roues.fr\n            </p>\n            <p className=\"text-gray-700\">\n              <strong>T√©l√©phone :</strong> +33 1 23 45 67 89\n            </p>\n            <p className=\"text-gray-700\">\n              <strong>Adresse :</strong> 123 Rue de l'Automobile, 75001 Paris, France\n            </p>\n            <p className=\"text-gray-700\">\n              <strong>Horaires :</strong> Lundi √† Vendredi, 9h-18h\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":7545},"client/src/pages/AuthCallback.tsx":{"content":"import React, { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\n\n// Page de callback pour OAuth (Google, Apple, Facebook)\nexport const AuthCallback: React.FC = () => {\n  const [status, setStatus] = useState('processing');\n\n  useEffect(() => {\n    const handleOAuthCallback = async () => {\n      try {\n        console.log('üîÑ Traitement callback OAuth...');\n        \n        // √âchanger le code OAuth contre une session Supabase\n        const { data, error } = await supabase.auth.exchangeCodeForSession(window.location.href);\n        \n        if (error) {\n          console.error('‚ùå Erreur √©change code:', error);\n          setStatus('error');\n          setTimeout(() => {\n            window.location.href = '/?auth=error';\n          }, 2000);\n          return;\n        }\n        \n        if (data.user) {\n          console.log('‚úÖ Session cr√©√©e pour:', data.user.email);\n          \n          // Synchroniser l'utilisateur dans nos tables\n          try {\n            const syncResponse = await fetch('/api/auth/sync', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({ \n                userId: data.user.id,\n                userData: data.user.user_metadata || {}\n              })\n            });\n            \n            if (syncResponse.ok) {\n              console.log('‚úÖ Utilisateur synchronis√©');\n            } else {\n              console.log('‚ö†Ô∏è Sync √©chou√©e, mais session cr√©√©e');\n            }\n          } catch (syncError) {\n            console.error('‚ö†Ô∏è Erreur sync:', syncError);\n          }\n          \n          setStatus('success');\n          \n          // Nettoyer l'URL et rediriger\n          window.history.replaceState({}, document.title, '/');\n          setTimeout(() => {\n            window.location.href = '/';\n          }, 1000);\n        } else {\n          setStatus('error');\n          setTimeout(() => {\n            window.location.href = '/?auth=error';\n          }, 2000);\n        }\n        \n      } catch (error) {\n        console.error('‚ùå Erreur callback OAuth:', error);\n        setStatus('error');\n        setTimeout(() => {\n          window.location.href = '/?auth=error';\n        }, 2000);\n      }\n    };\n\n    handleOAuthCallback();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#0CBFDE] mx-auto mb-4\"></div>\n        <h2 className=\"text-xl font-semibold text-gray-700 mb-2\">\n          {status === 'processing' && 'Connexion en cours...'}\n          {status === 'success' && 'Connexion r√©ussie !'}\n          {status === 'error' && 'Erreur de connexion'}\n        </h2>\n        <p className=\"text-gray-500\">\n          {status === 'processing' && 'Nous finalisons votre connexion, veuillez patienter.'}\n          {status === 'success' && 'Redirection vers votre tableau de bord...'}\n          {status === 'error' && 'Une erreur est survenue, redirection...'}\n        </p>\n      </div>\n    </div>\n  );\n};","size_bytes":3169},"client/src/pages/HelpPage.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, Search, HelpCircle, MessageCircle, Phone, Mail, ChevronDown, ChevronUp } from 'lucide-react';\n\ninterface HelpPageProps {\n  onBack: () => void;\n  setCurrentView: (view: string) => void;\n}\n\ninterface FAQItem {\n  id: number;\n  question: string;\n  answer: string;\n  category: string;\n}\n\nexport const HelpPage: React.FC<HelpPageProps> = ({ onBack, setCurrentView }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [expandedFAQ, setExpandedFAQ] = useState<number | null>(null);\n\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  const faqData: FAQItem[] = [\n    {\n      id: 1,\n      question: \"Comment publier une annonce sur Passion Auto2Roues ?\",\n      answer: \"Pour publier une annonce, connectez-vous √† votre compte, cliquez sur 'D√©poser une annonce' et suivez les √©tapes guid√©es. Vous devrez renseigner le type d'annonce, la cat√©gorie, les d√©tails du v√©hicule, ajouter des photos et d√©finir un prix.\",\n      category: \"annonces\"\n    },\n    {\n      id: 2,\n      question: \"Combien co√ªte la publication d'une annonce ?\",\n      answer: \"La publication d'une annonce de base est gratuite. Vous pouvez booster votre annonce avec nos packs premium : Daily (0,99‚Ç¨), Weekly (4,99‚Ç¨) ou Monthly (19,90‚Ç¨) pour une meilleure visibilit√©.\",\n      category: \"tarifs\"\n    },\n    {\n      id: 3,\n      question: \"Comment modifier ou supprimer mon annonce ?\",\n      answer: \"Rendez-vous dans votre espace personnel, section 'Mes annonces'. Cliquez sur l'annonce √† modifier, puis sur 'Modifier' ou 'Supprimer'. Les modifications sont prises en compte imm√©diatement.\",\n      category: \"annonces\"\n    },\n    {\n      id: 4,\n      question: \"Puis-je publier plusieurs photos pour mon v√©hicule ?\",\n      answer: \"Oui, vous pouvez ajouter jusqu'√† 4 photos par annonce. Des photos de qualit√© augmentent significativement vos chances de vente. Veillez √† montrer l'ext√©rieur, l'int√©rieur et les d√©tails importants.\",\n      category: \"annonces\"\n    },\n    {\n      id: 5,\n      question: \"Comment contacter un vendeur ?\",\n      answer: \"Chaque annonce dispose d'un bouton 'Contacter le vendeur'. Vous pouvez l'appeler directement, lui envoyer un message via WhatsApp ou utiliser notre syst√®me de messagerie interne.\",\n      category: \"achat\"\n    },\n    {\n      id: 6,\n      question: \"Comment fonctionne le syst√®me de premium ?\",\n      answer: \"Les packs premium boostent la visibilit√© de votre annonce en la pla√ßant en t√™te des r√©sultats de recherche. Trois formules sont disponibles : Daily (1 jour), Weekly (7 jours) ou Monthly (30 jours).\",\n      category: \"tarifs\"\n    },\n    {\n      id: 7,\n      question: \"Comment cr√©er un compte professionnel ?\",\n      answer: \"Lors de l'inscription, s√©lectionnez 'Compte professionnel' et renseignez les informations de votre entreprise (nom, SIRET, adresse). Les comptes professionnels b√©n√©ficient d'avantages sp√©cifiques.\",\n      category: \"compte\"\n    },\n    {\n      id: 8,\n      question: \"Mes donn√©es personnelles sont-elles prot√©g√©es ?\",\n      answer: \"Absolument. Passion Auto2Roues respecte le RGPD et prot√®ge vos donn√©es personnelles. Elles ne sont jamais vendues √† des tiers et sont utilis√©es uniquement pour le fonctionnement de la plateforme.\",\n      category: \"securite\"\n    },\n    {\n      id: 9,\n      question: \"Comment signaler une annonce suspecte ?\",\n      answer: \"Chaque annonce dispose d'un bouton 'Signaler' en bas de page. Vous pouvez √©galement nous contacter directement √† support@passion-auto2roues.fr pour signaler tout contenu inappropri√©.\",\n      category: \"securite\"\n    },\n    {\n      id: 10,\n      question: \"Puis-je modifier mon mot de passe ?\",\n      answer: \"Oui, rendez-vous dans votre espace personnel, section 'Param√®tres du compte'. Vous pourrez modifier votre mot de passe, vos informations personnelles et vos pr√©f√©rences de communication.\",\n      category: \"compte\"\n    }\n  ];\n\n  const categories = [\n    { id: 'all', name: 'Toutes les cat√©gories' },\n    { id: 'annonces', name: 'Annonces' },\n    { id: 'achat', name: 'Achat' },\n    { id: 'tarifs', name: 'Tarifs' },\n    { id: 'compte', name: 'Compte' },\n    { id: 'securite', name: 'S√©curit√©' }\n  ];\n\n  const filteredFAQ = faqData.filter(item => {\n    const matchesSearch = item.question.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         item.answer.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesCategory = selectedCategory === 'all' || item.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  const toggleFAQ = (id: number) => {\n    setExpandedFAQ(expandedFAQ === id ? null : id);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>Retour</span>\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900\">Centre d'Aide</h1>\n            <div className=\"w-20\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"bg-blue-500 text-white p-4 rounded-full\">\n              <HelpCircle className=\"h-12 w-12\" />\n            </div>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Comment pouvons-nous vous aider ?\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            Trouvez rapidement les r√©ponses √† vos questions ou contactez notre √©quipe support.\n          </p>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"bg-white rounded-xl shadow-lg p-6 mb-8\">\n          <div className=\"relative\">\n            <Search className=\"h-5 w-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2\" />\n            <input\n              type=\"text\"\n              placeholder=\"Rechercher dans l'aide...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n            />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1\">\n            {/* Categories */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cat√©gories</h3>\n              <div className=\"space-y-2\">\n                {categories.map(category => (\n                  <button\n                    key={category.id}\n                    onClick={() => setSelectedCategory(category.id)}\n                    className={`w-full text-left px-3 py-2 rounded-lg transition-colors ${\n                      selectedCategory === category.id\n                        ? 'bg-primary-bolt-500 text-white'\n                        : 'text-gray-700 hover:bg-gray-100'\n                    }`}\n                  >\n                    {category.name}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Contact Support */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Besoin d'aide ?</h3>\n              <div className=\"space-y-3\">\n                <a\n                  href=\"mailto:support@auto2roues.fr\"\n                  className=\"flex items-center space-x-3 p-3 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors\"\n                >\n                  <Mail className=\"h-5 w-5 text-blue-500\" />\n                  <span className=\"text-blue-700\">Email Support</span>\n                </a>\n                <a\n                  href=\"tel:+33123456789\"\n                  className=\"flex items-center space-x-3 p-3 bg-green-50 rounded-lg hover:bg-green-100 transition-colors\"\n                >\n                  <Phone className=\"h-5 w-5 text-green-500\" />\n                  <span className=\"text-green-700\">01 23 45 67 89</span>\n                </a>\n                <button className=\"flex items-center space-x-3 p-3 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors w-full\">\n                  <MessageCircle className=\"h-5 w-5 text-purple-500\" />\n                  <span className=\"text-purple-700\">Chat en direct</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* FAQ Content */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">\n                Questions Fr√©quentes\n                <span className=\"text-lg font-normal text-gray-500 ml-2\">\n                  ({filteredFAQ.length} r√©sultat{filteredFAQ.length > 1 ? 's' : ''})\n                </span>\n              </h2>\n              \n              {filteredFAQ.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <HelpCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-600 text-lg\">\n                    Aucune question ne correspond √† votre recherche.\n                  </p>\n                  <p className=\"text-gray-500 mt-2\">\n                    Essayez avec d'autres mots-cl√©s ou contactez notre support.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {filteredFAQ.map(item => (\n                    <div key={item.id} className=\"border border-gray-200 rounded-lg overflow-hidden\">\n                      <button\n                        onClick={() => toggleFAQ(item.id)}\n                        className=\"w-full px-6 py-4 text-left bg-gray-50 hover:bg-gray-100 transition-colors flex items-center justify-between\"\n                      >\n                        <span className=\"text-lg font-medium text-gray-900\">{item.question}</span>\n                        {expandedFAQ === item.id ? (\n                          <ChevronUp className=\"h-5 w-5 text-gray-500\" />\n                        ) : (\n                          <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n                        )}\n                      </button>\n                      {expandedFAQ === item.id && (\n                        <div className=\"px-6 py-4 bg-white border-t border-gray-200\">\n                          <p className=\"text-gray-700 leading-relaxed\">{item.answer}</p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"mt-12 grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <div className=\"bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <MessageCircle className=\"h-8 w-8 text-blue-500\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Tutoriels Vid√©o</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Apprenez √† utiliser Auto2Roues avec nos tutoriels vid√©o d√©taill√©s\n            </p>\n            <button className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors\">\n              Voir les tutoriels\n            </button>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <div className=\"bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <HelpCircle className=\"h-8 w-8 text-green-500\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Guide d'Utilisation</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Consultez notre guide complet pour ma√Ætriser toutes les fonctionnalit√©s\n            </p>\n            <button className=\"bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors\">\n              Lire le guide\n            </button>\n          </div>\n\n          <div className=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <div className=\"bg-purple-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Phone className=\"h-8 w-8 text-purple-500\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Support T√©l√©phonique</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Parlez directement √† notre √©quipe support du lundi au vendredi\n            </p>\n            <button className=\"bg-purple-500 text-white px-6 py-2 rounded-lg hover:bg-purple-600 transition-colors\">\n              Nous appeler\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":13736},"client/src/pages/LegalPage.tsx":{"content":"import React, { useEffect } from 'react';\nimport { ArrowLeft, Building, Mail, Phone, Globe, FileText } from 'lucide-react';\n\ninterface LegalPageProps {\n  onBack: () => void;\n  setCurrentView: (view: string) => void;\n}\n\nexport const LegalPage: React.FC<LegalPageProps> = ({ onBack, setCurrentView }) => {\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>Retour</span>\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900\">Mentions L√©gales</h1>\n            <div className=\"w-20\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"bg-purple-500 text-white p-4 rounded-full\">\n              <FileText className=\"h-12 w-12\" />\n            </div>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Mentions L√©gales\n          </h1>\n          <p className=\"text-lg text-gray-600\">\n            Informations l√©gales concernant Passion Auto2Roues\n          </p>\n        </div>\n\n        {/* Content Sections */}\n        <div className=\"space-y-8\">\n          {/* Section 1 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <Building className=\"h-7 w-7 text-primary-bolt-500 mr-3\" />\n              1. Informations sur l'√âditeur\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Passion Auto2Roues SAS</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <p><strong>Forme juridique :</strong> Soci√©t√© par Actions Simplifi√©e</p>\n                    <p><strong>Capital social :</strong> 100 000 ‚Ç¨</p>\n                    <p><strong>SIRET :</strong> 123 456 789 00012</p>\n                    <p><strong>Code APE :</strong> 6312Z</p>\n                  </div>\n                  <div>\n                    <p><strong>RCS :</strong> Paris B 123 456 789</p>\n                    <p><strong>TVA intracommunautaire :</strong> FR12345678900</p>\n                    <p><strong>Date de cr√©ation :</strong> 15/03/2023</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 2 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">2. Si√®ge Social</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <div className=\"flex items-start space-x-3\">\n                  <Building className=\"h-6 w-6 text-gray-500 mt-1\" />\n                  <div>\n                    <p className=\"font-semibold text-gray-900\">Adresse du si√®ge social :</p>\n                    <p>123 Rue de l'Automobile</p>\n                    <p>75001 Paris</p>\n                    <p>France</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 3 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">3. Contact</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <div className=\"flex items-start space-x-3\">\n                    <Mail className=\"h-6 w-6 text-blue-500 mt-1\" />\n                    <div>\n                      <p className=\"font-semibold text-gray-900 mb-2\">Email</p>\n                      <p>contact@auto2roues.fr</p>\n                      <p className=\"text-sm text-gray-600\">Support technique et commercial</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <div className=\"flex items-start space-x-3\">\n                    <Phone className=\"h-6 w-6 text-green-500 mt-1\" />\n                    <div>\n                      <p className=\"font-semibold text-gray-900 mb-2\">T√©l√©phone</p>\n                      <p>+33 1 23 45 67 89</p>\n                      <p className=\"text-sm text-gray-600\">Lundi √† Vendredi : 9h-18h</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 4 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">4. Directeur de la Publication</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <p><strong>Nom :</strong> Jean Dupont</p>\n                <p><strong>Fonction :</strong> Pr√©sident de Auto2Roues SAS</p>\n                <p><strong>Email :</strong> direction@auto2roues.fr</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 5 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <Globe className=\"h-7 w-7 text-blue-500 mr-3\" />\n              5. H√©bergement\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">OVH SAS</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <p><strong>Adresse :</strong></p>\n                    <p>2 rue Kellermann</p>\n                    <p>59100 Roubaix</p>\n                    <p>France</p>\n                  </div>\n                  <div>\n                    <p><strong>T√©l√©phone :</strong> +33 9 72 10 10 07</p>\n                    <p><strong>Site web :</strong> www.ovh.com</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 6 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">6. Propri√©t√© Intellectuelle</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Le site Auto2Roues et l'ensemble de son contenu (textes, images, graphismes, logo, \n                ic√¥nes, sons, logiciels, etc.) sont prot√©g√©s par le droit d'auteur et constituent \n                la propri√©t√© exclusive de Auto2Roues SAS.\n              </p>\n              <p>\n                Toute reproduction, repr√©sentation, modification, publication, adaptation de tout \n                ou partie des √©l√©ments du site, quel que soit le moyen ou le proc√©d√© utilis√©, \n                est interdite, sauf autorisation √©crite pr√©alable de Auto2Roues SAS.\n              </p>\n              <p>\n                Les marques Auto2Roues et les logos figurant sur le site sont des marques d√©pos√©es \n                de Auto2Roues SAS. Toute reproduction totale ou partielle de ces marques ou logos \n                effectu√©e √† partir des √©l√©ments du site sans l'autorisation expresse de Auto2Roues SAS \n                est donc prohib√©e.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 7 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">7. Cookies</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Le site Auto2Roues utilise des cookies pour am√©liorer l'exp√©rience utilisateur \n                et analyser le trafic. Les cookies sont des petits fichiers texte d√©pos√©s sur \n                votre ordinateur lors de votre visite.\n              </p>\n              <p>\n                Vous pouvez configurer votre navigateur pour refuser les cookies, mais cela \n                peut limiter certaines fonctionnalit√©s du site.\n              </p>\n              <p>\n                Pour plus d'informations, consultez notre \n                <span className=\"text-primary-bolt-500 font-semibold\"> Politique de Confidentialit√©</span>.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 8 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">8. Responsabilit√©</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Auto2Roues SAS s'efforce de fournir des informations aussi pr√©cises que possible. \n                Toutefois, elle ne pourra √™tre tenue responsable des omissions, des inexactitudes \n                et des carences dans la mise √† jour, qu'elles soient de son fait ou du fait des \n                tiers partenaires qui lui fournissent ces informations.\n              </p>\n              <p>\n                Tous les informations indiqu√©es sur le site Auto2Roues sont donn√©es √† titre \n                indicatif, et sont susceptibles d'√©voluer. Par ailleurs, les renseignements \n                figurant sur le site ne sont pas exhaustifs.\n              </p>\n              <p>\n                Auto2Roues SAS ne peut √™tre tenue responsable des transactions effectu√©es entre \n                utilisateurs via la plateforme.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 9 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">9. Droit Applicable</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Tout litige en relation avec l'utilisation du site Auto2Roues est soumis au \n                droit fran√ßais. En cas de litige, les tribunaux fran√ßais seront seuls comp√©tents.\n              </p>\n              <p>\n                Les pr√©sentes mentions l√©gales peuvent √™tre modifi√©es √† tout moment sans pr√©avis. \n                Il est recommand√© de les consulter r√©guli√®rement.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 10 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">10. M√©diation</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Conform√©ment aux dispositions du Code de la consommation concernant le r√®glement \n                amiable des litiges, Auto2Roues SAS adh√®re au Service du M√©diateur du e-commerce \n                de la FEVAD (F√©d√©ration du e-commerce et de la vente √† distance).\n              </p>\n              <p>\n                En cas de litige, vous pouvez d√©poser votre r√©clamation sur leur site : \n                <span className=\"text-primary-bolt-500 font-semibold\"> www.mediateurfevad.fr</span>\n              </p>\n            </div>\n          </div>\n\n          {/* Contact */}\n          <div className=\"bg-gray-50 rounded-xl border border-gray-200 p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Contact L√©gal</h2>\n            <p className=\"text-gray-700\">\n              Pour toute question concernant ces mentions l√©gales, contactez-nous √† : \n              <span className=\"text-primary-bolt-500 font-semibold\"> legal@auto2roues.fr</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":12385},"client/src/pages/Messages.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { MessageCircle, Send, User, ArrowLeft, Clock } from 'lucide-react';\nimport { useMessaging } from '../hooks/useMessaging';\n\ninterface Conversation {\n  id: string;\n  vehicle_id: string;\n  vehicle_title: string;\n  other_user: {\n    id: string;\n    name: string;\n    email: string;\n  };\n  last_message_at: string;\n  last_message: string;\n  unread_count: number;\n  messages?: Message[];\n}\n\ninterface Message {\n  id: string;\n  content: string;\n  sender_id: string;\n  sender_name: string;\n  created_at: string;\n}\n\nexport function Messages() {\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const { sendMessage } = useMessaging();\n  const currentUserId = '100'; // User Amine Noury connect√©\n\n  useEffect(() => {\n    loadConversations();\n  }, []);\n\n  useEffect(() => {\n    if (selectedConversation) {\n      loadMessages(selectedConversation);\n    }\n  }, [selectedConversation]);\n\n  const loadConversations = async () => {\n    try {\n      console.log('üì¨ Chargement conversations pour utilisateur:', currentUserId);\n      \n      const response = await fetch(`/api/messages-simple/user/${currentUserId}`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('‚úÖ Conversations re√ßues:', data.conversations?.length || 0);\n        setConversations(data.conversations || []);\n      } else {\n        console.error('‚ùå Erreur r√©ponse conversations:', response.status);\n      }\n    } catch (error) {\n      console.error('‚ùå Erreur chargement conversations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMessages = async (conversationId: string) => {\n    try {\n      console.log('üí¨ Chargement messages pour conversation:', conversationId);\n      \n      // Utiliser les messages d√©j√† charg√©s dans les conversations\n      const conversation = conversations.find(c => c.id === conversationId);\n      if (conversation && conversation.messages) {\n        console.log('‚úÖ Messages trouv√©s dans conversation:', conversation.messages.length);\n        \n        // Convertir les messages au bon format\n        const formattedMessages = conversation.messages.map(msg => ({\n          id: msg.id,\n          content: msg.content,\n          sender_id: msg.sender_id,\n          sender_name: msg.is_from_current_user ? 'Vous' : conversation.other_user.name,\n          created_at: msg.created_at || new Date().toISOString()\n        }));\n        \n        setMessages(formattedMessages);\n        console.log('‚úÖ Messages format√©s charg√©s:', formattedMessages.length);\n      } else {\n        console.log('‚ùå Aucun message trouv√© pour la conversation:', conversationId);\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Erreur chargement messages:', error);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n\n    const messageId = await sendMessage(selectedConversation, newMessage);\n    \n    if (messageId) {\n      setNewMessage('');\n      loadMessages(selectedConversation);\n      loadConversations(); // Mettre √† jour la liste des conversations\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffHours = Math.abs(now.getTime() - date.getTime()) / 36e5;\n    \n    if (diffHours < 24) {\n      return date.toLocaleTimeString('fr-FR', { \n        hour: '2-digit', \n        minute: '2-digit' \n      });\n    } else {\n      return date.toLocaleDateString('fr-FR', { \n        day: '2-digit', \n        month: '2-digit' \n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <MessageCircle className=\"h-12 w-12 text-teal-600 mx-auto mb-4 animate-pulse\" />\n          <p className=\"text-gray-600 dark:text-gray-400\">Chargement des messages...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"max-w-6xl mx-auto py-8 px-4\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden\">\n          <div className=\"flex h-[600px]\">\n            {/* Liste des conversations */}\n            <div className={`w-1/3 border-r border-gray-200 dark:border-gray-700 ${selectedConversation ? 'hidden md:block' : ''}`}>\n              <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-semibold flex items-center gap-2\">\n                  <MessageCircle className=\"h-5 w-5 text-teal-600\" />\n                  Messages\n                </h2>\n              </div>\n              \n              <div className=\"overflow-y-auto h-full\">\n                {conversations.length === 0 ? (\n                  <div className=\"p-6 text-center\">\n                    <MessageCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                    <p className=\"text-gray-500 dark:text-gray-400\">\n                      Aucune conversation\n                    </p>\n                    <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                      Contactez un vendeur pour commencer une conversation\n                    </p>\n                  </div>\n                ) : (\n                  conversations.map((conversation) => (\n                    <div\n                      key={conversation.id}\n                      onClick={() => setSelectedConversation(conversation.id)}\n                      className={`p-4 border-b border-gray-100 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 ${\n                        selectedConversation === conversation.id ? 'bg-teal-50 dark:bg-teal-900/20' : ''\n                      }`}\n                    >\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-600 rounded-full flex items-center justify-center\">\n                          <User className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex items-center justify-between\">\n                            <p className=\"font-medium text-sm truncate\">\n                              {conversation.other_user.name}\n                            </p>\n                            <span className=\"text-xs text-gray-500\">\n                              {formatDate(conversation.last_message_at)}\n                            </span>\n                          </div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">\n                            {conversation.vehicle_title}\n                          </p>\n                          {conversation.unread_count > 0 && (\n                            <span className=\"inline-block mt-1 px-2 py-1 text-xs bg-teal-600 text-white rounded-full\">\n                              {conversation.unread_count}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n\n            {/* Zone de messages */}\n            <div className={`flex-1 flex flex-col ${!selectedConversation ? 'hidden md:flex' : ''}`}>\n              {selectedConversation ? (\n                <>\n                  {/* En-t√™te de la conversation */}\n                  <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n                    <div className=\"flex items-center gap-3\">\n                      <button\n                        onClick={() => setSelectedConversation(null)}\n                        className=\"md:hidden p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n                      >\n                        <ArrowLeft className=\"h-5 w-5\" />\n                      </button>\n                      <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-600 rounded-full flex items-center justify-center\">\n                        <User className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">\n                          {conversations.find(c => c.id === selectedConversation)?.other_user.name}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {conversations.find(c => c.id === selectedConversation)?.vehicle_title}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Messages */}\n                  <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                    {messages.map((message) => (\n                      <div\n                        key={message.id}\n                        className={`flex ${message.sender_id === currentUserId ? 'justify-end' : 'justify-start'}`}\n                      >\n                        <div\n                          className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                            message.sender_id === currentUserId\n                              ? 'bg-teal-600 text-white'\n                              : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100'\n                          }`}\n                        >\n                          <p className=\"text-sm\">{message.content}</p>\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <Clock className=\"h-3 w-3 opacity-70\" />\n                            <span className=\"text-xs opacity-70\">\n                              {formatDate(message.created_at)}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Zone d'envoi */}\n                  <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n                    <div className=\"flex gap-2\">\n                      <input\n                        type=\"text\"\n                        value={newMessage}\n                        onChange={(e) => setNewMessage(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                        placeholder=\"Tapez votre message...\"\n                        className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n                      />\n                      <button\n                        onClick={handleSendMessage}\n                        disabled={!newMessage.trim()}\n                        className=\"px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\n                      >\n                        <Send className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <div className=\"flex-1 flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n                  <div className=\"text-center\">\n                    <MessageCircle className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-2\">\n                      S√©lectionnez une conversation\n                    </h3>\n                    <p className=\"text-gray-500 dark:text-gray-400\">\n                      Choisissez une conversation dans la liste pour commencer √† √©changer\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":12372},"client/src/pages/PrivacyPage.tsx":{"content":"import React, { useEffect } from 'react';\nimport { ArrowLeft, Lock, Eye, UserCheck, Database, Shield } from 'lucide-react';\n\ninterface PrivacyPageProps {\n  onBack: () => void;\n  setCurrentView: (view: string) => void;\n}\n\nexport const PrivacyPage: React.FC<PrivacyPageProps> = ({ onBack, setCurrentView }) => {\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>Retour</span>\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900\">Politique de Confidentialit√©</h1>\n            <div className=\"w-20\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"bg-green-500 text-white p-4 rounded-full\">\n              <Lock className=\"h-12 w-12\" />\n            </div>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Politique de Confidentialit√©\n          </h1>\n          <p className=\"text-lg text-gray-600\">\n            Derni√®re mise √† jour : 14 janvier 2025\n          </p>\n        </div>\n\n        {/* RGPD Compliance */}\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-6 mb-8\">\n          <div className=\"flex items-start\">\n            <Shield className=\"h-6 w-6 text-green-500 mr-3 mt-0.5\" />\n            <div>\n              <h3 className=\"text-lg font-semibold text-green-900 mb-2\">Conformit√© RGPD</h3>\n              <p className=\"text-green-800\">\n                Passion Auto2Roues est enti√®rement conforme au R√®glement G√©n√©ral sur la Protection \n                des Donn√©es (RGPD) et s'engage √† prot√©ger vos donn√©es personnelles.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Content Sections */}\n        <div className=\"space-y-8\">\n          {/* Section 1 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <Eye className=\"h-7 w-7 text-primary-bolt-500 mr-3\" />\n              1. Donn√©es Collect√©es\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Nous collectons les donn√©es suivantes pour assurer le fonctionnement de notre service :\n              </p>\n              \n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Donn√©es d'inscription :</h4>\n                <ul className=\"list-disc list-inside space-y-1 text-gray-700\">\n                  <li>Nom et pr√©nom</li>\n                  <li>Adresse email</li>\n                  <li>Num√©ro de t√©l√©phone</li>\n                  <li>Type de compte (particulier/professionnel)</li>\n                  <li>Informations de localisation (code postal, ville)</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Donn√©es d'utilisation :</h4>\n                <ul className=\"list-disc list-inside space-y-1 text-gray-700\">\n                  <li>Annonces publi√©es</li>\n                  <li>Messages √©chang√©s</li>\n                  <li>Historique de navigation</li>\n                  <li>Adresse IP et donn√©es de connexion</li>\n                  <li>Cookies et technologies similaires</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Donn√©es de paiement :</h4>\n                <ul className=\"list-disc list-inside space-y-1 text-gray-700\">\n                  <li>Informations de carte bancaire (trait√©es par Stripe)</li>\n                  <li>Historique des transactions</li>\n                  <li>Factures et re√ßus</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 2 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <Database className=\"h-7 w-7 text-blue-500 mr-3\" />\n              2. Finalit√©s du Traitement\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Vos donn√©es sont utilis√©es pour :</p>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"border-l-4 border-primary-bolt-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900\">Fonctionnement du service</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Cr√©ation et gestion des comptes, publication d'annonces, mise en relation\n                  </p>\n                </div>\n                <div className=\"border-l-4 border-green-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900\">Communication</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Notifications, support client, informations importantes\n                  </p>\n                </div>\n                <div className=\"border-l-4 border-blue-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900\">Am√©lioration du service</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Analyse d'usage, d√©veloppement de nouvelles fonctionnalit√©s\n                  </p>\n                </div>\n                <div className=\"border-l-4 border-purple-500 pl-4\">\n                  <h4 className=\"font-semibold text-gray-900\">S√©curit√©</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Pr√©vention de la fraude, d√©tection d'activit√©s suspectes\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 3 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">3. Base L√©gale du Traitement</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Le traitement de vos donn√©es repose sur :</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li><strong>Ex√©cution du contrat :</strong> Pour fournir nos services</li>\n                <li><strong>Consentement :</strong> Pour les communications marketing (optionnel)</li>\n                <li><strong>Int√©r√™t l√©gitime :</strong> Pour la s√©curit√© et l'am√©lioration du service</li>\n                <li><strong>Obligations l√©gales :</strong> Pour respecter la r√©glementation</li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Section 4 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">4. Partage des Donn√©es</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Nous ne vendons jamais vos donn√©es personnelles. Elles peuvent √™tre partag√©es uniquement dans les cas suivants :</p>\n              \n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-yellow-900 mb-2\">Prestataires de services</h4>\n                <p className=\"text-yellow-800\">\n                  H√©bergement (OVH), paiement (Stripe), support client - sous contrat de confidentialit√©\n                </p>\n              </div>\n              \n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-red-900 mb-2\">Obligations l√©gales</h4>\n                <p className=\"text-red-800\">\n                  Autorit√©s judiciaires ou administratives dans le cadre d'enqu√™tes l√©gales\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 5 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <UserCheck className=\"h-7 w-7 text-green-500 mr-3\" />\n              5. Vos Droits\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Conform√©ment au RGPD, vous disposez des droits suivants :</p>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">Droit d'acc√®s</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Demander l'acc√®s √† vos donn√©es personnelles\n                  </p>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">Droit de rectification</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Corriger des donn√©es inexactes ou incompl√®tes\n                  </p>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">Droit d'effacement</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    Supprimer vos donn√©es sous certaines conditions\n                  </p>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">Droit √† la portabilit√©</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    R√©cup√©rer vos donn√©es dans un format structur√©\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mt-4\">\n                <p className=\"text-blue-800\">\n                  <strong>Comment exercer vos droits :</strong> Contactez-nous √† \n                  <span className=\"font-semibold\"> privacy@auto2roues.fr</span> avec une copie de votre pi√®ce d'identit√©.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Section 6 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">6. Dur√©e de Conservation</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Nous conservons vos donn√©es uniquement le temps n√©cessaire :</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li><strong>Donn√©es de compte :</strong> Jusqu'√† suppression du compte + 3 ans</li>\n                <li><strong>Donn√©es d'annonces :</strong> 2 ans apr√®s expiration</li>\n                <li><strong>Donn√©es de paiement :</strong> 10 ans (obligations comptables)</li>\n                <li><strong>Logs de connexion :</strong> 1 an maximum</li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Section 7 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">7. S√©curit√© des Donn√©es</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Nous mettons en ≈ìuvre des mesures de s√©curit√© robustes :</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Chiffrement des donn√©es en transit et au repos</li>\n                <li>Authentification √† deux facteurs</li>\n                <li>Audits de s√©curit√© r√©guliers</li>\n                <li>Acc√®s restreint aux donn√©es personnelles</li>\n                <li>Sauvegarde et plan de continuit√© d'activit√©</li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Section 8 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">8. Cookies et Technologies Similaires</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>Nous utilisons des cookies pour :</p>\n              <ul className=\"list-disc list-inside space-y-2\">\n                <li>Assurer le fonctionnement du site</li>\n                <li>M√©moriser vos pr√©f√©rences</li>\n                <li>Analyser l'audience (Google Analytics)</li>\n                <li>Am√©liorer votre exp√©rience utilisateur</li>\n              </ul>\n              <p>\n                Vous pouvez g√©rer les cookies via les param√®tres de votre navigateur. \n                Certains cookies sont n√©cessaires au fonctionnement du site.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 9 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">9. Transferts Internationaux</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Vos donn√©es sont h√©berg√©es en France. Certains prestataires peuvent √™tre situ√©s \n                dans l'Union Europ√©enne ou dans des pays offrant un niveau de protection ad√©quat.\n              </p>\n              <p>\n                Tout transfert vers un pays tiers fait l'objet de garanties appropri√©es \n                (clauses contractuelles types, etc.).\n              </p>\n            </div>\n          </div>\n\n          {/* Contact */}\n          <div className=\"bg-gray-50 rounded-xl border border-gray-200 p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Contact et R√©clamations</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                <strong>D√©l√©gu√© √† la Protection des Donn√©es :</strong> \n                <span className=\"text-primary-bolt-500 font-semibold\"> privacy@auto2roues.fr</span>\n              </p>\n              <p>\n                <strong>Autorit√© de contr√¥le :</strong> En cas de litige, vous pouvez saisir la \n                <span className=\"font-semibold\"> Commission Nationale de l'Informatique et des Libert√©s (CNIL)</span>\n              </p>\n              <p>\n                <strong>Adresse CNIL :</strong> 3 Place de Fontenoy, 75007 Paris - www.cnil.fr\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":14922},"client/src/pages/SafetyTipsPage.tsx":{"content":"import React, { useEffect } from 'react';\nimport { ArrowLeft, Shield, AlertTriangle, CheckCircle, Eye, Lock, Phone, CreditCard } from 'lucide-react';\n\ninterface SafetyTipsPageProps {\n  onBack: () => void;\n  setCurrentView: (view: string) => void;\n}\n\nexport const SafetyTipsPage: React.FC<SafetyTipsPageProps> = ({ onBack, setCurrentView }) => {\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  const safetyTips = [\n    {\n      icon: <Eye className=\"h-8 w-8 text-blue-500\" />,\n      title: \"Inspectez le v√©hicule\",\n      description: \"Examinez toujours le v√©hicule en personne avant l'achat. V√©rifiez l'√©tat g√©n√©ral, les documents et l'historique.\",\n      tips: [\n        \"Demandez √† voir la carte grise et le contr√¥le technique\",\n        \"V√©rifiez la correspondance du num√©ro de s√©rie\",\n        \"Faites un essai routier dans diff√©rentes conditions\",\n        \"Inspectez les signes d'usure anormale ou d'accident\"\n      ]\n    },\n    {\n      icon: <Shield className=\"h-8 w-8 text-green-500\" />,\n      title: \"Rencontrez en lieu s√ªr\",\n      description: \"Privil√©giez les lieux publics et bien √©clair√©s pour vos rendez-vous d'achat ou de vente.\",\n      tips: [\n        \"Rendez-vous dans des parkings publics surveill√©s\",\n        \"√âvitez les rendez-vous tardifs ou dans des lieux isol√©s\",\n        \"Informez un proche de votre rendez-vous\",\n        \"Amenez quelqu'un avec vous si possible\"\n      ]\n    },\n    {\n      icon: <CreditCard className=\"h-8 w-8 text-purple-500\" />,\n      title: \"Paiements s√©curis√©s\",\n      description: \"Utilisez des m√©thodes de paiement s√©curis√©es et tra√ßables pour vos transactions.\",\n      tips: [\n        \"Privil√©giez les virements bancaires ou ch√®ques de banque\",\n        \"√âvitez les paiements en esp√®ces pour les gros montants\",\n        \"Ne payez jamais avant d'avoir vu le v√©hicule\",\n        \"M√©fiez-vous des demandes de paiement urgent\"\n      ]\n    },\n    {\n      icon: <Phone className=\"h-8 w-8 text-orange-500\" />,\n      title: \"Communication prudente\",\n      description: \"Soyez vigilant dans vos communications et ne partagez pas d'informations sensibles.\",\n      tips: [\n        \"Utilisez la messagerie Passion Auto2Roues pour les premiers contacts\",\n        \"Ne communiquez jamais vos donn√©es bancaires par message\",\n        \"M√©fiez-vous des offres trop all√©chantes\",\n        \"V√©rifiez l'identit√© de votre interlocuteur\"\n      ]\n    }\n  ];\n\n  const redFlags = [\n    \"Prix anormalement bas par rapport au march√©\",\n    \"Vendeur press√© ou qui refuse la visite\",\n    \"Demande de paiement avant la visite\",\n    \"Photos floues ou en nombre insuffisant\",\n    \"Vendeur qui ne peut pas pr√©senter les documents\",\n    \"V√©hicule situ√© √† l'√©tranger ou tr√®s loin\",\n    \"Communication uniquement par email ou SMS\",\n    \"Demande de virement vers un compte √©tranger\"\n  ];\n\n  const documents = [\n    {\n      name: \"Carte grise\",\n      description: \"V√©rifiez qu'elle est au nom du vendeur et sans opposition\"\n    },\n    {\n      name: \"Contr√¥le technique\",\n      description: \"Doit √™tre valide et sans contre-visite en cours\"\n    },\n    {\n      name: \"Factures d'entretien\",\n      description: \"Prouvent l'historique et l'entretien du v√©hicule\"\n    },\n    {\n      name: \"Rapport d'expertise\",\n      description: \"En cas d'accident, demandez le rapport d'expertise\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>Retour</span>\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900\">Conseils de S√©curit√©</h1>\n            <div className=\"w-20\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"bg-red-500 text-white p-4 rounded-full\">\n              <Shield className=\"h-12 w-12\" />\n            </div>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Conseils de S√©curit√©\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Prot√©gez-vous lors de vos achats et ventes de v√©hicules. Suivez nos conseils \n            pour des transactions s√ªres et sereines.\n          </p>\n        </div>\n\n        {/* Safety Tips Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-12\">\n          {safetyTips.map((tip, index) => (\n            <div key={index} className=\"bg-white rounded-xl shadow-lg p-8\">\n              <div className=\"flex items-center mb-6\">\n                {tip.icon}\n                <h3 className=\"text-xl font-bold text-gray-900 ml-3\">{tip.title}</h3>\n              </div>\n              <p className=\"text-gray-600 mb-6\">{tip.description}</p>\n              <ul className=\"space-y-2\">\n                {tip.tips.map((item, tipIndex) => (\n                  <li key={tipIndex} className=\"flex items-start\">\n                    <CheckCircle className=\"h-5 w-5 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                    <span className=\"text-gray-700\">{item}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        {/* Red Flags Section */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-12\">\n          <div className=\"flex items-center mb-6\">\n            <AlertTriangle className=\"h-8 w-8 text-red-500 mr-3\" />\n            <h2 className=\"text-2xl font-bold text-gray-900\">Signaux d'Alarme</h2>\n          </div>\n          <p className=\"text-gray-600 mb-6\">\n            M√©fiez-vous si vous rencontrez l'un de ces signaux d'alarme lors d'une transaction :\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {redFlags.map((flag, index) => (\n              <div key={index} className=\"flex items-start p-4 bg-red-50 rounded-lg\">\n                <AlertTriangle className=\"h-5 w-5 text-red-500 mr-3 mt-0.5 flex-shrink-0\" />\n                <span className=\"text-red-800\">{flag}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Documents Section */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-12\">\n          <div className=\"flex items-center mb-6\">\n            <Lock className=\"h-8 w-8 text-blue-500 mr-3\" />\n            <h2 className=\"text-2xl font-bold text-gray-900\">Documents Essentiels</h2>\n          </div>\n          <p className=\"text-gray-600 mb-6\">\n            Ces documents sont indispensables pour une transaction s√©curis√©e :\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {documents.map((doc, index) => (\n              <div key={index} className=\"border border-gray-200 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{doc.name}</h3>\n                <p className=\"text-gray-600\">{doc.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* For Sellers Section */}\n        <div className=\"bg-gradient-to-r from-primary-bolt-500 to-primary-bolt-600 rounded-xl shadow-lg p-8 text-white mb-12\">\n          <h2 className=\"text-2xl font-bold mb-6\">Conseils pour les Vendeurs</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-3\">Pr√©parez votre v√©hicule</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex items-start\">\n                  <CheckCircle className=\"h-5 w-5 text-primary-bolt-200 mr-2 mt-0.5 flex-shrink-0\" />\n                  <span>Nettoyez int√©rieur et ext√©rieur</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <CheckCircle className=\"h-5 w-5 text-primary-bolt-200 mr-2 mt-0.5 flex-shrink-0\" />\n                  <span>Rassemblez tous les documents</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <CheckCircle className=\"h-5 w-5 text-primary-bolt-200 mr-2 mt-0.5 flex-shrink-0\" />\n                  <span>Prenez des photos de qualit√©</span>\n                </li>\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-3\">Soyez transparent</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex items-start\">\n                  <CheckCircle className=\"h-5 w-5 text-primary-bolt-200 mr-2 mt-0.5 flex-shrink-0\" />\n                  <span>Mentionnez tous les d√©fauts</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <CheckCircle className=\"h-5 w-5 text-primary-bolt-200 mr-2 mt-0.5 flex-shrink-0\" />\n                  <span>Proposez un prix r√©aliste</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <CheckCircle className=\"h-5 w-5 text-primary-bolt-200 mr-2 mt-0.5 flex-shrink-0\" />\n                  <span>R√©pondez rapidement aux questions</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* For Buyers Section */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Conseils pour les Acheteurs</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"text-center\">\n              <div className=\"bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Eye className=\"h-8 w-8 text-blue-500\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Recherchez</h3>\n              <p className=\"text-gray-600\">\n                √âtudiez le march√© et comparez les prix avant d'acheter\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"h-8 w-8 text-green-500\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">V√©rifiez</h3>\n              <p className=\"text-gray-600\">\n                Inspectez le v√©hicule et tous les documents attentivement\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"bg-purple-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Shield className=\"h-8 w-8 text-purple-500\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">N√©gociez</h3>\n              <p className=\"text-gray-600\">\n                N√©gociez le prix en vous basant sur l'√©tat r√©el du v√©hicule\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Emergency Contact */}\n        <div className=\"bg-red-50 border border-red-200 rounded-xl p-8 text-center\">\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-red-900 mb-4\">En cas de probl√®me</h2>\n          <p className=\"text-red-800 mb-6\">\n            Si vous rencontrez une situation suspecte ou dangereuse, n'h√©sitez pas √† nous contacter imm√©diatement.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <a\n              href=\"mailto:security@auto2roues.fr\"\n              className=\"bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition-colors\"\n            >\n              Signaler un probl√®me\n            </a>\n            <a\n              href=\"tel:+33123456789\"\n              className=\"bg-white text-red-500 border border-red-500 px-6 py-3 rounded-lg hover:bg-red-50 transition-colors\"\n            >\n              Appeler le support\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":12550},"client/src/pages/SearchPage.tsx":{"content":"import React, { useState, useMemo } from 'react';\nimport { Search, MapPin, Filter, X, SlidersHorizontal, Grid, List, ChevronDown, Star, Bell } from 'lucide-react';\nimport { useApp } from '../contexts/AppContext';\nimport { VehicleCard } from '../components/VehicleCard';\nimport { brandsByVehicleType, getBrandsBySubcategory } from '../utils/mockData';\nimport { useSavedSearches } from '../hooks/useSavedSearches';\nimport { useAuth } from '../hooks/useAuth';\nimport type { SearchFilters } from '../types';\n\nexport const SearchPage: React.FC = () => {\n  const { vehicles, searchFilters, setSearchFilters, setSelectedVehicle } = useApp();\n  const { saveSearch, loading: savingSearch } = useSavedSearches();\n  const { dbUser } = useAuth();\n  const [searchTerm, setSearchTerm] = useState(searchFilters.searchTerm || '');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [saveSearchName, setSaveSearchName] = useState('');\n  const [enableAlerts, setEnableAlerts] = useState(false);\n\n  // Mapping des cat√©gories principales vers sous-cat√©gories avec filtres appropri√©s\n  const categoryMapping = {\n    'voiture-utilitaire': {\n      label: 'Voitures - Utilitaires',\n      subcategories: [\n        { id: 'voiture', label: 'Voitures' },\n        { id: 'utilitaire', label: 'Utilitaires' },\n        { id: 'caravane', label: 'Caravanes' },\n        { id: 'remorque', label: 'Remorques' }\n      ],\n      supportedFilters: ['brand', 'price', 'year', 'mileage', 'fuelType', 'condition', 'location']\n    },\n    'moto-scooter-quad': {\n      label: 'Motos, Scooters, Quads',\n      subcategories: [\n        { id: 'moto', label: 'Motos' },\n        { id: 'scooter', label: 'Scooters' },\n        { id: 'quad', label: 'Quads' }\n      ],\n      supportedFilters: ['brand', 'price', 'year', 'mileage', 'condition', 'location']\n    },\n    'nautisme-sport-aerien': {\n      label: 'Nautisme, Sport et Plein air',\n      subcategories: [\n        { id: 'bateau', label: 'Bateaux' },\n        { id: 'jetski', label: 'Jet-skis' },\n        { id: 'aerien', label: 'A√©rien' }\n      ],\n      supportedFilters: ['brand', 'price', 'year', 'condition', 'location'] // Pas de kilom√©trage pour nautisme\n    },\n    'services': {\n      label: 'Services',\n      subcategories: [\n        { id: 'reparation', label: 'R√©paration' },\n        { id: 'remorquage', label: 'Remorquage' },\n        { id: 'entretien', label: 'Entretien' },\n        { id: 'autre-service', label: 'Autres services' }\n      ],\n      supportedFilters: ['price', 'location'] // Services: juste prix et localisation\n    },\n    'pieces': {\n      label: 'Pi√®ces d√©tach√©es',\n      subcategories: [\n        { id: 'piece-voiture', label: 'Pi√®ces voiture' },\n        { id: 'piece-moto', label: 'Pi√®ces moto' },\n        { id: 'autre-piece', label: 'Autres pi√®ces' }\n      ],\n      supportedFilters: ['price', 'condition', 'location'] // Pi√®ces: prix, √©tat, localisation (pas de marque/ann√©e)\n    }\n  };\n\n  // D√©termine quels filtres afficher selon la cat√©gorie s√©lectionn√©e\n  const getVisibleFilters = () => {\n    if (!searchFilters.category) {\n      return ['brand', 'price', 'year', 'mileage', 'fuelType', 'condition', 'location']; // Tous les filtres par d√©faut\n    }\n    \n    const categoryData = categoryMapping[searchFilters.category as keyof typeof categoryMapping];\n    return categoryData ? categoryData.supportedFilters : [];\n  };\n\n  const visibleFilters = getVisibleFilters();\n\n  // Obtenir les marques disponibles selon la cat√©gorie (utilise les listes compl√®tes du formulaire)\n  const availableBrands = useMemo(() => {\n    // Si une sous-cat√©gorie sp√©cifique est s√©lectionn√©e, utiliser ses marques\n    if (searchFilters.subcategory) {\n      return getBrandsBySubcategory(searchFilters.subcategory);\n    }\n    \n    // Si une cat√©gorie principale est s√©lectionn√©e, combiner toutes les marques de ses sous-cat√©gories\n    if (searchFilters.category && categoryMapping[searchFilters.category as keyof typeof categoryMapping]) {\n      const subcategoryIds = categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories.map(sub => sub.id);\n      const allBrands = subcategoryIds.flatMap(subcatId => getBrandsBySubcategory(subcatId));\n      return Array.from(new Set(allBrands)).sort();\n    }\n    \n    // Si une cat√©gorie directe (sous-cat√©gorie) est s√©lectionn√©e\n    if (searchFilters.category) {\n      return getBrandsBySubcategory(searchFilters.category);\n    }\n    \n    // Par d√©faut, utiliser toutes les marques de v√©hicules (exclure services)\n    const allVehicleBrands = Object.entries(brandsByVehicleType)\n      .filter(([key]) => !['reparation', 'remorquage', 'entretien', 'autre-service'].includes(key))\n      .flatMap(([, brands]) => brands);\n    \n    return Array.from(new Set(allVehicleBrands)).sort();\n  }, [searchFilters.category, searchFilters.subcategory]);\n\n  // Filtrer les v√©hicules selon tous les crit√®res\n  const filteredVehicles = useMemo(() => {\n    let filtered = vehicles;\n\n    // Recherche textuelle\n    if (searchTerm.trim()) {\n      const query = searchTerm.toLowerCase().trim();\n      const keywords = query.split(/\\s+/);\n\n      filtered = filtered.filter(vehicle => {\n        const searchableText = [\n          vehicle.title,\n          vehicle.description,\n          vehicle.brand,\n          vehicle.model,\n          vehicle.location,\n          vehicle.features?.join(' ') || '',\n          vehicle.category\n        ].join(' ').toLowerCase();\n\n        return keywords.every(keyword => searchableText.includes(keyword));\n      });\n    }\n\n    // Filtres cat√©gories\n    if (searchFilters.category) {\n      if (categoryMapping[searchFilters.category as keyof typeof categoryMapping]) {\n        // Cat√©gorie principale - inclure toutes ses sous-cat√©gories\n        const subcategories = categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories.map(sub => sub.id);\n        filtered = filtered.filter(vehicle => \n          subcategories.includes(vehicle.category)\n        );\n      } else {\n        // Sous-cat√©gorie sp√©cifique\n        filtered = filtered.filter(vehicle => \n          vehicle.category === searchFilters.category\n        );\n      }\n    }\n\n    if (searchFilters.subcategory) {\n      filtered = filtered.filter(vehicle => \n        vehicle.category === searchFilters.subcategory\n      );\n    }\n\n    // Autres filtres\n    if (searchFilters.brand) {\n      filtered = filtered.filter(vehicle => vehicle.brand === searchFilters.brand);\n    }\n\n    if (searchFilters.priceFrom) {\n      filtered = filtered.filter(vehicle => vehicle.price >= searchFilters.priceFrom!);\n    }\n\n    if (searchFilters.priceTo) {\n      filtered = filtered.filter(vehicle => vehicle.price <= searchFilters.priceTo!);\n    }\n\n    if (searchFilters.yearFrom) {\n      filtered = filtered.filter(vehicle => vehicle.year >= searchFilters.yearFrom!);\n    }\n\n    if (searchFilters.yearTo) {\n      filtered = filtered.filter(vehicle => vehicle.year <= searchFilters.yearTo!);\n    }\n\n    if (searchFilters.mileageFrom) {\n      filtered = filtered.filter(vehicle => (vehicle.mileage || 0) >= searchFilters.mileageFrom!);\n    }\n\n    if (searchFilters.mileageTo) {\n      filtered = filtered.filter(vehicle => (vehicle.mileage || 0) <= searchFilters.mileageTo!);\n    }\n\n    if (searchFilters.fuelType) {\n      filtered = filtered.filter(vehicle => vehicle.fuelType === searchFilters.fuelType);\n    }\n\n    if (searchFilters.condition) {\n      filtered = filtered.filter(vehicle => vehicle.condition === searchFilters.condition);\n    }\n\n    if (searchFilters.location) {\n      filtered = filtered.filter(vehicle => \n        vehicle.location?.toLowerCase().includes(searchFilters.location!.toLowerCase())\n      );\n    }\n\n    // Tri\n    const sortBy = searchFilters.sortBy || 'date';\n    switch (sortBy) {\n      case 'price_asc':\n        filtered.sort((a, b) => a.price - b.price);\n        break;\n      case 'price_desc':\n        filtered.sort((a, b) => b.price - a.price);\n        break;\n      case 'mileage':\n        filtered.sort((a, b) => (a.mileage || 0) - (b.mileage || 0));\n        break;\n\n      default: // 'date'\n        filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n    }\n\n    return filtered;\n  }, [vehicles, searchTerm, searchFilters]);\n\n  const handleSearch = () => {\n    setSearchFilters({\n      ...searchFilters,\n      searchTerm: searchTerm.trim()\n    });\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const updateFilter = (key: string, value: any) => {\n    setSearchFilters({\n      ...searchFilters,\n      [key]: value\n    });\n  };\n\n  const clearFilter = (key: string) => {\n    const newFilters = { ...searchFilters };\n    delete newFilters[key as keyof SearchFilters];\n    setSearchFilters(newFilters);\n  };\n\n  const clearAllFilters = () => {\n    setSearchFilters({});\n    setSearchTerm('');\n  };\n\n  const activeFiltersCount = Object.keys(searchFilters).filter(key => \n    searchFilters[key as keyof typeof searchFilters] && key !== 'sortBy'\n  ).length;\n\n  // V√©rifier si il y a des filtres actifs √† sauvegarder\n  const hasActiveSearch = activeFiltersCount > 0 || searchTerm.trim() !== '';\n\n  // Sauvegarder la recherche\n  const handleSaveSearch = async () => {\n    if (!saveSearchName.trim()) {\n      alert('Veuillez donner un nom √† votre recherche');\n      return;\n    }\n\n    try {\n      const filtersToSave = {\n        ...searchFilters,\n        searchTerm: searchTerm.trim() || undefined\n      };\n\n      await saveSearch(saveSearchName.trim(), filtersToSave, enableAlerts);\n      setShowSaveModal(false);\n      setSaveSearchName('');\n      setEnableAlerts(false);\n      alert('Recherche sauvegard√©e avec succ√®s !');\n    } catch (error) {\n      alert('Erreur lors de la sauvegarde. Veuillez r√©essayer.');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header de recherche */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"space-y-6\">\n            {/* Barre de recherche principale */}\n            <div className=\"flex flex-col lg:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Rechercher un v√©hicule, une marque, un mod√®le...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    className=\"w-full pl-4 pr-12 py-4 text-lg border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 transition-all\"\n                  />\n                  <button \n                    onClick={handleSearch}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 p-2 text-gray-400 hover:text-primary-bolt-500 transition-colors\"\n                  >\n                    <Search className=\"h-6 w-6\" />\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"flex gap-3\">\n                {/* Bouton Sauvegarder la recherche */}\n                {dbUser && hasActiveSearch && (\n                  <button\n                    onClick={() => setShowSaveModal(true)}\n                    className=\"flex items-center space-x-2 px-4 py-4 bg-yellow-500 text-white rounded-xl hover:bg-yellow-600 transition-colors\"\n                    title=\"Sauvegarder cette recherche\"\n                  >\n                    <Star className=\"h-5 w-5\" />\n                    <span className=\"hidden sm:inline\">Sauvegarder</span>\n                  </button>\n                )}\n                \n                <button\n                  onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n                  className=\"flex items-center space-x-2 px-6 py-4 bg-primary-bolt-500 text-white rounded-xl hover:bg-primary-bolt-600 transition-colors\"\n                >\n                  <SlidersHorizontal className=\"h-5 w-5\" />\n                  <span>Filtres avanc√©s</span>\n                  {activeFiltersCount > 0 && (\n                    <span className=\"bg-white text-primary-bolt-500 rounded-full px-2 py-1 text-sm font-semibold\">\n                      {activeFiltersCount}\n                    </span>\n                  )}\n                  <ChevronDown className={`h-4 w-4 transition-transform ${showAdvancedFilters ? 'rotate-180' : ''}`} />\n                </button>\n              </div>\n            </div>\n\n            {/* Filtres rapides */}\n            <div className=\"flex flex-wrap gap-3\">\n              {Object.entries(categoryMapping).map(([key, cat]) => (\n                <button\n                  key={key}\n                  onClick={() => updateFilter('category', searchFilters.category === key ? '' : key)}\n                  className={`px-4 py-2 rounded-full border transition-colors ${\n                    searchFilters.category === key\n                      ? 'bg-primary-bolt-500 text-white border-primary-bolt-500'\n                      : 'bg-white text-gray-700 border-gray-300 hover:border-primary-bolt-300'\n                  }`}\n                >\n                  {cat.label}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filtres avanc√©s */}\n      {showAdvancedFilters && (\n        <div className=\"bg-white border-b border-gray-200\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n            {searchFilters.category && (\n              <div className=\"mb-4 p-3 bg-primary-bolt-50 rounded-lg border border-primary-bolt-200\">\n                <p className=\"text-sm text-primary-bolt-700\">\n                  <span className=\"font-medium\">Filtres adapt√©s pour:</span> {categoryMapping[searchFilters.category as keyof typeof categoryMapping]?.label}\n                  <span className=\"text-gray-600 ml-2\">\n                    ({visibleFilters.length} filtre{visibleFilters.length > 1 ? 's' : ''} disponible{visibleFilters.length > 1 ? 's' : ''})\n                  </span>\n                </p>\n              </div>\n            )}\n            <div className=\"space-y-8\">\n              {/* Section 1: S√©lection type et marque */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Type et marque</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* Sous-cat√©gorie */}\n                  {searchFilters.category && categoryMapping[searchFilters.category as keyof typeof categoryMapping] && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Type sp√©cifique</label>\n                      <select\n                        value={searchFilters.subcategory || ''}\n                        onChange={(e) => updateFilter('subcategory', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n                      >\n                        <option value=\"\">Tous les types</option>\n                        {categoryMapping[searchFilters.category as keyof typeof categoryMapping].subcategories.map(sub => (\n                          <option key={sub.id} value={sub.id}>{sub.label}</option>\n                        ))}\n                      </select>\n                    </div>\n                  )}\n\n                  {/* Marque - uniquement pour les v√©hicules physiques */}\n                  {visibleFilters.includes('brand') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Marque</label>\n                      <select\n                        value={searchFilters.brand || ''}\n                        onChange={(e) => updateFilter('brand', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n                      >\n                        <option value=\"\">Toutes les marques</option>\n                        {availableBrands.map((brand: string) => (\n                          <option key={brand} value={brand}>{brand}</option>\n                        ))}\n                      </select>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Section 2: Prix et caract√©ristiques */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Prix et caract√©ristiques</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Prix - pr√©sent pour toutes les cat√©gories */}\n                  {visibleFilters.includes('price') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Prix (‚Ç¨)</label>\n                      <div className=\"flex space-x-2\">\n                        <input\n                          type=\"number\"\n                          placeholder=\"Min\"\n                          value={searchFilters.priceFrom || ''}\n                          onChange={(e) => updateFilter('priceFrom', e.target.value ? Number(e.target.value) : undefined)}\n                          className=\"w-1/2 px-3 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm\"\n                        />\n                        <input\n                          type=\"number\"\n                          placeholder=\"Max\"\n                          value={searchFilters.priceTo || ''}\n                          onChange={(e) => updateFilter('priceTo', e.target.value ? Number(e.target.value) : undefined)}\n                          className=\"w-1/2 px-3 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm\"\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Ann√©e - uniquement pour les v√©hicules */}\n                  {visibleFilters.includes('year') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ann√©e</label>\n                      <div className=\"flex space-x-2\">\n                        <input\n                          type=\"number\"\n                          placeholder=\"De\"\n                          value={searchFilters.yearFrom || ''}\n                          onChange={(e) => updateFilter('yearFrom', e.target.value ? Number(e.target.value) : undefined)}\n                          className=\"w-1/2 px-3 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm\"\n                        />\n                        <input\n                          type=\"number\"\n                          placeholder=\"√Ä\"\n                          value={searchFilters.yearTo || ''}\n                          onChange={(e) => updateFilter('yearTo', e.target.value ? Number(e.target.value) : undefined)}\n                          className=\"w-1/2 px-3 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm\"\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Kilom√©trage - uniquement pour voitures/motos */}\n                  {visibleFilters.includes('mileage') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Kilom√©trage (km)</label>\n                      <div className=\"flex space-x-2\">\n                        <input\n                          type=\"number\"\n                          placeholder=\"Min\"\n                          value={searchFilters.mileageFrom || ''}\n                          onChange={(e) => updateFilter('mileageFrom', e.target.value ? Number(e.target.value) : undefined)}\n                          className=\"w-1/2 px-3 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm\"\n                        />\n                        <input\n                          type=\"number\"\n                          placeholder=\"Max\"\n                          value={searchFilters.mileageTo || ''}\n                          onChange={(e) => updateFilter('mileageTo', e.target.value ? Number(e.target.value) : undefined)}\n                          className=\"w-1/2 px-3 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm\"\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Section 3: √âtat et localisation */}\n              <div className=\"bg-gray-50 rounded-xl p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">√âtat et localisation</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {/* Carburant - uniquement pour voitures/utilitaires */}\n                  {visibleFilters.includes('fuelType') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Carburant</label>\n                      <select\n                        value={searchFilters.fuelType || ''}\n                        onChange={(e) => updateFilter('fuelType', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n                      >\n                        <option value=\"\">Tous</option>\n                        <option value=\"essence\">Essence</option>\n                        <option value=\"diesel\">Diesel</option>\n                        <option value=\"electrique\">√âlectrique</option>\n                        <option value=\"hybride\">Hybride</option>\n                        <option value=\"gpl\">GPL</option>\n                      </select>\n                    </div>\n                  )}\n\n                  {/* √âtat - tous sauf services */}\n                  {visibleFilters.includes('condition') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">√âtat</label>\n                      <select\n                        value={searchFilters.condition || ''}\n                        onChange={(e) => updateFilter('condition', e.target.value)}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n                      >\n                        <option value=\"\">Tous</option>\n                        {/* Options dynamiques selon la cat√©gorie */}\n                        {(searchFilters.category?.includes('voiture') || searchFilters.category?.includes('moto') || searchFilters.category?.includes('scooter') || searchFilters.category?.includes('quad') || searchFilters.category?.includes('nautisme')) ? (\n                          <>\n                            <option value=\"used\">Occasion</option>\n                            <option value=\"damaged\">Accident√©</option>\n                          </>\n                        ) : (\n                          <>\n                            <option value=\"new\">Neuf</option>\n                            <option value=\"used\">Occasion</option>\n                          </>\n                        )}\n                      </select>\n                    </div>\n                  )}\n\n                  {/* Localisation - pr√©sent pour toutes les cat√©gories */}\n                  {visibleFilters.includes('location') && (\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Localisation</label>\n                      <div className=\"relative\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Ville, d√©partement...\"\n                          value={searchFilters.location || ''}\n                          onChange={(e) => updateFilter('location', e.target.value)}\n                          className=\"w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white\"\n                        />\n                        <MapPin className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Actions filtres */}\n            {activeFiltersCount > 0 && (\n              <div className=\"flex justify-center\">\n                <button\n                  onClick={clearAllFilters}\n                  className=\"flex items-center space-x-2 px-6 py-3 bg-red-50 text-red-600 hover:bg-red-100 hover:text-red-700 rounded-xl border border-red-200 transition-all duration-200 font-medium\"\n                >\n                  <X className=\"h-4 w-4\" />\n                  <span>Effacer tous les filtres ({activeFiltersCount})</span>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* R√©sultats */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header r√©sultats */}\n        <div className=\"flex flex-col lg:flex-row lg:justify-between lg:items-center mb-8\">\n          <div className=\"mb-4 lg:mb-0\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              {searchTerm ? `R√©sultats pour \"${searchTerm}\"` : 'Recherche de v√©hicules'}\n            </h1>\n            <p className=\"text-gray-600 mt-2\">\n              {filteredVehicles.length} r√©sultat{filteredVehicles.length !== 1 ? 's' : ''} trouv√©{filteredVehicles.length !== 1 ? 's' : ''}\n            </p>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row items-start sm:items-center space-y-3 sm:space-y-0 sm:space-x-4\">\n            {/* Tri */}\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-sm font-medium text-gray-700\">Trier par:</span>\n              <select\n                value={searchFilters.sortBy || 'date'}\n                onChange={(e) => updateFilter('sortBy', e.target.value)}\n                className=\"px-4 py-2.5 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500 bg-white text-sm font-medium\"\n              >\n                <option value=\"date\">Plus r√©centes</option>\n                <option value=\"price_asc\">Prix croissant</option>\n                <option value=\"price_desc\">Prix d√©croissant</option>\n                <option value=\"mileage\">Kilom√©trage</option>\n              </select>\n            </div>\n\n            {/* Mode d'affichage */}\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-sm font-medium text-gray-700\">Affichage:</span>\n              <div className=\"flex bg-white border border-gray-300 rounded-xl overflow-hidden\">\n                <button\n                  onClick={() => setViewMode('grid')}\n                  className={`p-2.5 ${viewMode === 'grid' ? 'bg-primary-bolt-500 text-white' : 'text-gray-600 hover:bg-gray-50'} transition-all duration-200`}\n                  title=\"Vue grille\"\n                >\n                  <Grid className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => setViewMode('list')}\n                  className={`p-2.5 ${viewMode === 'list' ? 'bg-primary-bolt-500 text-white' : 'text-gray-600 hover:bg-gray-50'} transition-all duration-200 border-l border-gray-300`}\n                  title=\"Vue liste\"\n                >\n                  <List className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Filtres actifs */}\n        {activeFiltersCount > 0 && (\n          <div className=\"mb-6 flex flex-wrap gap-2\">\n            {Object.entries(searchFilters).map(([key, value]) => {\n              if (!value || key === 'sortBy') return null;\n              \n              let label = '';\n              switch (key) {\n                case 'category':\n                  label = categoryMapping[value as keyof typeof categoryMapping]?.label || value;\n                  break;\n                case 'subcategory':\n                  // Trouver le label de la sous-cat√©gorie\n                  for (const cat of Object.values(categoryMapping)) {\n                    const sub = cat.subcategories.find(s => s.id === value);\n                    if (sub) {\n                      label = sub.label;\n                      break;\n                    }\n                  }\n                  break;\n                case 'brand':\n                  label = `Marque: ${value}`;\n                  break;\n                case 'priceFrom':\n                  label = `Prix min: ${value}‚Ç¨`;\n                  break;\n                case 'priceTo':\n                  label = `Prix max: ${value}‚Ç¨`;\n                  break;\n                case 'yearFrom':\n                  label = `Ann√©e min: ${value}`;\n                  break;\n                case 'yearTo':\n                  label = `Ann√©e max: ${value}`;\n                  break;\n                case 'mileageFrom':\n                  label = `Km min: ${value}`;\n                  break;\n                case 'mileageTo':\n                  label = `Km max: ${value}`;\n                  break;\n                case 'fuelType':\n                  label = `Carburant: ${value}`;\n                  break;\n                case 'condition':\n                  label = `√âtat: ${value}`;\n                  break;\n                case 'location':\n                  label = `Lieu: ${value}`;\n                  break;\n                case 'searchTerm':\n                  label = `\"${value}\"`;\n                  break;\n                default:\n                  label = `${key}: ${value}`;\n              }\n\n              return (\n                <button\n                  key={key}\n                  onClick={() => clearFilter(key)}\n                  className=\"flex items-center space-x-2 px-3 py-1 bg-primary-bolt-100 text-primary-bolt-700 rounded-full text-sm hover:bg-primary-bolt-200 transition-colors\"\n                >\n                  <span>{label}</span>\n                  <X className=\"h-3 w-3\" />\n                </button>\n              );\n            })}\n          </div>\n        )}\n\n        {/* Liste des v√©hicules */}\n        {filteredVehicles.length > 0 ? (\n          <div className={viewMode === 'grid' \n            ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6'\n            : 'space-y-4'\n          }>\n            {filteredVehicles.map((vehicle) => (\n              <VehicleCard \n                key={vehicle.id} \n                vehicle={vehicle}\n                onClick={() => setSelectedVehicle(vehicle)}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <div className=\"w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Search className=\"h-10 w-10 text-gray-400\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aucun r√©sultat trouv√©</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Essayez de modifier vos crit√®res de recherche ou supprimez certains filtres.\n            </p>\n            {activeFiltersCount > 0 && (\n              <button\n                onClick={clearAllFilters}\n                className=\"bg-primary-bolt-500 text-white px-6 py-3 rounded-xl hover:bg-primary-bolt-600 transition-colors\"\n              >\n                Effacer tous les filtres\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Modal de sauvegarde de recherche */}\n      {showSaveModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-2xl shadow-xl max-w-md w-full p-6\">\n            <h3 className=\"text-xl font-bold text-gray-900 mb-4\">Sauvegarder cette recherche</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"searchName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Nom de la recherche *\n                </label>\n                <input\n                  id=\"searchName\"\n                  type=\"text\"\n                  value={saveSearchName}\n                  onChange={(e) => setSaveSearchName(e.target.value)}\n                  placeholder=\"Ex: Voitures BMW sous 20 000‚Ç¨\"\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                />\n              </div>\n\n              <div className=\"flex items-center space-x-3\">\n                <input\n                  id=\"enableAlerts\"\n                  type=\"checkbox\"\n                  checked={enableAlerts}\n                  onChange={(e) => setEnableAlerts(e.target.checked)}\n                  className=\"w-4 h-4 text-primary-bolt-600 bg-gray-100 border-gray-300 rounded focus:ring-primary-bolt-500\"\n                />\n                <label htmlFor=\"enableAlerts\" className=\"text-sm text-gray-700 flex items-center space-x-2\">\n                  <Bell className=\"h-4 w-4\" />\n                  <span>Recevoir des alertes pour de nouvelles annonces</span>\n                </label>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-xl p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-2\">Crit√®res √† sauvegarder :</h4>\n                <div className=\"space-y-1 text-sm text-gray-600\">\n                  {searchTerm.trim() && (\n                    <div>‚Ä¢ Mot-cl√© : \"{searchTerm.trim()}\"</div>\n                  )}\n                  {searchFilters.category && (\n                    <div>‚Ä¢ Cat√©gorie : {categoryMapping[searchFilters.category as keyof typeof categoryMapping]?.label || searchFilters.category}</div>\n                  )}\n                  {searchFilters.brand && (\n                    <div>‚Ä¢ Marque : {searchFilters.brand}</div>\n                  )}\n                  {searchFilters.priceFrom && searchFilters.priceTo && (\n                    <div>‚Ä¢ Prix : {searchFilters.priceFrom}‚Ç¨ - {searchFilters.priceTo}‚Ç¨</div>\n                  )}\n                  {searchFilters.location && (\n                    <div>‚Ä¢ Localisation : {searchFilters.location}</div>\n                  )}\n                  {activeFiltersCount > 0 && (\n                    <div className=\"text-primary-bolt-600 font-medium\">\n                      {activeFiltersCount} filtre{activeFiltersCount > 1 ? 's' : ''} au total\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowSaveModal(false);\n                  setSaveSearchName('');\n                  setEnableAlerts(false);\n                }}\n                className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors\"\n              >\n                Annuler\n              </button>\n              <button\n                onClick={handleSaveSearch}\n                disabled={savingSearch || !saveSearchName.trim()}\n                className=\"flex-1 px-4 py-3 bg-primary-bolt-500 text-white rounded-xl hover:bg-primary-bolt-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {savingSearch ? 'Sauvegarde...' : 'Sauvegarder'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};","size_bytes":36678},"client/src/pages/TermsPage.tsx":{"content":"import React, { useEffect } from 'react';\nimport { ArrowLeft, Scale, FileText, Shield, AlertCircle } from 'lucide-react';\n\ninterface TermsPageProps {\n  onBack: () => void;\n  setCurrentView: (view: string) => void;\n}\n\nexport const TermsPage: React.FC<TermsPageProps> = ({ onBack, setCurrentView }) => {\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <button\n              onClick={onBack}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              <span>Retour</span>\n            </button>\n            <h1 className=\"text-xl font-bold text-gray-900\">Conditions G√©n√©rales d'Utilisation</h1>\n            <div className=\"w-20\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"bg-blue-500 text-white p-4 rounded-full\">\n              <Scale className=\"h-12 w-12\" />\n            </div>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Conditions G√©n√©rales d'Utilisation\n          </h1>\n          <p className=\"text-lg text-gray-600\">\n            Derni√®re mise √† jour : 14 janvier 2025\n          </p>\n        </div>\n\n        {/* Alert Box */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8\">\n          <div className=\"flex items-start\">\n            <AlertCircle className=\"h-6 w-6 text-blue-500 mr-3 mt-0.5\" />\n            <div>\n              <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">Important</h3>\n              <p className=\"text-blue-800\">\n                En utilisant Passion Auto2Roues, vous acceptez les pr√©sentes conditions g√©n√©rales d'utilisation. \n                Nous vous recommandons de les lire attentivement.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Content Sections */}\n        <div className=\"space-y-8\">\n          {/* Section 1 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <FileText className=\"h-7 w-7 text-primary-bolt-500 mr-3\" />\n              1. Objet et Acceptation\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Les pr√©sentes Conditions G√©n√©rales d'Utilisation (CGU) r√©gissent l'acc√®s et l'utilisation \n                de la plateforme Auto2Roues, accessible √† l'adresse auto2roues.fr.\n              </p>\n              <p>\n                Auto2Roues est une plateforme de mise en relation entre particuliers et professionnels \n                pour l'achat, la vente et la recherche de v√©hicules automobiles, motos, scooters, \n                pi√®ces d√©tach√©es et services.\n              </p>\n              <p>\n                L'acc√®s et l'utilisation de la plateforme impliquent l'acceptation pleine et enti√®re \n                des pr√©sentes CGU par l'utilisateur.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 2 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">2. Inscription et Compte Utilisateur</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                <strong>2.1 Inscription :</strong> L'inscription sur Auto2Roues est gratuite. \n                Elle n√©cessite de fournir des informations exactes et √† jour.\n              </p>\n              <p>\n                <strong>2.2 V√©rification :</strong> Auto2Roues se r√©serve le droit de v√©rifier \n                l'identit√© des utilisateurs et de suspendre les comptes en cas d'informations \n                incorrectes ou frauduleuses.\n              </p>\n              <p>\n                <strong>2.3 Responsabilit√© :</strong> L'utilisateur est responsable de la \n                confidentialit√© de ses identifiants et de toutes les activit√©s effectu√©es \n                sous son compte.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 3 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">3. Utilisation de la Plateforme</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                <strong>3.1 Annonces :</strong> Les utilisateurs peuvent publier des annonces \n                pour vendre ou rechercher des v√©hicules, pi√®ces d√©tach√©es ou services.\n              </p>\n              <p>\n                <strong>3.2 Contenu :</strong> Les utilisateurs sont responsables du contenu \n                qu'ils publient et garantissent qu'il est l√©gal, v√©ridique et ne porte pas \n                atteinte aux droits de tiers.\n              </p>\n              <p>\n                <strong>3.3 Interdictions :</strong> Il est interdit de :\n              </p>\n              <ul className=\"list-disc list-inside ml-4 space-y-1\">\n                <li>Publier des annonces frauduleuses ou trompeuses</li>\n                <li>Utiliser la plateforme √† des fins ill√©gales</li>\n                <li>Harceler ou menacer d'autres utilisateurs</li>\n                <li>Contourner les syst√®mes de s√©curit√©</li>\n                <li>Publier du contenu offensant ou inappropri√©</li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Section 4 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">4. Transactions et Paiements</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                <strong>4.1 R√¥le d'Auto2Roues :</strong> Auto2Roues est un interm√©diaire \n                technique qui facilite la mise en relation. Les transactions se d√©roulent \n                directement entre acheteurs et vendeurs.\n              </p>\n              <p>\n                <strong>4.2 Packs Premium :</strong> Les services premium sont factur√©s \n                selon les tarifs en vigueur. Les paiements sont s√©curis√©s par Stripe.\n              </p>\n              <p>\n                <strong>4.3 Remboursement :</strong> Les packs premium ne sont pas remboursables \n                sauf en cas de dysfonctionnement technique imputable √† Auto2Roues.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 5 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n              <Shield className=\"h-7 w-7 text-green-500 mr-3\" />\n              5. Protection des Donn√©es\n            </h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Auto2Roues s'engage √† prot√©ger la vie priv√©e de ses utilisateurs conform√©ment \n                au R√®glement G√©n√©ral sur la Protection des Donn√©es (RGPD).\n              </p>\n              <p>\n                Les donn√©es personnelles collect√©es sont utilis√©es uniquement pour le \n                fonctionnement de la plateforme et ne sont pas vendues √† des tiers.\n              </p>\n              <p>\n                Pour plus d'informations, consultez notre \n                <span className=\"text-primary-bolt-500 font-semibold\"> Politique de Confidentialit√©</span>.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 6 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">6. Propri√©t√© Intellectuelle</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                La plateforme Auto2Roues, son contenu, ses fonctionnalit√©s et son design \n                sont prot√©g√©s par les droits de propri√©t√© intellectuelle.\n              </p>\n              <p>\n                Les utilisateurs accordent √† Auto2Roues une licence d'utilisation du contenu \n                qu'ils publient pour les besoins du fonctionnement de la plateforme.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 7 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">7. Responsabilit√©</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Auto2Roues ne peut √™tre tenu responsable des transactions effectu√©es entre \n                utilisateurs, de la qualit√© des biens ou services propos√©s, ou des litiges \n                pouvant survenir.\n              </p>\n              <p>\n                Les utilisateurs utilisent la plateforme √† leurs risques et p√©rils et sont \n                encourag√©s √† faire preuve de prudence lors des transactions.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 8 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">8. Modification et R√©siliation</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Auto2Roues se r√©serve le droit de modifier les pr√©sentes CGU √† tout moment. \n                Les utilisateurs seront inform√©s des modifications importantes.\n              </p>\n              <p>\n                Les comptes utilisateurs peuvent √™tre suspendus ou ferm√©s en cas de violation \n                des pr√©sentes CGU.\n              </p>\n            </div>\n          </div>\n\n          {/* Section 9 */}\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">9. Droit Applicable et Juridiction</h2>\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                Les pr√©sentes CGU sont r√©gies par le droit fran√ßais. En cas de litige, \n                les tribunaux fran√ßais seront seuls comp√©tents.\n              </p>\n            </div>\n          </div>\n\n          {/* Contact */}\n          <div className=\"bg-gray-50 rounded-xl border border-gray-200 p-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Contact</h2>\n            <p className=\"text-gray-700\">\n              Pour toute question concernant ces conditions g√©n√©rales d'utilisation, \n              contactez-nous √† : <span className=\"text-primary-bolt-500 font-semibold\">legal@auto2roues.fr</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","size_bytes":11118},"client/src/services/AuthService.ts":{"content":"import { useEffect, useState } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { supabase, signIn as supabaseSignIn, signUp as supabaseSignUp, signInWithOAuth as supabaseSignInWithOAuth, signInWithMagicLink as supabaseSignInWithMagicLink, signOut as supabaseSignOut } from '@/lib/supabase';\n\ntype AuthCallback = () => void;\n\n// Store for callbacks to execute after successful authentication\nconst callbackStorage = {\n  onSuccess: null as AuthCallback | null,\n  timestamp: 0\n};\n\n// Fonction pour d√©terminer l'URL de redirection appropri√©e pour OAuth\n// en fonction de l'environnement (local, Replit, production)\nconst getRedirectUrl = (): string => {\n  const origin = window.location.origin;\n  \n  // D√©terminer l'environnement bas√© sur l'URL\n  const isReplit = origin.includes('replit');\n  const isDev = origin.includes('localhost') || origin.includes('127.0.0.1');\n  \n  if (isDev) {\n    return `${origin}/auth/callback`;\n  } else if (isReplit) {\n    // Pour Replit, nous utilisons un chemin relatif\n    return `/auth/callback`;\n  } else {\n    // Pour d'autres d√©ploiements (production)\n    return `${origin}/auth/callback`;\n  }\n};\n\n/**\n * Service centralis√© pour g√©rer l'authentification dans l'application\n */\nexport const useAuthService = () => {\n  const { setShowAuthModal, setAuthMode } = useApp();\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [user, setUser] = useState<any>(null);\n\n  // V√©rifier l'√©tat de l'authentification au chargement\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        const { data: { user } } = await supabase.auth.getUser();\n        \n        setIsAuthenticated(!!session);\n        setUser(user);\n      } catch (error) {\n        console.error(\"Erreur de v√©rification d'authentification:\", error);\n      }\n    };\n    \n    checkAuth();\n    \n    // S'abonner aux changements d'√©tat d'authentification\n    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\n      setIsAuthenticated(!!session);\n      setUser(session?.user || null);\n    });\n    \n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Logique pour stocker l'URL de redirection actuelle\n  const saveRedirectUrl = () => {\n    localStorage.setItem('authRedirectUrl', window.location.pathname);\n  };\n\n  /**\n   * Ouvre la modal d'authentification avec un mode sp√©cifique\n   * @param mode - 'login' ou 'register'\n   * @param onSuccess - Callback √† ex√©cuter apr√®s une connexion r√©ussie\n   * @param message - Message optionnel √† afficher dans la modal\n   */\n  const openAuthModal = (mode: 'login' | 'register', onSuccess?: AuthCallback, message?: string) => {\n    // D√©finir le mode d'authentification\n    setAuthMode(mode);\n    \n    // Sauvegarder l'URL actuelle pour la redirection apr√®s authentification\n    saveRedirectUrl();\n    \n    // Enregistrer le callback pour une utilisation ult√©rieure\n    if (onSuccess) {\n      callbackStorage.onSuccess = onSuccess;\n      callbackStorage.timestamp = Date.now();\n    }\n    \n    // Afficher la modal\n    setShowAuthModal(true);\n  };\n\n  /**\n   * √Ä appeler apr√®s une authentification r√©ussie\n   * Ex√©cute le callback enregistr√© s'il existe et est r√©cent (moins de 5 minutes)\n   */\n  const handleAuthSuccess = () => {\n    const currentTime = Date.now();\n    const fiveMinutesInMs = 5 * 60 * 1000;\n    \n    // V√©rifier si un callback existe et s'il est encore valide (moins de 5 minutes)\n    if (callbackStorage.onSuccess && (currentTime - callbackStorage.timestamp < fiveMinutesInMs)) {\n      const callback = callbackStorage.onSuccess;\n      \n      // R√©initialiser le stockage\n      callbackStorage.onSuccess = null;\n      callbackStorage.timestamp = 0;\n      \n      // Ex√©cuter le callback\n      callback();\n      return true;\n    }\n    \n    // Si pas de callback, rediriger vers l'URL sauvegard√©e\n    const redirectUrl = localStorage.getItem('authRedirectUrl') || '/';\n    localStorage.removeItem('authRedirectUrl');\n    \n    if (redirectUrl !== window.location.pathname) {\n      window.location.href = redirectUrl;\n    }\n    \n    return false;\n  };\n\n  // Wrapper pour la connexion\n  const signIn = async (email: string, password: string) => {\n    try {\n      saveRedirectUrl();\n      const { data, error } = await supabaseSignIn(email, password);\n      \n      if (error) {\n        return { success: false, error: error.message };\n      }\n      \n      return { success: true };\n    } catch (error: any) {\n      return { success: false, error: error.message || 'Une erreur est survenue' };\n    }\n  };\n\n  // Wrapper pour l'inscription\n  const signUp = async (email: string, password: string, userData?: any) => {\n    try {\n      saveRedirectUrl();\n      const { data, error } = await supabaseSignUp(email, password, userData);\n      \n      if (error) {\n        return { success: false, error: error.message };\n      }\n      \n      return { success: true };\n    } catch (error: any) {\n      return { success: false, error: error.message || 'Une erreur est survenue' };\n    }\n  };\n\n  // Wrapper pour l'authentification OAuth avec gestion des environnements\n  const signInWithOAuth = async (provider: 'google' | 'github' | 'apple') => {\n    saveRedirectUrl();\n    \n    const redirectUrl = getRedirectUrl();\n    \n    // Utiliser l'API Supabase directement avec notre URL de redirection personnalis√©e\n    await supabase.auth.signInWithOAuth({\n      provider,\n      options: {\n        redirectTo: redirectUrl\n      }\n    });\n  };\n\n  // Wrapper pour l'authentification par lien magique\n  const signInWithMagicLink = async (email: string) => {\n    try {\n      saveRedirectUrl();\n      const redirectUrl = getRedirectUrl();\n      \n      const { data, error } = await supabase.auth.signInWithOtp({\n        email,\n        options: {\n          emailRedirectTo: redirectUrl\n        }\n      });\n      \n      if (error) {\n        return { success: false, error: error.message };\n      }\n      \n      return { success: true };\n    } catch (error: any) {\n      return { success: false, error: error.message || 'Une erreur est survenue' };\n    }\n  };\n\n  // Wrapper pour la d√©connexion\n  const signOut = async () => {\n    await supabaseSignOut();\n    window.location.href = '/';\n  };\n\n  return { \n    openAuthModal, \n    handleAuthSuccess,\n    signIn,\n    signUp,\n    signInWithOAuth,\n    signInWithMagicLink,\n    signOut,\n    isAuthenticated,\n    user\n  };\n};\n","size_bytes":6524},"client/src/types/index.ts":{"content":"export interface User {\n  id: string;\n  email: string;\n  name: string;\n  phone?: string;\n  whatsapp?: string;\n  type: 'individual' | 'professional';\n  companyName?: string;\n  companyLogo?: string;\n  address?: string;\n  city?: string;\n  postalCode?: string;\n  website?: string;\n  siret?: string;\n  bio?: string;\n  avatar?: string;\n  specialties?: string[];\n  verified: boolean;\n  emailVerified?: boolean;\n  contactPreferences?: ('whatsapp' | 'phone' | 'email')[];\n  createdAt: Date;\n  lastLoginAt?: Date;\n}\n\nexport interface Vehicle {\n  id: string;\n  userId: string;\n  user?: User;\n  title: string;\n  description: string;\n  category: SubcategoryId;\n  brand: string;\n  model: string;\n  year: number;\n  mileage?: number;\n  fuelType?: 'gasoline' | 'diesel' | 'electric' | 'hybrid';\n  condition: 'new' | 'used' | 'damaged';\n  price: number;\n  location: string;\n  images: string[];\n  features: string[];\n  isPremium: boolean;\n  premiumType?: 'daily' | 'weekly' | 'monthly';\n  premiumExpiresAt?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n  views: number;\n  favorites: number;\n  status: 'pending' | 'approved' | 'rejected';\n  isActive?: boolean; // Pour l'activation/d√©sactivation des annonces\n}\n\nexport interface Message {\n  id: string;\n  fromUserId: string;\n  toUserId: string;\n  vehicleId: string;\n  content: string;\n  createdAt: Date;\n  read: boolean;\n}\n\nexport interface SearchFilters {\n  category?: string;\n  subcategory?: string;\n  brand?: string;\n  model?: string;\n  yearFrom?: number;\n  yearTo?: number;\n  mileageFrom?: number;\n  mileageTo?: number;\n  priceFrom?: number;\n  priceTo?: number;\n  fuelType?: string;\n  condition?: string;\n  location?: string;\n  searchTerm?: string;\n  sortBy?: 'date' | 'price_asc' | 'price_desc' | 'mileage';\n}\n\n// Type pour les cat√©gories principales\nexport type CategoryId = 'voiture-utilitaire' | 'moto-scooter-quad' | 'nautisme-sport-aerien' | 'services' | 'pieces';\n\n// Type pour les sous-cat√©gories\nexport type SubcategoryId = 'voiture' | 'utilitaire' | 'caravane' | 'remorque' | 'moto' | 'scooter' | 'quad' | 'bateau' | 'jetski' | 'aerien' | 'reparation' | 'remorquage' | 'entretien' | 'autre-service' | 'piece-voiture' | 'piece-moto' | 'autre-piece';\n\nexport interface PremiumOption {\n  id: string;\n  name: string;\n  price: number;\n  duration: number; // in days\n  features: string[];\n}\n\nexport interface AccountSetupStep {\n  id: number;\n  title: string;\n  description: string;\n  completed: boolean;\n}","size_bytes":2445},"client/src/types/listing.ts":{"content":"export interface ListingFormData {\n  // √âtape 1: Type d'annonce\n  listingType: 'buy' | 'sell' | null;\n  \n  // √âtape 2: Type de produit\n  productType: 'car' | 'motorcycle' | 'scooter' | 'quad' | 'utility' | 'service' | 'parts' | null;\n  \n  // √âtape 3: Titre\n  title: string;\n  \n  // √âtape 4: Immatriculation (conditionnelle)\n  registrationNumber?: string;\n  \n  // √âtape 5: D√©tails du produit (dynamique selon le type)\n  productDetails: {\n    // Commun\n    brand: string;\n    model: string;\n    year: number;\n    firstRegistrationDate?: string; // Date de premi√®re mise en circulation\n    critAir?: '0' | '1' | '2' | '3' | '4' | '5' | 'non_classe'; // Vignette Crit'Air\n    \n    // Voiture\n    mileage?: number;\n    transmission?: 'manual' | 'automatic' | 'semi-automatic';\n    fuelType?: 'gasoline' | 'diesel' | 'electric' | 'hybrid';\n    color?: string;\n    power?: number; // CV\n    doors?: number;\n    vehicleType?: 'citadine' | 'berline' | 'suv' | 'break' | 'coupe' | 'cabriolet' | 'monospace' | 'pickup';\n    upholstery?: 'tissu' | 'cuir_partiel' | 'cuir' | 'velours' | 'alcantara';\n    equipment?: string[]; // Liste des √©quipements\n    emissionClass?: 'euro1' | 'euro2' | 'euro3' | 'euro4' | 'euro5' | 'euro6';\n    \n    // Moto\n    displacement?: number; // Cylindr√©e\n    motorcycleType?: 'sport' | 'touring' | 'urban' | 'trail' | 'custom' | 'roadster' | 'enduro' | 'cross';\n    licenseType?: 'A' | 'A1' | 'A2' | 'AL' | 'sans_permis'; // Type de permis requis\n    \n    // Utilitaire\n    utilityType?: 'van' | 'truck' | 'pickup' | 'trailer';\n    gvw?: number; // PTAC\n    volume?: number; // Volume utile\n    \n    // Pi√®ce d√©tach√©e\n    partCategory?: string;\n    partReference?: string;\n    compatibility?: string;\n    partCondition?: 'new' | 'used';\n  };\n  \n  // √âtape 6: √âtat du bien (conditionnelle)\n  condition?: 'like_new' | 'good' | 'average' | 'poor' | 'damaged';\n  \n  // √âtape 7: Description\n  description: string;\n  \n  // √âtape 8: Photos\n  photos: File[];\n  \n  // √âtape 9: Prix\n  price: number;\n  \n  // √âtape 10: Localisation\n  location: {\n    city: string;\n    postalCode: string;\n    coordinates?: { lat: number; lng: number };\n  };\n  \n  // √âtape 11: Coordonn√©es\n  contact: {\n    phone: string;\n    email?: string;\n    hidePhone: boolean;\n  };\n}\n\nexport interface FormStep {\n  id: number;\n  title: string;\n  isCompleted: boolean;\n  isActive: boolean;\n}","size_bytes":2388},"client/src/types/premium.ts":{"content":"export interface PremiumPack {\n  id: string;\n  name: string;\n  duration: number; // en jours\n  price: number; // en euros\n  description: string;\n  features: string[];\n  mostPopular?: boolean;\n}\n\nexport const PREMIUM_PACKS: PremiumPack[] = [\n  {\n    id: 'free',\n    name: 'Publication gratuite',\n    duration: 0,\n    price: 0,\n    description: 'Votre annonce sera visible dans les r√©sultats de recherche',\n    features: [\n      'Publication gratuite',\n      'Visible dans les r√©sultats',\n      'Dur√©e illimit√©e'\n    ]\n  },\n  {\n    id: 'daily',\n    name: 'Remont√©e quotidienne',\n    duration: 1,\n    price: 0.99,\n    description: 'Votre annonce en t√™te de liste pendant 24h',\n    features: [\n      'Remont√©e en t√™te de liste',\n      'Dur√©e : 24 heures',\n      'Visibilit√© maximale'\n    ]\n  },\n  {\n    id: 'weekly',\n    name: 'Remont√©e hebdomadaire',\n    duration: 7,\n    price: 4.99,\n    description: 'Votre annonce en t√™te de liste pendant 7 jours',\n    features: [\n      'Remont√©e en t√™te de liste',\n      'Dur√©e : 7 jours',\n      '√âconomie de 28%',\n      'Visibilit√© prolong√©e'\n    ],\n    mostPopular: true\n  },\n  {\n    id: 'monthly',\n    name: 'Remont√©e mensuelle',\n    duration: 30,\n    price: 19.90,\n    description: 'Votre annonce en t√™te de liste pendant 30 jours',\n    features: [\n      'Remont√©e en t√™te de liste',\n      'Dur√©e : 30 jours',\n      '√âconomie de 33%',\n      'Visibilit√© maximale',\n      'Meilleur rapport qualit√©/prix'\n    ]\n  }\n];","size_bytes":1479},"client/src/types/supabase.ts":{"content":"export type Database = {\n  public: {\n    Tables: {\n      conversations: {\n        Row: {\n          id: string\n          vehicle_id: string | null\n          type: string\n          last_message_at: string | null\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          vehicle_id?: string | null\n          type: string\n          last_message_at?: string | null\n          created_at?: string\n        }\n        Update: {\n          id?: string\n          vehicle_id?: string | null\n          type?: string\n          last_message_at?: string | null\n          created_at?: string\n        }\n      }\n      conversation_participants: {\n        Row: {\n          id: string\n          conversation_id: string\n          user_id: string\n          role: string | null\n          joined_at: string\n          last_read_message_id: string | null\n        }\n        Insert: {\n          id?: string\n          conversation_id: string\n          user_id: string\n          role?: string | null\n          joined_at?: string\n          last_read_message_id?: string | null\n        }\n        Update: {\n          id?: string\n          conversation_id?: string\n          user_id?: string\n          role?: string | null\n          joined_at?: string\n          last_read_message_id?: string | null\n        }\n      }\n      messages: {\n        Row: {\n          id: string\n          conversation_id: string\n          from_user_id: string\n          to_user_id: string\n          vehicle_id: string | null\n          content: string\n          read: boolean\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          conversation_id: string\n          from_user_id: string\n          to_user_id: string\n          vehicle_id?: string | null\n          content: string\n          read?: boolean\n          created_at?: string\n        }\n        Update: {\n          id?: string\n          conversation_id?: string\n          from_user_id?: string\n          to_user_id?: string\n          vehicle_id?: string | null\n          content?: string\n          read?: boolean\n          created_at?: string\n        }\n      }\n      users: {\n        Row: {\n          id: string\n          email: string | null\n          first_name: string | null\n          last_name: string | null\n          profile_image_url: string | null\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id: string\n          email?: string | null\n          first_name?: string | null\n          last_name?: string | null\n          profile_image_url?: string | null\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          id?: string\n          email?: string | null\n          first_name?: string | null\n          last_name?: string | null\n          profile_image_url?: string | null\n          created_at?: string\n          updated_at?: string\n        }\n      }\n      vehicles: {\n        Row: {\n          id: string\n          user_id: string\n          title: string\n          description: string | null\n          category: string\n          brand: string | null\n          model: string | null\n          year: number | null\n          mileage: number | null\n          fuel_type: string | null\n          condition: string\n          price: number\n          location: string\n          images: string[] | null\n          features: string[] | null\n          is_premium: boolean\n          premium_type: string | null\n          premium_expires_at: string | null\n          created_at: string\n          updated_at: string\n          views: number\n          favorites: number\n          status: string\n        }\n        Insert: {\n          id?: string\n          user_id: string\n          title: string\n          description?: string | null\n          category: string\n          brand?: string | null\n          model?: string | null\n          year?: number | null\n          mileage?: number | null\n          fuel_type?: string | null\n          condition: string\n          price: number\n          location: string\n          images?: string[] | null\n          features?: string[] | null\n          is_premium?: boolean\n          premium_type?: string | null\n          premium_expires_at?: string | null\n          created_at?: string\n          updated_at?: string\n          views?: number\n          favorites?: number\n          status?: string\n        }\n        Update: {\n          id?: string\n          user_id?: string\n          title?: string\n          description?: string | null\n          category?: string\n          brand?: string | null\n          model?: string | null\n          year?: number | null\n          mileage?: number | null\n          fuel_type?: string | null\n          condition?: string\n          price?: number\n          location?: string\n          images?: string[] | null\n          features?: string[] | null\n          is_premium?: boolean\n          premium_type?: string | null\n          premium_expires_at?: string | null\n          created_at?: string\n          updated_at?: string\n          views?: number\n          favorites?: number\n          status?: string\n        }\n      }\n    }\n  }\n}","size_bytes":5140},"client/src/utils/mockData.ts":{"content":"import { User, Vehicle, PremiumOption } from '../types';\n\nexport const mockUsers: User[] = [\n  {\n    id: 'demo',\n    email: 'demo@demo.com',\n    name: 'Utilisateur D√©mo',\n    phone: '+33 6 00 00 00 00',\n    whatsapp: '+33 6 00 00 00 00',\n    type: 'individual',\n    verified: true,\n    city: 'Paris',\n    postalCode: '75001',\n    contactPreferences: ['whatsapp', 'phone', 'email'],\n    createdAt: new Date('2024-01-01'),\n  },\n  {\n    id: '1',\n    email: 'john.doe@email.com',\n    name: 'John Doe',\n    phone: '+33 6 12 34 56 78',\n    whatsapp: '+33 6 12 34 56 78',\n    type: 'individual',\n    verified: true,\n    city: 'Marseille',\n    postalCode: '13001',\n    contactPreferences: ['phone', 'email'],\n    createdAt: new Date('2024-01-15'),\n  },\n  {\n    id: '2',\n    email: 'garage.martin@email.com',\n    name: 'Pierre Martin',\n    phone: '+33 1 23 45 67 89',\n    whatsapp: '+33 6 00 11 22 33',\n    type: 'professional',\n    companyName: 'Garage Martin Auto',\n    address: '123 Avenue de la R√©publique, 75011 Paris',\n    city: 'Paris',\n    postalCode: '75011',\n    contactPreferences: ['whatsapp', 'phone', 'email'],\n    verified: true,\n    createdAt: new Date('2024-01-10'),\n  },\n  {\n    id: '3',\n    email: 'marie.dupont@email.com',\n    name: 'Marie Dupont',\n    phone: '+33 6 98 76 54 32',\n    whatsapp: '+33 6 98 76 54 32',\n    type: 'individual',\n    verified: true,\n    city: 'Lyon',\n    postalCode: '69003',\n    contactPreferences: ['whatsapp', 'email'],\n    createdAt: new Date('2024-02-01'),\n  },\n  {\n    id: '4',\n    email: 'moto.expert@email.com',\n    name: 'Jean-Luc Moreau',\n    phone: '+33 4 56 78 90 12',\n    whatsapp: '+33 6 55 44 33 22',\n    type: 'professional',\n    companyName: 'Moto Expert Lyon',\n    address: '45 Rue de la Moto, 69000 Lyon',\n    city: 'Lyon',\n    postalCode: '69000',\n    contactPreferences: ['phone', 'email'],\n    verified: true,\n    createdAt: new Date('2024-01-20'),\n  },\n  {\n    id: '5',\n    email: 'pieces.megane@email.com',\n    name: 'David Rousseau',\n    phone: '+33 6 77 88 99 00',\n    whatsapp: '+33 6 77 88 99 00',\n    type: 'professional',\n    companyName: 'Pi√®ces Auto Rousseau',\n    address: '67 Boulevard des Casses, 31200 Toulouse',\n    city: 'Toulouse',\n    postalCode: '31200',\n    contactPreferences: ['whatsapp', 'phone', 'email'],\n    verified: true,\n    createdAt: new Date('2024-02-15'),\n  },\n];\n\nexport const mockVehicles: Vehicle[] = [\n  // Voitures\n  {\n    id: '1',\n    userId: 'demo',\n    user: mockUsers[0],\n    title: '[Demo] BMW 320d - Excellent √©tat',\n    description: 'BMW 320d en excellent √©tat, entretien r√©gulier, carnet de maintenance √† jour. V√©hicule non fumeur, pneus r√©cents.',\n    category: 'voiture',\n    brand: 'BMW',\n    model: '320d',\n    year: 2020,\n    mileage: 45000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 28500,\n    location: 'Paris 75011',\n    images: [\n      'https://images.pexels.com/photos/100650/pexels-photo-100650.jpeg',\n      'https://images.pexels.com/photos/1545743/pexels-photo-1545743.jpeg',\n    ],\n    features: ['GPS', 'Climatisation', 'Jantes alliage', 'R√©gulateur de vitesse'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '3',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Peugeot 308 - Fiable et √©conomique',\n    description: 'Peugeot 308 essence, parfaite pour la ville. V√©hicule bien entretenu, contr√¥le technique OK.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2018,\n    mileage: 72000,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 15900,\n    location: 'Marseille 13001',\n    images: [\n      'https://images.pexels.com/photos/28928968/pexels-photo-28928968.jpeg',\n    ],\n    features: ['Climatisation', 'Bluetooth', 'R√©gulateur de vitesse'],\n    isPremium: false,\n    createdAt: new Date('2024-11-25'),\n    updatedAt: new Date('2024-11-25'),\n    views: 67,\n    favorites: 4,\n    status: 'approved',\n  },\n  {\n    id: '4',\n    userId: '2',\n    user: mockUsers[2],\n    title: '[Demo] Renault Clio V - Comme neuve',\n    description: 'Renault Clio V essence, premi√®re main, garantie constructeur. V√©hicule r√©cent en parfait √©tat.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'Clio',\n    year: 2022,\n    mileage: 15000,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 18500,\n    location: 'Lyon 69003',\n    images: [\n      'https://images.pexels.com/photos/6747188/pexels-photo-6747188.jpeg',\n    ],\n    features: ['GPS', 'Cam√©ra de recul', 'Climatisation automatique', 'Bluetooth'],\n    isPremium: true,\n    premiumType: 'daily',\n    premiumExpiresAt: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 89,\n    favorites: 8,\n    status: 'approved',\n  },\n  {\n    id: '5',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Volkswagen Golf VII - Tr√®s bon √©tat',\n    description: 'Volkswagen Golf VII diesel, entretien suivi en concession. V√©hicule familial spacieux et √©conomique.',\n    category: 'voiture',\n    brand: 'Volkswagen',\n    model: 'Golf',\n    year: 2019,\n    mileage: 58000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 22900,\n    location: 'Toulouse 31000',\n    images: [\n      'https://images.pexels.com/photos/4713812/pexels-photo-4713812.jpeg',\n    ],\n    features: ['GPS', 'R√©gulateur adaptatif', 'Si√®ges chauffants', 'Jantes alliage'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 134,\n    favorites: 9,\n    status: 'approved',\n  },\n  {\n    id: '101',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Mercedes Classe C 220 d - Berline premium',\n    description: 'Mercedes Classe C 220 d en excellent √©tat, berline premium avec finition soign√©e. Entretien Mercedes, carnet complet, v√©hicule non fumeur.',\n    category: 'voiture',\n    brand: 'Mercedes-Benz',\n    model: 'Classe C',\n    year: 2019,\n    mileage: 55000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 27900,\n    location: 'Lyon 69003',\n    images: [\n      'https://www.wandaloo.com/files/Voiture-Neuve/mercedes/Mercedes-Classe-C-2019-Neuve-Maroc-09.jpg',\n      'https://www.leguideauto.ma/contents/cars/pictures/2021/12/large/oRcpIpaOSsjUvdWJ372IhEwRY2VS0WlkJH0pIsZV.webp',\n    ],\n    features: ['GPS Navigation', 'Climatisation automatique', 'Si√®ges cuir', 'Jantes alliage 17\"', 'R√©gulateur de vitesse', 'Bluetooth', 'Feux LED'],\n    isPremium: false,\n    createdAt: new Date('2024-12-15'),  \n    updatedAt: new Date('2024-12-15'),\n    views: 23,\n    favorites: 2,\n    status: 'approved',\n  },\n\n  // Motos\n  {\n    id: '2',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Yamaha MT-07 - Comme neuve',\n    description: 'Yamaha MT-07 en parfait √©tat, r√©vision compl√®te effectu√©e. Moto parfaite pour d√©buter ou pour un usage quotidien.',\n    category: 'moto',\n    brand: 'Yamaha',\n    model: 'MT-07',\n    year: 2022,\n    mileage: 8500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 6800,\n    location: 'Lyon 69001',\n    images: [\n      'https://images.pexels.com/photos/19161359/pexels-photo-19161359.jpeg',\n    ],\n    features: ['ABS', '√âclairage LED', 'Compteur digital'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 89,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '6',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Honda CB650R - Sportive √©l√©gante',\n    description: 'Honda CB650R en excellent √©tat, moto sportive au design moderne. Entretien r√©gulier, pneus neufs.',\n    category: 'moto',\n    brand: 'Honda',\n    model: 'CB650R',\n    year: 2021,\n    mileage: 12000,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 8900,\n    location: 'Nice 06000',\n    images: [\n      'https://images.pexels.com/photos/5027480/pexels-photo-5027480.jpeg',\n    ],\n    features: ['ABS', 'Modes de conduite', '√âclairage LED', 'Quickshifter'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 156,\n    favorites: 15,\n    status: 'approved',\n  },\n  {\n    id: '7',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Kawasaki Z900 - Puissance et style',\n    description: 'Kawasaki Z900 en tr√®s bon √©tat, moto puissante et agile. Parfaite pour les amateurs de sensations.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z900',\n    year: 2020,\n    mileage: 18500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 9500,\n    location: 'Bordeaux 33000',\n    images: [\n      'https://images.pexels.com/photos/31058697/pexels-photo-31058697.png',\n    ],\n    features: ['ABS', 'Contr√¥le de traction', 'Modes de conduite', '√âclairage LED'],\n    isPremium: false,\n    createdAt: new Date('2024-11-27'),\n    updatedAt: new Date('2024-11-27'),\n    views: 98,\n    favorites: 11,\n    status: 'approved',\n  },\n\n  // Scooters\n  {\n    id: '8',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Yamaha XMAX 300 - Confort urbain',\n    description: 'Yamaha XMAX 300 en excellent √©tat, scooter grand roues parfait pour la ville et les trajets quotidiens.',\n    category: 'scooter',\n    brand: 'Yamaha',\n    model: 'XMAX 300',\n    year: 2021,\n    mileage: 9500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 4200,\n    location: 'Montpellier 34000',\n    images: [\n      'https://images.pexels.com/photos/6012976/pexels-photo-6012976.jpeg',\n    ],\n    features: ['ABS', 'Coffre sous selle', '√âclairage LED', 'Prise USB'],\n    isPremium: false,\n    createdAt: new Date('2024-11-26'),\n    updatedAt: new Date('2024-11-26'),\n    views: 76,\n    favorites: 6,\n    status: 'approved',\n  },\n\n  // Quads\n  {\n    id: '22',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Yamaha Raptor 700R - Quad sportif',\n    description: 'Yamaha Raptor 700R en excellent √©tat, quad sportif parfait pour les loisirs et le sport. Entretien r√©gulier, pneus neufs.',\n    category: 'quad',\n    brand: 'Yamaha',\n    model: 'Raptor 700R',\n    year: 2020,\n    mileage: 2500,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 8500,\n    location: 'Annecy 74000',\n    images: [\n      'https://images.pexels.com/photos/20340293/pexels-photo-20340293.jpeg',\n    ],\n    features: ['Suspension sport', 'Freins √† disque', 'D√©marreur √©lectrique', 'Pneus tout-terrain'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 145,\n    favorites: 14,\n    status: 'approved',\n  },\n\n  // Utilitaires\n  {\n    id: '14',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Ford Transit Custom - Van am√©nag√©',\n    description: 'Ford Transit Custom diesel, am√©nagement professionnel. Parfait pour artisans ou transport de marchandises.',\n    category: 'utilitaire',\n    brand: 'Ford',\n    model: 'Transit Custom',\n    year: 2020,\n    mileage: 85000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 24500,\n    location: 'Paris 75019',\n    images: [\n      'https://images.pexels.com/photos/7363197/pexels-photo-7363197.jpeg',\n    ],\n    features: ['Climatisation', 'Cloison de s√©paration', 'Attelage', 'GPS'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 134,\n    favorites: 8,\n    status: 'approved',\n  },\n  {\n    id: '15',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Renault Master - Fourgon grand volume',\n    description: 'Renault Master diesel, grand volume de chargement. Id√©al pour d√©m√©nagements et transport volumineux.',\n    category: 'utilitaire',\n    brand: 'Renault',\n    model: 'Master',\n    year: 2019,\n    mileage: 120000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 18900,\n    location: 'Lyon 69007',\n    images: [\n      'https://images.pexels.com/photos/5025669/pexels-photo-5025669.jpeg',\n    ],\n    features: ['Hayon arri√®re', 'Porte lat√©rale', 'Radio Bluetooth'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 89,\n    favorites: 5,\n    status: 'approved',\n  },\n  {\n    id: '16',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Volkswagen Crafter - Utilitaire r√©cent',\n    description: 'Volkswagen Crafter diesel, utilitaire r√©cent avec faible kilom√©trage. Entretien suivi en concession.',\n    category: 'utilitaire',\n    brand: 'Volkswagen',\n    model: 'Crafter',\n    year: 2021,\n    mileage: 45000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 32500,\n    location: 'Marseille 13008',\n    images: [\n      'https://images.pexels.com/photos/19116880/pexels-photo-19116880.jpeg',\n    ],\n    features: ['Climatisation', 'GPS', 'Cam√©ra de recul', 'Attelage'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 112,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '17',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Iveco Daily - Plateau benne',\n    description: 'Iveco Daily diesel avec plateau benne basculante. Parfait pour les travaux et le transport de mat√©riaux.',\n    category: 'utilitaire',\n    brand: 'Iveco',\n    model: 'Daily',\n    year: 2018,\n    mileage: 95000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 28900,\n    location: 'Toulouse 31200',\n    images: [\n      'https://images.pexels.com/photos/18434074/pexels-photo-18434074.jpeg',\n    ],\n    features: ['Benne basculante', 'Attelage', 'Radio', 'Crochet de remorquage'],\n    isPremium: false,\n    createdAt: new Date('2024-11-27'),\n    updatedAt: new Date('2024-11-27'),\n    views: 67,\n    favorites: 4,\n    status: 'approved',\n  },\n\n  // Autres v√©hicules\n  {\n    id: '18',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Jet Ski Yamaha VX Cruiser - Loisirs nautiques',\n    description: 'Jet Ski Yamaha VX Cruiser en excellent √©tat, parfait pour les loisirs nautiques. Entretien r√©gulier, remorque incluse.',\n    category: 'jetski',\n    brand: 'Yamaha',\n    model: 'VX Cruiser',\n    year: 2020,\n    mileage: 45,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 12500,\n    location: 'Cannes 06400',\n    images: [\n      'https://images.pexels.com/photos/33046/jet-ski-water-sport-water-bike-water.jpg',\n    ],\n    features: ['Remorque incluse', 'GPS √©tanche', 'Coffre √©tanche', 'Syst√®me audio'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 234,\n    favorites: 18,\n    status: 'approved',\n  },\n  {\n    id: '19',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Bateau Quicksilver 505 - Moteur Mercury',\n    description: 'Bateau Quicksilver 505 avec moteur Mercury 90CV. Parfait pour la p√™che et les balades en famille.',\n    category: 'bateau',\n    brand: 'Quicksilver',\n    model: '505',\n    year: 2019,\n    fuelType: 'gasoline',\n    condition: 'used',\n    price: 18900,\n    location: 'La Rochelle 17000',\n    images: [\n      'https://images.pexels.com/photos/296278/pexels-photo-296278.jpeg',\n    ],\n    features: ['Moteur Mercury 90CV', 'Remorque', 'Sondeur', 'Bimini'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '20',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Camion Renault Midlum - Transport professionnel',\n    description: 'Camion Renault Midlum diesel, parfait pour le transport professionnel. Entretien suivi, contr√¥le technique OK.',\n    category: 'caravane',\n    brand: 'Renault',\n    model: 'Midlum',\n    year: 2017,\n    mileage: 180000,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 45000,\n    location: 'Lille 59000',\n    images: [\n      'https://images.pexels.com/photos/18982333/pexels-photo-18982333.jpeg',\n    ],\n    features: ['Hayon √©l√©vateur', 'Climatisation', 'Tachygraphe', 'Radio'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 89,\n    favorites: 6,\n    status: 'approved',\n  },\n  {\n    id: '21',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Caravane Hobby De Luxe - Vacances familiales',\n    description: 'Caravane Hobby De Luxe en excellent √©tat, parfaite pour les vacances en famille. √âquipement complet.',\n    category: 'caravane',\n    brand: 'Hobby',\n    model: 'De Luxe',\n    year: 2020,\n    condition: 'used',\n    price: 22500,\n    location: 'Annecy 74000',\n    images: [\n      'https://images.pexels.com/photos/3927311/pexels-photo-3927311.jpeg',\n    ],\n    features: ['Cuisine √©quip√©e', 'Douche/WC', 'Chauffage', 'Auvent', 'TV'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 145,\n    favorites: 14,\n    status: 'approved',\n  },\n\n  // Pi√®ces d√©tach√©es\n  {\n    id: '12',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Moteur BMW 320d N47 - R√©vis√©',\n    description: 'Moteur BMW 320d N47 enti√®rement r√©vis√©, garantie 6 mois. Distribution chang√©e, joint de culasse neuf.',\n    category: 'piece-voiture',\n    brand: 'BMW',\n    model: 'Moteur N47',\n    year: 2015,\n    fuelType: 'diesel',\n    condition: 'used',\n    price: 2500,\n    location: 'Paris 75020',\n    images: [\n      'https://images.pexels.com/photos/190574/pexels-photo-190574.jpeg',\n    ],\n    features: ['R√©vis√©', 'Garantie 6 mois', 'Distribution neuve', 'Joint culasse neuf'],\n    isPremium: false,\n    createdAt: new Date('2024-11-23'),\n    updatedAt: new Date('2024-11-23'),\n    views: 89,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '13',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Jantes alliage 17\" BMW - Parfait √©tat',\n    description: 'Set de 4 jantes alliage BMW 17 pouces en parfait √©tat, style 394. Avec pneus Michelin r√©cents.',\n    category: 'piece-voiture',\n    brand: 'BMW',\n    model: 'Jantes Style 394',\n    year: 2020,\n    condition: 'used',\n    price: 800,\n    location: 'Lyon 69007',\n    images: [\n      'https://images.pexels.com/photos/9182360/pexels-photo-9182360.jpeg',\n    ],\n    features: ['Set de 4', 'Pneus inclus', 'Parfait √©tat', 'Style 394'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '23',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] Pare-chocs avant Peugeot 308 - Neuf',\n    description: 'Pare-chocs avant Peugeot 308 phase 2, neuf dans son emballage. Couleur gris m√©tallis√©, pr√™t √† peindre.',\n    category: 'piece-voiture',\n    brand: 'Peugeot',\n    model: 'Pare-chocs 308',\n    year: 2018,\n    condition: 'new',\n    price: 320,\n    location: 'Marseille 13001',\n    images: [\n      'https://images.pexels.com/photos/14121200/pexels-photo-14121200.jpeg',\n    ],\n    features: ['Neuf', 'Emballage d\\'origine', 'Pr√™t √† peindre', 'Phase 2'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 67,\n    favorites: 5,\n    status: 'approved',\n  },\n  {\n    id: '24',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Alternateur Renault Clio - Test√© OK',\n    description: 'Alternateur Renault Clio 4 en parfait √©tat de fonctionnement. Test√© et garanti 3 mois.',\n    category: 'piece-voiture',\n    brand: 'Renault',\n    model: 'Alternateur Clio',\n    year: 2019,\n    condition: 'used',\n    price: 150,\n    location: 'Toulouse 31100',\n    images: [\n      'https://media.vroomly.com/public/thumbnails/interventions/vZCHt6JOq26r_700x700_mtdhGWCw.jpg',\n    ],\n    features: ['Test√© OK', 'Garantie 3 mois', 'Parfait √©tat', 'Pr√™t √† monter'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 45,\n    favorites: 3,\n    status: 'approved',\n  },\n  {\n    id: '30',\n    userId: '2',\n    user: mockUsers[1], // Pierre Martin\n    title: '[Demo] Pare-choc avant Ford Fiesta - Bon √©tat',\n    description: 'Pare-choc avant Ford Fiesta en bon √©tat, quelques rayures mineures. Compatible avec mod√®les 2013-2017. Pr√™t √† monter.',\n    category: 'piece-voiture',\n    brand: 'Ford',\n    model: 'Pare-choc Fiesta',\n    year: 2015,\n    condition: 'used',\n    price: 180,\n    location: 'Paris 75011',\n    images: [\n      'https://photos.gpa26.com/photos/pieces/thumbnails/275561_16i1.jpg',\n    ],\n    features: ['Bon √©tat g√©n√©ral', 'Rayures mineures', 'Compatible 2013-2017', 'Pr√™t √† monter'],\n    isPremium: false,\n    createdAt: new Date('2024-12-06'),\n    updatedAt: new Date('2024-12-06'),\n    views: 23,\n    favorites: 2,\n    status: 'approved',\n  },\n  {\n    id: '41',\n    userId: '3',\n    user: mockUsers[2], // Sophie Dubois\n    title: '[Demo] Roues compl√®tes Ford Fiesta - Jantes alu 15\"',\n    description: 'Set de 4 roues compl√®tes pour Ford Fiesta avec jantes aluminium 15 pouces et pneus Michelin Energy Saver 195/65 R15. Excellent √©tat, tr√®s peu servi.',\n    category: 'piece-voiture',\n    brand: 'Ford',\n    model: 'Roues Fiesta 15\"',\n    year: 2016,\n    condition: 'used',\n    price: 450,\n    location: 'Lyon 69007',\n    images: [\n      'https://www.picclickimg.com/RF8AAOSwZj9nC2Kn/Cerchi-in-Lega-FIAT-GRANDE-PUNTO-15-con.webp',\n    ],\n    features: ['Set de 4 roues', 'Jantes alu 15 pouces', 'Pneus Michelin inclus', 'Compatible 2013-2018', 'Excellent √©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-12-23'),\n    updatedAt: new Date('2024-12-23'),\n    views: 15,\n    favorites: 4,\n    status: 'approved',\n  },\n  {\n    id: '42',\n    userId: '1',\n    user: mockUsers[0], // Marie Dubois\n    title: '[Demo] Capot Audi A5 Sportback - Excellent √©tat',\n    description: 'Capot complet pour Audi A5 Sportback en excellent √©tat. Aucun choc, peinture d\\'origine parfaite. Compatible mod√®les 2017-2021. D√©pose soign√©e.',\n    category: 'piece-voiture',\n    brand: 'Audi',\n    model: 'Capot A5 Sportback',\n    year: 2019,\n    condition: 'used',\n    price: 650,\n    location: 'Strasbourg 67100',\n    images: [\n      'https://i.ebayimg.com/images/g/JPAAAOSw3q5jRoPL/s-l400.jpg',\n    ],\n    features: ['Peinture d\\'origine', 'Aucun choc', 'Compatible 2017-2021', 'D√©pose professionnelle', 'Excellent √©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-12-23'),\n    updatedAt: new Date('2024-12-23'),\n    views: 8,\n    favorites: 2,\n    status: 'approved',\n  },\n  {\n    id: '43',\n    userId: '4',\n    user: mockUsers[3], // Jean Martin Pro\n    title: '[Demo] Pare-choc avant Audi A5 - Neuf d\\'origine',\n    description: 'Pare-choc avant Audi A5 Sportback neuf d\\'origine Audi. Jamais mont√©, dans son emballage. Compatible avec capteurs de stationnement et feux antibrouillard.',\n    category: 'piece-voiture',\n    brand: 'Audi',\n    model: 'Pare-choc A5',\n    year: 2020,\n    condition: 'new',\n    price: 850,\n    location: 'Mulhouse 68200',\n    images: [\n      'https://aricy-auto.ma/wp-content/uploads/2024/09/Pare-choc-Avant-AUDI-A5-F5-16-19-Look-RS5-3.webp',\n    ],\n    features: ['Pi√®ce d\\'origine Audi', 'Neuf emball√©', 'Capteurs compatibles', 'Feux antibrouillard OK', 'Garantie constructeur'],\n    isPremium: true,\n    premiumType: 'daily',\n    premiumExpiresAt: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-23'),\n    updatedAt: new Date('2024-12-23'),\n    views: 12,\n    favorites: 5,\n    status: 'approved',\n  },\n\n  // V√©hicules A√©riens\n  {\n    id: '20',\n    userId: '1',\n    user: mockUsers[1],\n    title: '[Demo] ULM Pendulaire Cosmos - Phase 2',\n    description: 'ULM pendulaire Cosmos Phase 2 en excellent √©tat. Moteur Rotax 912 ULS, 100 heures de vol. Id√©al pour d√©buter.',\n    category: 'aerien',\n    brand: 'Cosmos',\n    model: 'Phase 2',\n    year: 2018,\n    price: 45000,\n    location: 'Toulouse 31000',\n    images: [\n      'https://images.pexels.com/photos/8244915/pexels-photo-8244915.jpeg',\n    ],\n    mileage: 100, // Heures de vol\n    fuelType: 'gasoline',\n    condition: 'used',\n    features: ['Moteur Rotax 912 ULS', 'Carnet de vol complet', 'R√©vision r√©cente', 'Housse de protection'],\n    isPremium: false,\n    createdAt: new Date('2024-11-25'),\n    updatedAt: new Date('2024-11-25'),\n    views: 156,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '21',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Parapente Ozone Rush 5 - Taille M',\n    description: 'Parapente Ozone Rush 5 taille M, parfait √©tat. Id√©al pour pilotes interm√©diaires. Sellette et secours inclus.',\n    category: 'aerien',\n    brand: 'Ozone',\n    model: 'Rush 5',\n    year: 2021,\n    price: 2800,\n    location: 'Annecy 74000',\n    images: [\n      'https://images.pexels.com/photos/6478078/pexels-photo-6478078.jpeg',\n    ],\n    condition: 'used',\n    features: ['Sellette Advance incluse', 'Parachute de secours', 'Sac de rangement', 'Carnet d\\'entretien'],\n    isPremium: false,\n    createdAt: new Date('2024-11-24'),\n    updatedAt: new Date('2024-11-24'),\n    views: 89,\n    favorites: 8,\n    status: 'approved',\n  },\n\n  // Services\n  {\n    id: '22',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Remorquage 24h/24 - Toute la France',\n    description: 'Service de remorquage professionnel disponible 24h/24 et 7j/7 sur toute la France. Intervention rapide, mat√©riel moderne, tarifs transparents.',\n    category: 'remorquage',\n    brand: 'D√©pannage Pro',\n    model: 'Service national',\n    year: 2024,\n    price: 80, // Prix de base\n    location: 'France enti√®re',\n    images: [\n      'https://images.pexels.com/photos/943930/pexels-photo-943930.jpeg',\n    ],\n    condition: 'new',\n    features: ['Disponible 24h/24', 'Toute la France', 'Tarif transparent', 'Mat√©riel moderne', 'Devis gratuit'],\n    isPremium: true,\n    premiumType: 'monthly',\n    premiumExpiresAt: new Date(Date.now() + 25 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 445,\n    favorites: 32,\n    status: 'approved',\n  },\n  {\n    id: '23',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Garage Auto Expert - R√©paration toutes marques',\n    description: 'Garage sp√©cialis√© dans la r√©paration automobile toutes marques. Diagnostic √©lectronique, m√©canique g√©n√©rale, carrosserie. Devis gratuit.',\n    category: 'reparation',\n    brand: 'Auto Expert',\n    model: 'Garage Marseille',\n    year: 2024,\n    price: 60, // Prix horaire\n    location: 'Marseille 13008',\n    images: [\n      'https://images.pexels.com/photos/4489702/pexels-photo-4489702.jpeg',\n    ],\n    condition: 'new',\n    features: ['Toutes marques', 'Diagnostic √©lectronique', 'Carrosserie', 'Devis gratuit', 'Garantie pi√®ces'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 234,\n    favorites: 18,\n    status: 'approved',\n  },\n\n  // V√©hicules accident√©s\n  {\n    id: '24',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Renault M√©gane IV - V√©hicule accident√©',\n    description: 'Renault M√©gane IV accident√©e suite √† collision arri√®re. Moteur OK, transmission OK. Id√©al pour pi√®ces ou r√©paration.',\n    category: 'voiture',\n    brand: 'Renault',\n    model: 'M√©gane',\n    year: 2018,\n    mileage: 85000,\n    fuelType: 'diesel',\n    condition: 'damaged',\n    price: 4500,\n    location: 'Lyon 69007',\n    images: [\n      'https://images.pexels.com/photos/2265634/pexels-photo-2265634.jpeg',\n    ],\n    features: ['Moteur OK', 'Bo√Æte vitesse OK', 'Accident arri√®re', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 156,\n    favorites: 8,\n    status: 'approved',\n  },\n  {\n    id: '25',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Peugeot 308 - Accident√©e - Pour pi√®ces',\n    description: 'Peugeot 308 accident√©e c√¥t√© conducteur. Moteur 1.6 HDI fonctionne parfaitement. Nombreuses pi√®ces r√©cup√©rables.',\n    category: 'voiture',\n    brand: 'Peugeot',\n    model: '308',\n    year: 2016,\n    mileage: 125000,\n    fuelType: 'diesel',\n    condition: 'damaged',\n    price: 3200,\n    location: 'Nantes 44000',\n    images: [\n      'https://images.pexels.com/photos/1036792/pexels-photo-1036792.jpeg',\n    ],\n    features: ['Moteur 1.6 HDI OK', 'Accident lat√©ral', 'Pi√®ces r√©cup√©rables', 'Vente en l\\'√©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 89,\n    favorites: 5,\n    status: 'approved',\n  },\n  {\n    id: '26',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Ford Fiesta - Accident√©e - Pour pi√®ces',\n    description: 'Ford Fiesta accident√©e suite collision lat√©rale. Moteur essence 1.0 EcoBoost intact. Nombreuses pi√®ces r√©cup√©rables, carrosserie c√¥t√© droit endommag√©e.',\n    category: 'voiture',\n    brand: 'Ford',\n    model: 'Fiesta',\n    year: 2017,\n    mileage: 95000,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 3800,\n    location: 'Bordeaux 33000',\n    images: [\n      'https://images.pexels.com/photos/11985216/pexels-photo-11985216.jpeg',\n      'https://images.pexels.com/photos/11985979/pexels-photo-11985979.jpeg',\n    ],\n    features: ['Moteur 1.0 EcoBoost OK', 'Accident lat√©ral droit', 'Pi√®ces r√©cup√©rables', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-11-28'),\n    updatedAt: new Date('2024-11-28'),\n    views: 267,\n    favorites: 15,\n    status: 'approved',\n  },\n\n  // Annonces de recherche (invers√©es - achat)\n  {\n    id: '27',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] RECHERCHE - Moto sportive 600cc',\n    description: 'Recherche moto sportive 600cc type CBR, R6, ZX-6R. Budget jusqu\\'√† 8000‚Ç¨. √âtat correct accept√©, kilom√©trage raisonnable.',\n    category: 'moto',\n    brand: 'Honda, Yamaha, Kawasaki',\n    model: 'Sportive 600cc',\n    year: 2015,\n    price: 8000, // Budget max\n    location: 'Toulouse 31000',\n    images: [\n      'https://images.pexels.com/photos/2116475/pexels-photo-2116475.jpeg',\n    ],\n    condition: 'used',\n    features: ['Budget 8000‚Ç¨ max', '√âtat correct', 'Kilom√©trage raisonnable', 'Contact rapide'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 78,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '28',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] RECHERCHE - Citadine √©conomique',\n    description: 'Recherche petite voiture citadine √©conomique type Clio, 208, Corsa. Budget 12000‚Ç¨ maximum. Premi√®re main pr√©f√©r√©e.',\n    category: 'voiture',\n    brand: 'Renault, Peugeot, Opel',\n    model: 'Citadine',\n    year: 2018,\n    price: 12000, // Budget max\n    location: 'Paris 75015',\n    images: [\n      'https://images.pexels.com/photos/1592384/pexels-photo-1592384.jpeg',\n    ],\n    condition: 'used',\n    features: ['Budget 12000‚Ç¨ max', 'Premi√®re main', '√âconomique', 'Entretien suivi'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 145,\n    favorites: 9,\n    status: 'approved',\n  },\n  {\n    id: '29',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] RECHERCHE - Moteur complet diesel',\n    description: 'Recherche moteur complet diesel 1.6 ou 2.0 TDI, HDI, dCi. √âtat de marche, kilom√©trage indiff√©rent. Urgence r√©paration.',\n    category: 'piece-voiture',\n    brand: 'Volkswagen, Peugeot, Renault',\n    model: 'Moteur 1.6-2.0 TDI/HDI',\n    year: 2012,\n    price: 2500, // Budget max\n    location: 'Marseille 13009',\n    images: [\n      'https://images.pexels.com/photos/13177819/pexels-photo-13177819.jpeg',\n    ],\n    condition: 'used',\n    features: ['Moteur complet', '√âtat de marche', 'Urgence', 'Transport possible'],\n    isPremium: false,\n    createdAt: new Date('2024-11-30'),\n    updatedAt: new Date('2024-11-30'),\n    views: 167,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '30',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] RECHERCHE - Jet ski 3 places',\n    description: 'Recherche jet ski 3 places type Sea-Doo, Yamaha. Budget jusqu\\'√† 10000‚Ç¨. Remorque souhait√©e mais pas obligatoire.',\n    category: 'jetski',\n    brand: 'Sea-Doo, Yamaha',\n    model: '3 places',\n    year: 2016,\n    price: 10000, // Budget max\n    location: 'Nice 06200',\n    images: [\n      'https://images.pexels.com/photos/1001990/pexels-photo-1001990.jpeg',\n    ],\n    condition: 'used',\n    features: ['3 places minimum', 'Budget 10000‚Ç¨', 'Remorque souhait√©e', 'Bon √©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-11-29'),\n    updatedAt: new Date('2024-11-29'),\n    views: 198,\n    favorites: 14,\n    status: 'approved',\n  },\n\n  // Pi√®ces d√©tach√©es moto\n  {\n    id: '31',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] √âchappement Akrapovic Racing - Yamaha R1',\n    description: '√âchappement complet Akrapovic Racing Line pour Yamaha R1 2015-2019. Titane, neuf jamais mont√©. Gain de puissance et sonorit√© exceptionnelle.',\n    category: 'piece-moto',\n    brand: 'Akrapovic',\n    model: 'Racing Line',\n    year: 2018,\n    price: 1450,\n    location: 'Lyon 69003',\n    images: [\n      'https://images.pexels.com/photos/9166732/pexels-photo-9166732.jpeg',\n    ],\n    condition: 'new',\n    features: ['Titane', 'Neuf jamais mont√©', 'Certificat CE', 'Notice incluse', 'Gain 8CV'],\n    isPremium: true,\n    premiumType: 'daily',\n    premiumExpiresAt: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 267,\n    favorites: 23,\n    status: 'approved',\n  },\n  {\n    id: '32',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Fourche compl√®te Kymco Agility 125',\n    description: 'Fourche compl√®te d\\'origine pour scooter Kymco Agility 125. Bon √©tat, d√©mont√©e proprement suite changement de scooter.',\n    category: 'piece-moto',\n    brand: 'Kymco',\n    model: 'Agility 125',\n    year: 2016,\n    price: 180,\n    location: 'Marseille 13001',\n    images: [\n      'https://www.maxi-pieces-50.fr/pub/images_import/02_/PR13829.jpg',\n      'https://media1.motorkit.com/16717-thickbox_default/fourche-avant-pour-kymco-agility-50cc-muni-de-jantes-12-pouces.jpg',\n    ],\n    condition: 'used',\n    features: ['Pi√®ce d\\'origine', 'Bon √©tat', 'D√©montage soign√©', '√âtriers inclus'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 89,\n    favorites: 7,\n    status: 'approved',\n  },\n\n  // Services\n  {\n    id: '33',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Entretien automobile √† domicile - Toute marque',\n    description: 'Service d\\'entretien automobile √† domicile. Vidange, filtres, r√©vision compl√®te. D√©placement gratuit dans un rayon de 30km autour de Paris.',\n    category: 'entretien',\n    brand: 'M√©ca Mobile',\n    model: 'Service domicile',\n    year: 2024,\n    price: 75, // Prix horaire\n    location: 'Paris et r√©gion 75/92/93/94',\n    images: [\n      'https://images.pexels.com/photos/4489741/pexels-photo-4489741.jpeg',\n    ],\n    condition: 'new',\n    features: ['D√©placement gratuit 30km', 'Toutes marques', 'Pi√®ces garanties', 'Devis gratuit', 'Disponible weekend'],\n    isPremium: true,\n    premiumType: 'weekly',\n    premiumExpiresAt: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 312,\n    favorites: 28,\n    status: 'approved',\n  },\n  {\n    id: '34',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Assurance Auto - Paiement mensuel facilit√©',\n    description: 'Service d\\'assurance automobile avec paiement mensuel sans frais. Tous risques, assistance 24h/24, devis en ligne imm√©diat.',\n    category: 'autre-service',\n    brand: 'Assur Plus',\n    model: 'Tous risques',\n    year: 2024,\n    price: 45, // Prix mensuel moyen\n    location: 'France enti√®re',\n    images: [\n      'https://images.pexels.com/photos/4427480/pexels-photo-4427480.jpeg',\n    ],\n    condition: 'new',\n    features: ['Paiement mensuel', 'Assistance 24h/24', 'Devis imm√©diat', 'Tous risques', 'France enti√®re'],\n    isPremium: true,\n    premiumType: 'monthly',\n    premiumExpiresAt: new Date(Date.now() + 28 * 24 * 60 * 60 * 1000),\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 456,\n    favorites: 34,\n    status: 'approved',\n  },\n\n  // Remorque pour voiture\n  {\n    id: '35',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Remorque bagag√®re 1300kg - Excellent √©tat',\n    description: 'Remorque bagag√®re frein√©e 1300kg charge utile. Parfait √©tat, peu servie. Id√©ale transport, d√©m√©nagement. Plancher antid√©rapant.',\n    category: 'remorque',\n    brand: 'Erde',\n    model: '164',\n    year: 2020,\n    price: 890,\n    location: 'Toulouse 31400',\n    images: [\n      'https://images.pexels.com/photos/10304035/pexels-photo-10304035.jpeg',\n    ],\n    condition: 'used',\n    features: ['Frein√©e 1300kg', 'Plancher antid√©rapant', 'Ridelles amovibles', '√âclairage LED', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-12-01'),\n    updatedAt: new Date('2024-12-01'),\n    views: 167,\n    favorites: 12,\n    status: 'approved',\n  },\n\n  // Voiture accident√©e\n  {\n    id: '36',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Audi A5 Sportback accident√©e - Pour pi√®ces',\n    description: 'Audi A5 Sportback suite accident face avant. D√©g√¢ts : capot, pare-choc avant, phares, jantes et moyeux √† refaire. Moteur intact, reste de la carrosserie en bon √©tat.',\n    category: 'voiture',\n    brand: 'Audi',\n    model: 'A5 Sportback',\n    year: 2019,\n    price: 8500,\n    location: 'Strasbourg 67000',\n    images: [\n      'https://images.pexels.com/photos/5351111/pexels-photo-5351111.jpeg',\n      'https://images.pexels.com/photos/5351114/pexels-photo-5351114.jpeg',\n    ],\n    condition: 'damaged',\n    features: ['Moteur intact', 'Carrosserie arri√®re OK', 'Int√©rieur parfait', 'Carte grise OK', 'Visible sur RDV'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 234,\n    favorites: 18,\n    status: 'approved',\n  },\n\n  // Nouvelles annonces de v√©hicules accident√©s\n  {\n    id: '37',\n    userId: '2',\n    user: mockUsers[1],\n    title: '[Demo] Honda CBR600RR accident√©e - Moteur OK',\n    description: 'Honda CBR600RR accident√©e suite chute sur circuit. Car√©nages cass√©s, guidon tordu, clignotants cass√©s. Moteur et bo√Æte parfaits, fourche √† r√©viser.',\n    category: 'moto',\n    brand: 'Honda',\n    model: 'CBR600RR',\n    year: 2018,\n    mileage: 25000,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 4200,\n    location: 'Lyon 69001',\n    images: [\n      'https://images.pexels.com/photos/2519374/pexels-photo-2519374.jpeg',\n    ],\n    features: ['Moteur OK', 'Bo√Æte vitesse OK', 'Car√©nages √† changer', 'Fourche √† r√©viser', 'Carte grise OK'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 198,\n    favorites: 14,\n    status: 'approved',\n  },\n  {\n    id: '38',\n    userId: '3',\n    user: mockUsers[2],\n    title: '[Demo] Kawasaki Z800 accident√©e - Pour pi√®ces',\n    description: 'Kawasaki Z800 accident√©e suite collision lat√©rale. Moteur fonctionne, nombreuses pi√®ces r√©cup√©rables. R√©servoir enfonc√©, car√©nages cass√©s.',\n    category: 'moto',\n    brand: 'Kawasaki',\n    model: 'Z800',\n    year: 2017,\n    mileage: 32000,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 3800,\n    location: 'Marseille 13008',\n    images: [\n      'https://www.bike-eco.fr/273022/71705.jpg',\n    ],\n    features: ['Moteur fonctionne', 'Pi√®ces r√©cup√©rables', 'R√©servoir enfonc√©', 'Accident lat√©ral', 'Vente en l\\'√©tat'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 156,\n    favorites: 9,\n    status: 'approved',\n  },\n  {\n    id: '39',\n    userId: '1',\n    user: mockUsers[0],\n    title: '[Demo] Quad Kymco MXU 500 accident√© - Moteur OK',\n    description: 'Quad Kymco MXU 500 accident√© lors d\\'une sortie tout-terrain. Plastiques cass√©s, guidon tordu. Moteur et transmission en parfait √©tat.',\n    category: 'quad',\n    brand: 'Kymco',\n    model: 'MXU 500',\n    year: 2019,\n    mileage: 1200,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 3500,\n    location: 'Toulouse 31000',\n    images: [\n      'https://lecoindupro.blob.core.windows.net/upload/2341692.Lg.jpg',\n    ],\n    features: ['Moteur parfait', 'Transmission OK', 'Plastiques √† changer', 'Guidon tordu', 'Id√©al r√©paration'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 134,\n    favorites: 7,\n    status: 'approved',\n  },\n  {\n    id: '40',\n    userId: '4',\n    user: mockUsers[3],\n    title: '[Demo] Jet Ski Sea-Doo GTX accident√© - Coque endommag√©e',\n    description: 'Jet Ski Sea-Doo GTX accident√© suite collision avec rocher. Coque fissur√©e c√¥t√© droit, moteur fonctionne parfaitement. Pompe √† jet OK.',\n    category: 'jetski',\n    brand: 'Sea-Doo',\n    model: 'GTX',\n    year: 2020,\n    mileage: 85,\n    fuelType: 'gasoline',\n    condition: 'damaged',\n    price: 6500,\n    location: 'Nice 06000',\n    images: [\n      'https://wpde.com/resources/media/6f122d96-8e8c-4dd1-9f7a-e68b9430d31f-large1x1_jetskicrash.jpg',\n    ],\n    features: ['Moteur parfait', 'Pompe √† jet OK', 'Coque fissur√©e', 'Accident c√¥t√© droit', 'R√©parable'],\n    isPremium: false,\n    createdAt: new Date('2024-12-02'),\n    updatedAt: new Date('2024-12-02'),\n    views: 178,\n    favorites: 12,\n    status: 'approved',\n  },\n  {\n    id: '44',\n    userId: '5',\n    user: mockUsers[4], // David Rousseau - Pi√®ces Auto Rousseau\n    title: '[Demo] Pare-brise Renault M√©gane IV - Neuf d\\'origine',\n    description: 'Pare-brise neuf d\\'origine constructeur pour Renault M√©gane IV (2016-2024). Avec capteur de pluie et cam√©ra compatible. Installation possible sur place.',\n    category: 'piece-voiture',\n    brand: 'Renault',\n    model: 'Pare-brise M√©gane IV',\n    year: 2020,\n    condition: 'new',\n    price: 285,\n    location: 'Toulouse 31200',\n    images: [\n      'https://cdn.proxyparts.com/parts/100255/13623698/large/8549bb59-b0e9-4e99-98a8-eb149efd7fa7.jpg',\n      'https://images.unsplash.com/photo-1621905251189-08b45d6a269e?w=800'\n    ],\n    features: [\n      'Pare-brise d\\'origine Renault',\n      'Compatible capteur de pluie',\n      'Pr√©-√©quip√© cam√©ra avant',\n      'Vitrage feuillet√© s√©curit',\n      'Installation possible',\n      'Garantie constructeur 2 ans'\n    ],\n\n    isPremium: false,\n    views: 45,\n    favorites: 3,\n    status: 'approved',\n    createdAt: new Date('2025-01-24T10:30:00'),\n    updatedAt: new Date('2025-01-24T10:30:00')\n  },\n  {\n    id: '45',\n    userId: '5',\n    user: mockUsers[4], // David Rousseau - Pi√®ces Auto Rousseau\n    title: '[Demo] Kit + module airbag d\\'un Renault Megane',\n    description: 'Kit airbag complet avec module √©lectronique pour Renault M√©gane. Syst√®me d\\'origine test√© et garanti fonctionnel. D√©pose soign√©e.',\n    category: 'piece-voiture',\n    brand: 'Renault',\n    model: 'Kit airbag M√©gane',\n    year: 2019,\n    condition: 'used',\n    price: 500,\n    location: 'Toulouse 31200',\n    images: [\n      'https://cdn.proxyparts.com/parts/100109/5846642/large/8006aaf1-6c17-485d-9b86-8a5baafa45d8.jpg',\n      'https://cdn.proxyparts.com/parts/100109/5846642/large/49ad8fb3-f647-45c0-815d-471281456591.jpg',\n      'https://cdn.proxyparts.com/parts/100109/5846642/large/9710e3bd-40ea-4df5-98c1-ec965f8af633.jpg'\n    ],\n    features: [\n      'Kit airbag complet',\n      'Module √©lectronique inclus',\n      'Syst√®me d\\'origine Renault',\n      'Test√© avant d√©pose',\n      'Compatible M√©gane toutes phases',\n      'Installation professionnelle recommand√©e',\n      'Garantie fonctionnement 6 mois'\n    ],\n\n    isPremium: false,\n    views: 67,\n    favorites: 5,\n    status: 'approved',\n    createdAt: new Date('2025-01-24T14:15:00'),\n    updatedAt: new Date('2025-01-24T14:15:00')\n  },\n];\n\nexport const premiumOptions: PremiumOption[] = [\n  {\n    id: '1',\n    name: 'Remont√©e quotidienne',\n    price: 2,\n    duration: 1,\n    features: ['Remont√©e automatique en t√™te de liste', 'Badge \"Urgent\"'],\n  },\n  {\n    id: '2',\n    name: 'Mise en avant hebdomadaire',\n    price: 5,\n    duration: 7,\n    features: ['Mise en avant pendant 7 jours', 'Badge \"Premium\"', 'Statistiques d√©taill√©es'],\n  },\n  {\n    id: '3',\n    name: 'Pack Pro mensuel',\n    price: 19.99,\n    duration: 30,\n    features: ['10 annonces mises en avant', 'Statistiques avanc√©es', 'Support prioritaire'],\n  },\n];\n\nexport const brands = [\n  // Cette liste est maintenant remplac√©e par des listes sp√©cifiques par type de v√©hicule\n];\n\n// Marques par type de v√©hicule\nexport const brandsByVehicleType = {\n  // Voitures\n  voiture: [\n    'Abarth', 'AC', 'Alfa Romeo', 'Alpina', 'Alpine', 'Aston Martin', 'Audi', 'Austin', 'Austin-Healey',\n    'Baic', 'Bentley', 'BMW', 'Borgward', 'Buick', 'BYD', 'Cadillac', 'Chevrolet', 'Chrysler', 'Citro√´n',\n    'Cupra', 'Dacia', 'DFSK', 'Dodge', 'Donkervoort', 'DS Automobiles', 'Ferrari', 'Fiat', 'Ford',\n    'Forthing', 'Foton', 'GMC', 'Glas', 'Honda', 'Hummer', 'Hyundai', 'Ineos', 'Infiniti', 'Isuzu',\n    'JAC', 'Jaecoo', 'Jaguar', 'Jeep', 'Kia', 'KTM', 'Lada', 'Lamborghini', 'Lancia', 'Land Rover',\n    'Lexus', 'Ligier', 'Livan', 'London Taxi', 'Lotus', 'MAN', 'Maserati', 'Maxus', 'Maybach', 'Mazda',\n    'McLaren', 'Mercedes-Benz', 'MG', 'Mini', 'Mitsubishi', 'Morgan', 'Nissan', 'Oldsmobile', 'Opel',\n    'Packard', 'Peugeot', 'Plymouth', 'Polaris', 'Polestar', 'Pontiac', 'Porsche', 'Renault', 'Rolls-Royce',\n    'Rover', 'Saab', 'Seat', 'Skoda', 'Smart', 'SsangYong', 'Subaru', 'Suzuki', 'SWM', 'Tesla', 'Toyota',\n    'Triumph', 'Volkswagen', 'Volvo', 'Westfield', 'Wiesmann', 'Xpeng', 'Zastava', 'Autres voitures'\n  ],\n\n  // Utilitaires\n  utilitaire: [\n    'Citro√´n', 'Fiat', 'Ford', 'Iveco', 'MAN', 'Maxus', 'Mercedes-Benz', 'Nissan', 'Opel', 'Peugeot',\n    'Renault', 'Toyota', 'Volkswagen', 'Autres utilitaires'\n  ],\n\n  // Caravanes \n  caravane: [\n    'Adria', 'B√ºrstner', 'Caravelair', 'Chausson', 'Dethleffs', 'Eriba', 'Fendt', 'Hobby', 'Hymer',\n    'Knaus', 'LMC', 'Rapido', 'Sterckeman', 'Tabbert', 'Trigano', 'Weinsberg', 'Wilk', 'Autres caravanes'\n  ],\n\n  // Remorques\n  remorque: [\n    'Anssems', 'B√∂ckmann', 'Brenderup', 'Hapert', 'Humbaur', 'Lider', 'Martz', 'Norauto', 'Saris',\n    'Trigano', 'Unsinn', 'Autres remorques'\n  ],\n\n  // Motos\n  moto: [\n    'Aprilia', 'Benelli', 'Beta', 'BMW', 'Brixton', 'CFMOTO', 'Daelim', 'Derbi', 'Ducati', 'Energica',\n    'Fantic', 'GasGas', 'Harley-Davidson', 'Honda', 'Husaberg', 'Husqvarna', 'Indian', 'Kawasaki',\n    'Keeway', 'KTM', 'Kymco', 'Mash', 'MBK', 'Moto Guzzi', 'MV Agusta', 'Norton', 'Orcal', 'Peugeot',\n    'Piaggio', 'Quadro', 'Rieju', 'Royal Enfield', 'Sherco', 'Suzuki', 'SWM', 'Sym', 'TGB', 'Triumph',\n    'Vespa', 'Victory', 'Yamaha', 'Zontes', 'Z√ºndapp', 'Autres motos'\n  ],\n\n  // Scooters\n  scooter: [\n    'Aprilia', 'Baotian', 'BMW', 'Derbi', 'Gilera', 'Honda', 'Keeway', 'Kymco', 'MBK', 'Peugeot',\n    'Piaggio', 'SYM', 'Vespa', 'Yamaha', 'Zontes', 'Autre scooter'\n  ],\n\n  // Quads\n  quad: [\n    'Aeon', 'Access Motor', 'Arctic Cat', 'Can-Am', 'CFMOTO', 'Goes', 'Honda', 'Hytrack', 'Kawasaki',\n    'Kymco', 'Linhai', 'Polaris', 'Suzuki', 'TGB', 'Yamaha', 'Autres quads'\n  ],\n\n  // Jetskis\n  jetski: [\n    'Bombardier', 'Kawasaki', 'Sea-Doo', 'Yamaha', 'Autres jetski'\n  ],\n\n  // Bateaux\n  bateau: [\n    'Antares', 'Bayliner', 'B√©n√©teau', 'Bombard', 'Cap Camarat', 'Flyer', 'Jeanneau', 'Ocqueteau',\n    'Pacific Craft', 'Quicksilver', 'Ranieri', 'Sea Ray', 'Selva', 'White Shark', 'Zodiac', 'Autres bateaux'\n  ],\n\n  // A√©riens\n  aerien: [\n    'Advance', 'Airborne', 'BGD', 'Dudek', 'Gin', 'Nova', 'Ozone', 'Skywalk', 'Swing', 'UP', 'Autres a√©riens'\n  ],\n\n  // Services (pas de marques sp√©cifiques)\n  reparation: [],\n  remorquage: [],\n  entretien: [],\n  'autre-service': [],\n\n  // Pi√®ces d√©tach√©es (utilise toutes les marques)\n  'piece-moto': [\n    'Aprilia', 'Benelli', 'Beta', 'BMW', 'Brixton', 'CFMOTO', 'Daelim', 'Derbi', 'Ducati', 'Energica',\n    'Fantic', 'GasGas', 'Harley-Davidson', 'Honda', 'Husaberg', 'Husqvarna', 'Indian', 'Kawasaki',\n    'Keeway', 'KTM', 'Kymco', 'Mash', 'MBK', 'Moto Guzzi', 'MV Agusta', 'Norton', 'Orcal', 'Peugeot',\n    'Piaggio', 'Quadro', 'Rieju', 'Royal Enfield', 'Sherco', 'Suzuki', 'SWM', 'Sym', 'TGB', 'Triumph',\n    'Vespa', 'Victory', 'Yamaha', 'Zontes', 'Z√ºndapp', 'Autres motos'\n  ],\n  'piece-voiture': [\n    'Abarth', 'AC', 'Alfa Romeo', 'Alpina', 'Alpine', 'Aston Martin', 'Audi', 'Austin', 'Austin-Healey',\n    'Baic', 'Bentley', 'BMW', 'Borgward', 'Buick', 'BYD', 'Cadillac', 'Chevrolet', 'Chrysler', 'Citro√´n',\n    'Cupra', 'Dacia', 'DFSK', 'Dodge', 'Donkervoort', 'DS Automobiles', 'Ferrari', 'Fiat', 'Ford',\n    'Forthing', 'Foton', 'GMC', 'Glas', 'Honda', 'Hummer', 'Hyundai', 'Ineos', 'Infiniti', 'Isuzu',\n    'JAC', 'Jaecoo', 'Jaguar', 'Jeep', 'Kia', 'KTM', 'Lada', 'Lamborghini', 'Lancia', 'Land Rover',\n    'Lexus', 'Ligier', 'Livan', 'London Taxi', 'Lotus', 'MAN', 'Maserati', 'Maxus', 'Maybach', 'Mazda',\n    'McLaren', 'Mercedes-Benz', 'MG', 'Mini', 'Mitsubishi', 'Morgan', 'Nissan', 'Oldsmobile', 'Opel',\n    'Packard', 'Peugeot', 'Plymouth', 'Polaris', 'Polestar', 'Pontiac', 'Porsche', 'Renault', 'Rolls-Royce',\n    'Rover', 'Saab', 'Seat', 'Skoda', 'Smart', 'SsangYong', 'Subaru', 'Suzuki', 'SWM', 'Tesla', 'Toyota',\n    'Triumph', 'Volkswagen', 'Volvo', 'Westfield', 'Wiesmann', 'Xpeng', 'Zastava', 'Autres voitures'\n  ],\n  'autre-piece': [\n    'Antivol', 'Bagagerie', 'Casques', 'Combinaisons', 'Gants', 'Huiles', 'Outils', 'Pneumatiques', 'Autres pi√®ces'\n  ]\n};\n\n// Fonction utilitaire pour obtenir les marques selon la sous-cat√©gorie\nexport const getBrandsBySubcategory = (subcategory: string): string[] => {\n  return brandsByVehicleType[subcategory as keyof typeof brandsByVehicleType] || [];\n};\nexport const fuelTypes = [\n  { value: 'gasoline', label: 'Essence' },\n  { value: 'diesel', label: 'Diesel' },\n  { value: 'electric', label: '√âlectrique' },\n  { value: 'hybrid', label: 'Hybride' },\n];\n\nexport const conditions = [\n  { value: 'used', label: 'Occasion' },\n  { value: 'damaged', label: 'Accident√©' },\n];\n\n// √âquipements pr√©d√©finis pour les v√©hicules\nexport const VEHICLE_EQUIPMENT = {\n  voiture: [\n    'Toit ouvrant / Toit panoramique',\n    'Climatisation',\n    'GPS',\n    'Si√®ges chauffants',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Jantes alliage',\n    'Feux LED / X√©non',\n    'Vitres √©lectriques',\n    'Airbags',\n    'Si√®ges √©lectriques',\n    'Attelage',\n    'R√©gulateur de vitesse',\n    'Bluetooth',\n    'Syst√®me audio premium',\n    'Cuir'\n  ],\n  moto: [\n    'ABS',\n    'Contr√¥le de traction',\n    'Modes de conduite',\n    '√âclairage LED',\n    'Quickshifter',\n    'Chauffage poign√©es',\n    'Pare-brise',\n    'Top case',\n    'Sacoches',\n    'Antivol',\n    'Compteur digital',\n    'USB'\n  ],\n  scooter: [\n    'ABS',\n    'Contr√¥le de traction',\n    'Modes de conduite',\n    '√âclairage LED',\n    'Chauffage poign√©es',\n    'Pare-brise',\n    'Top case',\n    'Coffre sous la selle',\n    'Antivol',\n    'Compteur digital',\n    'USB',\n    'Prise 12V'\n  ],\n  utilitaire: [\n    'Climatisation',\n    'GPS',\n    'Cam√©ra de recul',\n    'Radar de recul',\n    'Attelage',\n    'Cloison de s√©paration',\n    'Hayon arri√®re',\n    'Porte lat√©rale',\n    'Plancher bois',\n    '√âclairage LED cargo',\n    'Prise 12V',\n    'Radio Bluetooth'\n  ],\n  quad: [\n    'Direction assist√©e',\n    'Suspension ajustable',\n    'Treuil √©lectrique',\n    'Feux LED',\n    'Prise 12V',\n    'Porte-bagages',\n    'Protection inf√©rieure',\n    'Poign√©es chauffantes',\n    'Compteur digital'\n  ],\n  jetski: [\n    'Syst√®me de freinage',\n    'Mode √©conomique',\n    'Syst√®me audio',\n    'Compartiment √©tanche',\n    '√âchelle de remont√©e',\n    'Tapis antid√©rapant'\n  ],\n  bateau: [\n    'GPS/Sondeur',\n    'VHF',\n    'Pilote automatique',\n    'Guindeau √©lectrique',\n    'Bimini',\n    'Taud de soleil',\n    'Annexe',\n    'Moteur auxiliaire',\n    'R√©frig√©rateur',\n    'WC marin'\n  ],\n  aerien: [\n    'Parachute de secours',\n    'Variom√®tre',\n    'GPS',\n    'Radio',\n    'Sellette',\n    'Casque',\n    'Protection dorsale'\n  ]\n};\n\nexport const colors = [\n  '#ef4444', // red\n  '#f97316', // orange\n  '#eab308', // yellow\n  '#22c55e', // green\n  '#06b6d4', // cyan\n  '#3b82f6', // blue\n  '#8b5cf6', // violet\n  '#ec4899', // pink\n  '#64748b', // slate\n  '#6b7280', // gray\n];\n\n// Nombre de portes pour les v√©hicules\nexport const doorCounts = [\n  { value: 2, label: '2 portes' },\n  { value: 3, label: '3 portes' },\n  { value: 4, label: '4 portes' },\n  { value: 5, label: '5 portes' },\n];\n\n// Types de v√©hicules\nexport const vehicleTypes = [\n  { value: 'citadine', label: 'Citadine' },\n  { value: 'berline', label: 'Berline' },\n  { value: 'suv', label: 'SUV' },\n  { value: 'break', label: 'Break' },\n  { value: 'coupe', label: 'Coup√©' },\n  { value: 'cabriolet', label: 'Cabriolet' },\n  { value: 'monospace', label: 'Monospace' },\n  { value: 'pickup', label: 'Pick-up' },\n];\n\n// Types de transmission\nexport const transmissionTypes = [\n  { value: 'manual', label: 'Manuelle' },\n  { value: 'automatic', label: 'Automatique' },\n  { value: 'semi-automatic', label: 'Semi-automatique' },\n];\n\n// Couleurs de v√©hicules\nexport const vehicleColors = [\n  { value: 'blanc', label: 'Blanc' },\n  { value: 'noir', label: 'Noir' },\n  { value: 'gris', label: 'Gris' },\n  { value: 'argent', label: 'Argent' },\n  { value: 'rouge', label: 'Rouge' },\n  { value: 'bleu', label: 'Bleu' },\n  { value: 'vert', label: 'Vert' },\n  { value: 'jaune', label: 'Jaune' },\n  { value: 'orange', label: 'Orange' },\n  { value: 'violet', label: 'Violet' },\n  { value: 'marron', label: 'Marron' },\n  { value: 'beige', label: 'Beige' },\n];\n\n// Types de sellerie\nexport const upholsteryTypes = [\n  { value: 'tissu', label: 'Tissu' },\n  { value: 'cuir_partiel', label: 'Cuir partiel' },\n  { value: 'cuir', label: 'Cuir' },\n  { value: 'velours', label: 'Velours' },\n  { value: 'alcantara', label: 'Alcantara' },\n];\n\n// Classes d'√©mission\nexport const emissionClasses = [\n  { value: 'euro1', label: 'Euro 1' },\n  { value: 'euro2', label: 'Euro 2' },\n  { value: 'euro3', label: 'Euro 3' },\n  { value: 'euro4', label: 'Euro 4' },\n  { value: 'euro5', label: 'Euro 5' },\n  { value: 'euro6', label: 'Euro 6' },\n];\n\n// Types d'utilitaires\nexport const utilityTypes = [\n  { value: 'van', label: 'Fourgon' },\n  { value: 'truck', label: 'Camion' },\n  { value: 'pickup', label: 'Pick-up' },\n  { value: 'trailer', label: 'Remorque' },\n];\n\n// Types de caravanes\nexport const caravanTypes = [\n  { value: 'travel_trailer', label: 'Caravane de voyage' },\n  { value: 'motorhome', label: 'Camping-car' },\n  { value: 'popup', label: 'Caravane pliante' },\n  { value: 'fifth_wheel', label: 'Caravane √† sellette' },\n];\n\n// Types de remorques\nexport const trailerTypes = [\n  { value: 'utility', label: 'Utilitaire' },\n  { value: 'boat', label: 'Porte-bateau' },\n  { value: 'car', label: 'Porte-voiture' },\n  { value: 'cargo', label: 'Cargo ferm√©e' },\n];\n\n// Types de motos\nexport const motorcycleTypes = [\n  { value: 'sport', label: 'Sportive' },\n  { value: 'touring', label: 'Routi√®re' },\n  { value: 'urban', label: 'Urbaine' },\n  { value: 'trail', label: 'Trail' },\n  { value: 'custom', label: 'Custom' },\n  { value: 'roadster', label: 'Roadster' },\n  { value: 'enduro', label: 'Enduro' },\n  { value: 'cross', label: 'Cross' },\n];\n\n// Types de quads\nexport const quadTypes = [\n  { value: 'sport', label: 'Sport' },\n  { value: 'utility', label: 'Utilitaire' },\n  { value: 'touring', label: 'Tourisme' },\n  { value: 'youth', label: 'Jeune' },\n];\n\n// Types de jetskis\nexport const jetskiTypes = [\n  { value: 'recreation', label: 'Loisir' },\n  { value: 'performance', label: 'Performance' },\n  { value: 'luxury', label: 'Luxe' },\n  { value: 'touring', label: 'Tourisme' },\n];\n\n// Types de bateaux\nexport const boatTypes = [\n  { value: 'motor', label: 'Bateau √† moteur' },\n  { value: 'sailing', label: 'Voilier' },\n  { value: 'fishing', label: 'Bateau de p√™che' },\n  { value: 'inflatable', label: 'Pneumatique' },\n  { value: 'cabin', label: 'Cabine' },\n];\n\n// Types de services\nexport const serviceTypes = [\n  { value: 'repair', label: 'R√©paration' },\n  { value: 'maintenance', label: 'Entretien' },\n  { value: 'towing', label: 'Remorquage' },\n  { value: 'inspection', label: 'Contr√¥le technique' },\n  { value: 'bodywork', label: 'Carrosserie' },\n  { value: 'painting', label: 'Peinture' },\n  { value: 'tuning', label: 'Pr√©paration' },\n];\n\n// Types de v√©hicules par sous-cat√©gorie\nexport const VEHICLE_TYPES = {\n  voiture: ['Citadine', 'Berline', 'SUV', 'Break', 'Coup√©', 'Cabriolet', 'Monospace', 'Pick-up', 'Autre voiture'],\n  utilitaire: ['Fourgon', 'Camionnette', 'Camion', 'Pick-up', 'Autre utilitaire'],\n  caravane: ['Caravane de voyage', 'Camping-car', 'Caravane pliante', 'Caravane √† sellette', 'Autre caravane'],\n  remorque: ['Utilitaire', 'Porte-bateau', 'Porte-voiture', 'Cargo ferm√©e', 'Autre remorque'],\n  moto: ['Sportive', 'Routi√®re', 'Urbaine', 'Trail', 'Custom', 'Roadster', 'Cross', 'Enduro', 'Autre moto'],\n  scooter: ['50cm¬≥', '125cm¬≥', '300cm¬≥', 'Maxi-scooter', '√âlectrique', 'Autre scooter'],\n  quad: ['Sport', 'Utilitaire', 'Loisir', 'Enfant', 'Autre quad'],\n  jetski: ['Loisir', 'Performance', 'Luxe', 'Tourisme', 'Autre jetski'],\n  bateau: ['Bateau √† moteur', 'Voilier', 'Bateau de p√™che', 'Pneumatique', 'Cabine', 'Autre bateau'],\n  aerien: ['ULM', 'Parapente', 'Deltaplane', 'H√©licopt√®re', 'Avion l√©ger', 'Autre a√©ronef']\n};\n\n// Mapping des cat√©gories principales et sous-cat√©gories selon votre structure\nexport const CATEGORY_SUBCATEGORIES_MAP = {\n  'voiture-utilitaire': ['voiture', 'utilitaire', 'caravane', 'remorque'],\n  'moto-scooter-quad': ['moto', 'scooter', 'quad'],\n  'nautisme-sport-aerien': ['bateau', 'jetski', 'aerien'],\n  'services': ['reparation', 'remorquage', 'entretien', 'autre-service'],\n  'pieces': ['piece-voiture', 'piece-moto', 'autre-piece']\n};\n\nexport const categories = [\n  { value: 'voiture-utilitaire', label: 'Voitures - Utilitaires', icon: 'üöó' },\n  { value: 'moto-scooter-quad', label: 'Motos, Scooters, Quads', icon: 'üèçÔ∏è' },\n  { value: 'nautisme-sport-aerien', label: 'Nautisme, Sport et Plein air', icon: 'üö§' },\n  { value: 'services', label: 'Services', icon: 'üõ†Ô∏è' },\n  { value: 'pieces', label: 'Pi√®ces d√©tach√©es', icon: 'üîß' },\n];","size_bytes":59405},"components/client-components/auth/AuthModal.tsx":{"content":"import { useState, useEffect } from 'react'\nimport { signIn, signUp, signInWithOAuth } from '@/lib/supabase'\nimport { Eye, EyeOff, Mail, Lock, User } from 'lucide-react'\n// Import du service d'authentification centralis√© (√† d√©commenter quand il sera impl√©ment√©)\n// import { useAuthService } from '../../../client/src/services/AuthService'\n\ninterface AuthModalProps {\n  isOpen: boolean\n  onClose: () => void\n  defaultTab?: 'signin' | 'signup'\n}\n\nexport function AuthModal({ isOpen, onClose, defaultTab = 'signin' }: AuthModalProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [activeTab, setActiveTab] = useState(defaultTab)\n  \n  // Toast notification state\n  const [notification, setNotification] = useState<{\n    title: string\n    description: string\n    variant: 'default' | 'destructive'\n  } | null>(null)\n\n  const showToast = (title: string, description: string, variant: 'default' | 'destructive' = 'default') => {\n    console.log(`${variant === 'destructive' ? '‚ùå' : '‚úÖ'} ${title}: ${description}`)\n    setNotification({ title, description, variant })\n    // Auto hide notification after 4 seconds\n    setTimeout(() => {\n      setNotification(null)\n    }, 4000)\n  }\n\n  const [signinForm, setSigninForm] = useState({\n    email: '',\n    password: ''\n  })\n\n  const [signupForm, setSignupForm] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  })\n\n  const handleSignIn = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    try {\n      const { data, error } = await signIn(signinForm.email, signinForm.password)\n      \n      if (error) {\n        showToast(\"Erreur de connexion\", error.message, \"destructive\")\n        setIsLoading(false)\n        return\n      }\n\n      if (data.user) {\n        // Utilisation du service d'authentification centralis√© (√† d√©commenter quand il sera impl√©ment√©)\n        // const authService = useAuthService();\n        // authService.handleAuthSuccess();\n        \n        showToast(\"Connexion r√©ussie\", \"Vous √™tes maintenant connect√©\")\n        // Attendre un peu avant de fermer pour laisser le temps de voir le message\n        setTimeout(() => {\n          onClose()\n        }, 1000)\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Une erreur est survenue lors de la connexion\", \"destructive\")\n      setIsLoading(false)\n    }\n  }\n\n  const handleSignUp = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (signupForm.password !== signupForm.confirmPassword) {\n      showToast(\"Erreur\", \"Les mots de passe ne correspondent pas\", \"destructive\")\n      return\n    }\n\n    if (signupForm.password.length < 6) {\n      showToast(\"Erreur\", \"Le mot de passe doit contenir au moins 6 caract√®res\", \"destructive\")\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      const { data, error } = await signUp(\n        signupForm.email, \n        signupForm.password,\n        { name: signupForm.name }\n      )\n      \n      if (error) {\n        showToast(\"Erreur d'inscription\", error.message, \"destructive\")\n        setIsLoading(false)\n        return\n      }\n\n      if (data.user) {\n        showToast(\"Inscription r√©ussie\", \"V√©rifiez votre email pour confirmer votre compte\")\n        // Attendre un peu avant de fermer pour laisser le temps de voir le message\n        setTimeout(() => {\n          onClose()\n        }, 1500)\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Une erreur est survenue lors de l'inscription\", \"destructive\")\n      setIsLoading(false)\n    }\n  }\n\n  const handleOAuthSignIn = async (provider: 'google' | 'github') => {\n    setIsLoading(true)\n    try {\n      // Utiliser le service d'auth centralis√© quand il sera impl√©ment√©\n      // const authService = useAuthService();\n      // await authService.signInWithOAuth(provider);\n\n      const { error } = await signInWithOAuth(provider)\n      if (error) {\n        showToast(\"Erreur\", error.message, \"destructive\")\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Une erreur est survenue\", \"destructive\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div \n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto relative\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Header */}\n        <div className=\"mb-6\">\n          <h2 className=\"text-xl font-semibold mb-2\">Acc√©dez √† votre compte</h2>\n          <p className=\"text-gray-600 text-sm\">\n            Connectez-vous pour g√©rer vos annonces et acc√©der √† toutes les fonctionnalit√©s\n          </p>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"mb-6\">\n          <div className=\"flex border-b\">\n            <button\n              onClick={() => setActiveTab('signin')}\n              className={`flex-1 py-2 px-4 text-sm font-medium border-b-2 transition-colors ${\n                activeTab === 'signin'\n                  ? 'border-primary-bolt-500 text-primary-bolt-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Se connecter\n            </button>\n            <button\n              onClick={() => setActiveTab('signup')}\n              className={`flex-1 py-2 px-4 text-sm font-medium border-b-2 transition-colors ${\n                activeTab === 'signup'\n                  ? 'border-primary-bolt-500 text-primary-bolt-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              S'inscrire\n            </button>\n          </div>\n        </div>\n\n        {/* Sign In Tab */}\n        {activeTab === 'signin' && (\n          <div className=\"space-y-4\">\n            <form onSubmit={handleSignIn} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signin-email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signin-email\"\n                    type=\"email\"\n                    placeholder=\"votre@email.com\"\n                    value={signinForm.email}\n                    onChange={(e) => setSigninForm(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signin-password\" className=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signin-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                    value={signinForm.password}\n                    onChange={(e) => setSigninForm(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"w-full pl-10 pr-10 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </button>\n                </div>\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"w-full bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n                disabled={isLoading}\n              >\n                {isLoading ? \"Connexion...\" : \"Se connecter\"}\n              </button>\n            </form>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <span className=\"w-full border-t\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-background px-2 text-muted-foreground\">ou continuer avec</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <button\n                onClick={() => handleOAuthSignIn('google')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                Google\n              </button>\n              <button\n                onClick={() => handleOAuthSignIn('github')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                GitHub\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Sign Up Tab */}\n        {activeTab === 'signup' && (\n          <div className=\"space-y-4\">\n            <form onSubmit={handleSignUp} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-name\" className=\"block text-sm font-medium text-gray-700\">Nom complet</label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-name\"\n                    type=\"text\"\n                    placeholder=\"Votre nom\"\n                    value={signupForm.name}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, name: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-email\"\n                    type=\"email\"\n                    placeholder=\"votre@email.com\"\n                    value={signupForm.email}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-password\" className=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                    value={signupForm.password}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"w-full pl-10 pr-10 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-confirm-password\" className=\"block text-sm font-medium text-gray-700\">Confirmer le mot de passe</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-confirm-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                    value={signupForm.confirmPassword}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"w-full bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n                disabled={isLoading}\n              >\n                {isLoading ? \"Inscription...\" : \"S'inscrire\"}\n              </button>\n            </form>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <span className=\"w-full border-t\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-background px-2 text-muted-foreground\">ou continuer avec</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <button\n                onClick={() => handleOAuthSignIn('google')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                Google\n              </button>\n              <button\n                onClick={() => handleOAuthSignIn('github')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                GitHub\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Close Button */}\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600\"\n        >\n          ‚úï\n        </button>\n\n        {/* Notification Toast */}\n        {notification && (\n          <div className={`fixed top-4 right-4 p-4 rounded-lg shadow-lg border max-w-sm z-[60] ${\n            notification.variant === 'destructive' \n              ? 'bg-red-50 border-red-200 text-red-800' \n              : 'bg-green-50 border-green-200 text-green-800'\n          }`}>\n            <div className=\"flex justify-between items-start\">\n              <div>\n                <h4 className=\"font-semibold text-sm\">{notification.title}</h4>\n                <p className=\"text-sm mt-1\">{notification.description}</p>\n              </div>\n              <button\n                onClick={() => setNotification(null)}\n                className=\"ml-4 text-gray-400 hover:text-gray-600\"\n              >\n                ‚úï\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}","size_bytes":16092},"components/client-components/auth/UserMenu.tsx":{"content":"import { useState } from 'react'\nimport { User, LogOut, Settings, Heart, Plus } from 'lucide-react'\nimport { useAuth } from '@/hooks/useAuth'\nimport { signOut } from '@/lib/supabase'\n\ninterface UserMenuProps {\n  onNavigate?: (path: string) => void\n  onDashboardNavigate?: (tab: string) => void\n}\n\nexport function UserMenu({ onNavigate, onDashboardNavigate }: UserMenuProps) {\n  const { user, dbUser } = useAuth()\n  const [isSigningOut, setIsSigningOut] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n\n  const handleSignOut = async () => {\n    setIsSigningOut(true)\n    try {\n      const { error } = await signOut()\n      if (error) {\n        console.log(\"‚ùå Erreur:\", error.message)\n      } else {\n        console.log(\"‚úÖ D√©connexion r√©ussie: √Ä bient√¥t !\")\n      }\n    } catch (error) {\n      console.log(\"‚ùå Erreur: Une erreur est survenue lors de la d√©connexion\")\n    } finally {\n      setIsSigningOut(false)\n    }\n  }\n\n  if (!user) return null\n\n  const displayName = dbUser?.name || user?.user_metadata?.name || 'Utilisateur'\n  const userInitial = displayName.charAt(0)?.toUpperCase() || 'U'\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors\"\n      >\n        <div className=\"w-8 h-8 bg-primary-bolt-100 text-primary-bolt-700 rounded-full flex items-center justify-center\">\n          {userInitial}\n        </div>\n        <span className=\"text-xs mt-1\">{displayName}</span>\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute right-0 top-full mt-2 w-56 bg-white rounded-xl shadow-lg border border-gray-200 z-50\">\n          <div className=\"p-3 border-b border-gray-100\">\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-sm font-medium leading-none\">\n                {displayName}\n              </p>\n              {dbUser && (\n                <p className=\"text-xs leading-none text-blue-600 font-medium\">\n                  {dbUser.type === 'professional' ? 'Professionnel' : 'Particulier'}\n                </p>\n              )}\n              <p className=\"text-xs leading-none text-gray-500\">\n                {user.email}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"py-2\">\n            <button\n              onClick={() => {\n                onDashboardNavigate?.('profile')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <User className=\"mr-2 h-4 w-4\" />\n              <span>Mon profil</span>\n            </button>\n            \n            <button\n              onClick={() => {\n                onDashboardNavigate?.('listings')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <Settings className=\"mr-2 h-4 w-4\" />\n              <span>Mes annonces</span>\n            </button>\n            \n            <button\n              onClick={() => {\n                onDashboardNavigate?.('favorites')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <Heart className=\"mr-2 h-4 w-4\" />\n              <span>Mes favoris</span>\n            </button>\n            \n            <div className=\"border-t border-gray-100 my-1\"></div>\n            \n            <button\n              onClick={() => {\n                onNavigate?.('create-listing')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <Plus className=\"mr-2 h-4 w-4\" />\n              <span>Cr√©er une annonce</span>\n            </button>\n            \n            <div className=\"border-t border-gray-100 my-1\"></div>\n            \n            <button\n              onClick={() => {\n                handleSignOut()\n                setIsOpen(false)\n              }}\n              disabled={isSigningOut}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-red-600 hover:bg-red-50 disabled:opacity-50\"\n            >\n              <LogOut className=\"mr-2 h-4 w-4\" />\n              <span>{isSigningOut ? 'D√©connexion...' : 'Se d√©connecter'}</span>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","size_bytes":4586},"client/src/components/auth/AuthCallback.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\n\n/**\n * Composant pour g√©rer les redirections apr√®s authentification OAuth ou Magic Link\n * Ce composant devrait √™tre plac√© √† l'URL /auth/callback\n */\nexport default function AuthCallback() {\n  const [message, setMessage] = useState('Redirection en cours...');\n\n  useEffect(() => {\n    // V√©rification du hash URL pour l'authentification\n    const handleAuthRedirect = async () => {\n      try {\n        // R√©cup√®re les param√®tres de l'URL apr√®s une authentification OAuth\n        const { error } = await supabase.auth.getSession();\n\n        if (error) {\n          console.error('Erreur de redirection auth:', error);\n          setMessage('Une erreur est survenue lors de la connexion.');\n          return;\n        }\n\n        // Si l'authentification a r√©ussi, redirigez vers la page d'accueil ou une autre page\n        const returnUrl = localStorage.getItem('authRedirectUrl') || '/';\n        localStorage.removeItem('authRedirectUrl'); // Nettoyer apr√®s utilisation\n        \n        // Attendre un peu avant de rediriger\n        setTimeout(() => {\n          window.location.href = returnUrl;\n        }, 1000);\n        \n      } catch (error) {\n        console.error('Erreur lors du traitement de la redirection:', error);\n        setMessage(\"Une erreur est survenue. Veuillez r√©essayer.\");\n      }\n    };\n\n    handleAuthRedirect();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"p-6 max-w-sm w-full bg-white shadow-md rounded-lg\">\n        <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-4\">\n          {message}\n        </h2>\n        <div className=\"flex justify-center\">\n          <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-primary-bolt-500\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1914},"client/src/components/auth/AuthModal.tsx":{"content":"import { useState, useEffect } from 'react'\nimport { signIn, signUp, signInWithOAuth } from '@/lib/supabase'\nimport { Eye, EyeOff, Mail, Lock, User } from 'lucide-react'\n// Import du service d'authentification centralis√© (√† d√©commenter quand il sera compl√®tement impl√©ment√©)\n// import { useAuthService } from '@/services/AuthService'\n\ninterface AuthModalProps {\n  isOpen: boolean\n  onClose: () => void\n  defaultTab?: 'signin' | 'signup'\n}\n\nexport function AuthModal({ isOpen, onClose, defaultTab = 'signin' }: AuthModalProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [activeTab, setActiveTab] = useState(defaultTab)\n  \n  // Toast notification state\n  const [notification, setNotification] = useState<{\n    title: string\n    description: string\n    variant: 'default' | 'destructive'\n  } | null>(null)\n\n  const showToast = (title: string, description: string, variant: 'default' | 'destructive' = 'default') => {\n    console.log(`${variant === 'destructive' ? '‚ùå' : '‚úÖ'} ${title}: ${description}`)\n    setNotification({ title, description, variant })\n    // Auto hide notification after 4 seconds\n    setTimeout(() => {\n      setNotification(null)\n    }, 4000)\n  }\n\n  const [signinForm, setSigninForm] = useState({\n    email: '',\n    password: ''\n  })\n\n  const [signupForm, setSignupForm] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  })\n\n  const handleSignIn = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    try {\n      // Utiliser le service d'auth centralis√© quand il sera impl√©ment√©\n      // const authService = useAuthService();\n      // await authService.signIn(signinForm.email, signinForm.password);\n\n      const { data, error } = await signIn(signinForm.email, signinForm.password)\n      \n      if (error) {\n        showToast(\"Erreur de connexion\", error.message, \"destructive\")\n        setIsLoading(false)\n        return\n      }\n\n      if (data.user) {\n        showToast(\"Connexion r√©ussie\", \"Vous √™tes maintenant connect√©\")\n        // Attendre un peu avant de fermer pour laisser le temps de voir le message\n        setTimeout(() => {\n          onClose()\n        }, 1000)\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Une erreur est survenue lors de la connexion\", \"destructive\")\n      setIsLoading(false)\n    }\n  }\n\n  const handleSignUp = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (signupForm.password !== signupForm.confirmPassword) {\n      showToast(\"Erreur\", \"Les mots de passe ne correspondent pas\", \"destructive\")\n      return\n    }\n\n    if (signupForm.password.length < 6) {\n      showToast(\"Erreur\", \"Le mot de passe doit contenir au moins 6 caract√®res\", \"destructive\")\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      const { data, error } = await signUp(\n        signupForm.email, \n        signupForm.password,\n        { name: signupForm.name }\n      )\n      \n      if (error) {\n        showToast(\"Erreur d'inscription\", error.message, \"destructive\")\n        setIsLoading(false)\n        return\n      }\n\n      if (data.user) {\n        showToast(\"Inscription r√©ussie\", \"V√©rifiez votre email pour confirmer votre compte\")\n        // Attendre un peu avant de fermer pour laisser le temps de voir le message\n        setTimeout(() => {\n          onClose()\n        }, 1500)\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Une erreur est survenue lors de l'inscription\", \"destructive\")\n      setIsLoading(false)\n    }\n  }\n\n  const handleOAuthSignIn = async (provider: 'google' | 'github') => {\n    setIsLoading(true)\n    try {\n      // Utiliser le service d'auth centralis√© quand il sera impl√©ment√©\n      // const authService = useAuthService();\n      // await authService.signInWithOAuth(provider);\n\n      const { error } = await signInWithOAuth(provider)\n      if (error) {\n        showToast(\"Erreur\", error.message, \"destructive\")\n      }\n    } catch (error: any) {\n      showToast(\"Erreur\", \"Une erreur est survenue\", \"destructive\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  return (\n    <div \n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto relative\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Header */}\n        <div className=\"mb-6\">\n          <h2 className=\"text-xl font-semibold mb-2\">Acc√©dez √† votre compte</h2>\n          <p className=\"text-gray-600 text-sm\">\n            Connectez-vous pour g√©rer vos annonces et acc√©der √† toutes les fonctionnalit√©s\n          </p>\n          \n        </div>\n\n        {/* Tabs */}\n        <div className=\"mb-6\">\n          <div className=\"flex border-b\">\n            <button\n              onClick={() => setActiveTab('signin')}\n              className={`flex-1 py-2 px-4 text-sm font-medium border-b-2 transition-colors ${\n                activeTab === 'signin'\n                  ? 'border-primary-bolt-500 text-primary-bolt-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              Se connecter\n            </button>\n            <button\n              onClick={() => setActiveTab('signup')}\n              className={`flex-1 py-2 px-4 text-sm font-medium border-b-2 transition-colors ${\n                activeTab === 'signup'\n                  ? 'border-primary-bolt-500 text-primary-bolt-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              S'inscrire\n            </button>\n          </div>\n        </div>\n\n        {/* Sign In Tab */}\n        {activeTab === 'signin' && (\n          <div className=\"space-y-4\">\n            <form onSubmit={handleSignIn} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signin-email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signin-email\"\n                    type=\"email\"\n                    placeholder=\"votre@email.com\"\n                    value={signinForm.email}\n                    onChange={(e) => setSigninForm(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signin-password\" className=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signin-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                    value={signinForm.password}\n                    onChange={(e) => setSigninForm(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"w-full pl-10 pr-10 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </button>\n                </div>\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"w-full bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n                disabled={isLoading}\n              >\n                {isLoading ? \"Connexion...\" : \"Se connecter\"}\n              </button>\n            </form>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <span className=\"w-full border-t\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-background px-2 text-muted-foreground\">ou continuer avec</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <button\n                onClick={() => handleOAuthSignIn('google')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                Google\n              </button>\n              <button\n                onClick={() => handleOAuthSignIn('github')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                GitHub\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Sign Up Tab */}\n        {activeTab === 'signup' && (\n          <div className=\"space-y-4\">\n            <form onSubmit={handleSignUp} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-name\" className=\"block text-sm font-medium text-gray-700\">Nom complet</label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-name\"\n                    type=\"text\"\n                    placeholder=\"Votre nom\"\n                    value={signupForm.name}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, name: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-email\"\n                    type=\"email\"\n                    placeholder=\"votre@email.com\"\n                    value={signupForm.email}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, email: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-password\" className=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                    value={signupForm.password}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"w-full pl-10 pr-10 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label htmlFor=\"signup-confirm-password\" className=\"block text-sm font-medium text-gray-700\">Confirmer le mot de passe</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                  <input\n                    id=\"signup-confirm-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                    value={signupForm.confirmPassword}\n                    onChange={(e) => setSignupForm(prev => ({ ...prev, confirmPassword: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-bolt-500 focus:border-primary-bolt-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"w-full bg-primary-bolt-500 hover:bg-primary-bolt-600 text-white py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n                disabled={isLoading}\n              >\n                {isLoading ? \"Inscription...\" : \"S'inscrire\"}\n              </button>\n            </form>\n\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <span className=\"w-full border-t\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-background px-2 text-muted-foreground\">ou continuer avec</span>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <button\n                onClick={() => handleOAuthSignIn('google')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                Google\n              </button>\n              <button\n                onClick={() => handleOAuthSignIn('github')}\n                disabled={isLoading}\n                className=\"w-full border border-gray-300 hover:bg-gray-50 py-2 px-4 rounded-md transition-colors disabled:opacity-50\"\n              >\n                GitHub\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Close Button */}\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600\"\n        >\n          ‚úï\n        </button>\n\n        {/* Notification Toast */}\n        {notification && (\n          <div className={`fixed top-4 right-4 p-4 rounded-lg shadow-lg border max-w-sm z-[60] ${\n            notification.variant === 'destructive' \n              ? 'bg-red-50 border-red-200 text-red-800' \n              : 'bg-green-50 border-green-200 text-green-800'\n          }`}>\n            <div className=\"flex justify-between items-start\">\n              <div>\n                <h4 className=\"font-semibold text-sm\">{notification.title}</h4>\n                <p className=\"text-sm mt-1\">{notification.description}</p>\n              </div>\n              <button\n                onClick={() => setNotification(null)}\n                className=\"ml-4 text-gray-400 hover:text-gray-600\"\n              >\n                ‚úï\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}","size_bytes":16084},"client/src/components/auth/UserMenu.tsx":{"content":"import { useState } from 'react'\nimport { User, LogOut, Settings, Heart, Plus, Shield } from 'lucide-react'\nimport { useAuth } from '@/hooks/useAuth'\nimport { signOut } from '@/lib/supabase'\n\ninterface UserMenuProps {\n  onNavigate?: (path: string) => void\n  onDashboardNavigate?: (tab: string) => void\n}\n\nexport function UserMenu({ onNavigate, onDashboardNavigate }: UserMenuProps) {\n  const { user, dbUser } = useAuth()\n  const [isSigningOut, setIsSigningOut] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n\n  const handleSignOut = async () => {\n    setIsSigningOut(true)\n    try {\n      const { error } = await signOut()\n      if (error) {\n        console.log(\"‚ùå Erreur:\", error.message)\n      } else {\n        console.log(\"‚úÖ D√©connexion r√©ussie: √Ä bient√¥t !\")\n      }\n    } catch (error) {\n      console.log(\"‚ùå Erreur: Une erreur est survenue lors de la d√©connexion\")\n    } finally {\n      setIsSigningOut(false)\n    }\n  }\n\n  if (!user) return null\n\n  const displayName = dbUser?.name || user?.user_metadata?.name || 'Utilisateur'\n  const userInitial = displayName.charAt(0)?.toUpperCase() || 'U'\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"flex flex-col items-center text-gray-600 hover:text-primary-bolt-500 transition-colors\"\n      >\n        <div className=\"w-8 h-8 bg-primary-bolt-100 text-primary-bolt-700 rounded-full flex items-center justify-center\">\n          {userInitial}\n        </div>\n        <span className=\"text-xs mt-1\">{displayName}</span>\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute right-0 top-full mt-2 w-56 bg-white rounded-xl shadow-lg border border-gray-200 z-50\">\n          <div className=\"p-3 border-b border-gray-100\">\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-sm font-medium leading-none\">\n                {displayName}\n              </p>\n              {dbUser && (\n                <p className=\"text-xs leading-none text-blue-600 font-medium\">\n                  {dbUser.type === 'professional' ? 'Professionnel' : 'Particulier'}\n                </p>\n              )}\n              <p className=\"text-xs leading-none text-gray-500\">\n                {user.email}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"py-2\">\n            <button\n              onClick={() => {\n                onDashboardNavigate?.('profile')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <User className=\"mr-2 h-4 w-4\" />\n              <span>Mon profil</span>\n            </button>\n            \n            <button\n              onClick={() => {\n                onDashboardNavigate?.('listings')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <Settings className=\"mr-2 h-4 w-4\" />\n              <span>Mes annonces</span>\n            </button>\n            \n            <button\n              onClick={() => {\n                onDashboardNavigate?.('favorites')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <Heart className=\"mr-2 h-4 w-4\" />\n              <span>Mes favoris</span>\n            </button>\n            \n            <div className=\"border-t border-gray-100 my-1\"></div>\n            \n            <button\n              onClick={() => {\n                onNavigate?.('create-listing')\n                setIsOpen(false)\n              }}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <Plus className=\"mr-2 h-4 w-4\" />\n              <span>Cr√©er une annonce</span>\n            </button>\n            \n            {/* Administration - visible uniquement pour les admins */}\n            {(dbUser?.email === 'admin@passionauto2roues.com' || dbUser?.type === 'professional') && (\n              <>\n                <div className=\"border-t border-gray-100 my-1\"></div>\n                <button\n                  onClick={() => {\n                    onNavigate?.('admin')\n                    setIsOpen(false)\n                  }}\n                  className=\"flex items-center w-full px-3 py-2 text-sm text-purple-600 hover:bg-purple-50\"\n                >\n                  <Shield className=\"mr-2 h-4 w-4\" />\n                  <span>Administration</span>\n                </button>\n              </>\n            )}\n            \n            <div className=\"border-t border-gray-100 my-1\"></div>\n            \n            <button\n              onClick={() => {\n                handleSignOut()\n                setIsOpen(false)\n              }}\n              disabled={isSigningOut}\n              className=\"flex items-center w-full px-3 py-2 text-sm text-red-600 hover:bg-red-50 disabled:opacity-50\"\n            >\n              <LogOut className=\"mr-2 h-4 w-4\" />\n              <span>{isSigningOut ? 'D√©connexion...' : 'Se d√©connecter'}</span>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","size_bytes":5313}},"version":1}