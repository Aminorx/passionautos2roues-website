// Test de la synchronisation automatique en cr√©ant un utilisateur test
import { supabaseServer } from './supabase.js';

async function testAutoSync() {
  console.log('üß™ Test de la synchronisation automatique...');
  
  try {
    // Cr√©er un utilisateur test via l'Admin API
    const testEmail = `test-sync-${Date.now()}@example.com`;
    const testPassword = 'TestPassword123!';
    
    console.log(`üìù Cr√©ation utilisateur test: ${testEmail}`);
    
    const { data: newUser, error: createError } = await supabaseServer.auth.admin.createUser({
      email: testEmail,
      password: testPassword,
      email_confirm: true,
      user_metadata: {
        name: 'Test Sync User',
        type: 'individual',
        phone: '+33 1 23 45 67 89'
      }
    });
    
    if (createError) {
      console.error('‚ùå Erreur cr√©ation utilisateur:', createError);
      return;
    }
    
    console.log('‚úÖ Utilisateur cr√©√© dans auth.users');
    console.log('üîç ID utilisateur:', newUser.user.id);
    
    // Attendre un peu pour que le trigger s'ex√©cute
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // V√©rifier que l'utilisateur a √©t√© cr√©√© dans public.users
    const { data: publicUser, error: publicError } = await supabaseServer
      .from('users')
      .select('*')
      .eq('id', newUser.user.id)
      .single();
      
    if (publicError) {
      console.error('‚ùå Utilisateur pas trouv√© dans public.users:', publicError);
    } else {
      console.log('‚úÖ Utilisateur trouv√© dans public.users:', publicUser.name);
    }
    
    // V√©rifier que le profil a √©t√© cr√©√©
    const { data: profile, error: profileError } = await supabaseServer
      .from('profiles')
      .select('*')
      .eq('id', newUser.user.id)
      .single();
      
    if (profileError) {
      console.error('‚ùå Profil pas trouv√©:', profileError);
    } else {
      console.log('‚úÖ Profil cr√©√©:', profile.account_type, profile.phone);
    }
    
    // Nettoyer en supprimant l'utilisateur test
    console.log('üßπ Suppression utilisateur test...');
    await supabaseServer.auth.admin.deleteUser(newUser.user.id);
    console.log('‚úÖ Utilisateur test supprim√©');
    
  } catch (error) {
    console.error('‚ùå Erreur test:', error);
  }
}

testAutoSync();